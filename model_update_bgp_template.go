/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateBgpTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateBgpTemplate{}

// UpdateBgpTemplate struct for UpdateBgpTemplate
type UpdateBgpTemplate struct {
	// Network type
	NetworkType *string `json:"networkType,omitempty"`
	// Network device driver
	NetworkDeviceDriver *string `json:"networkDeviceDriver,omitempty"`
	// Network device position
	NetworkDevicePosition *string `json:"networkDevicePosition,omitempty"`
	// Remote network device position
	RemoteNetworkDevicePosition *string `json:"remoteNetworkDevicePosition,omitempty"`
	// MLAG pair
	MlagPair *float32 `json:"mlagPair,omitempty"`
	// BGP numbering
	BgpNumbering *string `json:"bgpNumbering,omitempty"`
	// BGP link configuration
	BgpLinkConfiguration *string `json:"bgpLinkConfiguration,omitempty"`
	// Execution type
	ExecutionType *string `json:"executionType,omitempty"`
	// Preparation JSON
	Preparation map[string]interface{} `json:"preparation,omitempty"`
	// Configuration JSON
	Configuration map[string]interface{} `json:"configuration,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateBgpTemplate UpdateBgpTemplate

// NewUpdateBgpTemplate instantiates a new UpdateBgpTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateBgpTemplate() *UpdateBgpTemplate {
	this := UpdateBgpTemplate{}
	return &this
}

// NewUpdateBgpTemplateWithDefaults instantiates a new UpdateBgpTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateBgpTemplateWithDefaults() *UpdateBgpTemplate {
	this := UpdateBgpTemplate{}
	return &this
}

// GetNetworkType returns the NetworkType field value if set, zero value otherwise.
func (o *UpdateBgpTemplate) GetNetworkType() string {
	if o == nil || IsNil(o.NetworkType) {
		var ret string
		return ret
	}
	return *o.NetworkType
}

// GetNetworkTypeOk returns a tuple with the NetworkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBgpTemplate) GetNetworkTypeOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkType) {
		return nil, false
	}
	return o.NetworkType, true
}

// HasNetworkType returns a boolean if a field has been set.
func (o *UpdateBgpTemplate) HasNetworkType() bool {
	if o != nil && !IsNil(o.NetworkType) {
		return true
	}

	return false
}

// SetNetworkType gets a reference to the given string and assigns it to the NetworkType field.
func (o *UpdateBgpTemplate) SetNetworkType(v string) {
	o.NetworkType = &v
}

// GetNetworkDeviceDriver returns the NetworkDeviceDriver field value if set, zero value otherwise.
func (o *UpdateBgpTemplate) GetNetworkDeviceDriver() string {
	if o == nil || IsNil(o.NetworkDeviceDriver) {
		var ret string
		return ret
	}
	return *o.NetworkDeviceDriver
}

// GetNetworkDeviceDriverOk returns a tuple with the NetworkDeviceDriver field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBgpTemplate) GetNetworkDeviceDriverOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkDeviceDriver) {
		return nil, false
	}
	return o.NetworkDeviceDriver, true
}

// HasNetworkDeviceDriver returns a boolean if a field has been set.
func (o *UpdateBgpTemplate) HasNetworkDeviceDriver() bool {
	if o != nil && !IsNil(o.NetworkDeviceDriver) {
		return true
	}

	return false
}

// SetNetworkDeviceDriver gets a reference to the given string and assigns it to the NetworkDeviceDriver field.
func (o *UpdateBgpTemplate) SetNetworkDeviceDriver(v string) {
	o.NetworkDeviceDriver = &v
}

// GetNetworkDevicePosition returns the NetworkDevicePosition field value if set, zero value otherwise.
func (o *UpdateBgpTemplate) GetNetworkDevicePosition() string {
	if o == nil || IsNil(o.NetworkDevicePosition) {
		var ret string
		return ret
	}
	return *o.NetworkDevicePosition
}

// GetNetworkDevicePositionOk returns a tuple with the NetworkDevicePosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBgpTemplate) GetNetworkDevicePositionOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkDevicePosition) {
		return nil, false
	}
	return o.NetworkDevicePosition, true
}

// HasNetworkDevicePosition returns a boolean if a field has been set.
func (o *UpdateBgpTemplate) HasNetworkDevicePosition() bool {
	if o != nil && !IsNil(o.NetworkDevicePosition) {
		return true
	}

	return false
}

// SetNetworkDevicePosition gets a reference to the given string and assigns it to the NetworkDevicePosition field.
func (o *UpdateBgpTemplate) SetNetworkDevicePosition(v string) {
	o.NetworkDevicePosition = &v
}

// GetRemoteNetworkDevicePosition returns the RemoteNetworkDevicePosition field value if set, zero value otherwise.
func (o *UpdateBgpTemplate) GetRemoteNetworkDevicePosition() string {
	if o == nil || IsNil(o.RemoteNetworkDevicePosition) {
		var ret string
		return ret
	}
	return *o.RemoteNetworkDevicePosition
}

// GetRemoteNetworkDevicePositionOk returns a tuple with the RemoteNetworkDevicePosition field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBgpTemplate) GetRemoteNetworkDevicePositionOk() (*string, bool) {
	if o == nil || IsNil(o.RemoteNetworkDevicePosition) {
		return nil, false
	}
	return o.RemoteNetworkDevicePosition, true
}

// HasRemoteNetworkDevicePosition returns a boolean if a field has been set.
func (o *UpdateBgpTemplate) HasRemoteNetworkDevicePosition() bool {
	if o != nil && !IsNil(o.RemoteNetworkDevicePosition) {
		return true
	}

	return false
}

// SetRemoteNetworkDevicePosition gets a reference to the given string and assigns it to the RemoteNetworkDevicePosition field.
func (o *UpdateBgpTemplate) SetRemoteNetworkDevicePosition(v string) {
	o.RemoteNetworkDevicePosition = &v
}

// GetMlagPair returns the MlagPair field value if set, zero value otherwise.
func (o *UpdateBgpTemplate) GetMlagPair() float32 {
	if o == nil || IsNil(o.MlagPair) {
		var ret float32
		return ret
	}
	return *o.MlagPair
}

// GetMlagPairOk returns a tuple with the MlagPair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBgpTemplate) GetMlagPairOk() (*float32, bool) {
	if o == nil || IsNil(o.MlagPair) {
		return nil, false
	}
	return o.MlagPair, true
}

// HasMlagPair returns a boolean if a field has been set.
func (o *UpdateBgpTemplate) HasMlagPair() bool {
	if o != nil && !IsNil(o.MlagPair) {
		return true
	}

	return false
}

// SetMlagPair gets a reference to the given float32 and assigns it to the MlagPair field.
func (o *UpdateBgpTemplate) SetMlagPair(v float32) {
	o.MlagPair = &v
}

// GetBgpNumbering returns the BgpNumbering field value if set, zero value otherwise.
func (o *UpdateBgpTemplate) GetBgpNumbering() string {
	if o == nil || IsNil(o.BgpNumbering) {
		var ret string
		return ret
	}
	return *o.BgpNumbering
}

// GetBgpNumberingOk returns a tuple with the BgpNumbering field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBgpTemplate) GetBgpNumberingOk() (*string, bool) {
	if o == nil || IsNil(o.BgpNumbering) {
		return nil, false
	}
	return o.BgpNumbering, true
}

// HasBgpNumbering returns a boolean if a field has been set.
func (o *UpdateBgpTemplate) HasBgpNumbering() bool {
	if o != nil && !IsNil(o.BgpNumbering) {
		return true
	}

	return false
}

// SetBgpNumbering gets a reference to the given string and assigns it to the BgpNumbering field.
func (o *UpdateBgpTemplate) SetBgpNumbering(v string) {
	o.BgpNumbering = &v
}

// GetBgpLinkConfiguration returns the BgpLinkConfiguration field value if set, zero value otherwise.
func (o *UpdateBgpTemplate) GetBgpLinkConfiguration() string {
	if o == nil || IsNil(o.BgpLinkConfiguration) {
		var ret string
		return ret
	}
	return *o.BgpLinkConfiguration
}

// GetBgpLinkConfigurationOk returns a tuple with the BgpLinkConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBgpTemplate) GetBgpLinkConfigurationOk() (*string, bool) {
	if o == nil || IsNil(o.BgpLinkConfiguration) {
		return nil, false
	}
	return o.BgpLinkConfiguration, true
}

// HasBgpLinkConfiguration returns a boolean if a field has been set.
func (o *UpdateBgpTemplate) HasBgpLinkConfiguration() bool {
	if o != nil && !IsNil(o.BgpLinkConfiguration) {
		return true
	}

	return false
}

// SetBgpLinkConfiguration gets a reference to the given string and assigns it to the BgpLinkConfiguration field.
func (o *UpdateBgpTemplate) SetBgpLinkConfiguration(v string) {
	o.BgpLinkConfiguration = &v
}

// GetExecutionType returns the ExecutionType field value if set, zero value otherwise.
func (o *UpdateBgpTemplate) GetExecutionType() string {
	if o == nil || IsNil(o.ExecutionType) {
		var ret string
		return ret
	}
	return *o.ExecutionType
}

// GetExecutionTypeOk returns a tuple with the ExecutionType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBgpTemplate) GetExecutionTypeOk() (*string, bool) {
	if o == nil || IsNil(o.ExecutionType) {
		return nil, false
	}
	return o.ExecutionType, true
}

// HasExecutionType returns a boolean if a field has been set.
func (o *UpdateBgpTemplate) HasExecutionType() bool {
	if o != nil && !IsNil(o.ExecutionType) {
		return true
	}

	return false
}

// SetExecutionType gets a reference to the given string and assigns it to the ExecutionType field.
func (o *UpdateBgpTemplate) SetExecutionType(v string) {
	o.ExecutionType = &v
}

// GetPreparation returns the Preparation field value if set, zero value otherwise.
func (o *UpdateBgpTemplate) GetPreparation() map[string]interface{} {
	if o == nil || IsNil(o.Preparation) {
		var ret map[string]interface{}
		return ret
	}
	return o.Preparation
}

// GetPreparationOk returns a tuple with the Preparation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBgpTemplate) GetPreparationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Preparation) {
		return map[string]interface{}{}, false
	}
	return o.Preparation, true
}

// HasPreparation returns a boolean if a field has been set.
func (o *UpdateBgpTemplate) HasPreparation() bool {
	if o != nil && !IsNil(o.Preparation) {
		return true
	}

	return false
}

// SetPreparation gets a reference to the given map[string]interface{} and assigns it to the Preparation field.
func (o *UpdateBgpTemplate) SetPreparation(v map[string]interface{}) {
	o.Preparation = v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *UpdateBgpTemplate) GetConfiguration() map[string]interface{} {
	if o == nil || IsNil(o.Configuration) {
		var ret map[string]interface{}
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateBgpTemplate) GetConfigurationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Configuration) {
		return map[string]interface{}{}, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *UpdateBgpTemplate) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given map[string]interface{} and assigns it to the Configuration field.
func (o *UpdateBgpTemplate) SetConfiguration(v map[string]interface{}) {
	o.Configuration = v
}

func (o UpdateBgpTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateBgpTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkType) {
		toSerialize["networkType"] = o.NetworkType
	}
	if !IsNil(o.NetworkDeviceDriver) {
		toSerialize["networkDeviceDriver"] = o.NetworkDeviceDriver
	}
	if !IsNil(o.NetworkDevicePosition) {
		toSerialize["networkDevicePosition"] = o.NetworkDevicePosition
	}
	if !IsNil(o.RemoteNetworkDevicePosition) {
		toSerialize["remoteNetworkDevicePosition"] = o.RemoteNetworkDevicePosition
	}
	if !IsNil(o.MlagPair) {
		toSerialize["mlagPair"] = o.MlagPair
	}
	if !IsNil(o.BgpNumbering) {
		toSerialize["bgpNumbering"] = o.BgpNumbering
	}
	if !IsNil(o.BgpLinkConfiguration) {
		toSerialize["bgpLinkConfiguration"] = o.BgpLinkConfiguration
	}
	if !IsNil(o.ExecutionType) {
		toSerialize["executionType"] = o.ExecutionType
	}
	if !IsNil(o.Preparation) {
		toSerialize["preparation"] = o.Preparation
	}
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateBgpTemplate) UnmarshalJSON(data []byte) (err error) {
	varUpdateBgpTemplate := _UpdateBgpTemplate{}

	err = json.Unmarshal(data, &varUpdateBgpTemplate)

	if err != nil {
		return err
	}

	*o = UpdateBgpTemplate(varUpdateBgpTemplate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "networkType")
		delete(additionalProperties, "networkDeviceDriver")
		delete(additionalProperties, "networkDevicePosition")
		delete(additionalProperties, "remoteNetworkDevicePosition")
		delete(additionalProperties, "mlagPair")
		delete(additionalProperties, "bgpNumbering")
		delete(additionalProperties, "bgpLinkConfiguration")
		delete(additionalProperties, "executionType")
		delete(additionalProperties, "preparation")
		delete(additionalProperties, "configuration")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateBgpTemplate struct {
	value *UpdateBgpTemplate
	isSet bool
}

func (v NullableUpdateBgpTemplate) Get() *UpdateBgpTemplate {
	return v.value
}

func (v *NullableUpdateBgpTemplate) Set(val *UpdateBgpTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateBgpTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateBgpTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateBgpTemplate(val *UpdateBgpTemplate) *NullableUpdateBgpTemplate {
	return &NullableUpdateBgpTemplate{value: val, isSet: true}
}

func (v NullableUpdateBgpTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateBgpTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


