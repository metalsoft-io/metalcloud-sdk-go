/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the BgpTemplateRecordSet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BgpTemplateRecordSet{}

// BgpTemplateRecordSet struct for BgpTemplateRecordSet
type BgpTemplateRecordSet struct {
	// The ID of the local switch.
	LocalSwitchId float32 `json:"local_switch_id"`
	// The identifier of the local switch.
	LocalSwitchIdentifier string `json:"local_switch_identifier"`
	// The role of the local switch.
	LocalSwitchRole string `json:"local_switch_role"`
	// The name of the local switch interface.
	LocalSwitchInterfaceName string `json:"local_switch_interface_name"`
	// The ASN of the local switch.
	LocalSwitchAsn *float32 `json:"local_switch_asn,omitempty"`
	// The ID of the remote switch.
	RemoteSwitchId float32 `json:"remote_switch_id"`
	// The identifier of the remote switch.
	RemoteSwitchIdentifier string `json:"remote_switch_identifier"`
	// The role of the remote switch.
	RemoteSwitchRole string `json:"remote_switch_role"`
	// The name of the remote switch interface.
	RemoteSwitchInterfaceName string `json:"remote_switch_interface_name"`
	// The ASN of the remote switch.
	RemoteSwitchAsn *float32 `json:"remote_switch_asn,omitempty"`
	// BGP numbering
	BgpNumbering string `json:"bgp_numbering"`
	// Custom variables for the fabric.
	FabricCustomVariables map[string]interface{} `json:"fabric_custom_variables,omitempty"`
	// Custom variables for the link.
	LinkCustomVariables map[string]interface{} `json:"link_custom_variables,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BgpTemplateRecordSet BgpTemplateRecordSet

// NewBgpTemplateRecordSet instantiates a new BgpTemplateRecordSet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpTemplateRecordSet(localSwitchId float32, localSwitchIdentifier string, localSwitchRole string, localSwitchInterfaceName string, remoteSwitchId float32, remoteSwitchIdentifier string, remoteSwitchRole string, remoteSwitchInterfaceName string, bgpNumbering string) *BgpTemplateRecordSet {
	this := BgpTemplateRecordSet{}
	this.LocalSwitchId = localSwitchId
	this.LocalSwitchIdentifier = localSwitchIdentifier
	this.LocalSwitchRole = localSwitchRole
	this.LocalSwitchInterfaceName = localSwitchInterfaceName
	this.RemoteSwitchId = remoteSwitchId
	this.RemoteSwitchIdentifier = remoteSwitchIdentifier
	this.RemoteSwitchRole = remoteSwitchRole
	this.RemoteSwitchInterfaceName = remoteSwitchInterfaceName
	this.BgpNumbering = bgpNumbering
	return &this
}

// NewBgpTemplateRecordSetWithDefaults instantiates a new BgpTemplateRecordSet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpTemplateRecordSetWithDefaults() *BgpTemplateRecordSet {
	this := BgpTemplateRecordSet{}
	return &this
}

// GetLocalSwitchId returns the LocalSwitchId field value
func (o *BgpTemplateRecordSet) GetLocalSwitchId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.LocalSwitchId
}

// GetLocalSwitchIdOk returns a tuple with the LocalSwitchId field value
// and a boolean to check if the value has been set.
func (o *BgpTemplateRecordSet) GetLocalSwitchIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalSwitchId, true
}

// SetLocalSwitchId sets field value
func (o *BgpTemplateRecordSet) SetLocalSwitchId(v float32) {
	o.LocalSwitchId = v
}

// GetLocalSwitchIdentifier returns the LocalSwitchIdentifier field value
func (o *BgpTemplateRecordSet) GetLocalSwitchIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocalSwitchIdentifier
}

// GetLocalSwitchIdentifierOk returns a tuple with the LocalSwitchIdentifier field value
// and a boolean to check if the value has been set.
func (o *BgpTemplateRecordSet) GetLocalSwitchIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalSwitchIdentifier, true
}

// SetLocalSwitchIdentifier sets field value
func (o *BgpTemplateRecordSet) SetLocalSwitchIdentifier(v string) {
	o.LocalSwitchIdentifier = v
}

// GetLocalSwitchRole returns the LocalSwitchRole field value
func (o *BgpTemplateRecordSet) GetLocalSwitchRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocalSwitchRole
}

// GetLocalSwitchRoleOk returns a tuple with the LocalSwitchRole field value
// and a boolean to check if the value has been set.
func (o *BgpTemplateRecordSet) GetLocalSwitchRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalSwitchRole, true
}

// SetLocalSwitchRole sets field value
func (o *BgpTemplateRecordSet) SetLocalSwitchRole(v string) {
	o.LocalSwitchRole = v
}

// GetLocalSwitchInterfaceName returns the LocalSwitchInterfaceName field value
func (o *BgpTemplateRecordSet) GetLocalSwitchInterfaceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LocalSwitchInterfaceName
}

// GetLocalSwitchInterfaceNameOk returns a tuple with the LocalSwitchInterfaceName field value
// and a boolean to check if the value has been set.
func (o *BgpTemplateRecordSet) GetLocalSwitchInterfaceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LocalSwitchInterfaceName, true
}

// SetLocalSwitchInterfaceName sets field value
func (o *BgpTemplateRecordSet) SetLocalSwitchInterfaceName(v string) {
	o.LocalSwitchInterfaceName = v
}

// GetLocalSwitchAsn returns the LocalSwitchAsn field value if set, zero value otherwise.
func (o *BgpTemplateRecordSet) GetLocalSwitchAsn() float32 {
	if o == nil || IsNil(o.LocalSwitchAsn) {
		var ret float32
		return ret
	}
	return *o.LocalSwitchAsn
}

// GetLocalSwitchAsnOk returns a tuple with the LocalSwitchAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTemplateRecordSet) GetLocalSwitchAsnOk() (*float32, bool) {
	if o == nil || IsNil(o.LocalSwitchAsn) {
		return nil, false
	}
	return o.LocalSwitchAsn, true
}

// HasLocalSwitchAsn returns a boolean if a field has been set.
func (o *BgpTemplateRecordSet) HasLocalSwitchAsn() bool {
	if o != nil && !IsNil(o.LocalSwitchAsn) {
		return true
	}

	return false
}

// SetLocalSwitchAsn gets a reference to the given float32 and assigns it to the LocalSwitchAsn field.
func (o *BgpTemplateRecordSet) SetLocalSwitchAsn(v float32) {
	o.LocalSwitchAsn = &v
}

// GetRemoteSwitchId returns the RemoteSwitchId field value
func (o *BgpTemplateRecordSet) GetRemoteSwitchId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RemoteSwitchId
}

// GetRemoteSwitchIdOk returns a tuple with the RemoteSwitchId field value
// and a boolean to check if the value has been set.
func (o *BgpTemplateRecordSet) GetRemoteSwitchIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteSwitchId, true
}

// SetRemoteSwitchId sets field value
func (o *BgpTemplateRecordSet) SetRemoteSwitchId(v float32) {
	o.RemoteSwitchId = v
}

// GetRemoteSwitchIdentifier returns the RemoteSwitchIdentifier field value
func (o *BgpTemplateRecordSet) GetRemoteSwitchIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemoteSwitchIdentifier
}

// GetRemoteSwitchIdentifierOk returns a tuple with the RemoteSwitchIdentifier field value
// and a boolean to check if the value has been set.
func (o *BgpTemplateRecordSet) GetRemoteSwitchIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteSwitchIdentifier, true
}

// SetRemoteSwitchIdentifier sets field value
func (o *BgpTemplateRecordSet) SetRemoteSwitchIdentifier(v string) {
	o.RemoteSwitchIdentifier = v
}

// GetRemoteSwitchRole returns the RemoteSwitchRole field value
func (o *BgpTemplateRecordSet) GetRemoteSwitchRole() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemoteSwitchRole
}

// GetRemoteSwitchRoleOk returns a tuple with the RemoteSwitchRole field value
// and a boolean to check if the value has been set.
func (o *BgpTemplateRecordSet) GetRemoteSwitchRoleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteSwitchRole, true
}

// SetRemoteSwitchRole sets field value
func (o *BgpTemplateRecordSet) SetRemoteSwitchRole(v string) {
	o.RemoteSwitchRole = v
}

// GetRemoteSwitchInterfaceName returns the RemoteSwitchInterfaceName field value
func (o *BgpTemplateRecordSet) GetRemoteSwitchInterfaceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemoteSwitchInterfaceName
}

// GetRemoteSwitchInterfaceNameOk returns a tuple with the RemoteSwitchInterfaceName field value
// and a boolean to check if the value has been set.
func (o *BgpTemplateRecordSet) GetRemoteSwitchInterfaceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteSwitchInterfaceName, true
}

// SetRemoteSwitchInterfaceName sets field value
func (o *BgpTemplateRecordSet) SetRemoteSwitchInterfaceName(v string) {
	o.RemoteSwitchInterfaceName = v
}

// GetRemoteSwitchAsn returns the RemoteSwitchAsn field value if set, zero value otherwise.
func (o *BgpTemplateRecordSet) GetRemoteSwitchAsn() float32 {
	if o == nil || IsNil(o.RemoteSwitchAsn) {
		var ret float32
		return ret
	}
	return *o.RemoteSwitchAsn
}

// GetRemoteSwitchAsnOk returns a tuple with the RemoteSwitchAsn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTemplateRecordSet) GetRemoteSwitchAsnOk() (*float32, bool) {
	if o == nil || IsNil(o.RemoteSwitchAsn) {
		return nil, false
	}
	return o.RemoteSwitchAsn, true
}

// HasRemoteSwitchAsn returns a boolean if a field has been set.
func (o *BgpTemplateRecordSet) HasRemoteSwitchAsn() bool {
	if o != nil && !IsNil(o.RemoteSwitchAsn) {
		return true
	}

	return false
}

// SetRemoteSwitchAsn gets a reference to the given float32 and assigns it to the RemoteSwitchAsn field.
func (o *BgpTemplateRecordSet) SetRemoteSwitchAsn(v float32) {
	o.RemoteSwitchAsn = &v
}

// GetBgpNumbering returns the BgpNumbering field value
func (o *BgpTemplateRecordSet) GetBgpNumbering() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BgpNumbering
}

// GetBgpNumberingOk returns a tuple with the BgpNumbering field value
// and a boolean to check if the value has been set.
func (o *BgpTemplateRecordSet) GetBgpNumberingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BgpNumbering, true
}

// SetBgpNumbering sets field value
func (o *BgpTemplateRecordSet) SetBgpNumbering(v string) {
	o.BgpNumbering = v
}

// GetFabricCustomVariables returns the FabricCustomVariables field value if set, zero value otherwise.
func (o *BgpTemplateRecordSet) GetFabricCustomVariables() map[string]interface{} {
	if o == nil || IsNil(o.FabricCustomVariables) {
		var ret map[string]interface{}
		return ret
	}
	return o.FabricCustomVariables
}

// GetFabricCustomVariablesOk returns a tuple with the FabricCustomVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTemplateRecordSet) GetFabricCustomVariablesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.FabricCustomVariables) {
		return map[string]interface{}{}, false
	}
	return o.FabricCustomVariables, true
}

// HasFabricCustomVariables returns a boolean if a field has been set.
func (o *BgpTemplateRecordSet) HasFabricCustomVariables() bool {
	if o != nil && !IsNil(o.FabricCustomVariables) {
		return true
	}

	return false
}

// SetFabricCustomVariables gets a reference to the given map[string]interface{} and assigns it to the FabricCustomVariables field.
func (o *BgpTemplateRecordSet) SetFabricCustomVariables(v map[string]interface{}) {
	o.FabricCustomVariables = v
}

// GetLinkCustomVariables returns the LinkCustomVariables field value if set, zero value otherwise.
func (o *BgpTemplateRecordSet) GetLinkCustomVariables() map[string]interface{} {
	if o == nil || IsNil(o.LinkCustomVariables) {
		var ret map[string]interface{}
		return ret
	}
	return o.LinkCustomVariables
}

// GetLinkCustomVariablesOk returns a tuple with the LinkCustomVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpTemplateRecordSet) GetLinkCustomVariablesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.LinkCustomVariables) {
		return map[string]interface{}{}, false
	}
	return o.LinkCustomVariables, true
}

// HasLinkCustomVariables returns a boolean if a field has been set.
func (o *BgpTemplateRecordSet) HasLinkCustomVariables() bool {
	if o != nil && !IsNil(o.LinkCustomVariables) {
		return true
	}

	return false
}

// SetLinkCustomVariables gets a reference to the given map[string]interface{} and assigns it to the LinkCustomVariables field.
func (o *BgpTemplateRecordSet) SetLinkCustomVariables(v map[string]interface{}) {
	o.LinkCustomVariables = v
}

func (o BgpTemplateRecordSet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BgpTemplateRecordSet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["local_switch_id"] = o.LocalSwitchId
	toSerialize["local_switch_identifier"] = o.LocalSwitchIdentifier
	toSerialize["local_switch_role"] = o.LocalSwitchRole
	toSerialize["local_switch_interface_name"] = o.LocalSwitchInterfaceName
	if !IsNil(o.LocalSwitchAsn) {
		toSerialize["local_switch_asn"] = o.LocalSwitchAsn
	}
	toSerialize["remote_switch_id"] = o.RemoteSwitchId
	toSerialize["remote_switch_identifier"] = o.RemoteSwitchIdentifier
	toSerialize["remote_switch_role"] = o.RemoteSwitchRole
	toSerialize["remote_switch_interface_name"] = o.RemoteSwitchInterfaceName
	if !IsNil(o.RemoteSwitchAsn) {
		toSerialize["remote_switch_asn"] = o.RemoteSwitchAsn
	}
	toSerialize["bgp_numbering"] = o.BgpNumbering
	if !IsNil(o.FabricCustomVariables) {
		toSerialize["fabric_custom_variables"] = o.FabricCustomVariables
	}
	if !IsNil(o.LinkCustomVariables) {
		toSerialize["link_custom_variables"] = o.LinkCustomVariables
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BgpTemplateRecordSet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"local_switch_id",
		"local_switch_identifier",
		"local_switch_role",
		"local_switch_interface_name",
		"remote_switch_id",
		"remote_switch_identifier",
		"remote_switch_role",
		"remote_switch_interface_name",
		"bgp_numbering",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBgpTemplateRecordSet := _BgpTemplateRecordSet{}

	err = json.Unmarshal(data, &varBgpTemplateRecordSet)

	if err != nil {
		return err
	}

	*o = BgpTemplateRecordSet(varBgpTemplateRecordSet)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "local_switch_id")
		delete(additionalProperties, "local_switch_identifier")
		delete(additionalProperties, "local_switch_role")
		delete(additionalProperties, "local_switch_interface_name")
		delete(additionalProperties, "local_switch_asn")
		delete(additionalProperties, "remote_switch_id")
		delete(additionalProperties, "remote_switch_identifier")
		delete(additionalProperties, "remote_switch_role")
		delete(additionalProperties, "remote_switch_interface_name")
		delete(additionalProperties, "remote_switch_asn")
		delete(additionalProperties, "bgp_numbering")
		delete(additionalProperties, "fabric_custom_variables")
		delete(additionalProperties, "link_custom_variables")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBgpTemplateRecordSet struct {
	value *BgpTemplateRecordSet
	isSet bool
}

func (v NullableBgpTemplateRecordSet) Get() *BgpTemplateRecordSet {
	return v.value
}

func (v *NullableBgpTemplateRecordSet) Set(val *BgpTemplateRecordSet) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpTemplateRecordSet) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpTemplateRecordSet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpTemplateRecordSet(val *BgpTemplateRecordSet) *NullableBgpTemplateRecordSet {
	return &NullableBgpTemplateRecordSet{value: val, isSet: true}
}

func (v NullableBgpTemplateRecordSet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpTemplateRecordSet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


