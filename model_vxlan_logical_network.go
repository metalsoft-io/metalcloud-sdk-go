/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the VxlanLogicalNetwork type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VxlanLogicalNetwork{}

// VxlanLogicalNetwork struct for VxlanLogicalNetwork
type VxlanLogicalNetwork struct {
	Id int32 `json:"id"`
	Label string `json:"label"`
	Name string `json:"name"`
	Annotations map[string]string `json:"annotations"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
	Revision int32 `json:"revision"`
	Kind LogicalNetworkKind `json:"kind"`
	FabricId int32 `json:"fabricId"`
	InfrastructureId NullableInt32 `json:"infrastructureId"`
	ExtensionInstanceId NullableInt32 `json:"extensionInstanceId,omitempty"`
	ServiceStatus GenericServiceStatus `json:"serviceStatus"`
	LastAppliedLogicalNetworkProfileId NullableInt32 `json:"lastAppliedLogicalNetworkProfileId"`
	LastLogicalNetworkProfileAppliedAt time.Time `json:"lastLogicalNetworkProfileAppliedAt"`
	Config VxlanLogicalNetworkConfig `json:"config"`
	Vlan VxlanLogicalNetworkVlanProperties `json:"vlan"`
	Vxlan VxlanLogicalNetworkVxlanProperties `json:"vxlan"`
	Ipv4 VxlanLogicalNetworkIpv4Properties `json:"ipv4"`
	Ipv6 VxlanLogicalNetworkIpv6Properties `json:"ipv6"`
	RouteDomainId NullableInt32 `json:"routeDomainId"`
	// Maximum Transmission Unit (MTU) in bytes
	Mtu NullableInt32 `json:"mtu,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _VxlanLogicalNetwork VxlanLogicalNetwork

// NewVxlanLogicalNetwork instantiates a new VxlanLogicalNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVxlanLogicalNetwork(id int32, label string, name string, annotations map[string]string, createdAt time.Time, updatedAt time.Time, revision int32, kind LogicalNetworkKind, fabricId int32, infrastructureId NullableInt32, serviceStatus GenericServiceStatus, lastAppliedLogicalNetworkProfileId NullableInt32, lastLogicalNetworkProfileAppliedAt time.Time, config VxlanLogicalNetworkConfig, vlan VxlanLogicalNetworkVlanProperties, vxlan VxlanLogicalNetworkVxlanProperties, ipv4 VxlanLogicalNetworkIpv4Properties, ipv6 VxlanLogicalNetworkIpv6Properties, routeDomainId NullableInt32) *VxlanLogicalNetwork {
	this := VxlanLogicalNetwork{}
	this.Id = id
	this.Label = label
	this.Name = name
	this.Annotations = annotations
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Revision = revision
	this.Kind = kind
	this.FabricId = fabricId
	this.InfrastructureId = infrastructureId
	this.ServiceStatus = serviceStatus
	this.LastAppliedLogicalNetworkProfileId = lastAppliedLogicalNetworkProfileId
	this.LastLogicalNetworkProfileAppliedAt = lastLogicalNetworkProfileAppliedAt
	this.Config = config
	this.Vlan = vlan
	this.Vxlan = vxlan
	this.Ipv4 = ipv4
	this.Ipv6 = ipv6
	this.RouteDomainId = routeDomainId
	return &this
}

// NewVxlanLogicalNetworkWithDefaults instantiates a new VxlanLogicalNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVxlanLogicalNetworkWithDefaults() *VxlanLogicalNetwork {
	this := VxlanLogicalNetwork{}
	return &this
}

// GetId returns the Id field value
func (o *VxlanLogicalNetwork) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VxlanLogicalNetwork) SetId(v int32) {
	o.Id = v
}

// GetLabel returns the Label field value
func (o *VxlanLogicalNetwork) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *VxlanLogicalNetwork) SetLabel(v string) {
	o.Label = v
}

// GetName returns the Name field value
func (o *VxlanLogicalNetwork) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *VxlanLogicalNetwork) SetName(v string) {
	o.Name = v
}

// GetAnnotations returns the Annotations field value
func (o *VxlanLogicalNetwork) GetAnnotations() map[string]string {
	if o == nil {
		var ret map[string]string
		return ret
	}

	return o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetAnnotationsOk() (*map[string]string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Annotations, true
}

// SetAnnotations sets field value
func (o *VxlanLogicalNetwork) SetAnnotations(v map[string]string) {
	o.Annotations = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *VxlanLogicalNetwork) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *VxlanLogicalNetwork) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *VxlanLogicalNetwork) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *VxlanLogicalNetwork) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetRevision returns the Revision field value
func (o *VxlanLogicalNetwork) GetRevision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *VxlanLogicalNetwork) SetRevision(v int32) {
	o.Revision = v
}

// GetKind returns the Kind field value
func (o *VxlanLogicalNetwork) GetKind() LogicalNetworkKind {
	if o == nil {
		var ret LogicalNetworkKind
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetKindOk() (*LogicalNetworkKind, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *VxlanLogicalNetwork) SetKind(v LogicalNetworkKind) {
	o.Kind = v
}

// GetFabricId returns the FabricId field value
func (o *VxlanLogicalNetwork) GetFabricId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FabricId
}

// GetFabricIdOk returns a tuple with the FabricId field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetFabricIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FabricId, true
}

// SetFabricId sets field value
func (o *VxlanLogicalNetwork) SetFabricId(v int32) {
	o.FabricId = v
}

// GetInfrastructureId returns the InfrastructureId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *VxlanLogicalNetwork) GetInfrastructureId() int32 {
	if o == nil || o.InfrastructureId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.InfrastructureId.Get()
}

// GetInfrastructureIdOk returns a tuple with the InfrastructureId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VxlanLogicalNetwork) GetInfrastructureIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.InfrastructureId.Get(), o.InfrastructureId.IsSet()
}

// SetInfrastructureId sets field value
func (o *VxlanLogicalNetwork) SetInfrastructureId(v int32) {
	o.InfrastructureId.Set(&v)
}

// GetExtensionInstanceId returns the ExtensionInstanceId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VxlanLogicalNetwork) GetExtensionInstanceId() int32 {
	if o == nil || IsNil(o.ExtensionInstanceId.Get()) {
		var ret int32
		return ret
	}
	return *o.ExtensionInstanceId.Get()
}

// GetExtensionInstanceIdOk returns a tuple with the ExtensionInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VxlanLogicalNetwork) GetExtensionInstanceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.ExtensionInstanceId.Get(), o.ExtensionInstanceId.IsSet()
}

// HasExtensionInstanceId returns a boolean if a field has been set.
func (o *VxlanLogicalNetwork) HasExtensionInstanceId() bool {
	if o != nil && o.ExtensionInstanceId.IsSet() {
		return true
	}

	return false
}

// SetExtensionInstanceId gets a reference to the given NullableInt32 and assigns it to the ExtensionInstanceId field.
func (o *VxlanLogicalNetwork) SetExtensionInstanceId(v int32) {
	o.ExtensionInstanceId.Set(&v)
}
// SetExtensionInstanceIdNil sets the value for ExtensionInstanceId to be an explicit nil
func (o *VxlanLogicalNetwork) SetExtensionInstanceIdNil() {
	o.ExtensionInstanceId.Set(nil)
}

// UnsetExtensionInstanceId ensures that no value is present for ExtensionInstanceId, not even an explicit nil
func (o *VxlanLogicalNetwork) UnsetExtensionInstanceId() {
	o.ExtensionInstanceId.Unset()
}

// GetServiceStatus returns the ServiceStatus field value
func (o *VxlanLogicalNetwork) GetServiceStatus() GenericServiceStatus {
	if o == nil {
		var ret GenericServiceStatus
		return ret
	}

	return o.ServiceStatus
}

// GetServiceStatusOk returns a tuple with the ServiceStatus field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetServiceStatusOk() (*GenericServiceStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceStatus, true
}

// SetServiceStatus sets field value
func (o *VxlanLogicalNetwork) SetServiceStatus(v GenericServiceStatus) {
	o.ServiceStatus = v
}

// GetLastAppliedLogicalNetworkProfileId returns the LastAppliedLogicalNetworkProfileId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *VxlanLogicalNetwork) GetLastAppliedLogicalNetworkProfileId() int32 {
	if o == nil || o.LastAppliedLogicalNetworkProfileId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.LastAppliedLogicalNetworkProfileId.Get()
}

// GetLastAppliedLogicalNetworkProfileIdOk returns a tuple with the LastAppliedLogicalNetworkProfileId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VxlanLogicalNetwork) GetLastAppliedLogicalNetworkProfileIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastAppliedLogicalNetworkProfileId.Get(), o.LastAppliedLogicalNetworkProfileId.IsSet()
}

// SetLastAppliedLogicalNetworkProfileId sets field value
func (o *VxlanLogicalNetwork) SetLastAppliedLogicalNetworkProfileId(v int32) {
	o.LastAppliedLogicalNetworkProfileId.Set(&v)
}

// GetLastLogicalNetworkProfileAppliedAt returns the LastLogicalNetworkProfileAppliedAt field value
func (o *VxlanLogicalNetwork) GetLastLogicalNetworkProfileAppliedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastLogicalNetworkProfileAppliedAt
}

// GetLastLogicalNetworkProfileAppliedAtOk returns a tuple with the LastLogicalNetworkProfileAppliedAt field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetLastLogicalNetworkProfileAppliedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastLogicalNetworkProfileAppliedAt, true
}

// SetLastLogicalNetworkProfileAppliedAt sets field value
func (o *VxlanLogicalNetwork) SetLastLogicalNetworkProfileAppliedAt(v time.Time) {
	o.LastLogicalNetworkProfileAppliedAt = v
}

// GetConfig returns the Config field value
func (o *VxlanLogicalNetwork) GetConfig() VxlanLogicalNetworkConfig {
	if o == nil {
		var ret VxlanLogicalNetworkConfig
		return ret
	}

	return o.Config
}

// GetConfigOk returns a tuple with the Config field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetConfigOk() (*VxlanLogicalNetworkConfig, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Config, true
}

// SetConfig sets field value
func (o *VxlanLogicalNetwork) SetConfig(v VxlanLogicalNetworkConfig) {
	o.Config = v
}

// GetVlan returns the Vlan field value
func (o *VxlanLogicalNetwork) GetVlan() VxlanLogicalNetworkVlanProperties {
	if o == nil {
		var ret VxlanLogicalNetworkVlanProperties
		return ret
	}

	return o.Vlan
}

// GetVlanOk returns a tuple with the Vlan field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetVlanOk() (*VxlanLogicalNetworkVlanProperties, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vlan, true
}

// SetVlan sets field value
func (o *VxlanLogicalNetwork) SetVlan(v VxlanLogicalNetworkVlanProperties) {
	o.Vlan = v
}

// GetVxlan returns the Vxlan field value
func (o *VxlanLogicalNetwork) GetVxlan() VxlanLogicalNetworkVxlanProperties {
	if o == nil {
		var ret VxlanLogicalNetworkVxlanProperties
		return ret
	}

	return o.Vxlan
}

// GetVxlanOk returns a tuple with the Vxlan field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetVxlanOk() (*VxlanLogicalNetworkVxlanProperties, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vxlan, true
}

// SetVxlan sets field value
func (o *VxlanLogicalNetwork) SetVxlan(v VxlanLogicalNetworkVxlanProperties) {
	o.Vxlan = v
}

// GetIpv4 returns the Ipv4 field value
func (o *VxlanLogicalNetwork) GetIpv4() VxlanLogicalNetworkIpv4Properties {
	if o == nil {
		var ret VxlanLogicalNetworkIpv4Properties
		return ret
	}

	return o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetIpv4Ok() (*VxlanLogicalNetworkIpv4Properties, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ipv4, true
}

// SetIpv4 sets field value
func (o *VxlanLogicalNetwork) SetIpv4(v VxlanLogicalNetworkIpv4Properties) {
	o.Ipv4 = v
}

// GetIpv6 returns the Ipv6 field value
func (o *VxlanLogicalNetwork) GetIpv6() VxlanLogicalNetworkIpv6Properties {
	if o == nil {
		var ret VxlanLogicalNetworkIpv6Properties
		return ret
	}

	return o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value
// and a boolean to check if the value has been set.
func (o *VxlanLogicalNetwork) GetIpv6Ok() (*VxlanLogicalNetworkIpv6Properties, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ipv6, true
}

// SetIpv6 sets field value
func (o *VxlanLogicalNetwork) SetIpv6(v VxlanLogicalNetworkIpv6Properties) {
	o.Ipv6 = v
}

// GetRouteDomainId returns the RouteDomainId field value
// If the value is explicit nil, the zero value for int32 will be returned
func (o *VxlanLogicalNetwork) GetRouteDomainId() int32 {
	if o == nil || o.RouteDomainId.Get() == nil {
		var ret int32
		return ret
	}

	return *o.RouteDomainId.Get()
}

// GetRouteDomainIdOk returns a tuple with the RouteDomainId field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VxlanLogicalNetwork) GetRouteDomainIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RouteDomainId.Get(), o.RouteDomainId.IsSet()
}

// SetRouteDomainId sets field value
func (o *VxlanLogicalNetwork) SetRouteDomainId(v int32) {
	o.RouteDomainId.Set(&v)
}

// GetMtu returns the Mtu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VxlanLogicalNetwork) GetMtu() int32 {
	if o == nil || IsNil(o.Mtu.Get()) {
		var ret int32
		return ret
	}
	return *o.Mtu.Get()
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VxlanLogicalNetwork) GetMtuOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mtu.Get(), o.Mtu.IsSet()
}

// HasMtu returns a boolean if a field has been set.
func (o *VxlanLogicalNetwork) HasMtu() bool {
	if o != nil && o.Mtu.IsSet() {
		return true
	}

	return false
}

// SetMtu gets a reference to the given NullableInt32 and assigns it to the Mtu field.
func (o *VxlanLogicalNetwork) SetMtu(v int32) {
	o.Mtu.Set(&v)
}
// SetMtuNil sets the value for Mtu to be an explicit nil
func (o *VxlanLogicalNetwork) SetMtuNil() {
	o.Mtu.Set(nil)
}

// UnsetMtu ensures that no value is present for Mtu, not even an explicit nil
func (o *VxlanLogicalNetwork) UnsetMtu() {
	o.Mtu.Unset()
}

func (o VxlanLogicalNetwork) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VxlanLogicalNetwork) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["label"] = o.Label
	toSerialize["name"] = o.Name
	toSerialize["annotations"] = o.Annotations
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["revision"] = o.Revision
	toSerialize["kind"] = o.Kind
	toSerialize["fabricId"] = o.FabricId
	toSerialize["infrastructureId"] = o.InfrastructureId.Get()
	if o.ExtensionInstanceId.IsSet() {
		toSerialize["extensionInstanceId"] = o.ExtensionInstanceId.Get()
	}
	toSerialize["serviceStatus"] = o.ServiceStatus
	toSerialize["lastAppliedLogicalNetworkProfileId"] = o.LastAppliedLogicalNetworkProfileId.Get()
	toSerialize["lastLogicalNetworkProfileAppliedAt"] = o.LastLogicalNetworkProfileAppliedAt
	toSerialize["config"] = o.Config
	toSerialize["vlan"] = o.Vlan
	toSerialize["vxlan"] = o.Vxlan
	toSerialize["ipv4"] = o.Ipv4
	toSerialize["ipv6"] = o.Ipv6
	toSerialize["routeDomainId"] = o.RouteDomainId.Get()
	if o.Mtu.IsSet() {
		toSerialize["mtu"] = o.Mtu.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VxlanLogicalNetwork) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"label",
		"name",
		"annotations",
		"createdAt",
		"updatedAt",
		"revision",
		"kind",
		"fabricId",
		"infrastructureId",
		"serviceStatus",
		"lastAppliedLogicalNetworkProfileId",
		"lastLogicalNetworkProfileAppliedAt",
		"config",
		"vlan",
		"vxlan",
		"ipv4",
		"ipv6",
		"routeDomainId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVxlanLogicalNetwork := _VxlanLogicalNetwork{}

	err = json.Unmarshal(data, &varVxlanLogicalNetwork)

	if err != nil {
		return err
	}

	*o = VxlanLogicalNetwork(varVxlanLogicalNetwork)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "label")
		delete(additionalProperties, "name")
		delete(additionalProperties, "annotations")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "revision")
		delete(additionalProperties, "kind")
		delete(additionalProperties, "fabricId")
		delete(additionalProperties, "infrastructureId")
		delete(additionalProperties, "extensionInstanceId")
		delete(additionalProperties, "serviceStatus")
		delete(additionalProperties, "lastAppliedLogicalNetworkProfileId")
		delete(additionalProperties, "lastLogicalNetworkProfileAppliedAt")
		delete(additionalProperties, "config")
		delete(additionalProperties, "vlan")
		delete(additionalProperties, "vxlan")
		delete(additionalProperties, "ipv4")
		delete(additionalProperties, "ipv6")
		delete(additionalProperties, "routeDomainId")
		delete(additionalProperties, "mtu")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVxlanLogicalNetwork struct {
	value *VxlanLogicalNetwork
	isSet bool
}

func (v NullableVxlanLogicalNetwork) Get() *VxlanLogicalNetwork {
	return v.value
}

func (v *NullableVxlanLogicalNetwork) Set(val *VxlanLogicalNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableVxlanLogicalNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableVxlanLogicalNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVxlanLogicalNetwork(val *VxlanLogicalNetwork) *NullableVxlanLogicalNetwork {
	return &NullableVxlanLogicalNetwork{value: val, isSet: true}
}

func (v NullableVxlanLogicalNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVxlanLogicalNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


