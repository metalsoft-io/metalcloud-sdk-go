/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the IServerFirmwareBinaryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &IServerFirmwareBinaryResponse{}

// IServerFirmwareBinaryResponse struct for IServerFirmwareBinaryResponse
type IServerFirmwareBinaryResponse struct {
	// Baseline information (may omit links and createdTimestamp fields)
	Baseline *FirmwareBaseline `json:"baseline,omitempty"`
	// Mapping of component IDs (as strings) to arrays of firmware binaries
	ComponentBinaries *map[string][]FirmwareBinaryResponse `json:"componentBinaries,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _IServerFirmwareBinaryResponse IServerFirmwareBinaryResponse

// NewIServerFirmwareBinaryResponse instantiates a new IServerFirmwareBinaryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewIServerFirmwareBinaryResponse() *IServerFirmwareBinaryResponse {
	this := IServerFirmwareBinaryResponse{}
	return &this
}

// NewIServerFirmwareBinaryResponseWithDefaults instantiates a new IServerFirmwareBinaryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewIServerFirmwareBinaryResponseWithDefaults() *IServerFirmwareBinaryResponse {
	this := IServerFirmwareBinaryResponse{}
	return &this
}

// GetBaseline returns the Baseline field value if set, zero value otherwise.
func (o *IServerFirmwareBinaryResponse) GetBaseline() FirmwareBaseline {
	if o == nil || IsNil(o.Baseline) {
		var ret FirmwareBaseline
		return ret
	}
	return *o.Baseline
}

// GetBaselineOk returns a tuple with the Baseline field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IServerFirmwareBinaryResponse) GetBaselineOk() (*FirmwareBaseline, bool) {
	if o == nil || IsNil(o.Baseline) {
		return nil, false
	}
	return o.Baseline, true
}

// HasBaseline returns a boolean if a field has been set.
func (o *IServerFirmwareBinaryResponse) HasBaseline() bool {
	if o != nil && !IsNil(o.Baseline) {
		return true
	}

	return false
}

// SetBaseline gets a reference to the given FirmwareBaseline and assigns it to the Baseline field.
func (o *IServerFirmwareBinaryResponse) SetBaseline(v FirmwareBaseline) {
	o.Baseline = &v
}

// GetComponentBinaries returns the ComponentBinaries field value if set, zero value otherwise.
func (o *IServerFirmwareBinaryResponse) GetComponentBinaries() map[string][]FirmwareBinaryResponse {
	if o == nil || IsNil(o.ComponentBinaries) {
		var ret map[string][]FirmwareBinaryResponse
		return ret
	}
	return *o.ComponentBinaries
}

// GetComponentBinariesOk returns a tuple with the ComponentBinaries field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *IServerFirmwareBinaryResponse) GetComponentBinariesOk() (*map[string][]FirmwareBinaryResponse, bool) {
	if o == nil || IsNil(o.ComponentBinaries) {
		return nil, false
	}
	return o.ComponentBinaries, true
}

// HasComponentBinaries returns a boolean if a field has been set.
func (o *IServerFirmwareBinaryResponse) HasComponentBinaries() bool {
	if o != nil && !IsNil(o.ComponentBinaries) {
		return true
	}

	return false
}

// SetComponentBinaries gets a reference to the given map[string][]FirmwareBinaryResponse and assigns it to the ComponentBinaries field.
func (o *IServerFirmwareBinaryResponse) SetComponentBinaries(v map[string][]FirmwareBinaryResponse) {
	o.ComponentBinaries = &v
}

func (o IServerFirmwareBinaryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o IServerFirmwareBinaryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Baseline) {
		toSerialize["baseline"] = o.Baseline
	}
	if !IsNil(o.ComponentBinaries) {
		toSerialize["componentBinaries"] = o.ComponentBinaries
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *IServerFirmwareBinaryResponse) UnmarshalJSON(data []byte) (err error) {
	varIServerFirmwareBinaryResponse := _IServerFirmwareBinaryResponse{}

	err = json.Unmarshal(data, &varIServerFirmwareBinaryResponse)

	if err != nil {
		return err
	}

	*o = IServerFirmwareBinaryResponse(varIServerFirmwareBinaryResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "baseline")
		delete(additionalProperties, "componentBinaries")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableIServerFirmwareBinaryResponse struct {
	value *IServerFirmwareBinaryResponse
	isSet bool
}

func (v NullableIServerFirmwareBinaryResponse) Get() *IServerFirmwareBinaryResponse {
	return v.value
}

func (v *NullableIServerFirmwareBinaryResponse) Set(val *IServerFirmwareBinaryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableIServerFirmwareBinaryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableIServerFirmwareBinaryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableIServerFirmwareBinaryResponse(val *IServerFirmwareBinaryResponse) *NullableIServerFirmwareBinaryResponse {
	return &NullableIServerFirmwareBinaryResponse{value: val, isSet: true}
}

func (v NullableIServerFirmwareBinaryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableIServerFirmwareBinaryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


