/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ExternalConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalConnection{}

// ExternalConnection struct for ExternalConnection
type ExternalConnection struct {
	// The network external connection id.
	Id string `json:"id"`
	// The external connection unique label
	Label string `json:"label" validate:"regexp=^(?!.*-$)[a-z]{1}[a-z0-9-]{0,62}$"`
	// The external connection name
	Name string `json:"name"`
	// The ID of the Fabric identifier this entity belongs to.
	FabricId float32 `json:"fabricId"`
	// Revision number of the entity
	Revision string `json:"revision"`
	// The date and time the entity was created
	CreatedAt time.Time `json:"createdAt"`
	// The date and time the entity was last updated
	UpdatedAt time.Time `json:"updatedAt"`
	// Reference links
	Links []Link `json:"links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExternalConnection ExternalConnection

// NewExternalConnection instantiates a new ExternalConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalConnection(id string, label string, name string, fabricId float32, revision string, createdAt time.Time, updatedAt time.Time) *ExternalConnection {
	this := ExternalConnection{}
	this.Id = id
	this.Label = label
	this.Name = name
	this.FabricId = fabricId
	this.Revision = revision
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewExternalConnectionWithDefaults instantiates a new ExternalConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalConnectionWithDefaults() *ExternalConnection {
	this := ExternalConnection{}
	return &this
}

// GetId returns the Id field value
func (o *ExternalConnection) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ExternalConnection) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ExternalConnection) SetId(v string) {
	o.Id = v
}

// GetLabel returns the Label field value
func (o *ExternalConnection) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *ExternalConnection) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *ExternalConnection) SetLabel(v string) {
	o.Label = v
}

// GetName returns the Name field value
func (o *ExternalConnection) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ExternalConnection) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ExternalConnection) SetName(v string) {
	o.Name = v
}

// GetFabricId returns the FabricId field value
func (o *ExternalConnection) GetFabricId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FabricId
}

// GetFabricIdOk returns a tuple with the FabricId field value
// and a boolean to check if the value has been set.
func (o *ExternalConnection) GetFabricIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FabricId, true
}

// SetFabricId sets field value
func (o *ExternalConnection) SetFabricId(v float32) {
	o.FabricId = v
}

// GetRevision returns the Revision field value
func (o *ExternalConnection) GetRevision() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *ExternalConnection) GetRevisionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *ExternalConnection) SetRevision(v string) {
	o.Revision = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ExternalConnection) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ExternalConnection) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ExternalConnection) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ExternalConnection) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ExternalConnection) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ExternalConnection) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ExternalConnection) GetLinks() []Link {
	if o == nil || IsNil(o.Links) {
		var ret []Link
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalConnection) GetLinksOk() ([]Link, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ExternalConnection) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *ExternalConnection) SetLinks(v []Link) {
	o.Links = v
}

func (o ExternalConnection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["label"] = o.Label
	toSerialize["name"] = o.Name
	toSerialize["fabricId"] = o.FabricId
	toSerialize["revision"] = o.Revision
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExternalConnection) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"label",
		"name",
		"fabricId",
		"revision",
		"createdAt",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalConnection := _ExternalConnection{}

	err = json.Unmarshal(data, &varExternalConnection)

	if err != nil {
		return err
	}

	*o = ExternalConnection(varExternalConnection)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "label")
		delete(additionalProperties, "name")
		delete(additionalProperties, "fabricId")
		delete(additionalProperties, "revision")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExternalConnection struct {
	value *ExternalConnection
	isSet bool
}

func (v NullableExternalConnection) Get() *ExternalConnection {
	return v.value
}

func (v *NullableExternalConnection) Set(val *ExternalConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalConnection(val *ExternalConnection) *NullableExternalConnection {
	return &NullableExternalConnection{value: val, isSet: true}
}

func (v NullableExternalConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


