/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateVMInstanceGroupNetwork type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateVMInstanceGroupNetwork{}

// UpdateVMInstanceGroupNetwork struct for UpdateVMInstanceGroupNetwork
type UpdateVMInstanceGroupNetwork struct {
	// Network Profile ID
	NetworkProfileId *float32 `json:"networkProfileId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateVMInstanceGroupNetwork UpdateVMInstanceGroupNetwork

// NewUpdateVMInstanceGroupNetwork instantiates a new UpdateVMInstanceGroupNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateVMInstanceGroupNetwork() *UpdateVMInstanceGroupNetwork {
	this := UpdateVMInstanceGroupNetwork{}
	return &this
}

// NewUpdateVMInstanceGroupNetworkWithDefaults instantiates a new UpdateVMInstanceGroupNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateVMInstanceGroupNetworkWithDefaults() *UpdateVMInstanceGroupNetwork {
	this := UpdateVMInstanceGroupNetwork{}
	return &this
}

// GetNetworkProfileId returns the NetworkProfileId field value if set, zero value otherwise.
func (o *UpdateVMInstanceGroupNetwork) GetNetworkProfileId() float32 {
	if o == nil || IsNil(o.NetworkProfileId) {
		var ret float32
		return ret
	}
	return *o.NetworkProfileId
}

// GetNetworkProfileIdOk returns a tuple with the NetworkProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVMInstanceGroupNetwork) GetNetworkProfileIdOk() (*float32, bool) {
	if o == nil || IsNil(o.NetworkProfileId) {
		return nil, false
	}
	return o.NetworkProfileId, true
}

// HasNetworkProfileId returns a boolean if a field has been set.
func (o *UpdateVMInstanceGroupNetwork) HasNetworkProfileId() bool {
	if o != nil && !IsNil(o.NetworkProfileId) {
		return true
	}

	return false
}

// SetNetworkProfileId gets a reference to the given float32 and assigns it to the NetworkProfileId field.
func (o *UpdateVMInstanceGroupNetwork) SetNetworkProfileId(v float32) {
	o.NetworkProfileId = &v
}

func (o UpdateVMInstanceGroupNetwork) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateVMInstanceGroupNetwork) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkProfileId) {
		toSerialize["networkProfileId"] = o.NetworkProfileId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateVMInstanceGroupNetwork) UnmarshalJSON(data []byte) (err error) {
	varUpdateVMInstanceGroupNetwork := _UpdateVMInstanceGroupNetwork{}

	err = json.Unmarshal(data, &varUpdateVMInstanceGroupNetwork)

	if err != nil {
		return err
	}

	*o = UpdateVMInstanceGroupNetwork(varUpdateVMInstanceGroupNetwork)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "networkProfileId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateVMInstanceGroupNetwork struct {
	value *UpdateVMInstanceGroupNetwork
	isSet bool
}

func (v NullableUpdateVMInstanceGroupNetwork) Get() *UpdateVMInstanceGroupNetwork {
	return v.value
}

func (v *NullableUpdateVMInstanceGroupNetwork) Set(val *UpdateVMInstanceGroupNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateVMInstanceGroupNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateVMInstanceGroupNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateVMInstanceGroupNetwork(val *UpdateVMInstanceGroupNetwork) *NullableUpdateVMInstanceGroupNetwork {
	return &NullableUpdateVMInstanceGroupNetwork{value: val, isSet: true}
}

func (v NullableUpdateVMInstanceGroupNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateVMInstanceGroupNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


