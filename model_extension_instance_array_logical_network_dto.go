/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the ExtensionInstanceArrayLogicalNetworkDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensionInstanceArrayLogicalNetworkDto{}

// ExtensionInstanceArrayLogicalNetworkDto struct for ExtensionInstanceArrayLogicalNetworkDto
type ExtensionInstanceArrayLogicalNetworkDto struct {
	// Label of the logical network.
	Label string `json:"label"`
	// Network connection details for the logical network.
	NetworkConnection CreateServerInstanceGroupNetworkConnection `json:"networkConnection"`
	AdditionalProperties map[string]interface{}
}

type _ExtensionInstanceArrayLogicalNetworkDto ExtensionInstanceArrayLogicalNetworkDto

// NewExtensionInstanceArrayLogicalNetworkDto instantiates a new ExtensionInstanceArrayLogicalNetworkDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensionInstanceArrayLogicalNetworkDto(label string, networkConnection CreateServerInstanceGroupNetworkConnection) *ExtensionInstanceArrayLogicalNetworkDto {
	this := ExtensionInstanceArrayLogicalNetworkDto{}
	this.Label = label
	this.NetworkConnection = networkConnection
	return &this
}

// NewExtensionInstanceArrayLogicalNetworkDtoWithDefaults instantiates a new ExtensionInstanceArrayLogicalNetworkDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionInstanceArrayLogicalNetworkDtoWithDefaults() *ExtensionInstanceArrayLogicalNetworkDto {
	this := ExtensionInstanceArrayLogicalNetworkDto{}
	return &this
}

// GetLabel returns the Label field value
func (o *ExtensionInstanceArrayLogicalNetworkDto) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *ExtensionInstanceArrayLogicalNetworkDto) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *ExtensionInstanceArrayLogicalNetworkDto) SetLabel(v string) {
	o.Label = v
}

// GetNetworkConnection returns the NetworkConnection field value
func (o *ExtensionInstanceArrayLogicalNetworkDto) GetNetworkConnection() CreateServerInstanceGroupNetworkConnection {
	if o == nil {
		var ret CreateServerInstanceGroupNetworkConnection
		return ret
	}

	return o.NetworkConnection
}

// GetNetworkConnectionOk returns a tuple with the NetworkConnection field value
// and a boolean to check if the value has been set.
func (o *ExtensionInstanceArrayLogicalNetworkDto) GetNetworkConnectionOk() (*CreateServerInstanceGroupNetworkConnection, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkConnection, true
}

// SetNetworkConnection sets field value
func (o *ExtensionInstanceArrayLogicalNetworkDto) SetNetworkConnection(v CreateServerInstanceGroupNetworkConnection) {
	o.NetworkConnection = v
}

func (o ExtensionInstanceArrayLogicalNetworkDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensionInstanceArrayLogicalNetworkDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["label"] = o.Label
	toSerialize["networkConnection"] = o.NetworkConnection

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExtensionInstanceArrayLogicalNetworkDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label",
		"networkConnection",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExtensionInstanceArrayLogicalNetworkDto := _ExtensionInstanceArrayLogicalNetworkDto{}

	err = json.Unmarshal(data, &varExtensionInstanceArrayLogicalNetworkDto)

	if err != nil {
		return err
	}

	*o = ExtensionInstanceArrayLogicalNetworkDto(varExtensionInstanceArrayLogicalNetworkDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "label")
		delete(additionalProperties, "networkConnection")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExtensionInstanceArrayLogicalNetworkDto struct {
	value *ExtensionInstanceArrayLogicalNetworkDto
	isSet bool
}

func (v NullableExtensionInstanceArrayLogicalNetworkDto) Get() *ExtensionInstanceArrayLogicalNetworkDto {
	return v.value
}

func (v *NullableExtensionInstanceArrayLogicalNetworkDto) Set(val *ExtensionInstanceArrayLogicalNetworkDto) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensionInstanceArrayLogicalNetworkDto) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensionInstanceArrayLogicalNetworkDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensionInstanceArrayLogicalNetworkDto(val *ExtensionInstanceArrayLogicalNetworkDto) *NullableExtensionInstanceArrayLogicalNetworkDto {
	return &NullableExtensionInstanceArrayLogicalNetworkDto{value: val, isSet: true}
}

func (v NullableExtensionInstanceArrayLogicalNetworkDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensionInstanceArrayLogicalNetworkDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


