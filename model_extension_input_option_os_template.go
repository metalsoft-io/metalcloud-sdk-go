/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ExtensionInputOptionOsTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensionInputOptionOsTemplate{}

// ExtensionInputOptionOsTemplate struct for ExtensionInputOptionOsTemplate
type ExtensionInputOptionOsTemplate struct {
	// OS family type.
	OsFamily *string `json:"osFamily,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExtensionInputOptionOsTemplate ExtensionInputOptionOsTemplate

// NewExtensionInputOptionOsTemplate instantiates a new ExtensionInputOptionOsTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensionInputOptionOsTemplate() *ExtensionInputOptionOsTemplate {
	this := ExtensionInputOptionOsTemplate{}
	return &this
}

// NewExtensionInputOptionOsTemplateWithDefaults instantiates a new ExtensionInputOptionOsTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionInputOptionOsTemplateWithDefaults() *ExtensionInputOptionOsTemplate {
	this := ExtensionInputOptionOsTemplate{}
	return &this
}

// GetOsFamily returns the OsFamily field value if set, zero value otherwise.
func (o *ExtensionInputOptionOsTemplate) GetOsFamily() string {
	if o == nil || IsNil(o.OsFamily) {
		var ret string
		return ret
	}
	return *o.OsFamily
}

// GetOsFamilyOk returns a tuple with the OsFamily field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionInputOptionOsTemplate) GetOsFamilyOk() (*string, bool) {
	if o == nil || IsNil(o.OsFamily) {
		return nil, false
	}
	return o.OsFamily, true
}

// HasOsFamily returns a boolean if a field has been set.
func (o *ExtensionInputOptionOsTemplate) HasOsFamily() bool {
	if o != nil && !IsNil(o.OsFamily) {
		return true
	}

	return false
}

// SetOsFamily gets a reference to the given string and assigns it to the OsFamily field.
func (o *ExtensionInputOptionOsTemplate) SetOsFamily(v string) {
	o.OsFamily = &v
}

func (o ExtensionInputOptionOsTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensionInputOptionOsTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OsFamily) {
		toSerialize["osFamily"] = o.OsFamily
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExtensionInputOptionOsTemplate) UnmarshalJSON(data []byte) (err error) {
	varExtensionInputOptionOsTemplate := _ExtensionInputOptionOsTemplate{}

	err = json.Unmarshal(data, &varExtensionInputOptionOsTemplate)

	if err != nil {
		return err
	}

	*o = ExtensionInputOptionOsTemplate(varExtensionInputOptionOsTemplate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "osFamily")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExtensionInputOptionOsTemplate struct {
	value *ExtensionInputOptionOsTemplate
	isSet bool
}

func (v NullableExtensionInputOptionOsTemplate) Get() *ExtensionInputOptionOsTemplate {
	return v.value
}

func (v *NullableExtensionInputOptionOsTemplate) Set(val *ExtensionInputOptionOsTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensionInputOptionOsTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensionInputOptionOsTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensionInputOptionOsTemplate(val *ExtensionInputOptionOsTemplate) *NullableExtensionInputOptionOsTemplate {
	return &NullableExtensionInputOptionOsTemplate{value: val, isSet: true}
}

func (v NullableExtensionInputOptionOsTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensionInputOptionOsTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


