/*
MetalSoft REST API

Testing StorageAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package sdk

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/metalsoft-io/metalcloud-sdk-go"
)

func Test_sdk_StorageAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test StorageAPIService CreateStorage", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.StorageAPI.CreateStorage(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageAPIService CreateStorageNetworkDeviceConfiguration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var storageId float32

		httpRes, err := apiClient.StorageAPI.CreateStorageNetworkDeviceConfiguration(context.Background(), storageId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageAPIService DeleteStorage", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var storageId float32

		httpRes, err := apiClient.StorageAPI.DeleteStorage(context.Background(), storageId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageAPIService DeleteStorageNetworkDeviceConfiguration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var storageId float32
		var storageNetworkDeviceConfigurationId float32

		httpRes, err := apiClient.StorageAPI.DeleteStorageNetworkDeviceConfiguration(context.Background(), storageId, storageNetworkDeviceConfigurationId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageAPIService GetStorage", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var storageId float32

		resp, httpRes, err := apiClient.StorageAPI.GetStorage(context.Background(), storageId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageAPIService GetStorageBuckets", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var storageId float32

		resp, httpRes, err := apiClient.StorageAPI.GetStorageBuckets(context.Background(), storageId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageAPIService GetStorageCredentials", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var storageId float32

		resp, httpRes, err := apiClient.StorageAPI.GetStorageCredentials(context.Background(), storageId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageAPIService GetStorageDrives", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var storageId float32

		resp, httpRes, err := apiClient.StorageAPI.GetStorageDrives(context.Background(), storageId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageAPIService GetStorageFileShares", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var storageId float32

		resp, httpRes, err := apiClient.StorageAPI.GetStorageFileShares(context.Background(), storageId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageAPIService GetStorageNetworkDeviceConfigurations", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var storageId float32

		resp, httpRes, err := apiClient.StorageAPI.GetStorageNetworkDeviceConfigurations(context.Background(), storageId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageAPIService GetStorageStatistics", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var storageId float32

		resp, httpRes, err := apiClient.StorageAPI.GetStorageStatistics(context.Background(), storageId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageAPIService GetStorages", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.StorageAPI.GetStorages(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageAPIService GetStoragesStatistics", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.StorageAPI.GetStoragesStatistics(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageAPIService UpdateStorage", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var storageId float32

		resp, httpRes, err := apiClient.StorageAPI.UpdateStorage(context.Background(), storageId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test StorageAPIService UpdateStorageNetworkDeviceConfiguration", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var storageId float32
		var storageNetworkDeviceConfigurationId float32

		httpRes, err := apiClient.StorageAPI.UpdateStorageNetworkDeviceConfiguration(context.Background(), storageId, storageNetworkDeviceConfigurationId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
