/*
MetalSoft REST API

Testing NetworkDeviceDefaultSecretsAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package sdk

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/metalsoft-io/metalcloud-sdk-go"
)

func Test_sdk_NetworkDeviceDefaultSecretsAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test NetworkDeviceDefaultSecretsAPIService CreateNetworkDeviceDefaultSecrets", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.NetworkDeviceDefaultSecretsAPI.CreateNetworkDeviceDefaultSecrets(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NetworkDeviceDefaultSecretsAPIService DeleteNetworkDeviceDefaultSecrets", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkDeviceDefaultSecretsId float32

		httpRes, err := apiClient.NetworkDeviceDefaultSecretsAPI.DeleteNetworkDeviceDefaultSecrets(context.Background(), networkDeviceDefaultSecretsId).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NetworkDeviceDefaultSecretsAPIService GetNetworkDeviceDefaultSecretsCredentials", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkDeviceDefaultSecretsId float32

		resp, httpRes, err := apiClient.NetworkDeviceDefaultSecretsAPI.GetNetworkDeviceDefaultSecretsCredentials(context.Background(), networkDeviceDefaultSecretsId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NetworkDeviceDefaultSecretsAPIService GetNetworkDeviceDefaultSecretsInfo", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkDeviceDefaultSecretsId float32

		resp, httpRes, err := apiClient.NetworkDeviceDefaultSecretsAPI.GetNetworkDeviceDefaultSecretsInfo(context.Background(), networkDeviceDefaultSecretsId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NetworkDeviceDefaultSecretsAPIService GetNetworkDevicesDefaultSecrets", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		resp, httpRes, err := apiClient.NetworkDeviceDefaultSecretsAPI.GetNetworkDevicesDefaultSecrets(context.Background()).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test NetworkDeviceDefaultSecretsAPIService UpdateNetworkDeviceDefaultSecrets", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var networkDeviceDefaultSecretsId float32

		resp, httpRes, err := apiClient.NetworkDeviceDefaultSecretsAPI.UpdateNetworkDeviceDefaultSecrets(context.Background(), networkDeviceDefaultSecretsId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
