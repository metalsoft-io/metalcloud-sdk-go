/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the EndpointInstanceGroupUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointInstanceGroupUpdate{}

// EndpointInstanceGroupUpdate struct for EndpointInstanceGroupUpdate
type EndpointInstanceGroupUpdate struct {
	// The endpoint instance group label.
	Label *string `json:"label,omitempty"`
	EndpointGroupName *string `json:"endpointGroupName,omitempty"`
	// Custom hostname for the DNS Load Balancing record. If set, this will be used as the DNS Load Balancing record name instead of the default \"endpoint-instance-group\". The hostname must be a valid DNS subdomain and can only contain alphanumeric characters, hyphens, and underscores. This will only take effect if the property \"dnsLoadBalancingRecord\" is true. It will be automatically suffixed with the endpoint instance group ID (e.g., \"-34\") to ensure the uniqueness of the resulting DNS name.
	Hostname *string `json:"hostname,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EndpointInstanceGroupUpdate EndpointInstanceGroupUpdate

// NewEndpointInstanceGroupUpdate instantiates a new EndpointInstanceGroupUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointInstanceGroupUpdate() *EndpointInstanceGroupUpdate {
	this := EndpointInstanceGroupUpdate{}
	return &this
}

// NewEndpointInstanceGroupUpdateWithDefaults instantiates a new EndpointInstanceGroupUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointInstanceGroupUpdateWithDefaults() *EndpointInstanceGroupUpdate {
	this := EndpointInstanceGroupUpdate{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *EndpointInstanceGroupUpdate) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointInstanceGroupUpdate) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *EndpointInstanceGroupUpdate) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *EndpointInstanceGroupUpdate) SetLabel(v string) {
	o.Label = &v
}

// GetEndpointGroupName returns the EndpointGroupName field value if set, zero value otherwise.
func (o *EndpointInstanceGroupUpdate) GetEndpointGroupName() string {
	if o == nil || IsNil(o.EndpointGroupName) {
		var ret string
		return ret
	}
	return *o.EndpointGroupName
}

// GetEndpointGroupNameOk returns a tuple with the EndpointGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointInstanceGroupUpdate) GetEndpointGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointGroupName) {
		return nil, false
	}
	return o.EndpointGroupName, true
}

// HasEndpointGroupName returns a boolean if a field has been set.
func (o *EndpointInstanceGroupUpdate) HasEndpointGroupName() bool {
	if o != nil && !IsNil(o.EndpointGroupName) {
		return true
	}

	return false
}

// SetEndpointGroupName gets a reference to the given string and assigns it to the EndpointGroupName field.
func (o *EndpointInstanceGroupUpdate) SetEndpointGroupName(v string) {
	o.EndpointGroupName = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *EndpointInstanceGroupUpdate) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointInstanceGroupUpdate) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *EndpointInstanceGroupUpdate) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *EndpointInstanceGroupUpdate) SetHostname(v string) {
	o.Hostname = &v
}

func (o EndpointInstanceGroupUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointInstanceGroupUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.EndpointGroupName) {
		toSerialize["endpointGroupName"] = o.EndpointGroupName
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EndpointInstanceGroupUpdate) UnmarshalJSON(data []byte) (err error) {
	varEndpointInstanceGroupUpdate := _EndpointInstanceGroupUpdate{}

	err = json.Unmarshal(data, &varEndpointInstanceGroupUpdate)

	if err != nil {
		return err
	}

	*o = EndpointInstanceGroupUpdate(varEndpointInstanceGroupUpdate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "label")
		delete(additionalProperties, "endpointGroupName")
		delete(additionalProperties, "hostname")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEndpointInstanceGroupUpdate struct {
	value *EndpointInstanceGroupUpdate
	isSet bool
}

func (v NullableEndpointInstanceGroupUpdate) Get() *EndpointInstanceGroupUpdate {
	return v.value
}

func (v *NullableEndpointInstanceGroupUpdate) Set(val *EndpointInstanceGroupUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointInstanceGroupUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointInstanceGroupUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointInstanceGroupUpdate(val *EndpointInstanceGroupUpdate) *NullableEndpointInstanceGroupUpdate {
	return &NullableEndpointInstanceGroupUpdate{value: val, isSet: true}
}

func (v NullableEndpointInstanceGroupUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointInstanceGroupUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


