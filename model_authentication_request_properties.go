/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// AuthenticationRequestProperties - Input options.
type AuthenticationRequestProperties struct {
	AuthenticationRequestPropertiesLdap *AuthenticationRequestPropertiesLdap
	AuthenticationRequestPropertiesMySql *AuthenticationRequestPropertiesMySql
}

// AuthenticationRequestPropertiesLdapAsAuthenticationRequestProperties is a convenience function that returns AuthenticationRequestPropertiesLdap wrapped in AuthenticationRequestProperties
func AuthenticationRequestPropertiesLdapAsAuthenticationRequestProperties(v *AuthenticationRequestPropertiesLdap) AuthenticationRequestProperties {
	return AuthenticationRequestProperties{
		AuthenticationRequestPropertiesLdap: v,
	}
}

// AuthenticationRequestPropertiesMySqlAsAuthenticationRequestProperties is a convenience function that returns AuthenticationRequestPropertiesMySql wrapped in AuthenticationRequestProperties
func AuthenticationRequestPropertiesMySqlAsAuthenticationRequestProperties(v *AuthenticationRequestPropertiesMySql) AuthenticationRequestProperties {
	return AuthenticationRequestProperties{
		AuthenticationRequestPropertiesMySql: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AuthenticationRequestProperties) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AuthenticationRequestPropertiesLdap
	err = json.Unmarshal(data, &dst.AuthenticationRequestPropertiesLdap)
	if err == nil {
		jsonAuthenticationRequestPropertiesLdap, _ := json.Marshal(dst.AuthenticationRequestPropertiesLdap)
		if string(jsonAuthenticationRequestPropertiesLdap) == "{}" { // empty struct
			dst.AuthenticationRequestPropertiesLdap = nil
		} else {
			match++
		}
	} else {
		dst.AuthenticationRequestPropertiesLdap = nil
	}

	// try to unmarshal data into AuthenticationRequestPropertiesMySql
	err = json.Unmarshal(data, &dst.AuthenticationRequestPropertiesMySql)
	if err == nil {
		jsonAuthenticationRequestPropertiesMySql, _ := json.Marshal(dst.AuthenticationRequestPropertiesMySql)
		if string(jsonAuthenticationRequestPropertiesMySql) == "{}" { // empty struct
			dst.AuthenticationRequestPropertiesMySql = nil
		} else {
			match++
		}
	} else {
		dst.AuthenticationRequestPropertiesMySql = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AuthenticationRequestPropertiesLdap = nil
		dst.AuthenticationRequestPropertiesMySql = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AuthenticationRequestProperties)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AuthenticationRequestProperties)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AuthenticationRequestProperties) MarshalJSON() ([]byte, error) {
	if src.AuthenticationRequestPropertiesLdap != nil {
		return json.Marshal(&src.AuthenticationRequestPropertiesLdap)
	}

	if src.AuthenticationRequestPropertiesMySql != nil {
		return json.Marshal(&src.AuthenticationRequestPropertiesMySql)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AuthenticationRequestProperties) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AuthenticationRequestPropertiesLdap != nil {
		return obj.AuthenticationRequestPropertiesLdap
	}

	if obj.AuthenticationRequestPropertiesMySql != nil {
		return obj.AuthenticationRequestPropertiesMySql
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj AuthenticationRequestProperties) GetActualInstanceValue() (interface{}) {
	if obj.AuthenticationRequestPropertiesLdap != nil {
		return *obj.AuthenticationRequestPropertiesLdap
	}

	if obj.AuthenticationRequestPropertiesMySql != nil {
		return *obj.AuthenticationRequestPropertiesMySql
	}

	// all schemas are nil
	return nil
}

type NullableAuthenticationRequestProperties struct {
	value *AuthenticationRequestProperties
	isSet bool
}

func (v NullableAuthenticationRequestProperties) Get() *AuthenticationRequestProperties {
	return v.value
}

func (v *NullableAuthenticationRequestProperties) Set(val *AuthenticationRequestProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationRequestProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationRequestProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationRequestProperties(val *AuthenticationRequestProperties) *NullableAuthenticationRequestProperties {
	return &NullableAuthenticationRequestProperties{value: val, isSet: true}
}

func (v NullableAuthenticationRequestProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationRequestProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


