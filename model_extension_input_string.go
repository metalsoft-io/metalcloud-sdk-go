/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ExtensionInputString type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensionInputString{}

// ExtensionInputString struct for ExtensionInputString
type ExtensionInputString struct {
	// Validation regex pattern for the input.
	ValidationRegEx *string `json:"validationRegEx,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExtensionInputString ExtensionInputString

// NewExtensionInputString instantiates a new ExtensionInputString object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensionInputString() *ExtensionInputString {
	this := ExtensionInputString{}
	return &this
}

// NewExtensionInputStringWithDefaults instantiates a new ExtensionInputString object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionInputStringWithDefaults() *ExtensionInputString {
	this := ExtensionInputString{}
	return &this
}

// GetValidationRegEx returns the ValidationRegEx field value if set, zero value otherwise.
func (o *ExtensionInputString) GetValidationRegEx() string {
	if o == nil || IsNil(o.ValidationRegEx) {
		var ret string
		return ret
	}
	return *o.ValidationRegEx
}

// GetValidationRegExOk returns a tuple with the ValidationRegEx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionInputString) GetValidationRegExOk() (*string, bool) {
	if o == nil || IsNil(o.ValidationRegEx) {
		return nil, false
	}
	return o.ValidationRegEx, true
}

// HasValidationRegEx returns a boolean if a field has been set.
func (o *ExtensionInputString) HasValidationRegEx() bool {
	if o != nil && !IsNil(o.ValidationRegEx) {
		return true
	}

	return false
}

// SetValidationRegEx gets a reference to the given string and assigns it to the ValidationRegEx field.
func (o *ExtensionInputString) SetValidationRegEx(v string) {
	o.ValidationRegEx = &v
}

func (o ExtensionInputString) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensionInputString) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ValidationRegEx) {
		toSerialize["validationRegEx"] = o.ValidationRegEx
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExtensionInputString) UnmarshalJSON(data []byte) (err error) {
	varExtensionInputString := _ExtensionInputString{}

	err = json.Unmarshal(data, &varExtensionInputString)

	if err != nil {
		return err
	}

	*o = ExtensionInputString(varExtensionInputString)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "validationRegEx")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExtensionInputString struct {
	value *ExtensionInputString
	isSet bool
}

func (v NullableExtensionInputString) Get() *ExtensionInputString {
	return v.value
}

func (v *NullableExtensionInputString) Set(val *ExtensionInputString) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensionInputString) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensionInputString) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensionInputString(val *ExtensionInputString) *NullableExtensionInputString {
	return &NullableExtensionInputString{value: val, isSet: true}
}

func (v NullableExtensionInputString) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensionInputString) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


