/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateCustomIso type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateCustomIso{}

// UpdateCustomIso struct for UpdateCustomIso
type UpdateCustomIso struct {
	// The access URL of the custom ISO
	AccessUrl *string `json:"accessUrl,omitempty"`
	// The name of the custom ISO
	Name *string `json:"name,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateCustomIso UpdateCustomIso

// NewUpdateCustomIso instantiates a new UpdateCustomIso object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateCustomIso() *UpdateCustomIso {
	this := UpdateCustomIso{}
	return &this
}

// NewUpdateCustomIsoWithDefaults instantiates a new UpdateCustomIso object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateCustomIsoWithDefaults() *UpdateCustomIso {
	this := UpdateCustomIso{}
	return &this
}

// GetAccessUrl returns the AccessUrl field value if set, zero value otherwise.
func (o *UpdateCustomIso) GetAccessUrl() string {
	if o == nil || IsNil(o.AccessUrl) {
		var ret string
		return ret
	}
	return *o.AccessUrl
}

// GetAccessUrlOk returns a tuple with the AccessUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomIso) GetAccessUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AccessUrl) {
		return nil, false
	}
	return o.AccessUrl, true
}

// HasAccessUrl returns a boolean if a field has been set.
func (o *UpdateCustomIso) HasAccessUrl() bool {
	if o != nil && !IsNil(o.AccessUrl) {
		return true
	}

	return false
}

// SetAccessUrl gets a reference to the given string and assigns it to the AccessUrl field.
func (o *UpdateCustomIso) SetAccessUrl(v string) {
	o.AccessUrl = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateCustomIso) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateCustomIso) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateCustomIso) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateCustomIso) SetName(v string) {
	o.Name = &v
}

func (o UpdateCustomIso) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateCustomIso) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccessUrl) {
		toSerialize["accessUrl"] = o.AccessUrl
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateCustomIso) UnmarshalJSON(data []byte) (err error) {
	varUpdateCustomIso := _UpdateCustomIso{}

	err = json.Unmarshal(data, &varUpdateCustomIso)

	if err != nil {
		return err
	}

	*o = UpdateCustomIso(varUpdateCustomIso)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accessUrl")
		delete(additionalProperties, "name")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateCustomIso struct {
	value *UpdateCustomIso
	isSet bool
}

func (v NullableUpdateCustomIso) Get() *UpdateCustomIso {
	return v.value
}

func (v *NullableUpdateCustomIso) Set(val *UpdateCustomIso) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateCustomIso) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateCustomIso) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateCustomIso(val *UpdateCustomIso) *NullableUpdateCustomIso {
	return &NullableUpdateCustomIso{value: val, isSet: true}
}

func (v NullableUpdateCustomIso) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateCustomIso) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


