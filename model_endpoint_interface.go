/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the EndpointInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointInterface{}

// EndpointInterface struct for EndpointInterface
type EndpointInterface struct {
	// Unique identifier for the endpoint interface
	Id float32 `json:"id"`
	// Revision number of the endpoint interface
	Revision string `json:"revision"`
	// Network device id
	NetworkDeviceId float32 `json:"networkDeviceId"`
	// Network device interface id
	NetworkDeviceInterfaceId float32 `json:"networkDeviceInterfaceId"`
	// Network device interface name
	NetworkDeviceInterfaceName string `json:"networkDeviceInterfaceName"`
	// Device interface mac address
	MacAddress *string `json:"macAddress,omitempty"`
	// Entity creation timestamp
	CreatedTimestamp time.Time `json:"createdTimestamp"`
	// Entity last update timestamp
	UpdatedTimestamp time.Time `json:"updatedTimestamp"`
	// Reference links
	Links []Link `json:"links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EndpointInterface EndpointInterface

// NewEndpointInterface instantiates a new EndpointInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointInterface(id float32, revision string, networkDeviceId float32, networkDeviceInterfaceId float32, networkDeviceInterfaceName string, createdTimestamp time.Time, updatedTimestamp time.Time) *EndpointInterface {
	this := EndpointInterface{}
	this.Id = id
	this.Revision = revision
	this.NetworkDeviceId = networkDeviceId
	this.NetworkDeviceInterfaceId = networkDeviceInterfaceId
	this.NetworkDeviceInterfaceName = networkDeviceInterfaceName
	this.CreatedTimestamp = createdTimestamp
	this.UpdatedTimestamp = updatedTimestamp
	return &this
}

// NewEndpointInterfaceWithDefaults instantiates a new EndpointInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointInterfaceWithDefaults() *EndpointInterface {
	this := EndpointInterface{}
	return &this
}

// GetId returns the Id field value
func (o *EndpointInterface) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *EndpointInterface) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *EndpointInterface) SetId(v float32) {
	o.Id = v
}

// GetRevision returns the Revision field value
func (o *EndpointInterface) GetRevision() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *EndpointInterface) GetRevisionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *EndpointInterface) SetRevision(v string) {
	o.Revision = v
}

// GetNetworkDeviceId returns the NetworkDeviceId field value
func (o *EndpointInterface) GetNetworkDeviceId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NetworkDeviceId
}

// GetNetworkDeviceIdOk returns a tuple with the NetworkDeviceId field value
// and a boolean to check if the value has been set.
func (o *EndpointInterface) GetNetworkDeviceIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceId, true
}

// SetNetworkDeviceId sets field value
func (o *EndpointInterface) SetNetworkDeviceId(v float32) {
	o.NetworkDeviceId = v
}

// GetNetworkDeviceInterfaceId returns the NetworkDeviceInterfaceId field value
func (o *EndpointInterface) GetNetworkDeviceInterfaceId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NetworkDeviceInterfaceId
}

// GetNetworkDeviceInterfaceIdOk returns a tuple with the NetworkDeviceInterfaceId field value
// and a boolean to check if the value has been set.
func (o *EndpointInterface) GetNetworkDeviceInterfaceIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceInterfaceId, true
}

// SetNetworkDeviceInterfaceId sets field value
func (o *EndpointInterface) SetNetworkDeviceInterfaceId(v float32) {
	o.NetworkDeviceInterfaceId = v
}

// GetNetworkDeviceInterfaceName returns the NetworkDeviceInterfaceName field value
func (o *EndpointInterface) GetNetworkDeviceInterfaceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkDeviceInterfaceName
}

// GetNetworkDeviceInterfaceNameOk returns a tuple with the NetworkDeviceInterfaceName field value
// and a boolean to check if the value has been set.
func (o *EndpointInterface) GetNetworkDeviceInterfaceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceInterfaceName, true
}

// SetNetworkDeviceInterfaceName sets field value
func (o *EndpointInterface) SetNetworkDeviceInterfaceName(v string) {
	o.NetworkDeviceInterfaceName = v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *EndpointInterface) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress) {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointInterface) GetMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *EndpointInterface) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *EndpointInterface) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value
func (o *EndpointInterface) GetCreatedTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *EndpointInterface) GetCreatedTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTimestamp, true
}

// SetCreatedTimestamp sets field value
func (o *EndpointInterface) SetCreatedTimestamp(v time.Time) {
	o.CreatedTimestamp = v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value
func (o *EndpointInterface) GetUpdatedTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *EndpointInterface) GetUpdatedTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedTimestamp, true
}

// SetUpdatedTimestamp sets field value
func (o *EndpointInterface) SetUpdatedTimestamp(v time.Time) {
	o.UpdatedTimestamp = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *EndpointInterface) GetLinks() []Link {
	if o == nil || IsNil(o.Links) {
		var ret []Link
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointInterface) GetLinksOk() ([]Link, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *EndpointInterface) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *EndpointInterface) SetLinks(v []Link) {
	o.Links = v
}

func (o EndpointInterface) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["revision"] = o.Revision
	toSerialize["networkDeviceId"] = o.NetworkDeviceId
	toSerialize["networkDeviceInterfaceId"] = o.NetworkDeviceInterfaceId
	toSerialize["networkDeviceInterfaceName"] = o.NetworkDeviceInterfaceName
	if !IsNil(o.MacAddress) {
		toSerialize["macAddress"] = o.MacAddress
	}
	toSerialize["createdTimestamp"] = o.CreatedTimestamp
	toSerialize["updatedTimestamp"] = o.UpdatedTimestamp
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EndpointInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"revision",
		"networkDeviceId",
		"networkDeviceInterfaceId",
		"networkDeviceInterfaceName",
		"createdTimestamp",
		"updatedTimestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEndpointInterface := _EndpointInterface{}

	err = json.Unmarshal(data, &varEndpointInterface)

	if err != nil {
		return err
	}

	*o = EndpointInterface(varEndpointInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "revision")
		delete(additionalProperties, "networkDeviceId")
		delete(additionalProperties, "networkDeviceInterfaceId")
		delete(additionalProperties, "networkDeviceInterfaceName")
		delete(additionalProperties, "macAddress")
		delete(additionalProperties, "createdTimestamp")
		delete(additionalProperties, "updatedTimestamp")
		delete(additionalProperties, "links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEndpointInterface struct {
	value *EndpointInterface
	isSet bool
}

func (v NullableEndpointInterface) Get() *EndpointInterface {
	return v.value
}

func (v *NullableEndpointInterface) Set(val *EndpointInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointInterface(val *EndpointInterface) *NullableEndpointInterface {
	return &NullableEndpointInterface{value: val, isSet: true}
}

func (v NullableEndpointInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


