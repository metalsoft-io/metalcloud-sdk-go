/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateExternalConnectionInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateExternalConnectionInterface{}

// CreateExternalConnectionInterface struct for CreateExternalConnectionInterface
type CreateExternalConnectionInterface struct {
	// Network device interface id
	NetworkDeviceInterfaceId float32 `json:"networkDeviceInterfaceId"`
	AdditionalProperties map[string]interface{}
}

type _CreateExternalConnectionInterface CreateExternalConnectionInterface

// NewCreateExternalConnectionInterface instantiates a new CreateExternalConnectionInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateExternalConnectionInterface(networkDeviceInterfaceId float32) *CreateExternalConnectionInterface {
	this := CreateExternalConnectionInterface{}
	this.NetworkDeviceInterfaceId = networkDeviceInterfaceId
	return &this
}

// NewCreateExternalConnectionInterfaceWithDefaults instantiates a new CreateExternalConnectionInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateExternalConnectionInterfaceWithDefaults() *CreateExternalConnectionInterface {
	this := CreateExternalConnectionInterface{}
	return &this
}

// GetNetworkDeviceInterfaceId returns the NetworkDeviceInterfaceId field value
func (o *CreateExternalConnectionInterface) GetNetworkDeviceInterfaceId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NetworkDeviceInterfaceId
}

// GetNetworkDeviceInterfaceIdOk returns a tuple with the NetworkDeviceInterfaceId field value
// and a boolean to check if the value has been set.
func (o *CreateExternalConnectionInterface) GetNetworkDeviceInterfaceIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceInterfaceId, true
}

// SetNetworkDeviceInterfaceId sets field value
func (o *CreateExternalConnectionInterface) SetNetworkDeviceInterfaceId(v float32) {
	o.NetworkDeviceInterfaceId = v
}

func (o CreateExternalConnectionInterface) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateExternalConnectionInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["networkDeviceInterfaceId"] = o.NetworkDeviceInterfaceId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateExternalConnectionInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"networkDeviceInterfaceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateExternalConnectionInterface := _CreateExternalConnectionInterface{}

	err = json.Unmarshal(data, &varCreateExternalConnectionInterface)

	if err != nil {
		return err
	}

	*o = CreateExternalConnectionInterface(varCreateExternalConnectionInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "networkDeviceInterfaceId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateExternalConnectionInterface struct {
	value *CreateExternalConnectionInterface
	isSet bool
}

func (v NullableCreateExternalConnectionInterface) Get() *CreateExternalConnectionInterface {
	return v.value
}

func (v *NullableCreateExternalConnectionInterface) Set(val *CreateExternalConnectionInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateExternalConnectionInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateExternalConnectionInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateExternalConnectionInterface(val *CreateExternalConnectionInterface) *NullableCreateExternalConnectionInterface {
	return &NullableCreateExternalConnectionInterface{value: val, isSet: true}
}

func (v NullableCreateExternalConnectionInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateExternalConnectionInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


