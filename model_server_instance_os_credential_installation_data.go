/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ServerInstanceOsCredentialInstallationData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerInstanceOsCredentialInstallationData{}

// ServerInstanceOsCredentialInstallationData struct for ServerInstanceOsCredentialInstallationData
type ServerInstanceOsCredentialInstallationData struct {
	// Initial os user of the instance.
	InitialUser *string `json:"initialUser,omitempty"`
	// Initial os password of the instance.
	InitialPasswordEncrypted *string `json:"initialPasswordEncrypted,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServerInstanceOsCredentialInstallationData ServerInstanceOsCredentialInstallationData

// NewServerInstanceOsCredentialInstallationData instantiates a new ServerInstanceOsCredentialInstallationData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerInstanceOsCredentialInstallationData() *ServerInstanceOsCredentialInstallationData {
	this := ServerInstanceOsCredentialInstallationData{}
	return &this
}

// NewServerInstanceOsCredentialInstallationDataWithDefaults instantiates a new ServerInstanceOsCredentialInstallationData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerInstanceOsCredentialInstallationDataWithDefaults() *ServerInstanceOsCredentialInstallationData {
	this := ServerInstanceOsCredentialInstallationData{}
	return &this
}

// GetInitialUser returns the InitialUser field value if set, zero value otherwise.
func (o *ServerInstanceOsCredentialInstallationData) GetInitialUser() string {
	if o == nil || IsNil(o.InitialUser) {
		var ret string
		return ret
	}
	return *o.InitialUser
}

// GetInitialUserOk returns a tuple with the InitialUser field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceOsCredentialInstallationData) GetInitialUserOk() (*string, bool) {
	if o == nil || IsNil(o.InitialUser) {
		return nil, false
	}
	return o.InitialUser, true
}

// HasInitialUser returns a boolean if a field has been set.
func (o *ServerInstanceOsCredentialInstallationData) HasInitialUser() bool {
	if o != nil && !IsNil(o.InitialUser) {
		return true
	}

	return false
}

// SetInitialUser gets a reference to the given string and assigns it to the InitialUser field.
func (o *ServerInstanceOsCredentialInstallationData) SetInitialUser(v string) {
	o.InitialUser = &v
}

// GetInitialPasswordEncrypted returns the InitialPasswordEncrypted field value if set, zero value otherwise.
func (o *ServerInstanceOsCredentialInstallationData) GetInitialPasswordEncrypted() string {
	if o == nil || IsNil(o.InitialPasswordEncrypted) {
		var ret string
		return ret
	}
	return *o.InitialPasswordEncrypted
}

// GetInitialPasswordEncryptedOk returns a tuple with the InitialPasswordEncrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceOsCredentialInstallationData) GetInitialPasswordEncryptedOk() (*string, bool) {
	if o == nil || IsNil(o.InitialPasswordEncrypted) {
		return nil, false
	}
	return o.InitialPasswordEncrypted, true
}

// HasInitialPasswordEncrypted returns a boolean if a field has been set.
func (o *ServerInstanceOsCredentialInstallationData) HasInitialPasswordEncrypted() bool {
	if o != nil && !IsNil(o.InitialPasswordEncrypted) {
		return true
	}

	return false
}

// SetInitialPasswordEncrypted gets a reference to the given string and assigns it to the InitialPasswordEncrypted field.
func (o *ServerInstanceOsCredentialInstallationData) SetInitialPasswordEncrypted(v string) {
	o.InitialPasswordEncrypted = &v
}

func (o ServerInstanceOsCredentialInstallationData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerInstanceOsCredentialInstallationData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InitialUser) {
		toSerialize["initialUser"] = o.InitialUser
	}
	if !IsNil(o.InitialPasswordEncrypted) {
		toSerialize["initialPasswordEncrypted"] = o.InitialPasswordEncrypted
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServerInstanceOsCredentialInstallationData) UnmarshalJSON(data []byte) (err error) {
	varServerInstanceOsCredentialInstallationData := _ServerInstanceOsCredentialInstallationData{}

	err = json.Unmarshal(data, &varServerInstanceOsCredentialInstallationData)

	if err != nil {
		return err
	}

	*o = ServerInstanceOsCredentialInstallationData(varServerInstanceOsCredentialInstallationData)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "initialUser")
		delete(additionalProperties, "initialPasswordEncrypted")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServerInstanceOsCredentialInstallationData struct {
	value *ServerInstanceOsCredentialInstallationData
	isSet bool
}

func (v NullableServerInstanceOsCredentialInstallationData) Get() *ServerInstanceOsCredentialInstallationData {
	return v.value
}

func (v *NullableServerInstanceOsCredentialInstallationData) Set(val *ServerInstanceOsCredentialInstallationData) {
	v.value = val
	v.isSet = true
}

func (v NullableServerInstanceOsCredentialInstallationData) IsSet() bool {
	return v.isSet
}

func (v *NullableServerInstanceOsCredentialInstallationData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerInstanceOsCredentialInstallationData(val *ServerInstanceOsCredentialInstallationData) *NullableServerInstanceOsCredentialInstallationData {
	return &NullableServerInstanceOsCredentialInstallationData{value: val, isSet: true}
}

func (v NullableServerInstanceOsCredentialInstallationData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerInstanceOsCredentialInstallationData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


