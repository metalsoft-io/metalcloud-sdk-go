/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ServerInstanceProfileUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerInstanceProfileUpdate{}

// ServerInstanceProfileUpdate struct for ServerInstanceProfileUpdate
type ServerInstanceProfileUpdate struct {
	// The Server profile label. Will be automatically generated if not provided.
	Label *string `json:"label,omitempty"`
	// Network profiles mapping for each network in this infrastructure. Changes to this configuration will be duplicated on each vm-instance of this group.
	NetworkProfiles []ServerInstanceConfigurationNetworkProfilesInner `json:"networkProfiles,omitempty"`
	NetworkInterfaces *ServerInstanceProfileNetworkInterfaces `json:"networkInterfaces,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServerInstanceProfileUpdate ServerInstanceProfileUpdate

// NewServerInstanceProfileUpdate instantiates a new ServerInstanceProfileUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerInstanceProfileUpdate() *ServerInstanceProfileUpdate {
	this := ServerInstanceProfileUpdate{}
	return &this
}

// NewServerInstanceProfileUpdateWithDefaults instantiates a new ServerInstanceProfileUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerInstanceProfileUpdateWithDefaults() *ServerInstanceProfileUpdate {
	this := ServerInstanceProfileUpdate{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ServerInstanceProfileUpdate) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceProfileUpdate) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ServerInstanceProfileUpdate) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *ServerInstanceProfileUpdate) SetLabel(v string) {
	o.Label = &v
}

// GetNetworkProfiles returns the NetworkProfiles field value if set, zero value otherwise.
func (o *ServerInstanceProfileUpdate) GetNetworkProfiles() []ServerInstanceConfigurationNetworkProfilesInner {
	if o == nil || IsNil(o.NetworkProfiles) {
		var ret []ServerInstanceConfigurationNetworkProfilesInner
		return ret
	}
	return o.NetworkProfiles
}

// GetNetworkProfilesOk returns a tuple with the NetworkProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceProfileUpdate) GetNetworkProfilesOk() ([]ServerInstanceConfigurationNetworkProfilesInner, bool) {
	if o == nil || IsNil(o.NetworkProfiles) {
		return nil, false
	}
	return o.NetworkProfiles, true
}

// HasNetworkProfiles returns a boolean if a field has been set.
func (o *ServerInstanceProfileUpdate) HasNetworkProfiles() bool {
	if o != nil && !IsNil(o.NetworkProfiles) {
		return true
	}

	return false
}

// SetNetworkProfiles gets a reference to the given []ServerInstanceConfigurationNetworkProfilesInner and assigns it to the NetworkProfiles field.
func (o *ServerInstanceProfileUpdate) SetNetworkProfiles(v []ServerInstanceConfigurationNetworkProfilesInner) {
	o.NetworkProfiles = v
}

// GetNetworkInterfaces returns the NetworkInterfaces field value if set, zero value otherwise.
func (o *ServerInstanceProfileUpdate) GetNetworkInterfaces() ServerInstanceProfileNetworkInterfaces {
	if o == nil || IsNil(o.NetworkInterfaces) {
		var ret ServerInstanceProfileNetworkInterfaces
		return ret
	}
	return *o.NetworkInterfaces
}

// GetNetworkInterfacesOk returns a tuple with the NetworkInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceProfileUpdate) GetNetworkInterfacesOk() (*ServerInstanceProfileNetworkInterfaces, bool) {
	if o == nil || IsNil(o.NetworkInterfaces) {
		return nil, false
	}
	return o.NetworkInterfaces, true
}

// HasNetworkInterfaces returns a boolean if a field has been set.
func (o *ServerInstanceProfileUpdate) HasNetworkInterfaces() bool {
	if o != nil && !IsNil(o.NetworkInterfaces) {
		return true
	}

	return false
}

// SetNetworkInterfaces gets a reference to the given ServerInstanceProfileNetworkInterfaces and assigns it to the NetworkInterfaces field.
func (o *ServerInstanceProfileUpdate) SetNetworkInterfaces(v ServerInstanceProfileNetworkInterfaces) {
	o.NetworkInterfaces = &v
}

func (o ServerInstanceProfileUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerInstanceProfileUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.NetworkProfiles) {
		toSerialize["networkProfiles"] = o.NetworkProfiles
	}
	if !IsNil(o.NetworkInterfaces) {
		toSerialize["networkInterfaces"] = o.NetworkInterfaces
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServerInstanceProfileUpdate) UnmarshalJSON(data []byte) (err error) {
	varServerInstanceProfileUpdate := _ServerInstanceProfileUpdate{}

	err = json.Unmarshal(data, &varServerInstanceProfileUpdate)

	if err != nil {
		return err
	}

	*o = ServerInstanceProfileUpdate(varServerInstanceProfileUpdate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "label")
		delete(additionalProperties, "networkProfiles")
		delete(additionalProperties, "networkInterfaces")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServerInstanceProfileUpdate struct {
	value *ServerInstanceProfileUpdate
	isSet bool
}

func (v NullableServerInstanceProfileUpdate) Get() *ServerInstanceProfileUpdate {
	return v.value
}

func (v *NullableServerInstanceProfileUpdate) Set(val *ServerInstanceProfileUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableServerInstanceProfileUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableServerInstanceProfileUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerInstanceProfileUpdate(val *ServerInstanceProfileUpdate) *NullableServerInstanceProfileUpdate {
	return &NullableServerInstanceProfileUpdate{value: val, isSet: true}
}

func (v NullableServerInstanceProfileUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerInstanceProfileUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


