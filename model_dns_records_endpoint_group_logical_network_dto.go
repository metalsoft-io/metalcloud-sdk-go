/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the DnsRecordsEndpointGroupLogicalNetworkDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DnsRecordsEndpointGroupLogicalNetworkDto{}

// DnsRecordsEndpointGroupLogicalNetworkDto struct for DnsRecordsEndpointGroupLogicalNetworkDto
type DnsRecordsEndpointGroupLogicalNetworkDto struct {
	// If true, DNS records (type A and PTR) will be created for each server instance that is part of this server instance group. The DNS record will be created with the default \"hostname\" of <server-instance> suffixed with the server instance ID (e.g., \"server-instance-24\") plus the DNS zone name. If the \"hostname\" property is set on the server instance, it will use that value to construct the DNS record name.
	ProvisionInstanceDnsRecords *bool `json:"provisionInstanceDnsRecords,omitempty"`
	// Flag to indicate if for the server instance group should create a DNS Load Balancing record. If true, a DNS Load Balancing record (type A) will be created that points to all server instances that are part of this server instance group. The DNS Load Balancing record will be created with the default \"hostname\" of <server-instance-group> suffixed with the server instance group ID (e.g., \"server-instance-group-34\") plus the DNS zone name. If the \"hostname\" property is set, it will use that value to construct the DNS Load Balancing record name.
	ProvisionLoadBalancingDnsRecord *bool `json:"provisionLoadBalancingDnsRecord,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _DnsRecordsEndpointGroupLogicalNetworkDto DnsRecordsEndpointGroupLogicalNetworkDto

// NewDnsRecordsEndpointGroupLogicalNetworkDto instantiates a new DnsRecordsEndpointGroupLogicalNetworkDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnsRecordsEndpointGroupLogicalNetworkDto() *DnsRecordsEndpointGroupLogicalNetworkDto {
	this := DnsRecordsEndpointGroupLogicalNetworkDto{}
	var provisionInstanceDnsRecords bool = false
	this.ProvisionInstanceDnsRecords = &provisionInstanceDnsRecords
	var provisionLoadBalancingDnsRecord bool = false
	this.ProvisionLoadBalancingDnsRecord = &provisionLoadBalancingDnsRecord
	return &this
}

// NewDnsRecordsEndpointGroupLogicalNetworkDtoWithDefaults instantiates a new DnsRecordsEndpointGroupLogicalNetworkDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnsRecordsEndpointGroupLogicalNetworkDtoWithDefaults() *DnsRecordsEndpointGroupLogicalNetworkDto {
	this := DnsRecordsEndpointGroupLogicalNetworkDto{}
	var provisionInstanceDnsRecords bool = false
	this.ProvisionInstanceDnsRecords = &provisionInstanceDnsRecords
	var provisionLoadBalancingDnsRecord bool = false
	this.ProvisionLoadBalancingDnsRecord = &provisionLoadBalancingDnsRecord
	return &this
}

// GetProvisionInstanceDnsRecords returns the ProvisionInstanceDnsRecords field value if set, zero value otherwise.
func (o *DnsRecordsEndpointGroupLogicalNetworkDto) GetProvisionInstanceDnsRecords() bool {
	if o == nil || IsNil(o.ProvisionInstanceDnsRecords) {
		var ret bool
		return ret
	}
	return *o.ProvisionInstanceDnsRecords
}

// GetProvisionInstanceDnsRecordsOk returns a tuple with the ProvisionInstanceDnsRecords field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsRecordsEndpointGroupLogicalNetworkDto) GetProvisionInstanceDnsRecordsOk() (*bool, bool) {
	if o == nil || IsNil(o.ProvisionInstanceDnsRecords) {
		return nil, false
	}
	return o.ProvisionInstanceDnsRecords, true
}

// HasProvisionInstanceDnsRecords returns a boolean if a field has been set.
func (o *DnsRecordsEndpointGroupLogicalNetworkDto) HasProvisionInstanceDnsRecords() bool {
	if o != nil && !IsNil(o.ProvisionInstanceDnsRecords) {
		return true
	}

	return false
}

// SetProvisionInstanceDnsRecords gets a reference to the given bool and assigns it to the ProvisionInstanceDnsRecords field.
func (o *DnsRecordsEndpointGroupLogicalNetworkDto) SetProvisionInstanceDnsRecords(v bool) {
	o.ProvisionInstanceDnsRecords = &v
}

// GetProvisionLoadBalancingDnsRecord returns the ProvisionLoadBalancingDnsRecord field value if set, zero value otherwise.
func (o *DnsRecordsEndpointGroupLogicalNetworkDto) GetProvisionLoadBalancingDnsRecord() bool {
	if o == nil || IsNil(o.ProvisionLoadBalancingDnsRecord) {
		var ret bool
		return ret
	}
	return *o.ProvisionLoadBalancingDnsRecord
}

// GetProvisionLoadBalancingDnsRecordOk returns a tuple with the ProvisionLoadBalancingDnsRecord field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DnsRecordsEndpointGroupLogicalNetworkDto) GetProvisionLoadBalancingDnsRecordOk() (*bool, bool) {
	if o == nil || IsNil(o.ProvisionLoadBalancingDnsRecord) {
		return nil, false
	}
	return o.ProvisionLoadBalancingDnsRecord, true
}

// HasProvisionLoadBalancingDnsRecord returns a boolean if a field has been set.
func (o *DnsRecordsEndpointGroupLogicalNetworkDto) HasProvisionLoadBalancingDnsRecord() bool {
	if o != nil && !IsNil(o.ProvisionLoadBalancingDnsRecord) {
		return true
	}

	return false
}

// SetProvisionLoadBalancingDnsRecord gets a reference to the given bool and assigns it to the ProvisionLoadBalancingDnsRecord field.
func (o *DnsRecordsEndpointGroupLogicalNetworkDto) SetProvisionLoadBalancingDnsRecord(v bool) {
	o.ProvisionLoadBalancingDnsRecord = &v
}

func (o DnsRecordsEndpointGroupLogicalNetworkDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DnsRecordsEndpointGroupLogicalNetworkDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ProvisionInstanceDnsRecords) {
		toSerialize["provisionInstanceDnsRecords"] = o.ProvisionInstanceDnsRecords
	}
	if !IsNil(o.ProvisionLoadBalancingDnsRecord) {
		toSerialize["provisionLoadBalancingDnsRecord"] = o.ProvisionLoadBalancingDnsRecord
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *DnsRecordsEndpointGroupLogicalNetworkDto) UnmarshalJSON(data []byte) (err error) {
	varDnsRecordsEndpointGroupLogicalNetworkDto := _DnsRecordsEndpointGroupLogicalNetworkDto{}

	err = json.Unmarshal(data, &varDnsRecordsEndpointGroupLogicalNetworkDto)

	if err != nil {
		return err
	}

	*o = DnsRecordsEndpointGroupLogicalNetworkDto(varDnsRecordsEndpointGroupLogicalNetworkDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "provisionInstanceDnsRecords")
		delete(additionalProperties, "provisionLoadBalancingDnsRecord")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableDnsRecordsEndpointGroupLogicalNetworkDto struct {
	value *DnsRecordsEndpointGroupLogicalNetworkDto
	isSet bool
}

func (v NullableDnsRecordsEndpointGroupLogicalNetworkDto) Get() *DnsRecordsEndpointGroupLogicalNetworkDto {
	return v.value
}

func (v *NullableDnsRecordsEndpointGroupLogicalNetworkDto) Set(val *DnsRecordsEndpointGroupLogicalNetworkDto) {
	v.value = val
	v.isSet = true
}

func (v NullableDnsRecordsEndpointGroupLogicalNetworkDto) IsSet() bool {
	return v.isSet
}

func (v *NullableDnsRecordsEndpointGroupLogicalNetworkDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnsRecordsEndpointGroupLogicalNetworkDto(val *DnsRecordsEndpointGroupLogicalNetworkDto) *NullableDnsRecordsEndpointGroupLogicalNetworkDto {
	return &NullableDnsRecordsEndpointGroupLogicalNetworkDto{value: val, isSet: true}
}

func (v NullableDnsRecordsEndpointGroupLogicalNetworkDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnsRecordsEndpointGroupLogicalNetworkDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


