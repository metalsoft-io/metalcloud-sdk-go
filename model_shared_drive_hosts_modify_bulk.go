/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the SharedDriveHostsModifyBulk type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SharedDriveHostsModifyBulk{}

// SharedDriveHostsModifyBulk struct for SharedDriveHostsModifyBulk
type SharedDriveHostsModifyBulk struct {
	// List of operations to be performed on the File Share Hosts
	SharedDriveHostBulkOperations []SharedDriveHostBulkOperation `json:"sharedDriveHostBulkOperations"`
	AdditionalProperties map[string]interface{}
}

type _SharedDriveHostsModifyBulk SharedDriveHostsModifyBulk

// NewSharedDriveHostsModifyBulk instantiates a new SharedDriveHostsModifyBulk object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharedDriveHostsModifyBulk(sharedDriveHostBulkOperations []SharedDriveHostBulkOperation) *SharedDriveHostsModifyBulk {
	this := SharedDriveHostsModifyBulk{}
	this.SharedDriveHostBulkOperations = sharedDriveHostBulkOperations
	return &this
}

// NewSharedDriveHostsModifyBulkWithDefaults instantiates a new SharedDriveHostsModifyBulk object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharedDriveHostsModifyBulkWithDefaults() *SharedDriveHostsModifyBulk {
	this := SharedDriveHostsModifyBulk{}
	return &this
}

// GetSharedDriveHostBulkOperations returns the SharedDriveHostBulkOperations field value
func (o *SharedDriveHostsModifyBulk) GetSharedDriveHostBulkOperations() []SharedDriveHostBulkOperation {
	if o == nil {
		var ret []SharedDriveHostBulkOperation
		return ret
	}

	return o.SharedDriveHostBulkOperations
}

// GetSharedDriveHostBulkOperationsOk returns a tuple with the SharedDriveHostBulkOperations field value
// and a boolean to check if the value has been set.
func (o *SharedDriveHostsModifyBulk) GetSharedDriveHostBulkOperationsOk() ([]SharedDriveHostBulkOperation, bool) {
	if o == nil {
		return nil, false
	}
	return o.SharedDriveHostBulkOperations, true
}

// SetSharedDriveHostBulkOperations sets field value
func (o *SharedDriveHostsModifyBulk) SetSharedDriveHostBulkOperations(v []SharedDriveHostBulkOperation) {
	o.SharedDriveHostBulkOperations = v
}

func (o SharedDriveHostsModifyBulk) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SharedDriveHostsModifyBulk) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["sharedDriveHostBulkOperations"] = o.SharedDriveHostBulkOperations

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *SharedDriveHostsModifyBulk) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"sharedDriveHostBulkOperations",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSharedDriveHostsModifyBulk := _SharedDriveHostsModifyBulk{}

	err = json.Unmarshal(data, &varSharedDriveHostsModifyBulk)

	if err != nil {
		return err
	}

	*o = SharedDriveHostsModifyBulk(varSharedDriveHostsModifyBulk)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "sharedDriveHostBulkOperations")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableSharedDriveHostsModifyBulk struct {
	value *SharedDriveHostsModifyBulk
	isSet bool
}

func (v NullableSharedDriveHostsModifyBulk) Get() *SharedDriveHostsModifyBulk {
	return v.value
}

func (v *NullableSharedDriveHostsModifyBulk) Set(val *SharedDriveHostsModifyBulk) {
	v.value = val
	v.isSet = true
}

func (v NullableSharedDriveHostsModifyBulk) IsSet() bool {
	return v.isSet
}

func (v *NullableSharedDriveHostsModifyBulk) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharedDriveHostsModifyBulk(val *SharedDriveHostsModifyBulk) *NullableSharedDriveHostsModifyBulk {
	return &NullableSharedDriveHostsModifyBulk{value: val, isSet: true}
}

func (v NullableSharedDriveHostsModifyBulk) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharedDriveHostsModifyBulk) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


