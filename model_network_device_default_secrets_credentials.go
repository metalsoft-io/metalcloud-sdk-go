/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the NetworkDeviceDefaultSecretsCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkDeviceDefaultSecretsCredentials{}

// NetworkDeviceDefaultSecretsCredentials struct for NetworkDeviceDefaultSecretsCredentials
type NetworkDeviceDefaultSecretsCredentials struct {
	// The secret value of the network device
	SecretValue string `json:"secretValue"`
	AdditionalProperties map[string]interface{}
}

type _NetworkDeviceDefaultSecretsCredentials NetworkDeviceDefaultSecretsCredentials

// NewNetworkDeviceDefaultSecretsCredentials instantiates a new NetworkDeviceDefaultSecretsCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkDeviceDefaultSecretsCredentials(secretValue string) *NetworkDeviceDefaultSecretsCredentials {
	this := NetworkDeviceDefaultSecretsCredentials{}
	this.SecretValue = secretValue
	return &this
}

// NewNetworkDeviceDefaultSecretsCredentialsWithDefaults instantiates a new NetworkDeviceDefaultSecretsCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkDeviceDefaultSecretsCredentialsWithDefaults() *NetworkDeviceDefaultSecretsCredentials {
	this := NetworkDeviceDefaultSecretsCredentials{}
	return &this
}

// GetSecretValue returns the SecretValue field value
func (o *NetworkDeviceDefaultSecretsCredentials) GetSecretValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretValue
}

// GetSecretValueOk returns a tuple with the SecretValue field value
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaultSecretsCredentials) GetSecretValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretValue, true
}

// SetSecretValue sets field value
func (o *NetworkDeviceDefaultSecretsCredentials) SetSecretValue(v string) {
	o.SecretValue = v
}

func (o NetworkDeviceDefaultSecretsCredentials) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkDeviceDefaultSecretsCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["secretValue"] = o.SecretValue

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NetworkDeviceDefaultSecretsCredentials) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"secretValue",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkDeviceDefaultSecretsCredentials := _NetworkDeviceDefaultSecretsCredentials{}

	err = json.Unmarshal(data, &varNetworkDeviceDefaultSecretsCredentials)

	if err != nil {
		return err
	}

	*o = NetworkDeviceDefaultSecretsCredentials(varNetworkDeviceDefaultSecretsCredentials)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "secretValue")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNetworkDeviceDefaultSecretsCredentials struct {
	value *NetworkDeviceDefaultSecretsCredentials
	isSet bool
}

func (v NullableNetworkDeviceDefaultSecretsCredentials) Get() *NetworkDeviceDefaultSecretsCredentials {
	return v.value
}

func (v *NullableNetworkDeviceDefaultSecretsCredentials) Set(val *NetworkDeviceDefaultSecretsCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkDeviceDefaultSecretsCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkDeviceDefaultSecretsCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkDeviceDefaultSecretsCredentials(val *NetworkDeviceDefaultSecretsCredentials) *NullableNetworkDeviceDefaultSecretsCredentials {
	return &NullableNetworkDeviceDefaultSecretsCredentials{value: val, isSet: true}
}

func (v NullableNetworkDeviceDefaultSecretsCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkDeviceDefaultSecretsCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


