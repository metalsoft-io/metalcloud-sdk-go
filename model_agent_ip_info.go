/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the AgentIpInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentIpInfo{}

// AgentIpInfo struct for AgentIpInfo
type AgentIpInfo struct {
	// Site controller IP address
	SiteControllerIp string `json:"siteControllerIp"`
	// Site controller syslog server IP address
	SiteControllerSyslogServerIp string `json:"siteControllerSyslogServerIp"`
	// Site controller syslog switch IP address
	SiteControllerSyslogSwitchIp string `json:"siteControllerSyslogSwitchIp"`
	// Site controller repository IP address
	SiteControllerRepoIp string `json:"siteControllerRepoIp"`
	AdditionalProperties map[string]interface{}
}

type _AgentIpInfo AgentIpInfo

// NewAgentIpInfo instantiates a new AgentIpInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentIpInfo(siteControllerIp string, siteControllerSyslogServerIp string, siteControllerSyslogSwitchIp string, siteControllerRepoIp string) *AgentIpInfo {
	this := AgentIpInfo{}
	this.SiteControllerIp = siteControllerIp
	this.SiteControllerSyslogServerIp = siteControllerSyslogServerIp
	this.SiteControllerSyslogSwitchIp = siteControllerSyslogSwitchIp
	this.SiteControllerRepoIp = siteControllerRepoIp
	return &this
}

// NewAgentIpInfoWithDefaults instantiates a new AgentIpInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentIpInfoWithDefaults() *AgentIpInfo {
	this := AgentIpInfo{}
	return &this
}

// GetSiteControllerIp returns the SiteControllerIp field value
func (o *AgentIpInfo) GetSiteControllerIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SiteControllerIp
}

// GetSiteControllerIpOk returns a tuple with the SiteControllerIp field value
// and a boolean to check if the value has been set.
func (o *AgentIpInfo) GetSiteControllerIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteControllerIp, true
}

// SetSiteControllerIp sets field value
func (o *AgentIpInfo) SetSiteControllerIp(v string) {
	o.SiteControllerIp = v
}

// GetSiteControllerSyslogServerIp returns the SiteControllerSyslogServerIp field value
func (o *AgentIpInfo) GetSiteControllerSyslogServerIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SiteControllerSyslogServerIp
}

// GetSiteControllerSyslogServerIpOk returns a tuple with the SiteControllerSyslogServerIp field value
// and a boolean to check if the value has been set.
func (o *AgentIpInfo) GetSiteControllerSyslogServerIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteControllerSyslogServerIp, true
}

// SetSiteControllerSyslogServerIp sets field value
func (o *AgentIpInfo) SetSiteControllerSyslogServerIp(v string) {
	o.SiteControllerSyslogServerIp = v
}

// GetSiteControllerSyslogSwitchIp returns the SiteControllerSyslogSwitchIp field value
func (o *AgentIpInfo) GetSiteControllerSyslogSwitchIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SiteControllerSyslogSwitchIp
}

// GetSiteControllerSyslogSwitchIpOk returns a tuple with the SiteControllerSyslogSwitchIp field value
// and a boolean to check if the value has been set.
func (o *AgentIpInfo) GetSiteControllerSyslogSwitchIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteControllerSyslogSwitchIp, true
}

// SetSiteControllerSyslogSwitchIp sets field value
func (o *AgentIpInfo) SetSiteControllerSyslogSwitchIp(v string) {
	o.SiteControllerSyslogSwitchIp = v
}

// GetSiteControllerRepoIp returns the SiteControllerRepoIp field value
func (o *AgentIpInfo) GetSiteControllerRepoIp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SiteControllerRepoIp
}

// GetSiteControllerRepoIpOk returns a tuple with the SiteControllerRepoIp field value
// and a boolean to check if the value has been set.
func (o *AgentIpInfo) GetSiteControllerRepoIpOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteControllerRepoIp, true
}

// SetSiteControllerRepoIp sets field value
func (o *AgentIpInfo) SetSiteControllerRepoIp(v string) {
	o.SiteControllerRepoIp = v
}

func (o AgentIpInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentIpInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["siteControllerIp"] = o.SiteControllerIp
	toSerialize["siteControllerSyslogServerIp"] = o.SiteControllerSyslogServerIp
	toSerialize["siteControllerSyslogSwitchIp"] = o.SiteControllerSyslogSwitchIp
	toSerialize["siteControllerRepoIp"] = o.SiteControllerRepoIp

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AgentIpInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"siteControllerIp",
		"siteControllerSyslogServerIp",
		"siteControllerSyslogSwitchIp",
		"siteControllerRepoIp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAgentIpInfo := _AgentIpInfo{}

	err = json.Unmarshal(data, &varAgentIpInfo)

	if err != nil {
		return err
	}

	*o = AgentIpInfo(varAgentIpInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "siteControllerIp")
		delete(additionalProperties, "siteControllerSyslogServerIp")
		delete(additionalProperties, "siteControllerSyslogSwitchIp")
		delete(additionalProperties, "siteControllerRepoIp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAgentIpInfo struct {
	value *AgentIpInfo
	isSet bool
}

func (v NullableAgentIpInfo) Get() *AgentIpInfo {
	return v.value
}

func (v *NullableAgentIpInfo) Set(val *AgentIpInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentIpInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentIpInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentIpInfo(val *AgentIpInfo) *NullableAgentIpInfo {
	return &NullableAgentIpInfo{value: val, isSet: true}
}

func (v NullableAgentIpInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentIpInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


