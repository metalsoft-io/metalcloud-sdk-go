/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateNetworkEndpointGroupLogicalNetwork type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkEndpointGroupLogicalNetwork{}

// UpdateNetworkEndpointGroupLogicalNetwork struct for UpdateNetworkEndpointGroupLogicalNetwork
type UpdateNetworkEndpointGroupLogicalNetwork struct {
	// Whether the logical network is tagged.
	Tagged *bool `json:"tagged,omitempty"`
	// The access mode of the network endpoint group
	AccessMode *NetworkEndpointGroupAllowedAccessMode `json:"accessMode,omitempty"`
	// The MTU of the logical network
	Mtu *int32 `json:"mtu,omitempty"`
	// Whether the logical network provides a default route
	ProvidesDefaultRoute *bool `json:"providesDefaultRoute,omitempty"`
	// Disable automatic IP allocation for IPv4 addresses on this network connection
	DisableAutoIpAllocation *bool `json:"disableAutoIpAllocation,omitempty"`
	// The redundancy configuration
	Redundancy NullableRedundancyConfig `json:"redundancy,omitempty"`
	// DNS records configuration for the server instance group.
	Dns NullableDnsRecordsEndpointGroupLogicalNetwork `json:"dns,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateNetworkEndpointGroupLogicalNetwork UpdateNetworkEndpointGroupLogicalNetwork

// NewUpdateNetworkEndpointGroupLogicalNetwork instantiates a new UpdateNetworkEndpointGroupLogicalNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkEndpointGroupLogicalNetwork() *UpdateNetworkEndpointGroupLogicalNetwork {
	this := UpdateNetworkEndpointGroupLogicalNetwork{}
	var providesDefaultRoute bool = false
	this.ProvidesDefaultRoute = &providesDefaultRoute
	var disableAutoIpAllocation bool = false
	this.DisableAutoIpAllocation = &disableAutoIpAllocation
	return &this
}

// NewUpdateNetworkEndpointGroupLogicalNetworkWithDefaults instantiates a new UpdateNetworkEndpointGroupLogicalNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkEndpointGroupLogicalNetworkWithDefaults() *UpdateNetworkEndpointGroupLogicalNetwork {
	this := UpdateNetworkEndpointGroupLogicalNetwork{}
	var providesDefaultRoute bool = false
	this.ProvidesDefaultRoute = &providesDefaultRoute
	var disableAutoIpAllocation bool = false
	this.DisableAutoIpAllocation = &disableAutoIpAllocation
	return &this
}

// GetTagged returns the Tagged field value if set, zero value otherwise.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) GetTagged() bool {
	if o == nil || IsNil(o.Tagged) {
		var ret bool
		return ret
	}
	return *o.Tagged
}

// GetTaggedOk returns a tuple with the Tagged field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) GetTaggedOk() (*bool, bool) {
	if o == nil || IsNil(o.Tagged) {
		return nil, false
	}
	return o.Tagged, true
}

// HasTagged returns a boolean if a field has been set.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) HasTagged() bool {
	if o != nil && !IsNil(o.Tagged) {
		return true
	}

	return false
}

// SetTagged gets a reference to the given bool and assigns it to the Tagged field.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) SetTagged(v bool) {
	o.Tagged = &v
}

// GetAccessMode returns the AccessMode field value if set, zero value otherwise.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) GetAccessMode() NetworkEndpointGroupAllowedAccessMode {
	if o == nil || IsNil(o.AccessMode) {
		var ret NetworkEndpointGroupAllowedAccessMode
		return ret
	}
	return *o.AccessMode
}

// GetAccessModeOk returns a tuple with the AccessMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) GetAccessModeOk() (*NetworkEndpointGroupAllowedAccessMode, bool) {
	if o == nil || IsNil(o.AccessMode) {
		return nil, false
	}
	return o.AccessMode, true
}

// HasAccessMode returns a boolean if a field has been set.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) HasAccessMode() bool {
	if o != nil && !IsNil(o.AccessMode) {
		return true
	}

	return false
}

// SetAccessMode gets a reference to the given NetworkEndpointGroupAllowedAccessMode and assigns it to the AccessMode field.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) SetAccessMode(v NetworkEndpointGroupAllowedAccessMode) {
	o.AccessMode = &v
}

// GetMtu returns the Mtu field value if set, zero value otherwise.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) GetMtu() int32 {
	if o == nil || IsNil(o.Mtu) {
		var ret int32
		return ret
	}
	return *o.Mtu
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) GetMtuOk() (*int32, bool) {
	if o == nil || IsNil(o.Mtu) {
		return nil, false
	}
	return o.Mtu, true
}

// HasMtu returns a boolean if a field has been set.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) HasMtu() bool {
	if o != nil && !IsNil(o.Mtu) {
		return true
	}

	return false
}

// SetMtu gets a reference to the given int32 and assigns it to the Mtu field.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) SetMtu(v int32) {
	o.Mtu = &v
}

// GetProvidesDefaultRoute returns the ProvidesDefaultRoute field value if set, zero value otherwise.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) GetProvidesDefaultRoute() bool {
	if o == nil || IsNil(o.ProvidesDefaultRoute) {
		var ret bool
		return ret
	}
	return *o.ProvidesDefaultRoute
}

// GetProvidesDefaultRouteOk returns a tuple with the ProvidesDefaultRoute field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) GetProvidesDefaultRouteOk() (*bool, bool) {
	if o == nil || IsNil(o.ProvidesDefaultRoute) {
		return nil, false
	}
	return o.ProvidesDefaultRoute, true
}

// HasProvidesDefaultRoute returns a boolean if a field has been set.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) HasProvidesDefaultRoute() bool {
	if o != nil && !IsNil(o.ProvidesDefaultRoute) {
		return true
	}

	return false
}

// SetProvidesDefaultRoute gets a reference to the given bool and assigns it to the ProvidesDefaultRoute field.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) SetProvidesDefaultRoute(v bool) {
	o.ProvidesDefaultRoute = &v
}

// GetDisableAutoIpAllocation returns the DisableAutoIpAllocation field value if set, zero value otherwise.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) GetDisableAutoIpAllocation() bool {
	if o == nil || IsNil(o.DisableAutoIpAllocation) {
		var ret bool
		return ret
	}
	return *o.DisableAutoIpAllocation
}

// GetDisableAutoIpAllocationOk returns a tuple with the DisableAutoIpAllocation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) GetDisableAutoIpAllocationOk() (*bool, bool) {
	if o == nil || IsNil(o.DisableAutoIpAllocation) {
		return nil, false
	}
	return o.DisableAutoIpAllocation, true
}

// HasDisableAutoIpAllocation returns a boolean if a field has been set.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) HasDisableAutoIpAllocation() bool {
	if o != nil && !IsNil(o.DisableAutoIpAllocation) {
		return true
	}

	return false
}

// SetDisableAutoIpAllocation gets a reference to the given bool and assigns it to the DisableAutoIpAllocation field.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) SetDisableAutoIpAllocation(v bool) {
	o.DisableAutoIpAllocation = &v
}

// GetRedundancy returns the Redundancy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateNetworkEndpointGroupLogicalNetwork) GetRedundancy() RedundancyConfig {
	if o == nil || IsNil(o.Redundancy.Get()) {
		var ret RedundancyConfig
		return ret
	}
	return *o.Redundancy.Get()
}

// GetRedundancyOk returns a tuple with the Redundancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateNetworkEndpointGroupLogicalNetwork) GetRedundancyOk() (*RedundancyConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.Redundancy.Get(), o.Redundancy.IsSet()
}

// HasRedundancy returns a boolean if a field has been set.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) HasRedundancy() bool {
	if o != nil && o.Redundancy.IsSet() {
		return true
	}

	return false
}

// SetRedundancy gets a reference to the given NullableRedundancyConfig and assigns it to the Redundancy field.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) SetRedundancy(v RedundancyConfig) {
	o.Redundancy.Set(&v)
}
// SetRedundancyNil sets the value for Redundancy to be an explicit nil
func (o *UpdateNetworkEndpointGroupLogicalNetwork) SetRedundancyNil() {
	o.Redundancy.Set(nil)
}

// UnsetRedundancy ensures that no value is present for Redundancy, not even an explicit nil
func (o *UpdateNetworkEndpointGroupLogicalNetwork) UnsetRedundancy() {
	o.Redundancy.Unset()
}

// GetDns returns the Dns field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdateNetworkEndpointGroupLogicalNetwork) GetDns() DnsRecordsEndpointGroupLogicalNetwork {
	if o == nil || IsNil(o.Dns.Get()) {
		var ret DnsRecordsEndpointGroupLogicalNetwork
		return ret
	}
	return *o.Dns.Get()
}

// GetDnsOk returns a tuple with the Dns field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdateNetworkEndpointGroupLogicalNetwork) GetDnsOk() (*DnsRecordsEndpointGroupLogicalNetwork, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dns.Get(), o.Dns.IsSet()
}

// HasDns returns a boolean if a field has been set.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) HasDns() bool {
	if o != nil && o.Dns.IsSet() {
		return true
	}

	return false
}

// SetDns gets a reference to the given NullableDnsRecordsEndpointGroupLogicalNetwork and assigns it to the Dns field.
func (o *UpdateNetworkEndpointGroupLogicalNetwork) SetDns(v DnsRecordsEndpointGroupLogicalNetwork) {
	o.Dns.Set(&v)
}
// SetDnsNil sets the value for Dns to be an explicit nil
func (o *UpdateNetworkEndpointGroupLogicalNetwork) SetDnsNil() {
	o.Dns.Set(nil)
}

// UnsetDns ensures that no value is present for Dns, not even an explicit nil
func (o *UpdateNetworkEndpointGroupLogicalNetwork) UnsetDns() {
	o.Dns.Unset()
}

func (o UpdateNetworkEndpointGroupLogicalNetwork) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkEndpointGroupLogicalNetwork) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Tagged) {
		toSerialize["tagged"] = o.Tagged
	}
	if !IsNil(o.AccessMode) {
		toSerialize["accessMode"] = o.AccessMode
	}
	if !IsNil(o.Mtu) {
		toSerialize["mtu"] = o.Mtu
	}
	if !IsNil(o.ProvidesDefaultRoute) {
		toSerialize["providesDefaultRoute"] = o.ProvidesDefaultRoute
	}
	if !IsNil(o.DisableAutoIpAllocation) {
		toSerialize["disableAutoIpAllocation"] = o.DisableAutoIpAllocation
	}
	if o.Redundancy.IsSet() {
		toSerialize["redundancy"] = o.Redundancy.Get()
	}
	if o.Dns.IsSet() {
		toSerialize["dns"] = o.Dns.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateNetworkEndpointGroupLogicalNetwork) UnmarshalJSON(data []byte) (err error) {
	varUpdateNetworkEndpointGroupLogicalNetwork := _UpdateNetworkEndpointGroupLogicalNetwork{}

	err = json.Unmarshal(data, &varUpdateNetworkEndpointGroupLogicalNetwork)

	if err != nil {
		return err
	}

	*o = UpdateNetworkEndpointGroupLogicalNetwork(varUpdateNetworkEndpointGroupLogicalNetwork)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "tagged")
		delete(additionalProperties, "accessMode")
		delete(additionalProperties, "mtu")
		delete(additionalProperties, "providesDefaultRoute")
		delete(additionalProperties, "disableAutoIpAllocation")
		delete(additionalProperties, "redundancy")
		delete(additionalProperties, "dns")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateNetworkEndpointGroupLogicalNetwork struct {
	value *UpdateNetworkEndpointGroupLogicalNetwork
	isSet bool
}

func (v NullableUpdateNetworkEndpointGroupLogicalNetwork) Get() *UpdateNetworkEndpointGroupLogicalNetwork {
	return v.value
}

func (v *NullableUpdateNetworkEndpointGroupLogicalNetwork) Set(val *UpdateNetworkEndpointGroupLogicalNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkEndpointGroupLogicalNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkEndpointGroupLogicalNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkEndpointGroupLogicalNetwork(val *UpdateNetworkEndpointGroupLogicalNetwork) *NullableUpdateNetworkEndpointGroupLogicalNetwork {
	return &NullableUpdateNetworkEndpointGroupLogicalNetwork{value: val, isSet: true}
}

func (v NullableUpdateNetworkEndpointGroupLogicalNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkEndpointGroupLogicalNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


