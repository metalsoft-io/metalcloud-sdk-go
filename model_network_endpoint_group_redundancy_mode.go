/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// NetworkEndpointGroupRedundancyMode The redundancy mode
type NetworkEndpointGroupRedundancyMode string

// List of NetworkEndpointGroupRedundancyMode
const (
	NETWORKENDPOINTGROUPREDUNDANCYMODE_ACTIVE_BACKUP NetworkEndpointGroupRedundancyMode = "active-backup"
	NETWORKENDPOINTGROUPREDUNDANCYMODE_ACTIVE_ACTIVE NetworkEndpointGroupRedundancyMode = "active-active"
)

// All allowed values of NetworkEndpointGroupRedundancyMode enum
var AllowedNetworkEndpointGroupRedundancyModeEnumValues = []NetworkEndpointGroupRedundancyMode{
	"active-backup",
	"active-active",
}

func (v *NetworkEndpointGroupRedundancyMode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := NetworkEndpointGroupRedundancyMode(value)
	for _, existing := range AllowedNetworkEndpointGroupRedundancyModeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid NetworkEndpointGroupRedundancyMode", value)
}

// NewNetworkEndpointGroupRedundancyModeFromValue returns a pointer to a valid NetworkEndpointGroupRedundancyMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNetworkEndpointGroupRedundancyModeFromValue(v string) (*NetworkEndpointGroupRedundancyMode, error) {
	ev := NetworkEndpointGroupRedundancyMode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for NetworkEndpointGroupRedundancyMode: valid values are %v", v, AllowedNetworkEndpointGroupRedundancyModeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NetworkEndpointGroupRedundancyMode) IsValid() bool {
	for _, existing := range AllowedNetworkEndpointGroupRedundancyModeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to NetworkEndpointGroupRedundancyMode value
func (v NetworkEndpointGroupRedundancyMode) Ptr() *NetworkEndpointGroupRedundancyMode {
	return &v
}

type NullableNetworkEndpointGroupRedundancyMode struct {
	value *NetworkEndpointGroupRedundancyMode
	isSet bool
}

func (v NullableNetworkEndpointGroupRedundancyMode) Get() *NetworkEndpointGroupRedundancyMode {
	return v.value
}

func (v *NullableNetworkEndpointGroupRedundancyMode) Set(val *NetworkEndpointGroupRedundancyMode) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkEndpointGroupRedundancyMode) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkEndpointGroupRedundancyMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkEndpointGroupRedundancyMode(val *NetworkEndpointGroupRedundancyMode) *NullableNetworkEndpointGroupRedundancyMode {
	return &NullableNetworkEndpointGroupRedundancyMode{value: val, isSet: true}
}

func (v NullableNetworkEndpointGroupRedundancyMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkEndpointGroupRedundancyMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

