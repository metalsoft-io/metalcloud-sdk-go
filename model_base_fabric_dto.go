/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the BaseFabricDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaseFabricDto{}

// BaseFabricDto struct for BaseFabricDto
type BaseFabricDto struct {
	// The type of network fabric
	FabricType string `json:"fabricType"`
	// Unique identifier for the default network profile. Must be a positive integer (minimum: 1) corresponding to an existing profile.
	DefaultNetworkProfileId int32 `json:"defaultNetworkProfileId"`
	// Enables gNMI monitoring for telemetry data collection using the gNMI protocol.
	GnmiMonitoringEnabled *bool `json:"gnmiMonitoringEnabled,omitempty"`
	// Enables syslog monitoring for capturing system logs for diagnostics and troubleshooting.
	SyslogMonitoringEnabled *bool `json:"syslogMonitoringEnabled,omitempty"`
	// Enables zero-touch provisioning for automatic device configuration.
	ZeroTouchEnabled *bool `json:"zeroTouchEnabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _BaseFabricDto BaseFabricDto

// NewBaseFabricDto instantiates a new BaseFabricDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseFabricDto(fabricType string, defaultNetworkProfileId int32) *BaseFabricDto {
	this := BaseFabricDto{}
	this.FabricType = fabricType
	this.DefaultNetworkProfileId = defaultNetworkProfileId
	return &this
}

// NewBaseFabricDtoWithDefaults instantiates a new BaseFabricDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseFabricDtoWithDefaults() *BaseFabricDto {
	this := BaseFabricDto{}
	return &this
}

// GetFabricType returns the FabricType field value
func (o *BaseFabricDto) GetFabricType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FabricType
}

// GetFabricTypeOk returns a tuple with the FabricType field value
// and a boolean to check if the value has been set.
func (o *BaseFabricDto) GetFabricTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FabricType, true
}

// SetFabricType sets field value
func (o *BaseFabricDto) SetFabricType(v string) {
	o.FabricType = v
}

// GetDefaultNetworkProfileId returns the DefaultNetworkProfileId field value
func (o *BaseFabricDto) GetDefaultNetworkProfileId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DefaultNetworkProfileId
}

// GetDefaultNetworkProfileIdOk returns a tuple with the DefaultNetworkProfileId field value
// and a boolean to check if the value has been set.
func (o *BaseFabricDto) GetDefaultNetworkProfileIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultNetworkProfileId, true
}

// SetDefaultNetworkProfileId sets field value
func (o *BaseFabricDto) SetDefaultNetworkProfileId(v int32) {
	o.DefaultNetworkProfileId = v
}

// GetGnmiMonitoringEnabled returns the GnmiMonitoringEnabled field value if set, zero value otherwise.
func (o *BaseFabricDto) GetGnmiMonitoringEnabled() bool {
	if o == nil || IsNil(o.GnmiMonitoringEnabled) {
		var ret bool
		return ret
	}
	return *o.GnmiMonitoringEnabled
}

// GetGnmiMonitoringEnabledOk returns a tuple with the GnmiMonitoringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseFabricDto) GetGnmiMonitoringEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.GnmiMonitoringEnabled) {
		return nil, false
	}
	return o.GnmiMonitoringEnabled, true
}

// HasGnmiMonitoringEnabled returns a boolean if a field has been set.
func (o *BaseFabricDto) HasGnmiMonitoringEnabled() bool {
	if o != nil && !IsNil(o.GnmiMonitoringEnabled) {
		return true
	}

	return false
}

// SetGnmiMonitoringEnabled gets a reference to the given bool and assigns it to the GnmiMonitoringEnabled field.
func (o *BaseFabricDto) SetGnmiMonitoringEnabled(v bool) {
	o.GnmiMonitoringEnabled = &v
}

// GetSyslogMonitoringEnabled returns the SyslogMonitoringEnabled field value if set, zero value otherwise.
func (o *BaseFabricDto) GetSyslogMonitoringEnabled() bool {
	if o == nil || IsNil(o.SyslogMonitoringEnabled) {
		var ret bool
		return ret
	}
	return *o.SyslogMonitoringEnabled
}

// GetSyslogMonitoringEnabledOk returns a tuple with the SyslogMonitoringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseFabricDto) GetSyslogMonitoringEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SyslogMonitoringEnabled) {
		return nil, false
	}
	return o.SyslogMonitoringEnabled, true
}

// HasSyslogMonitoringEnabled returns a boolean if a field has been set.
func (o *BaseFabricDto) HasSyslogMonitoringEnabled() bool {
	if o != nil && !IsNil(o.SyslogMonitoringEnabled) {
		return true
	}

	return false
}

// SetSyslogMonitoringEnabled gets a reference to the given bool and assigns it to the SyslogMonitoringEnabled field.
func (o *BaseFabricDto) SetSyslogMonitoringEnabled(v bool) {
	o.SyslogMonitoringEnabled = &v
}

// GetZeroTouchEnabled returns the ZeroTouchEnabled field value if set, zero value otherwise.
func (o *BaseFabricDto) GetZeroTouchEnabled() bool {
	if o == nil || IsNil(o.ZeroTouchEnabled) {
		var ret bool
		return ret
	}
	return *o.ZeroTouchEnabled
}

// GetZeroTouchEnabledOk returns a tuple with the ZeroTouchEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseFabricDto) GetZeroTouchEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ZeroTouchEnabled) {
		return nil, false
	}
	return o.ZeroTouchEnabled, true
}

// HasZeroTouchEnabled returns a boolean if a field has been set.
func (o *BaseFabricDto) HasZeroTouchEnabled() bool {
	if o != nil && !IsNil(o.ZeroTouchEnabled) {
		return true
	}

	return false
}

// SetZeroTouchEnabled gets a reference to the given bool and assigns it to the ZeroTouchEnabled field.
func (o *BaseFabricDto) SetZeroTouchEnabled(v bool) {
	o.ZeroTouchEnabled = &v
}

func (o BaseFabricDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseFabricDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["fabricType"] = o.FabricType
	toSerialize["defaultNetworkProfileId"] = o.DefaultNetworkProfileId
	if !IsNil(o.GnmiMonitoringEnabled) {
		toSerialize["gnmiMonitoringEnabled"] = o.GnmiMonitoringEnabled
	}
	if !IsNil(o.SyslogMonitoringEnabled) {
		toSerialize["syslogMonitoringEnabled"] = o.SyslogMonitoringEnabled
	}
	if !IsNil(o.ZeroTouchEnabled) {
		toSerialize["zeroTouchEnabled"] = o.ZeroTouchEnabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BaseFabricDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"fabricType",
		"defaultNetworkProfileId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBaseFabricDto := _BaseFabricDto{}

	err = json.Unmarshal(data, &varBaseFabricDto)

	if err != nil {
		return err
	}

	*o = BaseFabricDto(varBaseFabricDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "fabricType")
		delete(additionalProperties, "defaultNetworkProfileId")
		delete(additionalProperties, "gnmiMonitoringEnabled")
		delete(additionalProperties, "syslogMonitoringEnabled")
		delete(additionalProperties, "zeroTouchEnabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBaseFabricDto struct {
	value *BaseFabricDto
	isSet bool
}

func (v NullableBaseFabricDto) Get() *BaseFabricDto {
	return v.value
}

func (v *NullableBaseFabricDto) Set(val *BaseFabricDto) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseFabricDto) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseFabricDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseFabricDto(val *BaseFabricDto) *NullableBaseFabricDto {
	return &NullableBaseFabricDto{value: val, isSet: true}
}

func (v NullableBaseFabricDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseFabricDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


