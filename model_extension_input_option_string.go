/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ExtensionInputOptionString type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensionInputOptionString{}

// ExtensionInputOptionString struct for ExtensionInputOptionString
type ExtensionInputOptionString struct {
	// Validation regex pattern for the input.
	ValidationRegEx *string `json:"validationRegEx,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExtensionInputOptionString ExtensionInputOptionString

// NewExtensionInputOptionString instantiates a new ExtensionInputOptionString object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensionInputOptionString() *ExtensionInputOptionString {
	this := ExtensionInputOptionString{}
	return &this
}

// NewExtensionInputOptionStringWithDefaults instantiates a new ExtensionInputOptionString object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionInputOptionStringWithDefaults() *ExtensionInputOptionString {
	this := ExtensionInputOptionString{}
	return &this
}

// GetValidationRegEx returns the ValidationRegEx field value if set, zero value otherwise.
func (o *ExtensionInputOptionString) GetValidationRegEx() string {
	if o == nil || IsNil(o.ValidationRegEx) {
		var ret string
		return ret
	}
	return *o.ValidationRegEx
}

// GetValidationRegExOk returns a tuple with the ValidationRegEx field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionInputOptionString) GetValidationRegExOk() (*string, bool) {
	if o == nil || IsNil(o.ValidationRegEx) {
		return nil, false
	}
	return o.ValidationRegEx, true
}

// HasValidationRegEx returns a boolean if a field has been set.
func (o *ExtensionInputOptionString) HasValidationRegEx() bool {
	if o != nil && !IsNil(o.ValidationRegEx) {
		return true
	}

	return false
}

// SetValidationRegEx gets a reference to the given string and assigns it to the ValidationRegEx field.
func (o *ExtensionInputOptionString) SetValidationRegEx(v string) {
	o.ValidationRegEx = &v
}

func (o ExtensionInputOptionString) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensionInputOptionString) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ValidationRegEx) {
		toSerialize["validationRegEx"] = o.ValidationRegEx
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExtensionInputOptionString) UnmarshalJSON(data []byte) (err error) {
	varExtensionInputOptionString := _ExtensionInputOptionString{}

	err = json.Unmarshal(data, &varExtensionInputOptionString)

	if err != nil {
		return err
	}

	*o = ExtensionInputOptionString(varExtensionInputOptionString)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "validationRegEx")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExtensionInputOptionString struct {
	value *ExtensionInputOptionString
	isSet bool
}

func (v NullableExtensionInputOptionString) Get() *ExtensionInputOptionString {
	return v.value
}

func (v *NullableExtensionInputOptionString) Set(val *ExtensionInputOptionString) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensionInputOptionString) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensionInputOptionString) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensionInputOptionString(val *ExtensionInputOptionString) *NullableExtensionInputOptionString {
	return &NullableExtensionInputOptionString{value: val, isSet: true}
}

func (v NullableExtensionInputOptionString) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensionInputOptionString) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


