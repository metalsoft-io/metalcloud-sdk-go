/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"gopkg.in/validator.v2"
	"fmt"
)

// AuthenticationRequestDtoProperties - Input options.
type AuthenticationRequestDtoProperties struct {
	AuthenticationRequestPropertiesLdapDto *AuthenticationRequestPropertiesLdapDto
	AuthenticationRequestPropertiesMySqlDto *AuthenticationRequestPropertiesMySqlDto
	AuthenticationRequestPropertiesSamlDto *AuthenticationRequestPropertiesSamlDto
}

// AuthenticationRequestPropertiesLdapDtoAsAuthenticationRequestDtoProperties is a convenience function that returns AuthenticationRequestPropertiesLdapDto wrapped in AuthenticationRequestDtoProperties
func AuthenticationRequestPropertiesLdapDtoAsAuthenticationRequestDtoProperties(v *AuthenticationRequestPropertiesLdapDto) AuthenticationRequestDtoProperties {
	return AuthenticationRequestDtoProperties{
		AuthenticationRequestPropertiesLdapDto: v,
	}
}

// AuthenticationRequestPropertiesMySqlDtoAsAuthenticationRequestDtoProperties is a convenience function that returns AuthenticationRequestPropertiesMySqlDto wrapped in AuthenticationRequestDtoProperties
func AuthenticationRequestPropertiesMySqlDtoAsAuthenticationRequestDtoProperties(v *AuthenticationRequestPropertiesMySqlDto) AuthenticationRequestDtoProperties {
	return AuthenticationRequestDtoProperties{
		AuthenticationRequestPropertiesMySqlDto: v,
	}
}

// AuthenticationRequestPropertiesSamlDtoAsAuthenticationRequestDtoProperties is a convenience function that returns AuthenticationRequestPropertiesSamlDto wrapped in AuthenticationRequestDtoProperties
func AuthenticationRequestPropertiesSamlDtoAsAuthenticationRequestDtoProperties(v *AuthenticationRequestPropertiesSamlDto) AuthenticationRequestDtoProperties {
	return AuthenticationRequestDtoProperties{
		AuthenticationRequestPropertiesSamlDto: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AuthenticationRequestDtoProperties) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into AuthenticationRequestPropertiesLdapDto
	err = newStrictDecoder(data).Decode(&dst.AuthenticationRequestPropertiesLdapDto)
	if err == nil {
		jsonAuthenticationRequestPropertiesLdapDto, _ := json.Marshal(dst.AuthenticationRequestPropertiesLdapDto)
		if string(jsonAuthenticationRequestPropertiesLdapDto) == "{}" { // empty struct
			dst.AuthenticationRequestPropertiesLdapDto = nil
		} else {
			if err = validator.Validate(dst.AuthenticationRequestPropertiesLdapDto); err != nil {
				dst.AuthenticationRequestPropertiesLdapDto = nil
			} else {
				match++
			}
		}
	} else {
		dst.AuthenticationRequestPropertiesLdapDto = nil
	}

	// try to unmarshal data into AuthenticationRequestPropertiesMySqlDto
	err = newStrictDecoder(data).Decode(&dst.AuthenticationRequestPropertiesMySqlDto)
	if err == nil {
		jsonAuthenticationRequestPropertiesMySqlDto, _ := json.Marshal(dst.AuthenticationRequestPropertiesMySqlDto)
		if string(jsonAuthenticationRequestPropertiesMySqlDto) == "{}" { // empty struct
			dst.AuthenticationRequestPropertiesMySqlDto = nil
		} else {
			if err = validator.Validate(dst.AuthenticationRequestPropertiesMySqlDto); err != nil {
				dst.AuthenticationRequestPropertiesMySqlDto = nil
			} else {
				match++
			}
		}
	} else {
		dst.AuthenticationRequestPropertiesMySqlDto = nil
	}

	// try to unmarshal data into AuthenticationRequestPropertiesSamlDto
	err = newStrictDecoder(data).Decode(&dst.AuthenticationRequestPropertiesSamlDto)
	if err == nil {
		jsonAuthenticationRequestPropertiesSamlDto, _ := json.Marshal(dst.AuthenticationRequestPropertiesSamlDto)
		if string(jsonAuthenticationRequestPropertiesSamlDto) == "{}" { // empty struct
			dst.AuthenticationRequestPropertiesSamlDto = nil
		} else {
			if err = validator.Validate(dst.AuthenticationRequestPropertiesSamlDto); err != nil {
				dst.AuthenticationRequestPropertiesSamlDto = nil
			} else {
				match++
			}
		}
	} else {
		dst.AuthenticationRequestPropertiesSamlDto = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.AuthenticationRequestPropertiesLdapDto = nil
		dst.AuthenticationRequestPropertiesMySqlDto = nil
		dst.AuthenticationRequestPropertiesSamlDto = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AuthenticationRequestDtoProperties)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AuthenticationRequestDtoProperties)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AuthenticationRequestDtoProperties) MarshalJSON() ([]byte, error) {
	if src.AuthenticationRequestPropertiesLdapDto != nil {
		return json.Marshal(&src.AuthenticationRequestPropertiesLdapDto)
	}

	if src.AuthenticationRequestPropertiesMySqlDto != nil {
		return json.Marshal(&src.AuthenticationRequestPropertiesMySqlDto)
	}

	if src.AuthenticationRequestPropertiesSamlDto != nil {
		return json.Marshal(&src.AuthenticationRequestPropertiesSamlDto)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AuthenticationRequestDtoProperties) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.AuthenticationRequestPropertiesLdapDto != nil {
		return obj.AuthenticationRequestPropertiesLdapDto
	}

	if obj.AuthenticationRequestPropertiesMySqlDto != nil {
		return obj.AuthenticationRequestPropertiesMySqlDto
	}

	if obj.AuthenticationRequestPropertiesSamlDto != nil {
		return obj.AuthenticationRequestPropertiesSamlDto
	}

	// all schemas are nil
	return nil
}

type NullableAuthenticationRequestDtoProperties struct {
	value *AuthenticationRequestDtoProperties
	isSet bool
}

func (v NullableAuthenticationRequestDtoProperties) Get() *AuthenticationRequestDtoProperties {
	return v.value
}

func (v *NullableAuthenticationRequestDtoProperties) Set(val *AuthenticationRequestDtoProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationRequestDtoProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationRequestDtoProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationRequestDtoProperties(val *AuthenticationRequestDtoProperties) *NullableAuthenticationRequestDtoProperties {
	return &NullableAuthenticationRequestDtoProperties{value: val, isSet: true}
}

func (v NullableAuthenticationRequestDtoProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationRequestDtoProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


