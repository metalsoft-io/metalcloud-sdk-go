/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ExternalConnectionInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExternalConnectionInterface{}

// ExternalConnectionInterface struct for ExternalConnectionInterface
type ExternalConnectionInterface struct {
	// Unique identifier for the external connection interface
	Id float32 `json:"id"`
	// Network device interface id
	NetworkDeviceInterfaceId float32 `json:"networkDeviceInterfaceId"`
	// Network device interface name
	NetworkDeviceInterfaceName string `json:"networkDeviceInterfaceName"`
	// Network device id
	NetworkDeviceId float32 `json:"networkDeviceId"`
	// Revision number of the external connection interface
	Revision string `json:"revision"`
	// The date and time the entity was created
	CreatedAt time.Time `json:"createdAt"`
	// The date and time the entity was last updated
	UpdatedAt time.Time `json:"updatedAt"`
	// Reference links
	Links []Link `json:"links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExternalConnectionInterface ExternalConnectionInterface

// NewExternalConnectionInterface instantiates a new ExternalConnectionInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExternalConnectionInterface(id float32, networkDeviceInterfaceId float32, networkDeviceInterfaceName string, networkDeviceId float32, revision string, createdAt time.Time, updatedAt time.Time) *ExternalConnectionInterface {
	this := ExternalConnectionInterface{}
	this.Id = id
	this.NetworkDeviceInterfaceId = networkDeviceInterfaceId
	this.NetworkDeviceInterfaceName = networkDeviceInterfaceName
	this.NetworkDeviceId = networkDeviceId
	this.Revision = revision
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	return &this
}

// NewExternalConnectionInterfaceWithDefaults instantiates a new ExternalConnectionInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExternalConnectionInterfaceWithDefaults() *ExternalConnectionInterface {
	this := ExternalConnectionInterface{}
	return &this
}

// GetId returns the Id field value
func (o *ExternalConnectionInterface) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ExternalConnectionInterface) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ExternalConnectionInterface) SetId(v float32) {
	o.Id = v
}

// GetNetworkDeviceInterfaceId returns the NetworkDeviceInterfaceId field value
func (o *ExternalConnectionInterface) GetNetworkDeviceInterfaceId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NetworkDeviceInterfaceId
}

// GetNetworkDeviceInterfaceIdOk returns a tuple with the NetworkDeviceInterfaceId field value
// and a boolean to check if the value has been set.
func (o *ExternalConnectionInterface) GetNetworkDeviceInterfaceIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceInterfaceId, true
}

// SetNetworkDeviceInterfaceId sets field value
func (o *ExternalConnectionInterface) SetNetworkDeviceInterfaceId(v float32) {
	o.NetworkDeviceInterfaceId = v
}

// GetNetworkDeviceInterfaceName returns the NetworkDeviceInterfaceName field value
func (o *ExternalConnectionInterface) GetNetworkDeviceInterfaceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkDeviceInterfaceName
}

// GetNetworkDeviceInterfaceNameOk returns a tuple with the NetworkDeviceInterfaceName field value
// and a boolean to check if the value has been set.
func (o *ExternalConnectionInterface) GetNetworkDeviceInterfaceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceInterfaceName, true
}

// SetNetworkDeviceInterfaceName sets field value
func (o *ExternalConnectionInterface) SetNetworkDeviceInterfaceName(v string) {
	o.NetworkDeviceInterfaceName = v
}

// GetNetworkDeviceId returns the NetworkDeviceId field value
func (o *ExternalConnectionInterface) GetNetworkDeviceId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NetworkDeviceId
}

// GetNetworkDeviceIdOk returns a tuple with the NetworkDeviceId field value
// and a boolean to check if the value has been set.
func (o *ExternalConnectionInterface) GetNetworkDeviceIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceId, true
}

// SetNetworkDeviceId sets field value
func (o *ExternalConnectionInterface) SetNetworkDeviceId(v float32) {
	o.NetworkDeviceId = v
}

// GetRevision returns the Revision field value
func (o *ExternalConnectionInterface) GetRevision() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *ExternalConnectionInterface) GetRevisionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *ExternalConnectionInterface) SetRevision(v string) {
	o.Revision = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ExternalConnectionInterface) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ExternalConnectionInterface) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ExternalConnectionInterface) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ExternalConnectionInterface) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ExternalConnectionInterface) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ExternalConnectionInterface) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ExternalConnectionInterface) GetLinks() []Link {
	if o == nil || IsNil(o.Links) {
		var ret []Link
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExternalConnectionInterface) GetLinksOk() ([]Link, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ExternalConnectionInterface) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *ExternalConnectionInterface) SetLinks(v []Link) {
	o.Links = v
}

func (o ExternalConnectionInterface) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExternalConnectionInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["networkDeviceInterfaceId"] = o.NetworkDeviceInterfaceId
	toSerialize["networkDeviceInterfaceName"] = o.NetworkDeviceInterfaceName
	toSerialize["networkDeviceId"] = o.NetworkDeviceId
	toSerialize["revision"] = o.Revision
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExternalConnectionInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"networkDeviceInterfaceId",
		"networkDeviceInterfaceName",
		"networkDeviceId",
		"revision",
		"createdAt",
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExternalConnectionInterface := _ExternalConnectionInterface{}

	err = json.Unmarshal(data, &varExternalConnectionInterface)

	if err != nil {
		return err
	}

	*o = ExternalConnectionInterface(varExternalConnectionInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "networkDeviceInterfaceId")
		delete(additionalProperties, "networkDeviceInterfaceName")
		delete(additionalProperties, "networkDeviceId")
		delete(additionalProperties, "revision")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExternalConnectionInterface struct {
	value *ExternalConnectionInterface
	isSet bool
}

func (v NullableExternalConnectionInterface) Get() *ExternalConnectionInterface {
	return v.value
}

func (v *NullableExternalConnectionInterface) Set(val *ExternalConnectionInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableExternalConnectionInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableExternalConnectionInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExternalConnectionInterface(val *ExternalConnectionInterface) *NullableExternalConnectionInterface {
	return &NullableExternalConnectionInterface{value: val, isSet: true}
}

func (v NullableExternalConnectionInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExternalConnectionInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


