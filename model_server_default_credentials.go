/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the ServerDefaultCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerDefaultCredentials{}

// ServerDefaultCredentials struct for ServerDefaultCredentials
type ServerDefaultCredentials struct {
	// The ID of the server default credentials
	Id float32 `json:"id"`
	// The site ID of the server default credentials
	SiteId float32 `json:"siteId"`
	// The serial number of the server
	ServerSerialNumber string `json:"serverSerialNumber"`
	// The MAC address of the server
	ServerMacAddress string `json:"serverMacAddress"`
	// The default username of the server
	DefaultUsername string `json:"defaultUsername"`
	// The encrypted default password of the server
	DefaultPasswordEncrypted string `json:"defaultPasswordEncrypted"`
	// The default rack name of the server
	DefaultRackName *string `json:"defaultRackName,omitempty"`
	// The default rack position upper unit of the server
	DefaultRackPositionLowerUnit *string `json:"defaultRackPositionLowerUnit,omitempty"`
	// The default rack position upper unit of the server
	DefaultRackPositionUpperUnit *string `json:"defaultRackPositionUpperUnit,omitempty"`
	// The default inventory ID of the server
	DefaultInventoryId *string `json:"defaultInventoryId,omitempty"`
	// The default UUID of the server
	DefaultUuid *string `json:"defaultUuid,omitempty"`
	// Reference links
	Links []Link `json:"links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServerDefaultCredentials ServerDefaultCredentials

// NewServerDefaultCredentials instantiates a new ServerDefaultCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerDefaultCredentials(id float32, siteId float32, serverSerialNumber string, serverMacAddress string, defaultUsername string, defaultPasswordEncrypted string) *ServerDefaultCredentials {
	this := ServerDefaultCredentials{}
	this.Id = id
	this.SiteId = siteId
	this.ServerSerialNumber = serverSerialNumber
	this.ServerMacAddress = serverMacAddress
	this.DefaultUsername = defaultUsername
	this.DefaultPasswordEncrypted = defaultPasswordEncrypted
	return &this
}

// NewServerDefaultCredentialsWithDefaults instantiates a new ServerDefaultCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerDefaultCredentialsWithDefaults() *ServerDefaultCredentials {
	this := ServerDefaultCredentials{}
	return &this
}

// GetId returns the Id field value
func (o *ServerDefaultCredentials) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ServerDefaultCredentials) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ServerDefaultCredentials) SetId(v float32) {
	o.Id = v
}

// GetSiteId returns the SiteId field value
func (o *ServerDefaultCredentials) GetSiteId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value
// and a boolean to check if the value has been set.
func (o *ServerDefaultCredentials) GetSiteIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteId, true
}

// SetSiteId sets field value
func (o *ServerDefaultCredentials) SetSiteId(v float32) {
	o.SiteId = v
}

// GetServerSerialNumber returns the ServerSerialNumber field value
func (o *ServerDefaultCredentials) GetServerSerialNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerSerialNumber
}

// GetServerSerialNumberOk returns a tuple with the ServerSerialNumber field value
// and a boolean to check if the value has been set.
func (o *ServerDefaultCredentials) GetServerSerialNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerSerialNumber, true
}

// SetServerSerialNumber sets field value
func (o *ServerDefaultCredentials) SetServerSerialNumber(v string) {
	o.ServerSerialNumber = v
}

// GetServerMacAddress returns the ServerMacAddress field value
func (o *ServerDefaultCredentials) GetServerMacAddress() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerMacAddress
}

// GetServerMacAddressOk returns a tuple with the ServerMacAddress field value
// and a boolean to check if the value has been set.
func (o *ServerDefaultCredentials) GetServerMacAddressOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerMacAddress, true
}

// SetServerMacAddress sets field value
func (o *ServerDefaultCredentials) SetServerMacAddress(v string) {
	o.ServerMacAddress = v
}

// GetDefaultUsername returns the DefaultUsername field value
func (o *ServerDefaultCredentials) GetDefaultUsername() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultUsername
}

// GetDefaultUsernameOk returns a tuple with the DefaultUsername field value
// and a boolean to check if the value has been set.
func (o *ServerDefaultCredentials) GetDefaultUsernameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultUsername, true
}

// SetDefaultUsername sets field value
func (o *ServerDefaultCredentials) SetDefaultUsername(v string) {
	o.DefaultUsername = v
}

// GetDefaultPasswordEncrypted returns the DefaultPasswordEncrypted field value
func (o *ServerDefaultCredentials) GetDefaultPasswordEncrypted() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultPasswordEncrypted
}

// GetDefaultPasswordEncryptedOk returns a tuple with the DefaultPasswordEncrypted field value
// and a boolean to check if the value has been set.
func (o *ServerDefaultCredentials) GetDefaultPasswordEncryptedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultPasswordEncrypted, true
}

// SetDefaultPasswordEncrypted sets field value
func (o *ServerDefaultCredentials) SetDefaultPasswordEncrypted(v string) {
	o.DefaultPasswordEncrypted = v
}

// GetDefaultRackName returns the DefaultRackName field value if set, zero value otherwise.
func (o *ServerDefaultCredentials) GetDefaultRackName() string {
	if o == nil || IsNil(o.DefaultRackName) {
		var ret string
		return ret
	}
	return *o.DefaultRackName
}

// GetDefaultRackNameOk returns a tuple with the DefaultRackName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerDefaultCredentials) GetDefaultRackNameOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultRackName) {
		return nil, false
	}
	return o.DefaultRackName, true
}

// HasDefaultRackName returns a boolean if a field has been set.
func (o *ServerDefaultCredentials) HasDefaultRackName() bool {
	if o != nil && !IsNil(o.DefaultRackName) {
		return true
	}

	return false
}

// SetDefaultRackName gets a reference to the given string and assigns it to the DefaultRackName field.
func (o *ServerDefaultCredentials) SetDefaultRackName(v string) {
	o.DefaultRackName = &v
}

// GetDefaultRackPositionLowerUnit returns the DefaultRackPositionLowerUnit field value if set, zero value otherwise.
func (o *ServerDefaultCredentials) GetDefaultRackPositionLowerUnit() string {
	if o == nil || IsNil(o.DefaultRackPositionLowerUnit) {
		var ret string
		return ret
	}
	return *o.DefaultRackPositionLowerUnit
}

// GetDefaultRackPositionLowerUnitOk returns a tuple with the DefaultRackPositionLowerUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerDefaultCredentials) GetDefaultRackPositionLowerUnitOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultRackPositionLowerUnit) {
		return nil, false
	}
	return o.DefaultRackPositionLowerUnit, true
}

// HasDefaultRackPositionLowerUnit returns a boolean if a field has been set.
func (o *ServerDefaultCredentials) HasDefaultRackPositionLowerUnit() bool {
	if o != nil && !IsNil(o.DefaultRackPositionLowerUnit) {
		return true
	}

	return false
}

// SetDefaultRackPositionLowerUnit gets a reference to the given string and assigns it to the DefaultRackPositionLowerUnit field.
func (o *ServerDefaultCredentials) SetDefaultRackPositionLowerUnit(v string) {
	o.DefaultRackPositionLowerUnit = &v
}

// GetDefaultRackPositionUpperUnit returns the DefaultRackPositionUpperUnit field value if set, zero value otherwise.
func (o *ServerDefaultCredentials) GetDefaultRackPositionUpperUnit() string {
	if o == nil || IsNil(o.DefaultRackPositionUpperUnit) {
		var ret string
		return ret
	}
	return *o.DefaultRackPositionUpperUnit
}

// GetDefaultRackPositionUpperUnitOk returns a tuple with the DefaultRackPositionUpperUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerDefaultCredentials) GetDefaultRackPositionUpperUnitOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultRackPositionUpperUnit) {
		return nil, false
	}
	return o.DefaultRackPositionUpperUnit, true
}

// HasDefaultRackPositionUpperUnit returns a boolean if a field has been set.
func (o *ServerDefaultCredentials) HasDefaultRackPositionUpperUnit() bool {
	if o != nil && !IsNil(o.DefaultRackPositionUpperUnit) {
		return true
	}

	return false
}

// SetDefaultRackPositionUpperUnit gets a reference to the given string and assigns it to the DefaultRackPositionUpperUnit field.
func (o *ServerDefaultCredentials) SetDefaultRackPositionUpperUnit(v string) {
	o.DefaultRackPositionUpperUnit = &v
}

// GetDefaultInventoryId returns the DefaultInventoryId field value if set, zero value otherwise.
func (o *ServerDefaultCredentials) GetDefaultInventoryId() string {
	if o == nil || IsNil(o.DefaultInventoryId) {
		var ret string
		return ret
	}
	return *o.DefaultInventoryId
}

// GetDefaultInventoryIdOk returns a tuple with the DefaultInventoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerDefaultCredentials) GetDefaultInventoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultInventoryId) {
		return nil, false
	}
	return o.DefaultInventoryId, true
}

// HasDefaultInventoryId returns a boolean if a field has been set.
func (o *ServerDefaultCredentials) HasDefaultInventoryId() bool {
	if o != nil && !IsNil(o.DefaultInventoryId) {
		return true
	}

	return false
}

// SetDefaultInventoryId gets a reference to the given string and assigns it to the DefaultInventoryId field.
func (o *ServerDefaultCredentials) SetDefaultInventoryId(v string) {
	o.DefaultInventoryId = &v
}

// GetDefaultUuid returns the DefaultUuid field value if set, zero value otherwise.
func (o *ServerDefaultCredentials) GetDefaultUuid() string {
	if o == nil || IsNil(o.DefaultUuid) {
		var ret string
		return ret
	}
	return *o.DefaultUuid
}

// GetDefaultUuidOk returns a tuple with the DefaultUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerDefaultCredentials) GetDefaultUuidOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultUuid) {
		return nil, false
	}
	return o.DefaultUuid, true
}

// HasDefaultUuid returns a boolean if a field has been set.
func (o *ServerDefaultCredentials) HasDefaultUuid() bool {
	if o != nil && !IsNil(o.DefaultUuid) {
		return true
	}

	return false
}

// SetDefaultUuid gets a reference to the given string and assigns it to the DefaultUuid field.
func (o *ServerDefaultCredentials) SetDefaultUuid(v string) {
	o.DefaultUuid = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ServerDefaultCredentials) GetLinks() []Link {
	if o == nil || IsNil(o.Links) {
		var ret []Link
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerDefaultCredentials) GetLinksOk() ([]Link, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ServerDefaultCredentials) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *ServerDefaultCredentials) SetLinks(v []Link) {
	o.Links = v
}

func (o ServerDefaultCredentials) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerDefaultCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["siteId"] = o.SiteId
	toSerialize["serverSerialNumber"] = o.ServerSerialNumber
	toSerialize["serverMacAddress"] = o.ServerMacAddress
	toSerialize["defaultUsername"] = o.DefaultUsername
	toSerialize["defaultPasswordEncrypted"] = o.DefaultPasswordEncrypted
	if !IsNil(o.DefaultRackName) {
		toSerialize["defaultRackName"] = o.DefaultRackName
	}
	if !IsNil(o.DefaultRackPositionLowerUnit) {
		toSerialize["defaultRackPositionLowerUnit"] = o.DefaultRackPositionLowerUnit
	}
	if !IsNil(o.DefaultRackPositionUpperUnit) {
		toSerialize["defaultRackPositionUpperUnit"] = o.DefaultRackPositionUpperUnit
	}
	if !IsNil(o.DefaultInventoryId) {
		toSerialize["defaultInventoryId"] = o.DefaultInventoryId
	}
	if !IsNil(o.DefaultUuid) {
		toSerialize["defaultUuid"] = o.DefaultUuid
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServerDefaultCredentials) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"siteId",
		"serverSerialNumber",
		"serverMacAddress",
		"defaultUsername",
		"defaultPasswordEncrypted",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServerDefaultCredentials := _ServerDefaultCredentials{}

	err = json.Unmarshal(data, &varServerDefaultCredentials)

	if err != nil {
		return err
	}

	*o = ServerDefaultCredentials(varServerDefaultCredentials)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "siteId")
		delete(additionalProperties, "serverSerialNumber")
		delete(additionalProperties, "serverMacAddress")
		delete(additionalProperties, "defaultUsername")
		delete(additionalProperties, "defaultPasswordEncrypted")
		delete(additionalProperties, "defaultRackName")
		delete(additionalProperties, "defaultRackPositionLowerUnit")
		delete(additionalProperties, "defaultRackPositionUpperUnit")
		delete(additionalProperties, "defaultInventoryId")
		delete(additionalProperties, "defaultUuid")
		delete(additionalProperties, "links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServerDefaultCredentials struct {
	value *ServerDefaultCredentials
	isSet bool
}

func (v NullableServerDefaultCredentials) Get() *ServerDefaultCredentials {
	return v.value
}

func (v *NullableServerDefaultCredentials) Set(val *ServerDefaultCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableServerDefaultCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableServerDefaultCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerDefaultCredentials(val *ServerDefaultCredentials) *NullableServerDefaultCredentials {
	return &NullableServerDefaultCredentials{value: val, isSet: true}
}

func (v NullableServerDefaultCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerDefaultCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


