/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the InfrastructureResourceUtilizationSummaryResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InfrastructureResourceUtilizationSummaryResponse{}

// InfrastructureResourceUtilizationSummaryResponse struct for InfrastructureResourceUtilizationSummaryResponse
type InfrastructureResourceUtilizationSummaryResponse struct {
	// Start timestamp of the utilization period
	StartTimestamp string `json:"startTimestamp"`
	// End timestamp of the utilization period
	EndTimestamp string `json:"endTimestamp"`
	// Infrastructures information
	Infrastructures map[string]InfrastructureItem `json:"infrastructures"`
	// Resource utilization summary
	ResourceUtilization map[string]UtilizationData `json:"resourceUtilization"`
	// Internet usage data
	Internet NetworkEntry `json:"internet"`
	// Reservation installments information
	ReservationInstallments *ReservationInstallments `json:"reservationInstallments,omitempty"`
	// License installments information
	LicenseInstallments *LicenseInstallments `json:"licenseInstallments,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _InfrastructureResourceUtilizationSummaryResponse InfrastructureResourceUtilizationSummaryResponse

// NewInfrastructureResourceUtilizationSummaryResponse instantiates a new InfrastructureResourceUtilizationSummaryResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfrastructureResourceUtilizationSummaryResponse(startTimestamp string, endTimestamp string, infrastructures map[string]InfrastructureItem, resourceUtilization map[string]UtilizationData, internet NetworkEntry) *InfrastructureResourceUtilizationSummaryResponse {
	this := InfrastructureResourceUtilizationSummaryResponse{}
	this.StartTimestamp = startTimestamp
	this.EndTimestamp = endTimestamp
	this.Infrastructures = infrastructures
	this.ResourceUtilization = resourceUtilization
	this.Internet = internet
	return &this
}

// NewInfrastructureResourceUtilizationSummaryResponseWithDefaults instantiates a new InfrastructureResourceUtilizationSummaryResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfrastructureResourceUtilizationSummaryResponseWithDefaults() *InfrastructureResourceUtilizationSummaryResponse {
	this := InfrastructureResourceUtilizationSummaryResponse{}
	return &this
}

// GetStartTimestamp returns the StartTimestamp field value
func (o *InfrastructureResourceUtilizationSummaryResponse) GetStartTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartTimestamp
}

// GetStartTimestampOk returns a tuple with the StartTimestamp field value
// and a boolean to check if the value has been set.
func (o *InfrastructureResourceUtilizationSummaryResponse) GetStartTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTimestamp, true
}

// SetStartTimestamp sets field value
func (o *InfrastructureResourceUtilizationSummaryResponse) SetStartTimestamp(v string) {
	o.StartTimestamp = v
}

// GetEndTimestamp returns the EndTimestamp field value
func (o *InfrastructureResourceUtilizationSummaryResponse) GetEndTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndTimestamp
}

// GetEndTimestampOk returns a tuple with the EndTimestamp field value
// and a boolean to check if the value has been set.
func (o *InfrastructureResourceUtilizationSummaryResponse) GetEndTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTimestamp, true
}

// SetEndTimestamp sets field value
func (o *InfrastructureResourceUtilizationSummaryResponse) SetEndTimestamp(v string) {
	o.EndTimestamp = v
}

// GetInfrastructures returns the Infrastructures field value
func (o *InfrastructureResourceUtilizationSummaryResponse) GetInfrastructures() map[string]InfrastructureItem {
	if o == nil {
		var ret map[string]InfrastructureItem
		return ret
	}

	return o.Infrastructures
}

// GetInfrastructuresOk returns a tuple with the Infrastructures field value
// and a boolean to check if the value has been set.
func (o *InfrastructureResourceUtilizationSummaryResponse) GetInfrastructuresOk() (*map[string]InfrastructureItem, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Infrastructures, true
}

// SetInfrastructures sets field value
func (o *InfrastructureResourceUtilizationSummaryResponse) SetInfrastructures(v map[string]InfrastructureItem) {
	o.Infrastructures = v
}

// GetResourceUtilization returns the ResourceUtilization field value
func (o *InfrastructureResourceUtilizationSummaryResponse) GetResourceUtilization() map[string]UtilizationData {
	if o == nil {
		var ret map[string]UtilizationData
		return ret
	}

	return o.ResourceUtilization
}

// GetResourceUtilizationOk returns a tuple with the ResourceUtilization field value
// and a boolean to check if the value has been set.
func (o *InfrastructureResourceUtilizationSummaryResponse) GetResourceUtilizationOk() (*map[string]UtilizationData, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ResourceUtilization, true
}

// SetResourceUtilization sets field value
func (o *InfrastructureResourceUtilizationSummaryResponse) SetResourceUtilization(v map[string]UtilizationData) {
	o.ResourceUtilization = v
}

// GetInternet returns the Internet field value
func (o *InfrastructureResourceUtilizationSummaryResponse) GetInternet() NetworkEntry {
	if o == nil {
		var ret NetworkEntry
		return ret
	}

	return o.Internet
}

// GetInternetOk returns a tuple with the Internet field value
// and a boolean to check if the value has been set.
func (o *InfrastructureResourceUtilizationSummaryResponse) GetInternetOk() (*NetworkEntry, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Internet, true
}

// SetInternet sets field value
func (o *InfrastructureResourceUtilizationSummaryResponse) SetInternet(v NetworkEntry) {
	o.Internet = v
}

// GetReservationInstallments returns the ReservationInstallments field value if set, zero value otherwise.
func (o *InfrastructureResourceUtilizationSummaryResponse) GetReservationInstallments() ReservationInstallments {
	if o == nil || IsNil(o.ReservationInstallments) {
		var ret ReservationInstallments
		return ret
	}
	return *o.ReservationInstallments
}

// GetReservationInstallmentsOk returns a tuple with the ReservationInstallments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfrastructureResourceUtilizationSummaryResponse) GetReservationInstallmentsOk() (*ReservationInstallments, bool) {
	if o == nil || IsNil(o.ReservationInstallments) {
		return nil, false
	}
	return o.ReservationInstallments, true
}

// HasReservationInstallments returns a boolean if a field has been set.
func (o *InfrastructureResourceUtilizationSummaryResponse) HasReservationInstallments() bool {
	if o != nil && !IsNil(o.ReservationInstallments) {
		return true
	}

	return false
}

// SetReservationInstallments gets a reference to the given ReservationInstallments and assigns it to the ReservationInstallments field.
func (o *InfrastructureResourceUtilizationSummaryResponse) SetReservationInstallments(v ReservationInstallments) {
	o.ReservationInstallments = &v
}

// GetLicenseInstallments returns the LicenseInstallments field value if set, zero value otherwise.
func (o *InfrastructureResourceUtilizationSummaryResponse) GetLicenseInstallments() LicenseInstallments {
	if o == nil || IsNil(o.LicenseInstallments) {
		var ret LicenseInstallments
		return ret
	}
	return *o.LicenseInstallments
}

// GetLicenseInstallmentsOk returns a tuple with the LicenseInstallments field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InfrastructureResourceUtilizationSummaryResponse) GetLicenseInstallmentsOk() (*LicenseInstallments, bool) {
	if o == nil || IsNil(o.LicenseInstallments) {
		return nil, false
	}
	return o.LicenseInstallments, true
}

// HasLicenseInstallments returns a boolean if a field has been set.
func (o *InfrastructureResourceUtilizationSummaryResponse) HasLicenseInstallments() bool {
	if o != nil && !IsNil(o.LicenseInstallments) {
		return true
	}

	return false
}

// SetLicenseInstallments gets a reference to the given LicenseInstallments and assigns it to the LicenseInstallments field.
func (o *InfrastructureResourceUtilizationSummaryResponse) SetLicenseInstallments(v LicenseInstallments) {
	o.LicenseInstallments = &v
}

func (o InfrastructureResourceUtilizationSummaryResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InfrastructureResourceUtilizationSummaryResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["startTimestamp"] = o.StartTimestamp
	toSerialize["endTimestamp"] = o.EndTimestamp
	toSerialize["infrastructures"] = o.Infrastructures
	toSerialize["resourceUtilization"] = o.ResourceUtilization
	toSerialize["internet"] = o.Internet
	if !IsNil(o.ReservationInstallments) {
		toSerialize["reservationInstallments"] = o.ReservationInstallments
	}
	if !IsNil(o.LicenseInstallments) {
		toSerialize["licenseInstallments"] = o.LicenseInstallments
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InfrastructureResourceUtilizationSummaryResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"startTimestamp",
		"endTimestamp",
		"infrastructures",
		"resourceUtilization",
		"internet",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInfrastructureResourceUtilizationSummaryResponse := _InfrastructureResourceUtilizationSummaryResponse{}

	err = json.Unmarshal(data, &varInfrastructureResourceUtilizationSummaryResponse)

	if err != nil {
		return err
	}

	*o = InfrastructureResourceUtilizationSummaryResponse(varInfrastructureResourceUtilizationSummaryResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "startTimestamp")
		delete(additionalProperties, "endTimestamp")
		delete(additionalProperties, "infrastructures")
		delete(additionalProperties, "resourceUtilization")
		delete(additionalProperties, "internet")
		delete(additionalProperties, "reservationInstallments")
		delete(additionalProperties, "licenseInstallments")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInfrastructureResourceUtilizationSummaryResponse struct {
	value *InfrastructureResourceUtilizationSummaryResponse
	isSet bool
}

func (v NullableInfrastructureResourceUtilizationSummaryResponse) Get() *InfrastructureResourceUtilizationSummaryResponse {
	return v.value
}

func (v *NullableInfrastructureResourceUtilizationSummaryResponse) Set(val *InfrastructureResourceUtilizationSummaryResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableInfrastructureResourceUtilizationSummaryResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableInfrastructureResourceUtilizationSummaryResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfrastructureResourceUtilizationSummaryResponse(val *InfrastructureResourceUtilizationSummaryResponse) *NullableInfrastructureResourceUtilizationSummaryResponse {
	return &NullableInfrastructureResourceUtilizationSummaryResponse{value: val, isSet: true}
}

func (v NullableInfrastructureResourceUtilizationSummaryResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfrastructureResourceUtilizationSummaryResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


