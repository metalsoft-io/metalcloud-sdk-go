/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the AuthenticationUserProvider type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationUserProvider{}

// AuthenticationUserProvider struct for AuthenticationUserProvider
type AuthenticationUserProvider struct {
	// The provider name
	Provider string `json:"provider"`
	// The SSO entry point URL for SAML authentication
	SsoEntryPoint *string `json:"ssoEntryPoint,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AuthenticationUserProvider AuthenticationUserProvider

// NewAuthenticationUserProvider instantiates a new AuthenticationUserProvider object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationUserProvider(provider string) *AuthenticationUserProvider {
	this := AuthenticationUserProvider{}
	this.Provider = provider
	return &this
}

// NewAuthenticationUserProviderWithDefaults instantiates a new AuthenticationUserProvider object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationUserProviderWithDefaults() *AuthenticationUserProvider {
	this := AuthenticationUserProvider{}
	return &this
}

// GetProvider returns the Provider field value
func (o *AuthenticationUserProvider) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *AuthenticationUserProvider) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *AuthenticationUserProvider) SetProvider(v string) {
	o.Provider = v
}

// GetSsoEntryPoint returns the SsoEntryPoint field value if set, zero value otherwise.
func (o *AuthenticationUserProvider) GetSsoEntryPoint() string {
	if o == nil || IsNil(o.SsoEntryPoint) {
		var ret string
		return ret
	}
	return *o.SsoEntryPoint
}

// GetSsoEntryPointOk returns a tuple with the SsoEntryPoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationUserProvider) GetSsoEntryPointOk() (*string, bool) {
	if o == nil || IsNil(o.SsoEntryPoint) {
		return nil, false
	}
	return o.SsoEntryPoint, true
}

// HasSsoEntryPoint returns a boolean if a field has been set.
func (o *AuthenticationUserProvider) HasSsoEntryPoint() bool {
	if o != nil && !IsNil(o.SsoEntryPoint) {
		return true
	}

	return false
}

// SetSsoEntryPoint gets a reference to the given string and assigns it to the SsoEntryPoint field.
func (o *AuthenticationUserProvider) SetSsoEntryPoint(v string) {
	o.SsoEntryPoint = &v
}

func (o AuthenticationUserProvider) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationUserProvider) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["provider"] = o.Provider
	if !IsNil(o.SsoEntryPoint) {
		toSerialize["ssoEntryPoint"] = o.SsoEntryPoint
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AuthenticationUserProvider) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"provider",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuthenticationUserProvider := _AuthenticationUserProvider{}

	err = json.Unmarshal(data, &varAuthenticationUserProvider)

	if err != nil {
		return err
	}

	*o = AuthenticationUserProvider(varAuthenticationUserProvider)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "provider")
		delete(additionalProperties, "ssoEntryPoint")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAuthenticationUserProvider struct {
	value *AuthenticationUserProvider
	isSet bool
}

func (v NullableAuthenticationUserProvider) Get() *AuthenticationUserProvider {
	return v.value
}

func (v *NullableAuthenticationUserProvider) Set(val *AuthenticationUserProvider) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationUserProvider) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationUserProvider) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationUserProvider(val *AuthenticationUserProvider) *NullableAuthenticationUserProvider {
	return &NullableAuthenticationUserProvider{value: val, isSet: true}
}

func (v NullableAuthenticationUserProvider) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationUserProvider) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


