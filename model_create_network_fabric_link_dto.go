/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateNetworkFabricLinkDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkFabricLinkDto{}

// CreateNetworkFabricLinkDto struct for CreateNetworkFabricLinkDto
type CreateNetworkFabricLinkDto struct {
	// Unique identifier for the network device A interface
	NetworkDeviceAInterfaceId float32 `json:"networkDeviceAInterfaceId"`
	// Unique identifier for the network device B interface
	NetworkDeviceBInterfaceId float32 `json:"networkDeviceBInterfaceId"`
	// Type of the network fabric link
	LinkType string `json:"linkType"`
	// Is the link part of an MLAG pair
	MlagPair float32 `json:"mlagPair"`
	// BGP numbering type for the link
	BgpNumbering string `json:"bgpNumbering"`
	// BGP link configuration type
	BgpLinkConfiguration string `json:"bgpLinkConfiguration"`
	// Custom variables for the network fabric link
	CustomVariables map[string]interface{} `json:"customVariables,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateNetworkFabricLinkDto CreateNetworkFabricLinkDto

// NewCreateNetworkFabricLinkDto instantiates a new CreateNetworkFabricLinkDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkFabricLinkDto(networkDeviceAInterfaceId float32, networkDeviceBInterfaceId float32, linkType string, mlagPair float32, bgpNumbering string, bgpLinkConfiguration string) *CreateNetworkFabricLinkDto {
	this := CreateNetworkFabricLinkDto{}
	this.NetworkDeviceAInterfaceId = networkDeviceAInterfaceId
	this.NetworkDeviceBInterfaceId = networkDeviceBInterfaceId
	this.LinkType = linkType
	this.MlagPair = mlagPair
	this.BgpNumbering = bgpNumbering
	this.BgpLinkConfiguration = bgpLinkConfiguration
	return &this
}

// NewCreateNetworkFabricLinkDtoWithDefaults instantiates a new CreateNetworkFabricLinkDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkFabricLinkDtoWithDefaults() *CreateNetworkFabricLinkDto {
	this := CreateNetworkFabricLinkDto{}
	return &this
}

// GetNetworkDeviceAInterfaceId returns the NetworkDeviceAInterfaceId field value
func (o *CreateNetworkFabricLinkDto) GetNetworkDeviceAInterfaceId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NetworkDeviceAInterfaceId
}

// GetNetworkDeviceAInterfaceIdOk returns a tuple with the NetworkDeviceAInterfaceId field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkFabricLinkDto) GetNetworkDeviceAInterfaceIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceAInterfaceId, true
}

// SetNetworkDeviceAInterfaceId sets field value
func (o *CreateNetworkFabricLinkDto) SetNetworkDeviceAInterfaceId(v float32) {
	o.NetworkDeviceAInterfaceId = v
}

// GetNetworkDeviceBInterfaceId returns the NetworkDeviceBInterfaceId field value
func (o *CreateNetworkFabricLinkDto) GetNetworkDeviceBInterfaceId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NetworkDeviceBInterfaceId
}

// GetNetworkDeviceBInterfaceIdOk returns a tuple with the NetworkDeviceBInterfaceId field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkFabricLinkDto) GetNetworkDeviceBInterfaceIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceBInterfaceId, true
}

// SetNetworkDeviceBInterfaceId sets field value
func (o *CreateNetworkFabricLinkDto) SetNetworkDeviceBInterfaceId(v float32) {
	o.NetworkDeviceBInterfaceId = v
}

// GetLinkType returns the LinkType field value
func (o *CreateNetworkFabricLinkDto) GetLinkType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LinkType
}

// GetLinkTypeOk returns a tuple with the LinkType field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkFabricLinkDto) GetLinkTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LinkType, true
}

// SetLinkType sets field value
func (o *CreateNetworkFabricLinkDto) SetLinkType(v string) {
	o.LinkType = v
}

// GetMlagPair returns the MlagPair field value
func (o *CreateNetworkFabricLinkDto) GetMlagPair() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MlagPair
}

// GetMlagPairOk returns a tuple with the MlagPair field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkFabricLinkDto) GetMlagPairOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MlagPair, true
}

// SetMlagPair sets field value
func (o *CreateNetworkFabricLinkDto) SetMlagPair(v float32) {
	o.MlagPair = v
}

// GetBgpNumbering returns the BgpNumbering field value
func (o *CreateNetworkFabricLinkDto) GetBgpNumbering() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BgpNumbering
}

// GetBgpNumberingOk returns a tuple with the BgpNumbering field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkFabricLinkDto) GetBgpNumberingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BgpNumbering, true
}

// SetBgpNumbering sets field value
func (o *CreateNetworkFabricLinkDto) SetBgpNumbering(v string) {
	o.BgpNumbering = v
}

// GetBgpLinkConfiguration returns the BgpLinkConfiguration field value
func (o *CreateNetworkFabricLinkDto) GetBgpLinkConfiguration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BgpLinkConfiguration
}

// GetBgpLinkConfigurationOk returns a tuple with the BgpLinkConfiguration field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkFabricLinkDto) GetBgpLinkConfigurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BgpLinkConfiguration, true
}

// SetBgpLinkConfiguration sets field value
func (o *CreateNetworkFabricLinkDto) SetBgpLinkConfiguration(v string) {
	o.BgpLinkConfiguration = v
}

// GetCustomVariables returns the CustomVariables field value if set, zero value otherwise.
func (o *CreateNetworkFabricLinkDto) GetCustomVariables() map[string]interface{} {
	if o == nil || IsNil(o.CustomVariables) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomVariables
}

// GetCustomVariablesOk returns a tuple with the CustomVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateNetworkFabricLinkDto) GetCustomVariablesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomVariables) {
		return map[string]interface{}{}, false
	}
	return o.CustomVariables, true
}

// HasCustomVariables returns a boolean if a field has been set.
func (o *CreateNetworkFabricLinkDto) HasCustomVariables() bool {
	if o != nil && !IsNil(o.CustomVariables) {
		return true
	}

	return false
}

// SetCustomVariables gets a reference to the given map[string]interface{} and assigns it to the CustomVariables field.
func (o *CreateNetworkFabricLinkDto) SetCustomVariables(v map[string]interface{}) {
	o.CustomVariables = v
}

func (o CreateNetworkFabricLinkDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNetworkFabricLinkDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["networkDeviceAInterfaceId"] = o.NetworkDeviceAInterfaceId
	toSerialize["networkDeviceBInterfaceId"] = o.NetworkDeviceBInterfaceId
	toSerialize["linkType"] = o.LinkType
	toSerialize["mlagPair"] = o.MlagPair
	toSerialize["bgpNumbering"] = o.BgpNumbering
	toSerialize["bgpLinkConfiguration"] = o.BgpLinkConfiguration
	if !IsNil(o.CustomVariables) {
		toSerialize["customVariables"] = o.CustomVariables
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateNetworkFabricLinkDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"networkDeviceAInterfaceId",
		"networkDeviceBInterfaceId",
		"linkType",
		"mlagPair",
		"bgpNumbering",
		"bgpLinkConfiguration",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateNetworkFabricLinkDto := _CreateNetworkFabricLinkDto{}

	err = json.Unmarshal(data, &varCreateNetworkFabricLinkDto)

	if err != nil {
		return err
	}

	*o = CreateNetworkFabricLinkDto(varCreateNetworkFabricLinkDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "networkDeviceAInterfaceId")
		delete(additionalProperties, "networkDeviceBInterfaceId")
		delete(additionalProperties, "linkType")
		delete(additionalProperties, "mlagPair")
		delete(additionalProperties, "bgpNumbering")
		delete(additionalProperties, "bgpLinkConfiguration")
		delete(additionalProperties, "customVariables")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateNetworkFabricLinkDto struct {
	value *CreateNetworkFabricLinkDto
	isSet bool
}

func (v NullableCreateNetworkFabricLinkDto) Get() *CreateNetworkFabricLinkDto {
	return v.value
}

func (v *NullableCreateNetworkFabricLinkDto) Set(val *CreateNetworkFabricLinkDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkFabricLinkDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkFabricLinkDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkFabricLinkDto(val *CreateNetworkFabricLinkDto) *NullableCreateNetworkFabricLinkDto {
	return &NullableCreateNetworkFabricLinkDto{value: val, isSet: true}
}

func (v NullableCreateNetworkFabricLinkDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkFabricLinkDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


