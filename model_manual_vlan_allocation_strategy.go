/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the ManualVlanAllocationStrategy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ManualVlanAllocationStrategy{}

// ManualVlanAllocationStrategy struct for ManualVlanAllocationStrategy
type ManualVlanAllocationStrategy struct {
	Id int32 `json:"id"`
	CreatedAt time.Time `json:"createdAt"`
	UpdatedAt time.Time `json:"updatedAt"`
	Kind AllocationStrategyKind `json:"kind"`
	Scope ResourceScope `json:"scope"`
	GranularityLevel NullableVlanAllocationGranularityLevel `json:"granularityLevel"`
	VlanId int32 `json:"vlanId"`
	AdditionalProperties map[string]interface{}
}

type _ManualVlanAllocationStrategy ManualVlanAllocationStrategy

// NewManualVlanAllocationStrategy instantiates a new ManualVlanAllocationStrategy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewManualVlanAllocationStrategy(id int32, createdAt time.Time, updatedAt time.Time, kind AllocationStrategyKind, scope ResourceScope, granularityLevel NullableVlanAllocationGranularityLevel, vlanId int32) *ManualVlanAllocationStrategy {
	this := ManualVlanAllocationStrategy{}
	this.Id = id
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Kind = kind
	this.Scope = scope
	this.GranularityLevel = granularityLevel
	this.VlanId = vlanId
	return &this
}

// NewManualVlanAllocationStrategyWithDefaults instantiates a new ManualVlanAllocationStrategy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewManualVlanAllocationStrategyWithDefaults() *ManualVlanAllocationStrategy {
	this := ManualVlanAllocationStrategy{}
	return &this
}

// GetId returns the Id field value
func (o *ManualVlanAllocationStrategy) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ManualVlanAllocationStrategy) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ManualVlanAllocationStrategy) SetId(v int32) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *ManualVlanAllocationStrategy) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *ManualVlanAllocationStrategy) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *ManualVlanAllocationStrategy) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *ManualVlanAllocationStrategy) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *ManualVlanAllocationStrategy) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *ManualVlanAllocationStrategy) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetKind returns the Kind field value
func (o *ManualVlanAllocationStrategy) GetKind() AllocationStrategyKind {
	if o == nil {
		var ret AllocationStrategyKind
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *ManualVlanAllocationStrategy) GetKindOk() (*AllocationStrategyKind, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *ManualVlanAllocationStrategy) SetKind(v AllocationStrategyKind) {
	o.Kind = v
}

// GetScope returns the Scope field value
func (o *ManualVlanAllocationStrategy) GetScope() ResourceScope {
	if o == nil {
		var ret ResourceScope
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *ManualVlanAllocationStrategy) GetScopeOk() (*ResourceScope, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *ManualVlanAllocationStrategy) SetScope(v ResourceScope) {
	o.Scope = v
}

// GetGranularityLevel returns the GranularityLevel field value
// If the value is explicit nil, the zero value for VlanAllocationGranularityLevel will be returned
func (o *ManualVlanAllocationStrategy) GetGranularityLevel() VlanAllocationGranularityLevel {
	if o == nil || o.GranularityLevel.Get() == nil {
		var ret VlanAllocationGranularityLevel
		return ret
	}

	return *o.GranularityLevel.Get()
}

// GetGranularityLevelOk returns a tuple with the GranularityLevel field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ManualVlanAllocationStrategy) GetGranularityLevelOk() (*VlanAllocationGranularityLevel, bool) {
	if o == nil {
		return nil, false
	}
	return o.GranularityLevel.Get(), o.GranularityLevel.IsSet()
}

// SetGranularityLevel sets field value
func (o *ManualVlanAllocationStrategy) SetGranularityLevel(v VlanAllocationGranularityLevel) {
	o.GranularityLevel.Set(&v)
}

// GetVlanId returns the VlanId field value
func (o *ManualVlanAllocationStrategy) GetVlanId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.VlanId
}

// GetVlanIdOk returns a tuple with the VlanId field value
// and a boolean to check if the value has been set.
func (o *ManualVlanAllocationStrategy) GetVlanIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VlanId, true
}

// SetVlanId sets field value
func (o *ManualVlanAllocationStrategy) SetVlanId(v int32) {
	o.VlanId = v
}

func (o ManualVlanAllocationStrategy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ManualVlanAllocationStrategy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["kind"] = o.Kind
	toSerialize["scope"] = o.Scope
	toSerialize["granularityLevel"] = o.GranularityLevel.Get()
	toSerialize["vlanId"] = o.VlanId

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ManualVlanAllocationStrategy) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"createdAt",
		"updatedAt",
		"kind",
		"scope",
		"granularityLevel",
		"vlanId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varManualVlanAllocationStrategy := _ManualVlanAllocationStrategy{}

	err = json.Unmarshal(data, &varManualVlanAllocationStrategy)

	if err != nil {
		return err
	}

	*o = ManualVlanAllocationStrategy(varManualVlanAllocationStrategy)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "kind")
		delete(additionalProperties, "scope")
		delete(additionalProperties, "granularityLevel")
		delete(additionalProperties, "vlanId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableManualVlanAllocationStrategy struct {
	value *ManualVlanAllocationStrategy
	isSet bool
}

func (v NullableManualVlanAllocationStrategy) Get() *ManualVlanAllocationStrategy {
	return v.value
}

func (v *NullableManualVlanAllocationStrategy) Set(val *ManualVlanAllocationStrategy) {
	v.value = val
	v.isSet = true
}

func (v NullableManualVlanAllocationStrategy) IsSet() bool {
	return v.isSet
}

func (v *NullableManualVlanAllocationStrategy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableManualVlanAllocationStrategy(val *ManualVlanAllocationStrategy) *NullableManualVlanAllocationStrategy {
	return &NullableManualVlanAllocationStrategy{value: val, isSet: true}
}

func (v NullableManualVlanAllocationStrategy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableManualVlanAllocationStrategy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


