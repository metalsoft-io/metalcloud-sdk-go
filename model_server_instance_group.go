/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the ServerInstanceGroup type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerInstanceGroup{}

// ServerInstanceGroup struct for ServerInstanceGroup
type ServerInstanceGroup struct {
	// The server instance group ID.
	Id int32 `json:"id"`
	// Revision number
	Revision float32 `json:"revision"`
	// The server instance group label. Will be automatically generated if not provided.
	Label *string `json:"label,omitempty"`
	ServerGroupName *string `json:"serverGroupName,omitempty"`
	InfrastructureId int32 `json:"infrastructureId"`
	ExtensionInstanceId int32 `json:"extensionInstanceId"`
	// Timestamp of the Server Instance Group creation.
	CreatedTimestamp string `json:"createdTimestamp"`
	// Timestamp of the latest update for the Server Instance Group.
	UpdatedTimestamp string `json:"updatedTimestamp"`
	// GUI settings in JSON format.
	Meta *GenericGUISettings `json:"meta,omitempty"`
	// Subdomain of the Server Group.
	Subdomain *string `json:"subdomain,omitempty"`
	// Subdomain permanent of the Server Group.
	SubdomainPermanent *string `json:"subdomainPermanent,omitempty"`
	// Id of the DNS subdomain for the Server Group.
	DnsSubdomainId *int32 `json:"dnsSubdomainId,omitempty"`
	// Id of the permanent DNS subdomain for the Server Group.
	DnsSubdomainPermanentId *int32 `json:"dnsSubdomainPermanentId,omitempty"`
	InstanceCount int32 `json:"instanceCount"`
	IpAllocateAuto float32 `json:"ipAllocateAuto"`
	Ipv4SubnetCreateAuto float32 `json:"ipv4SubnetCreateAuto"`
	FirewallProfileId *int32 `json:"firewallProfileId,omitempty"`
	FirewallRulesSetId *int32 `json:"firewallRulesSetId,omitempty"`
	FirewallManaged float32 `json:"firewallManaged"`
	FirmwarePoliciesJson map[string]interface{} `json:"firmwarePoliciesJson"`
	VolumeTemplateId *int32 `json:"volumeTemplateId,omitempty"`
	// Id of the bootable drive for the Server Instance Group.
	DriveArrayIdBoot *int32 `json:"driveArrayIdBoot,omitempty"`
	// Instance Array Boot Method
	InstanceArrayBootMethod string `json:"instanceArrayBootMethod"`
	CustomVariables map[string]interface{} `json:"customVariables,omitempty"`
	ProcessorCoreCount int32 `json:"processorCoreCount"`
	ProcessorCoreMhz float32 `json:"processorCoreMhz"`
	ProcessorCount int32 `json:"processorCount"`
	RamGbytes float32 `json:"ramGbytes"`
	DiskCount int32 `json:"diskCount"`
	DiskSizeMbytes int32 `json:"diskSizeMbytes"`
	DiskTypes []string `json:"diskTypes"`
	VirtualInterfacesEnabled float32 `json:"virtualInterfacesEnabled"`
	AdditionalWanIpv4Json map[string]interface{} `json:"additionalWanIpv4Json,omitempty"`
	NetworkProfileGroupId *int32 `json:"networkProfileGroupId,omitempty"`
	NetworkProfileSnapshotId *int32 `json:"networkProfileSnapshotId,omitempty"`
	OverrideIpv4WanVlanId *int32 `json:"overrideIpv4WanVlanId,omitempty"`
	NetworkEquipmentForceSubnetPoolIpv4WanId *int32 `json:"networkEquipmentForceSubnetPoolIpv4WanId,omitempty"`
	// Current status of the Server Instance Group.
	ServiceStatus string `json:"serviceStatus"`
	ResourcePoolId *int32 `json:"resourcePoolId,omitempty"`
	// Flag to indicate if the Server Instance Group is belongs to a VM.
	IsVmGroup float32 `json:"isVmGroup"`
	// Id of the VM Instance Group this Server Instance Group belongs to.
	VmInstanceGroupId *int32 `json:"vmInstanceGroupId,omitempty"`
	Tags []string `json:"tags,omitempty"`
	// The group's default server profile. Useful when creating a server instance with a group id set, the profile will be automatically applied.
	DefaultServerProfileID int32 `json:"defaultServerProfileID"`
	Config *ServerInstanceGroupConfiguration `json:"config,omitempty"`
	// Reference links
	Links []Link `json:"links,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServerInstanceGroup ServerInstanceGroup

// NewServerInstanceGroup instantiates a new ServerInstanceGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerInstanceGroup(id int32, revision float32, infrastructureId int32, extensionInstanceId int32, createdTimestamp string, updatedTimestamp string, instanceCount int32, ipAllocateAuto float32, ipv4SubnetCreateAuto float32, firewallManaged float32, firmwarePoliciesJson map[string]interface{}, instanceArrayBootMethod string, processorCoreCount int32, processorCoreMhz float32, processorCount int32, ramGbytes float32, diskCount int32, diskSizeMbytes int32, diskTypes []string, virtualInterfacesEnabled float32, serviceStatus string, isVmGroup float32, defaultServerProfileID int32) *ServerInstanceGroup {
	this := ServerInstanceGroup{}
	this.Id = id
	this.Revision = revision
	this.InfrastructureId = infrastructureId
	this.ExtensionInstanceId = extensionInstanceId
	this.CreatedTimestamp = createdTimestamp
	this.UpdatedTimestamp = updatedTimestamp
	this.InstanceCount = instanceCount
	this.IpAllocateAuto = ipAllocateAuto
	this.Ipv4SubnetCreateAuto = ipv4SubnetCreateAuto
	this.FirewallManaged = firewallManaged
	this.FirmwarePoliciesJson = firmwarePoliciesJson
	this.InstanceArrayBootMethod = instanceArrayBootMethod
	this.ProcessorCoreCount = processorCoreCount
	this.ProcessorCoreMhz = processorCoreMhz
	this.ProcessorCount = processorCount
	this.RamGbytes = ramGbytes
	this.DiskCount = diskCount
	this.DiskSizeMbytes = diskSizeMbytes
	this.DiskTypes = diskTypes
	this.VirtualInterfacesEnabled = virtualInterfacesEnabled
	this.ServiceStatus = serviceStatus
	this.IsVmGroup = isVmGroup
	this.DefaultServerProfileID = defaultServerProfileID
	return &this
}

// NewServerInstanceGroupWithDefaults instantiates a new ServerInstanceGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerInstanceGroupWithDefaults() *ServerInstanceGroup {
	this := ServerInstanceGroup{}
	var instanceCount int32 = 1
	this.InstanceCount = instanceCount
	return &this
}

// GetId returns the Id field value
func (o *ServerInstanceGroup) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *ServerInstanceGroup) SetId(v int32) {
	o.Id = v
}

// GetRevision returns the Revision field value
func (o *ServerInstanceGroup) GetRevision() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetRevisionOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *ServerInstanceGroup) SetRevision(v float32) {
	o.Revision = v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *ServerInstanceGroup) SetLabel(v string) {
	o.Label = &v
}

// GetServerGroupName returns the ServerGroupName field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetServerGroupName() string {
	if o == nil || IsNil(o.ServerGroupName) {
		var ret string
		return ret
	}
	return *o.ServerGroupName
}

// GetServerGroupNameOk returns a tuple with the ServerGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetServerGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServerGroupName) {
		return nil, false
	}
	return o.ServerGroupName, true
}

// HasServerGroupName returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasServerGroupName() bool {
	if o != nil && !IsNil(o.ServerGroupName) {
		return true
	}

	return false
}

// SetServerGroupName gets a reference to the given string and assigns it to the ServerGroupName field.
func (o *ServerInstanceGroup) SetServerGroupName(v string) {
	o.ServerGroupName = &v
}

// GetInfrastructureId returns the InfrastructureId field value
func (o *ServerInstanceGroup) GetInfrastructureId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InfrastructureId
}

// GetInfrastructureIdOk returns a tuple with the InfrastructureId field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetInfrastructureIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InfrastructureId, true
}

// SetInfrastructureId sets field value
func (o *ServerInstanceGroup) SetInfrastructureId(v int32) {
	o.InfrastructureId = v
}

// GetExtensionInstanceId returns the ExtensionInstanceId field value
func (o *ServerInstanceGroup) GetExtensionInstanceId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ExtensionInstanceId
}

// GetExtensionInstanceIdOk returns a tuple with the ExtensionInstanceId field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetExtensionInstanceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExtensionInstanceId, true
}

// SetExtensionInstanceId sets field value
func (o *ServerInstanceGroup) SetExtensionInstanceId(v int32) {
	o.ExtensionInstanceId = v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value
func (o *ServerInstanceGroup) GetCreatedTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetCreatedTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTimestamp, true
}

// SetCreatedTimestamp sets field value
func (o *ServerInstanceGroup) SetCreatedTimestamp(v string) {
	o.CreatedTimestamp = v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value
func (o *ServerInstanceGroup) GetUpdatedTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetUpdatedTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedTimestamp, true
}

// SetUpdatedTimestamp sets field value
func (o *ServerInstanceGroup) SetUpdatedTimestamp(v string) {
	o.UpdatedTimestamp = v
}

// GetMeta returns the Meta field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetMeta() GenericGUISettings {
	if o == nil || IsNil(o.Meta) {
		var ret GenericGUISettings
		return ret
	}
	return *o.Meta
}

// GetMetaOk returns a tuple with the Meta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetMetaOk() (*GenericGUISettings, bool) {
	if o == nil || IsNil(o.Meta) {
		return nil, false
	}
	return o.Meta, true
}

// HasMeta returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasMeta() bool {
	if o != nil && !IsNil(o.Meta) {
		return true
	}

	return false
}

// SetMeta gets a reference to the given GenericGUISettings and assigns it to the Meta field.
func (o *ServerInstanceGroup) SetMeta(v GenericGUISettings) {
	o.Meta = &v
}

// GetSubdomain returns the Subdomain field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetSubdomain() string {
	if o == nil || IsNil(o.Subdomain) {
		var ret string
		return ret
	}
	return *o.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetSubdomainOk() (*string, bool) {
	if o == nil || IsNil(o.Subdomain) {
		return nil, false
	}
	return o.Subdomain, true
}

// HasSubdomain returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasSubdomain() bool {
	if o != nil && !IsNil(o.Subdomain) {
		return true
	}

	return false
}

// SetSubdomain gets a reference to the given string and assigns it to the Subdomain field.
func (o *ServerInstanceGroup) SetSubdomain(v string) {
	o.Subdomain = &v
}

// GetSubdomainPermanent returns the SubdomainPermanent field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetSubdomainPermanent() string {
	if o == nil || IsNil(o.SubdomainPermanent) {
		var ret string
		return ret
	}
	return *o.SubdomainPermanent
}

// GetSubdomainPermanentOk returns a tuple with the SubdomainPermanent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetSubdomainPermanentOk() (*string, bool) {
	if o == nil || IsNil(o.SubdomainPermanent) {
		return nil, false
	}
	return o.SubdomainPermanent, true
}

// HasSubdomainPermanent returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasSubdomainPermanent() bool {
	if o != nil && !IsNil(o.SubdomainPermanent) {
		return true
	}

	return false
}

// SetSubdomainPermanent gets a reference to the given string and assigns it to the SubdomainPermanent field.
func (o *ServerInstanceGroup) SetSubdomainPermanent(v string) {
	o.SubdomainPermanent = &v
}

// GetDnsSubdomainId returns the DnsSubdomainId field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetDnsSubdomainId() int32 {
	if o == nil || IsNil(o.DnsSubdomainId) {
		var ret int32
		return ret
	}
	return *o.DnsSubdomainId
}

// GetDnsSubdomainIdOk returns a tuple with the DnsSubdomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetDnsSubdomainIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DnsSubdomainId) {
		return nil, false
	}
	return o.DnsSubdomainId, true
}

// HasDnsSubdomainId returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasDnsSubdomainId() bool {
	if o != nil && !IsNil(o.DnsSubdomainId) {
		return true
	}

	return false
}

// SetDnsSubdomainId gets a reference to the given int32 and assigns it to the DnsSubdomainId field.
func (o *ServerInstanceGroup) SetDnsSubdomainId(v int32) {
	o.DnsSubdomainId = &v
}

// GetDnsSubdomainPermanentId returns the DnsSubdomainPermanentId field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetDnsSubdomainPermanentId() int32 {
	if o == nil || IsNil(o.DnsSubdomainPermanentId) {
		var ret int32
		return ret
	}
	return *o.DnsSubdomainPermanentId
}

// GetDnsSubdomainPermanentIdOk returns a tuple with the DnsSubdomainPermanentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetDnsSubdomainPermanentIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DnsSubdomainPermanentId) {
		return nil, false
	}
	return o.DnsSubdomainPermanentId, true
}

// HasDnsSubdomainPermanentId returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasDnsSubdomainPermanentId() bool {
	if o != nil && !IsNil(o.DnsSubdomainPermanentId) {
		return true
	}

	return false
}

// SetDnsSubdomainPermanentId gets a reference to the given int32 and assigns it to the DnsSubdomainPermanentId field.
func (o *ServerInstanceGroup) SetDnsSubdomainPermanentId(v int32) {
	o.DnsSubdomainPermanentId = &v
}

// GetInstanceCount returns the InstanceCount field value
func (o *ServerInstanceGroup) GetInstanceCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InstanceCount
}

// GetInstanceCountOk returns a tuple with the InstanceCount field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetInstanceCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceCount, true
}

// SetInstanceCount sets field value
func (o *ServerInstanceGroup) SetInstanceCount(v int32) {
	o.InstanceCount = v
}

// GetIpAllocateAuto returns the IpAllocateAuto field value
func (o *ServerInstanceGroup) GetIpAllocateAuto() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.IpAllocateAuto
}

// GetIpAllocateAutoOk returns a tuple with the IpAllocateAuto field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetIpAllocateAutoOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpAllocateAuto, true
}

// SetIpAllocateAuto sets field value
func (o *ServerInstanceGroup) SetIpAllocateAuto(v float32) {
	o.IpAllocateAuto = v
}

// GetIpv4SubnetCreateAuto returns the Ipv4SubnetCreateAuto field value
func (o *ServerInstanceGroup) GetIpv4SubnetCreateAuto() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Ipv4SubnetCreateAuto
}

// GetIpv4SubnetCreateAutoOk returns a tuple with the Ipv4SubnetCreateAuto field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetIpv4SubnetCreateAutoOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ipv4SubnetCreateAuto, true
}

// SetIpv4SubnetCreateAuto sets field value
func (o *ServerInstanceGroup) SetIpv4SubnetCreateAuto(v float32) {
	o.Ipv4SubnetCreateAuto = v
}

// GetFirewallProfileId returns the FirewallProfileId field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetFirewallProfileId() int32 {
	if o == nil || IsNil(o.FirewallProfileId) {
		var ret int32
		return ret
	}
	return *o.FirewallProfileId
}

// GetFirewallProfileIdOk returns a tuple with the FirewallProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetFirewallProfileIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FirewallProfileId) {
		return nil, false
	}
	return o.FirewallProfileId, true
}

// HasFirewallProfileId returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasFirewallProfileId() bool {
	if o != nil && !IsNil(o.FirewallProfileId) {
		return true
	}

	return false
}

// SetFirewallProfileId gets a reference to the given int32 and assigns it to the FirewallProfileId field.
func (o *ServerInstanceGroup) SetFirewallProfileId(v int32) {
	o.FirewallProfileId = &v
}

// GetFirewallRulesSetId returns the FirewallRulesSetId field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetFirewallRulesSetId() int32 {
	if o == nil || IsNil(o.FirewallRulesSetId) {
		var ret int32
		return ret
	}
	return *o.FirewallRulesSetId
}

// GetFirewallRulesSetIdOk returns a tuple with the FirewallRulesSetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetFirewallRulesSetIdOk() (*int32, bool) {
	if o == nil || IsNil(o.FirewallRulesSetId) {
		return nil, false
	}
	return o.FirewallRulesSetId, true
}

// HasFirewallRulesSetId returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasFirewallRulesSetId() bool {
	if o != nil && !IsNil(o.FirewallRulesSetId) {
		return true
	}

	return false
}

// SetFirewallRulesSetId gets a reference to the given int32 and assigns it to the FirewallRulesSetId field.
func (o *ServerInstanceGroup) SetFirewallRulesSetId(v int32) {
	o.FirewallRulesSetId = &v
}

// GetFirewallManaged returns the FirewallManaged field value
func (o *ServerInstanceGroup) GetFirewallManaged() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FirewallManaged
}

// GetFirewallManagedOk returns a tuple with the FirewallManaged field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetFirewallManagedOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FirewallManaged, true
}

// SetFirewallManaged sets field value
func (o *ServerInstanceGroup) SetFirewallManaged(v float32) {
	o.FirewallManaged = v
}

// GetFirmwarePoliciesJson returns the FirmwarePoliciesJson field value
func (o *ServerInstanceGroup) GetFirmwarePoliciesJson() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.FirmwarePoliciesJson
}

// GetFirmwarePoliciesJsonOk returns a tuple with the FirmwarePoliciesJson field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetFirmwarePoliciesJsonOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.FirmwarePoliciesJson, true
}

// SetFirmwarePoliciesJson sets field value
func (o *ServerInstanceGroup) SetFirmwarePoliciesJson(v map[string]interface{}) {
	o.FirmwarePoliciesJson = v
}

// GetVolumeTemplateId returns the VolumeTemplateId field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetVolumeTemplateId() int32 {
	if o == nil || IsNil(o.VolumeTemplateId) {
		var ret int32
		return ret
	}
	return *o.VolumeTemplateId
}

// GetVolumeTemplateIdOk returns a tuple with the VolumeTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetVolumeTemplateIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VolumeTemplateId) {
		return nil, false
	}
	return o.VolumeTemplateId, true
}

// HasVolumeTemplateId returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasVolumeTemplateId() bool {
	if o != nil && !IsNil(o.VolumeTemplateId) {
		return true
	}

	return false
}

// SetVolumeTemplateId gets a reference to the given int32 and assigns it to the VolumeTemplateId field.
func (o *ServerInstanceGroup) SetVolumeTemplateId(v int32) {
	o.VolumeTemplateId = &v
}

// GetDriveArrayIdBoot returns the DriveArrayIdBoot field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetDriveArrayIdBoot() int32 {
	if o == nil || IsNil(o.DriveArrayIdBoot) {
		var ret int32
		return ret
	}
	return *o.DriveArrayIdBoot
}

// GetDriveArrayIdBootOk returns a tuple with the DriveArrayIdBoot field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetDriveArrayIdBootOk() (*int32, bool) {
	if o == nil || IsNil(o.DriveArrayIdBoot) {
		return nil, false
	}
	return o.DriveArrayIdBoot, true
}

// HasDriveArrayIdBoot returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasDriveArrayIdBoot() bool {
	if o != nil && !IsNil(o.DriveArrayIdBoot) {
		return true
	}

	return false
}

// SetDriveArrayIdBoot gets a reference to the given int32 and assigns it to the DriveArrayIdBoot field.
func (o *ServerInstanceGroup) SetDriveArrayIdBoot(v int32) {
	o.DriveArrayIdBoot = &v
}

// GetInstanceArrayBootMethod returns the InstanceArrayBootMethod field value
func (o *ServerInstanceGroup) GetInstanceArrayBootMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceArrayBootMethod
}

// GetInstanceArrayBootMethodOk returns a tuple with the InstanceArrayBootMethod field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetInstanceArrayBootMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceArrayBootMethod, true
}

// SetInstanceArrayBootMethod sets field value
func (o *ServerInstanceGroup) SetInstanceArrayBootMethod(v string) {
	o.InstanceArrayBootMethod = v
}

// GetCustomVariables returns the CustomVariables field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetCustomVariables() map[string]interface{} {
	if o == nil || IsNil(o.CustomVariables) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomVariables
}

// GetCustomVariablesOk returns a tuple with the CustomVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetCustomVariablesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomVariables) {
		return map[string]interface{}{}, false
	}
	return o.CustomVariables, true
}

// HasCustomVariables returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasCustomVariables() bool {
	if o != nil && !IsNil(o.CustomVariables) {
		return true
	}

	return false
}

// SetCustomVariables gets a reference to the given map[string]interface{} and assigns it to the CustomVariables field.
func (o *ServerInstanceGroup) SetCustomVariables(v map[string]interface{}) {
	o.CustomVariables = v
}

// GetProcessorCoreCount returns the ProcessorCoreCount field value
func (o *ServerInstanceGroup) GetProcessorCoreCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProcessorCoreCount
}

// GetProcessorCoreCountOk returns a tuple with the ProcessorCoreCount field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetProcessorCoreCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessorCoreCount, true
}

// SetProcessorCoreCount sets field value
func (o *ServerInstanceGroup) SetProcessorCoreCount(v int32) {
	o.ProcessorCoreCount = v
}

// GetProcessorCoreMhz returns the ProcessorCoreMhz field value
func (o *ServerInstanceGroup) GetProcessorCoreMhz() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ProcessorCoreMhz
}

// GetProcessorCoreMhzOk returns a tuple with the ProcessorCoreMhz field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetProcessorCoreMhzOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessorCoreMhz, true
}

// SetProcessorCoreMhz sets field value
func (o *ServerInstanceGroup) SetProcessorCoreMhz(v float32) {
	o.ProcessorCoreMhz = v
}

// GetProcessorCount returns the ProcessorCount field value
func (o *ServerInstanceGroup) GetProcessorCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ProcessorCount
}

// GetProcessorCountOk returns a tuple with the ProcessorCount field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetProcessorCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProcessorCount, true
}

// SetProcessorCount sets field value
func (o *ServerInstanceGroup) SetProcessorCount(v int32) {
	o.ProcessorCount = v
}

// GetRamGbytes returns the RamGbytes field value
func (o *ServerInstanceGroup) GetRamGbytes() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RamGbytes
}

// GetRamGbytesOk returns a tuple with the RamGbytes field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetRamGbytesOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RamGbytes, true
}

// SetRamGbytes sets field value
func (o *ServerInstanceGroup) SetRamGbytes(v float32) {
	o.RamGbytes = v
}

// GetDiskCount returns the DiskCount field value
func (o *ServerInstanceGroup) GetDiskCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DiskCount
}

// GetDiskCountOk returns a tuple with the DiskCount field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetDiskCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiskCount, true
}

// SetDiskCount sets field value
func (o *ServerInstanceGroup) SetDiskCount(v int32) {
	o.DiskCount = v
}

// GetDiskSizeMbytes returns the DiskSizeMbytes field value
func (o *ServerInstanceGroup) GetDiskSizeMbytes() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DiskSizeMbytes
}

// GetDiskSizeMbytesOk returns a tuple with the DiskSizeMbytes field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetDiskSizeMbytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DiskSizeMbytes, true
}

// SetDiskSizeMbytes sets field value
func (o *ServerInstanceGroup) SetDiskSizeMbytes(v int32) {
	o.DiskSizeMbytes = v
}

// GetDiskTypes returns the DiskTypes field value
func (o *ServerInstanceGroup) GetDiskTypes() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.DiskTypes
}

// GetDiskTypesOk returns a tuple with the DiskTypes field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetDiskTypesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.DiskTypes, true
}

// SetDiskTypes sets field value
func (o *ServerInstanceGroup) SetDiskTypes(v []string) {
	o.DiskTypes = v
}

// GetVirtualInterfacesEnabled returns the VirtualInterfacesEnabled field value
func (o *ServerInstanceGroup) GetVirtualInterfacesEnabled() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.VirtualInterfacesEnabled
}

// GetVirtualInterfacesEnabledOk returns a tuple with the VirtualInterfacesEnabled field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetVirtualInterfacesEnabledOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VirtualInterfacesEnabled, true
}

// SetVirtualInterfacesEnabled sets field value
func (o *ServerInstanceGroup) SetVirtualInterfacesEnabled(v float32) {
	o.VirtualInterfacesEnabled = v
}

// GetAdditionalWanIpv4Json returns the AdditionalWanIpv4Json field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetAdditionalWanIpv4Json() map[string]interface{} {
	if o == nil || IsNil(o.AdditionalWanIpv4Json) {
		var ret map[string]interface{}
		return ret
	}
	return o.AdditionalWanIpv4Json
}

// GetAdditionalWanIpv4JsonOk returns a tuple with the AdditionalWanIpv4Json field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetAdditionalWanIpv4JsonOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.AdditionalWanIpv4Json) {
		return map[string]interface{}{}, false
	}
	return o.AdditionalWanIpv4Json, true
}

// HasAdditionalWanIpv4Json returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasAdditionalWanIpv4Json() bool {
	if o != nil && !IsNil(o.AdditionalWanIpv4Json) {
		return true
	}

	return false
}

// SetAdditionalWanIpv4Json gets a reference to the given map[string]interface{} and assigns it to the AdditionalWanIpv4Json field.
func (o *ServerInstanceGroup) SetAdditionalWanIpv4Json(v map[string]interface{}) {
	o.AdditionalWanIpv4Json = v
}

// GetNetworkProfileGroupId returns the NetworkProfileGroupId field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetNetworkProfileGroupId() int32 {
	if o == nil || IsNil(o.NetworkProfileGroupId) {
		var ret int32
		return ret
	}
	return *o.NetworkProfileGroupId
}

// GetNetworkProfileGroupIdOk returns a tuple with the NetworkProfileGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetNetworkProfileGroupIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkProfileGroupId) {
		return nil, false
	}
	return o.NetworkProfileGroupId, true
}

// HasNetworkProfileGroupId returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasNetworkProfileGroupId() bool {
	if o != nil && !IsNil(o.NetworkProfileGroupId) {
		return true
	}

	return false
}

// SetNetworkProfileGroupId gets a reference to the given int32 and assigns it to the NetworkProfileGroupId field.
func (o *ServerInstanceGroup) SetNetworkProfileGroupId(v int32) {
	o.NetworkProfileGroupId = &v
}

// GetNetworkProfileSnapshotId returns the NetworkProfileSnapshotId field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetNetworkProfileSnapshotId() int32 {
	if o == nil || IsNil(o.NetworkProfileSnapshotId) {
		var ret int32
		return ret
	}
	return *o.NetworkProfileSnapshotId
}

// GetNetworkProfileSnapshotIdOk returns a tuple with the NetworkProfileSnapshotId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetNetworkProfileSnapshotIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkProfileSnapshotId) {
		return nil, false
	}
	return o.NetworkProfileSnapshotId, true
}

// HasNetworkProfileSnapshotId returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasNetworkProfileSnapshotId() bool {
	if o != nil && !IsNil(o.NetworkProfileSnapshotId) {
		return true
	}

	return false
}

// SetNetworkProfileSnapshotId gets a reference to the given int32 and assigns it to the NetworkProfileSnapshotId field.
func (o *ServerInstanceGroup) SetNetworkProfileSnapshotId(v int32) {
	o.NetworkProfileSnapshotId = &v
}

// GetOverrideIpv4WanVlanId returns the OverrideIpv4WanVlanId field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetOverrideIpv4WanVlanId() int32 {
	if o == nil || IsNil(o.OverrideIpv4WanVlanId) {
		var ret int32
		return ret
	}
	return *o.OverrideIpv4WanVlanId
}

// GetOverrideIpv4WanVlanIdOk returns a tuple with the OverrideIpv4WanVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetOverrideIpv4WanVlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OverrideIpv4WanVlanId) {
		return nil, false
	}
	return o.OverrideIpv4WanVlanId, true
}

// HasOverrideIpv4WanVlanId returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasOverrideIpv4WanVlanId() bool {
	if o != nil && !IsNil(o.OverrideIpv4WanVlanId) {
		return true
	}

	return false
}

// SetOverrideIpv4WanVlanId gets a reference to the given int32 and assigns it to the OverrideIpv4WanVlanId field.
func (o *ServerInstanceGroup) SetOverrideIpv4WanVlanId(v int32) {
	o.OverrideIpv4WanVlanId = &v
}

// GetNetworkEquipmentForceSubnetPoolIpv4WanId returns the NetworkEquipmentForceSubnetPoolIpv4WanId field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetNetworkEquipmentForceSubnetPoolIpv4WanId() int32 {
	if o == nil || IsNil(o.NetworkEquipmentForceSubnetPoolIpv4WanId) {
		var ret int32
		return ret
	}
	return *o.NetworkEquipmentForceSubnetPoolIpv4WanId
}

// GetNetworkEquipmentForceSubnetPoolIpv4WanIdOk returns a tuple with the NetworkEquipmentForceSubnetPoolIpv4WanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetNetworkEquipmentForceSubnetPoolIpv4WanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkEquipmentForceSubnetPoolIpv4WanId) {
		return nil, false
	}
	return o.NetworkEquipmentForceSubnetPoolIpv4WanId, true
}

// HasNetworkEquipmentForceSubnetPoolIpv4WanId returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasNetworkEquipmentForceSubnetPoolIpv4WanId() bool {
	if o != nil && !IsNil(o.NetworkEquipmentForceSubnetPoolIpv4WanId) {
		return true
	}

	return false
}

// SetNetworkEquipmentForceSubnetPoolIpv4WanId gets a reference to the given int32 and assigns it to the NetworkEquipmentForceSubnetPoolIpv4WanId field.
func (o *ServerInstanceGroup) SetNetworkEquipmentForceSubnetPoolIpv4WanId(v int32) {
	o.NetworkEquipmentForceSubnetPoolIpv4WanId = &v
}

// GetServiceStatus returns the ServiceStatus field value
func (o *ServerInstanceGroup) GetServiceStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceStatus
}

// GetServiceStatusOk returns a tuple with the ServiceStatus field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetServiceStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceStatus, true
}

// SetServiceStatus sets field value
func (o *ServerInstanceGroup) SetServiceStatus(v string) {
	o.ServiceStatus = v
}

// GetResourcePoolId returns the ResourcePoolId field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetResourcePoolId() int32 {
	if o == nil || IsNil(o.ResourcePoolId) {
		var ret int32
		return ret
	}
	return *o.ResourcePoolId
}

// GetResourcePoolIdOk returns a tuple with the ResourcePoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetResourcePoolIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ResourcePoolId) {
		return nil, false
	}
	return o.ResourcePoolId, true
}

// HasResourcePoolId returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasResourcePoolId() bool {
	if o != nil && !IsNil(o.ResourcePoolId) {
		return true
	}

	return false
}

// SetResourcePoolId gets a reference to the given int32 and assigns it to the ResourcePoolId field.
func (o *ServerInstanceGroup) SetResourcePoolId(v int32) {
	o.ResourcePoolId = &v
}

// GetIsVmGroup returns the IsVmGroup field value
func (o *ServerInstanceGroup) GetIsVmGroup() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.IsVmGroup
}

// GetIsVmGroupOk returns a tuple with the IsVmGroup field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetIsVmGroupOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsVmGroup, true
}

// SetIsVmGroup sets field value
func (o *ServerInstanceGroup) SetIsVmGroup(v float32) {
	o.IsVmGroup = v
}

// GetVmInstanceGroupId returns the VmInstanceGroupId field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetVmInstanceGroupId() int32 {
	if o == nil || IsNil(o.VmInstanceGroupId) {
		var ret int32
		return ret
	}
	return *o.VmInstanceGroupId
}

// GetVmInstanceGroupIdOk returns a tuple with the VmInstanceGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetVmInstanceGroupIdOk() (*int32, bool) {
	if o == nil || IsNil(o.VmInstanceGroupId) {
		return nil, false
	}
	return o.VmInstanceGroupId, true
}

// HasVmInstanceGroupId returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasVmInstanceGroupId() bool {
	if o != nil && !IsNil(o.VmInstanceGroupId) {
		return true
	}

	return false
}

// SetVmInstanceGroupId gets a reference to the given int32 and assigns it to the VmInstanceGroupId field.
func (o *ServerInstanceGroup) SetVmInstanceGroupId(v int32) {
	o.VmInstanceGroupId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *ServerInstanceGroup) SetTags(v []string) {
	o.Tags = v
}

// GetDefaultServerProfileID returns the DefaultServerProfileID field value
func (o *ServerInstanceGroup) GetDefaultServerProfileID() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.DefaultServerProfileID
}

// GetDefaultServerProfileIDOk returns a tuple with the DefaultServerProfileID field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetDefaultServerProfileIDOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultServerProfileID, true
}

// SetDefaultServerProfileID sets field value
func (o *ServerInstanceGroup) SetDefaultServerProfileID(v int32) {
	o.DefaultServerProfileID = v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetConfig() ServerInstanceGroupConfiguration {
	if o == nil || IsNil(o.Config) {
		var ret ServerInstanceGroupConfiguration
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetConfigOk() (*ServerInstanceGroupConfiguration, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ServerInstanceGroupConfiguration and assigns it to the Config field.
func (o *ServerInstanceGroup) SetConfig(v ServerInstanceGroupConfiguration) {
	o.Config = &v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *ServerInstanceGroup) GetLinks() []Link {
	if o == nil || IsNil(o.Links) {
		var ret []Link
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroup) GetLinksOk() ([]Link, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *ServerInstanceGroup) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *ServerInstanceGroup) SetLinks(v []Link) {
	o.Links = v
}

func (o ServerInstanceGroup) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerInstanceGroup) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["revision"] = o.Revision
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.ServerGroupName) {
		toSerialize["serverGroupName"] = o.ServerGroupName
	}
	toSerialize["infrastructureId"] = o.InfrastructureId
	toSerialize["extensionInstanceId"] = o.ExtensionInstanceId
	toSerialize["createdTimestamp"] = o.CreatedTimestamp
	toSerialize["updatedTimestamp"] = o.UpdatedTimestamp
	if !IsNil(o.Meta) {
		toSerialize["meta"] = o.Meta
	}
	if !IsNil(o.Subdomain) {
		toSerialize["subdomain"] = o.Subdomain
	}
	if !IsNil(o.SubdomainPermanent) {
		toSerialize["subdomainPermanent"] = o.SubdomainPermanent
	}
	if !IsNil(o.DnsSubdomainId) {
		toSerialize["dnsSubdomainId"] = o.DnsSubdomainId
	}
	if !IsNil(o.DnsSubdomainPermanentId) {
		toSerialize["dnsSubdomainPermanentId"] = o.DnsSubdomainPermanentId
	}
	toSerialize["instanceCount"] = o.InstanceCount
	toSerialize["ipAllocateAuto"] = o.IpAllocateAuto
	toSerialize["ipv4SubnetCreateAuto"] = o.Ipv4SubnetCreateAuto
	if !IsNil(o.FirewallProfileId) {
		toSerialize["firewallProfileId"] = o.FirewallProfileId
	}
	if !IsNil(o.FirewallRulesSetId) {
		toSerialize["firewallRulesSetId"] = o.FirewallRulesSetId
	}
	toSerialize["firewallManaged"] = o.FirewallManaged
	toSerialize["firmwarePoliciesJson"] = o.FirmwarePoliciesJson
	if !IsNil(o.VolumeTemplateId) {
		toSerialize["volumeTemplateId"] = o.VolumeTemplateId
	}
	if !IsNil(o.DriveArrayIdBoot) {
		toSerialize["driveArrayIdBoot"] = o.DriveArrayIdBoot
	}
	toSerialize["instanceArrayBootMethod"] = o.InstanceArrayBootMethod
	if !IsNil(o.CustomVariables) {
		toSerialize["customVariables"] = o.CustomVariables
	}
	toSerialize["processorCoreCount"] = o.ProcessorCoreCount
	toSerialize["processorCoreMhz"] = o.ProcessorCoreMhz
	toSerialize["processorCount"] = o.ProcessorCount
	toSerialize["ramGbytes"] = o.RamGbytes
	toSerialize["diskCount"] = o.DiskCount
	toSerialize["diskSizeMbytes"] = o.DiskSizeMbytes
	toSerialize["diskTypes"] = o.DiskTypes
	toSerialize["virtualInterfacesEnabled"] = o.VirtualInterfacesEnabled
	if !IsNil(o.AdditionalWanIpv4Json) {
		toSerialize["additionalWanIpv4Json"] = o.AdditionalWanIpv4Json
	}
	if !IsNil(o.NetworkProfileGroupId) {
		toSerialize["networkProfileGroupId"] = o.NetworkProfileGroupId
	}
	if !IsNil(o.NetworkProfileSnapshotId) {
		toSerialize["networkProfileSnapshotId"] = o.NetworkProfileSnapshotId
	}
	if !IsNil(o.OverrideIpv4WanVlanId) {
		toSerialize["overrideIpv4WanVlanId"] = o.OverrideIpv4WanVlanId
	}
	if !IsNil(o.NetworkEquipmentForceSubnetPoolIpv4WanId) {
		toSerialize["networkEquipmentForceSubnetPoolIpv4WanId"] = o.NetworkEquipmentForceSubnetPoolIpv4WanId
	}
	toSerialize["serviceStatus"] = o.ServiceStatus
	if !IsNil(o.ResourcePoolId) {
		toSerialize["resourcePoolId"] = o.ResourcePoolId
	}
	toSerialize["isVmGroup"] = o.IsVmGroup
	if !IsNil(o.VmInstanceGroupId) {
		toSerialize["vmInstanceGroupId"] = o.VmInstanceGroupId
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	toSerialize["defaultServerProfileID"] = o.DefaultServerProfileID
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServerInstanceGroup) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"revision",
		"infrastructureId",
		"extensionInstanceId",
		"createdTimestamp",
		"updatedTimestamp",
		"instanceCount",
		"ipAllocateAuto",
		"ipv4SubnetCreateAuto",
		"firewallManaged",
		"firmwarePoliciesJson",
		"instanceArrayBootMethod",
		"processorCoreCount",
		"processorCoreMhz",
		"processorCount",
		"ramGbytes",
		"diskCount",
		"diskSizeMbytes",
		"diskTypes",
		"virtualInterfacesEnabled",
		"serviceStatus",
		"isVmGroup",
		"defaultServerProfileID",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServerInstanceGroup := _ServerInstanceGroup{}

	err = json.Unmarshal(data, &varServerInstanceGroup)

	if err != nil {
		return err
	}

	*o = ServerInstanceGroup(varServerInstanceGroup)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "revision")
		delete(additionalProperties, "label")
		delete(additionalProperties, "serverGroupName")
		delete(additionalProperties, "infrastructureId")
		delete(additionalProperties, "extensionInstanceId")
		delete(additionalProperties, "createdTimestamp")
		delete(additionalProperties, "updatedTimestamp")
		delete(additionalProperties, "meta")
		delete(additionalProperties, "subdomain")
		delete(additionalProperties, "subdomainPermanent")
		delete(additionalProperties, "dnsSubdomainId")
		delete(additionalProperties, "dnsSubdomainPermanentId")
		delete(additionalProperties, "instanceCount")
		delete(additionalProperties, "ipAllocateAuto")
		delete(additionalProperties, "ipv4SubnetCreateAuto")
		delete(additionalProperties, "firewallProfileId")
		delete(additionalProperties, "firewallRulesSetId")
		delete(additionalProperties, "firewallManaged")
		delete(additionalProperties, "firmwarePoliciesJson")
		delete(additionalProperties, "volumeTemplateId")
		delete(additionalProperties, "driveArrayIdBoot")
		delete(additionalProperties, "instanceArrayBootMethod")
		delete(additionalProperties, "customVariables")
		delete(additionalProperties, "processorCoreCount")
		delete(additionalProperties, "processorCoreMhz")
		delete(additionalProperties, "processorCount")
		delete(additionalProperties, "ramGbytes")
		delete(additionalProperties, "diskCount")
		delete(additionalProperties, "diskSizeMbytes")
		delete(additionalProperties, "diskTypes")
		delete(additionalProperties, "virtualInterfacesEnabled")
		delete(additionalProperties, "additionalWanIpv4Json")
		delete(additionalProperties, "networkProfileGroupId")
		delete(additionalProperties, "networkProfileSnapshotId")
		delete(additionalProperties, "overrideIpv4WanVlanId")
		delete(additionalProperties, "networkEquipmentForceSubnetPoolIpv4WanId")
		delete(additionalProperties, "serviceStatus")
		delete(additionalProperties, "resourcePoolId")
		delete(additionalProperties, "isVmGroup")
		delete(additionalProperties, "vmInstanceGroupId")
		delete(additionalProperties, "tags")
		delete(additionalProperties, "defaultServerProfileID")
		delete(additionalProperties, "config")
		delete(additionalProperties, "links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServerInstanceGroup struct {
	value *ServerInstanceGroup
	isSet bool
}

func (v NullableServerInstanceGroup) Get() *ServerInstanceGroup {
	return v.value
}

func (v *NullableServerInstanceGroup) Set(val *ServerInstanceGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableServerInstanceGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableServerInstanceGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerInstanceGroup(val *ServerInstanceGroup) *NullableServerInstanceGroup {
	return &NullableServerInstanceGroup{value: val, isSet: true}
}

func (v NullableServerInstanceGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerInstanceGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


