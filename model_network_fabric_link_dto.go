/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the NetworkFabricLinkDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkFabricLinkDto{}

// NetworkFabricLinkDto struct for NetworkFabricLinkDto
type NetworkFabricLinkDto struct {
	// Entity creation timestamp
	CreatedTimestamp time.Time `json:"createdTimestamp"`
	// Entity last update timestamp
	UpdatedTimestamp time.Time `json:"updatedTimestamp"`
	// Revision number of the entity
	Revision string `json:"revision"`
	// Unique identifier for the network fabric link
	Id float32 `json:"id"`
	// Unique identifier for the network fabric
	NetworkFabricId float32 `json:"networkFabricId"`
	// Unique identifier for the network device A interface
	NetworkDeviceAInterfaceId float32 `json:"networkDeviceAInterfaceId"`
	// Unique identifier for the network device B interface
	NetworkDeviceBInterfaceId float32 `json:"networkDeviceBInterfaceId"`
	// Type of the network fabric link
	LinkType string `json:"linkType"`
	// Is the link part of an MLAG pair
	MlagPair float32 `json:"mlagPair"`
	// BGP numbering type for the link
	BgpNumbering string `json:"bgpNumbering"`
	// BGP link configuration type
	BgpLinkConfiguration string `json:"bgpLinkConfiguration"`
	// Status of the network fabric link
	Status string `json:"status"`
	// Custom variables for the network fabric link
	CustomVariables map[string]interface{} `json:"customVariables,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NetworkFabricLinkDto NetworkFabricLinkDto

// NewNetworkFabricLinkDto instantiates a new NetworkFabricLinkDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkFabricLinkDto(createdTimestamp time.Time, updatedTimestamp time.Time, revision string, id float32, networkFabricId float32, networkDeviceAInterfaceId float32, networkDeviceBInterfaceId float32, linkType string, mlagPair float32, bgpNumbering string, bgpLinkConfiguration string, status string) *NetworkFabricLinkDto {
	this := NetworkFabricLinkDto{}
	this.CreatedTimestamp = createdTimestamp
	this.UpdatedTimestamp = updatedTimestamp
	this.Revision = revision
	this.Id = id
	this.NetworkFabricId = networkFabricId
	this.NetworkDeviceAInterfaceId = networkDeviceAInterfaceId
	this.NetworkDeviceBInterfaceId = networkDeviceBInterfaceId
	this.LinkType = linkType
	this.MlagPair = mlagPair
	this.BgpNumbering = bgpNumbering
	this.BgpLinkConfiguration = bgpLinkConfiguration
	this.Status = status
	return &this
}

// NewNetworkFabricLinkDtoWithDefaults instantiates a new NetworkFabricLinkDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkFabricLinkDtoWithDefaults() *NetworkFabricLinkDto {
	this := NetworkFabricLinkDto{}
	return &this
}

// GetCreatedTimestamp returns the CreatedTimestamp field value
func (o *NetworkFabricLinkDto) GetCreatedTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricLinkDto) GetCreatedTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTimestamp, true
}

// SetCreatedTimestamp sets field value
func (o *NetworkFabricLinkDto) SetCreatedTimestamp(v time.Time) {
	o.CreatedTimestamp = v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value
func (o *NetworkFabricLinkDto) GetUpdatedTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricLinkDto) GetUpdatedTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedTimestamp, true
}

// SetUpdatedTimestamp sets field value
func (o *NetworkFabricLinkDto) SetUpdatedTimestamp(v time.Time) {
	o.UpdatedTimestamp = v
}

// GetRevision returns the Revision field value
func (o *NetworkFabricLinkDto) GetRevision() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricLinkDto) GetRevisionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *NetworkFabricLinkDto) SetRevision(v string) {
	o.Revision = v
}

// GetId returns the Id field value
func (o *NetworkFabricLinkDto) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricLinkDto) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *NetworkFabricLinkDto) SetId(v float32) {
	o.Id = v
}

// GetNetworkFabricId returns the NetworkFabricId field value
func (o *NetworkFabricLinkDto) GetNetworkFabricId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NetworkFabricId
}

// GetNetworkFabricIdOk returns a tuple with the NetworkFabricId field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricLinkDto) GetNetworkFabricIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkFabricId, true
}

// SetNetworkFabricId sets field value
func (o *NetworkFabricLinkDto) SetNetworkFabricId(v float32) {
	o.NetworkFabricId = v
}

// GetNetworkDeviceAInterfaceId returns the NetworkDeviceAInterfaceId field value
func (o *NetworkFabricLinkDto) GetNetworkDeviceAInterfaceId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NetworkDeviceAInterfaceId
}

// GetNetworkDeviceAInterfaceIdOk returns a tuple with the NetworkDeviceAInterfaceId field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricLinkDto) GetNetworkDeviceAInterfaceIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceAInterfaceId, true
}

// SetNetworkDeviceAInterfaceId sets field value
func (o *NetworkFabricLinkDto) SetNetworkDeviceAInterfaceId(v float32) {
	o.NetworkDeviceAInterfaceId = v
}

// GetNetworkDeviceBInterfaceId returns the NetworkDeviceBInterfaceId field value
func (o *NetworkFabricLinkDto) GetNetworkDeviceBInterfaceId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NetworkDeviceBInterfaceId
}

// GetNetworkDeviceBInterfaceIdOk returns a tuple with the NetworkDeviceBInterfaceId field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricLinkDto) GetNetworkDeviceBInterfaceIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceBInterfaceId, true
}

// SetNetworkDeviceBInterfaceId sets field value
func (o *NetworkFabricLinkDto) SetNetworkDeviceBInterfaceId(v float32) {
	o.NetworkDeviceBInterfaceId = v
}

// GetLinkType returns the LinkType field value
func (o *NetworkFabricLinkDto) GetLinkType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LinkType
}

// GetLinkTypeOk returns a tuple with the LinkType field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricLinkDto) GetLinkTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LinkType, true
}

// SetLinkType sets field value
func (o *NetworkFabricLinkDto) SetLinkType(v string) {
	o.LinkType = v
}

// GetMlagPair returns the MlagPair field value
func (o *NetworkFabricLinkDto) GetMlagPair() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MlagPair
}

// GetMlagPairOk returns a tuple with the MlagPair field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricLinkDto) GetMlagPairOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MlagPair, true
}

// SetMlagPair sets field value
func (o *NetworkFabricLinkDto) SetMlagPair(v float32) {
	o.MlagPair = v
}

// GetBgpNumbering returns the BgpNumbering field value
func (o *NetworkFabricLinkDto) GetBgpNumbering() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BgpNumbering
}

// GetBgpNumberingOk returns a tuple with the BgpNumbering field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricLinkDto) GetBgpNumberingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BgpNumbering, true
}

// SetBgpNumbering sets field value
func (o *NetworkFabricLinkDto) SetBgpNumbering(v string) {
	o.BgpNumbering = v
}

// GetBgpLinkConfiguration returns the BgpLinkConfiguration field value
func (o *NetworkFabricLinkDto) GetBgpLinkConfiguration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BgpLinkConfiguration
}

// GetBgpLinkConfigurationOk returns a tuple with the BgpLinkConfiguration field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricLinkDto) GetBgpLinkConfigurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BgpLinkConfiguration, true
}

// SetBgpLinkConfiguration sets field value
func (o *NetworkFabricLinkDto) SetBgpLinkConfiguration(v string) {
	o.BgpLinkConfiguration = v
}

// GetStatus returns the Status field value
func (o *NetworkFabricLinkDto) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricLinkDto) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *NetworkFabricLinkDto) SetStatus(v string) {
	o.Status = v
}

// GetCustomVariables returns the CustomVariables field value if set, zero value otherwise.
func (o *NetworkFabricLinkDto) GetCustomVariables() map[string]interface{} {
	if o == nil || IsNil(o.CustomVariables) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomVariables
}

// GetCustomVariablesOk returns a tuple with the CustomVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkFabricLinkDto) GetCustomVariablesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomVariables) {
		return map[string]interface{}{}, false
	}
	return o.CustomVariables, true
}

// HasCustomVariables returns a boolean if a field has been set.
func (o *NetworkFabricLinkDto) HasCustomVariables() bool {
	if o != nil && !IsNil(o.CustomVariables) {
		return true
	}

	return false
}

// SetCustomVariables gets a reference to the given map[string]interface{} and assigns it to the CustomVariables field.
func (o *NetworkFabricLinkDto) SetCustomVariables(v map[string]interface{}) {
	o.CustomVariables = v
}

func (o NetworkFabricLinkDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkFabricLinkDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["createdTimestamp"] = o.CreatedTimestamp
	toSerialize["updatedTimestamp"] = o.UpdatedTimestamp
	toSerialize["revision"] = o.Revision
	toSerialize["id"] = o.Id
	toSerialize["networkFabricId"] = o.NetworkFabricId
	toSerialize["networkDeviceAInterfaceId"] = o.NetworkDeviceAInterfaceId
	toSerialize["networkDeviceBInterfaceId"] = o.NetworkDeviceBInterfaceId
	toSerialize["linkType"] = o.LinkType
	toSerialize["mlagPair"] = o.MlagPair
	toSerialize["bgpNumbering"] = o.BgpNumbering
	toSerialize["bgpLinkConfiguration"] = o.BgpLinkConfiguration
	toSerialize["status"] = o.Status
	if !IsNil(o.CustomVariables) {
		toSerialize["customVariables"] = o.CustomVariables
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NetworkFabricLinkDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"createdTimestamp",
		"updatedTimestamp",
		"revision",
		"id",
		"networkFabricId",
		"networkDeviceAInterfaceId",
		"networkDeviceBInterfaceId",
		"linkType",
		"mlagPair",
		"bgpNumbering",
		"bgpLinkConfiguration",
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkFabricLinkDto := _NetworkFabricLinkDto{}

	err = json.Unmarshal(data, &varNetworkFabricLinkDto)

	if err != nil {
		return err
	}

	*o = NetworkFabricLinkDto(varNetworkFabricLinkDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "createdTimestamp")
		delete(additionalProperties, "updatedTimestamp")
		delete(additionalProperties, "revision")
		delete(additionalProperties, "id")
		delete(additionalProperties, "networkFabricId")
		delete(additionalProperties, "networkDeviceAInterfaceId")
		delete(additionalProperties, "networkDeviceBInterfaceId")
		delete(additionalProperties, "linkType")
		delete(additionalProperties, "mlagPair")
		delete(additionalProperties, "bgpNumbering")
		delete(additionalProperties, "bgpLinkConfiguration")
		delete(additionalProperties, "status")
		delete(additionalProperties, "customVariables")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNetworkFabricLinkDto struct {
	value *NetworkFabricLinkDto
	isSet bool
}

func (v NullableNetworkFabricLinkDto) Get() *NetworkFabricLinkDto {
	return v.value
}

func (v *NullableNetworkFabricLinkDto) Set(val *NetworkFabricLinkDto) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkFabricLinkDto) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkFabricLinkDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkFabricLinkDto(val *NetworkFabricLinkDto) *NullableNetworkFabricLinkDto {
	return &NullableNetworkFabricLinkDto{value: val, isSet: true}
}

func (v NullableNetworkFabricLinkDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkFabricLinkDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


