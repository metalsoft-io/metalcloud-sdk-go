openapi: 3.0.0
info:
  contact:
    email: support@metalsoft.io
    name: MetalSoft
    url: https://www.metalsoft.io/contact
  description: MetalSoft REST API documentation
  title: MetalSoft REST API
  version: "2.0"
externalDocs:
  description: MetalSoft Documentation
  url: https://docs.metalsoft.io/
servers:
- description: MetalSoft
  url: ""
tags:
- description: Security configuration and control.
  name: Security
- description: System operations.
  name: System
- description: Job operations.
  name: Job
- description: System configuration operations.
  name: Configuration
- description: Account management operations.
  name: Account
- description: User management operations.
  name: User
- description: Site management.
  name: Site
- description: Firmware policy management.
  name: Firmware Policy
- description: Server management.
  name: Server
- description: Server firmware management.
  name: Server Firmware
- description: Server cleanup policy management.
  name: Server Cleanup Policy
- description: Server default credentials management.
  name: Server Default Credentials
- description: Server type management.
  name: Server Type
- description: Physical compute instances part of an infrastructure.
  name: Server Instance
- description: A group of physical server instances part of an infrastructure.
  name: Server Instance Group
- description: A reusable profile for server instances.
  name: Server Instance Profile
- description: Storage management.
  name: Storage
- description: Network device management.
  name: Network Device
- description: Resource pool management.
  name: Resource Pool
- description: Infrastructures group tenant resources.
  name: Infrastructure
- description: Networks management operations.
  name: Network
- description: A cluster or system that acts as a pool for creating VMs.
  name: VM Pool
- description: VM types management operations.
  name: VM Type
- description: VM management operations.
  name: VM
- description: Virtual compute instances part of an infrastructure.
  name: VM Instance
- description: A group of virtual compute instances part of an infrastructure.
  name: VM Instance Group
- description: File shares that can be attached to one or more servers.
  name: File Share
- description: Buckets that can be attached to one or more servers.
  name: Bucket
- description: Extensions are used to add extended functionality like deploying clustered
    application.
  name: Extension
- description: Extension instances part of an infrastructure.
  name: Extension Instance
- description: OS template management operations.
  name: OS Template
- description: OS template asset management operations.
  name: Template Asset
- description: Eli AI assistant operations.
  name: AI
paths:
  /api/v2/accounts:
    get:
      description: Returns all accounts
      operationId: getAccounts
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by parentAccountId query param.
                    <p>
                       <b>Format: </b> filter.parentAccountId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.parentAccountId=$not:$like:John Doe&filter.parentAccountId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.parentAccountId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by primaryContactId query param.
                    <p>
                       <b>Format: </b> filter.primaryContactId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.primaryContactId=$not:$like:John Doe&filter.primaryContactId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.primaryContactId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by secondaryContactId query param.
                    <p>
                       <b>Format: </b> filter.secondaryContactId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.secondaryContactId=$not:$like:John Doe&filter.secondaryContactId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.secondaryContactId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by archived query param.
                    <p>
                       <b>Format: </b> filter.archived={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.archived=$not:$like:John Doe&filter.archived=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.archived
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by code query param.
                    <p>
                       <b>Format: </b> filter.code={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.code=$not:$like:John Doe&filter.code=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.code
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> name:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>name</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - name:ASC
            - name:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> name,code\n          </p>\n \
          \       <p>\n             <b>Default Value: </b> By default all fields mentioned\
          \ below will be used to search by term\n          </p>\n        <h4>Available\
          \ Fields</h4><ul><li>name</li>\n<li>code</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountPaginatedList'
          description: The list of accounts
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get all accounts
      tags:
      - Account
    post:
      description: Creates an account
      operationId: createAccount
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
        description: The account to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account successfully created
          headers:
            Location:
              description: New Account link
              explode: false
              schema:
                type: string
              style: simple
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Create account
      tags:
      - Account
  /api/v2/accounts/{accountId}:
    get:
      description: Returns an account by id
      operationId: getAccount
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: number
        style: simple
      - description: The recursion level of the displayed details. Default is 0.
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Returns an account by id
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get account by id
      tags:
      - Account
    patch:
      description: Updates an account
      operationId: updateAccount
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccount'
        description: The account updates
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account successfully updated
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Update account
      tags:
      - Account
  /api/v2/accounts/{accountId}/actions/archive:
    post:
      description: Archives an account
      operationId: archiveAccount
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account successfully archived
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Archive account
      tags:
      - Account
  /api/v2/accounts/{accountId}/actions/unarchive:
    post:
      description: Unarchive an account
      operationId: unarchiveAccount
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Account'
          description: Account successfully unarchived
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Unarchive account
      tags:
      - Account
  /api/v2/accounts/{accountId}/limits:
    get:
      description: Returns the limits of an account
      operationId: getAccountLimits
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLimits'
          description: Returns the limits of an account
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get account limits
      tags:
      - Account
    patch:
      description: Updates the limits of an account
      operationId: updateAccountLimits
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountLimits'
        description: The account limits updates
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLimits'
          description: Account limits successfully updated
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Update account limits
      tags:
      - Account
  /api/v2/accounts/{accountId}/users:
    get:
      description: Returns users for an account
      operationId: getAccountUsers
      parameters:
      - explode: false
        in: path
        name: accountId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by displayName query param.
                    <p>
                       <b>Format: </b> filter.displayName={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.displayName=$not:$like:John Doe&filter.displayName=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.displayName
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by email query param.
                    <p>
                       <b>Format: </b> filter.email={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.email=$not:$like:John Doe&filter.email=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.email
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by accountId query param.
                    <p>
                       <b>Format: </b> filter.accountId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.accountId=$not:$like:John Doe&filter.accountId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.accountId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by archived query param.
                    <p>
                       <b>Format: </b> filter.archived={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.archived=$not:$like:John Doe&filter.archived=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.archived
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by infrastructureIdDefault query param.
                    <p>
                       <b>Format: </b> filter.infrastructureIdDefault={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureIdDefault=$not:$like:John Doe&filter.infrastructureIdDefault=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.infrastructureIdDefault
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> displayName:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>displayName</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - displayName:ASC
            - displayName:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> displayName,email\n         \
          \ </p>\n        <p>\n             <b>Default Value: </b> By default all\
          \ fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>displayName</li>\n<li>email</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPaginatedList'
          description: The list of all users for the specified account
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get users for account
      tags:
      - Account
  /api/v2/ai/generate:
    post:
      description: Returns response with potential actions to execute
      operationId: generateEliResponse
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AIGenerateRequest'
        description: The AI generate request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AIGenerateResponse'
          description: Returns response for the AI
        "401":
          description: Unauthorized
      security:
      - JWT: []
      - apiKey: []
      summary: Request from AI a response for the given input
      tags:
      - AI
  /api/v2/login:
    post:
      description: Authenticates the user credentials and establishes a session.
      operationId: login
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Returns a user
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Invalid authentication request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      summary: User login
      tags:
      - Authentication
  /api/v2/logout:
    post:
      description: Terminates the current user session and logs out the user.
      operationId: logout
      parameters: []
      responses:
        "200":
          description: User successfully logged out
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      summary: Logout user
      tags:
      - Authentication
  /api/v2/user:
    get:
      description: Return the current user.
      operationId: getCurrentUser
      parameters:
      - description: The recursion level of the displayed details. Default is 0.
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Returns the current user
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      summary: Get current user
      tags:
      - Authentication
  /api/v2/authentication-provider:
    get:
      description: Returns the authentication provider for the email address.
      operationId: getAuthenticationProvider
      parameters:
      - explode: true
        in: query
        name: email
        required: true
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationUserProvider'
          description: Returned authentication provider
        "400":
          description: Invalid email format
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Authentication provider not found
      summary: Retrieve authentication provider for an email
      tags:
      - Authentication
  /api/v2/authentication-providers:
    get:
      description: Returns all available authentication providers.
      operationId: getAuthenticationProviders
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationProviders'
          description: Returned authentication providers
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Authentication providers not found
      summary: Retrieve all authentication providers
      tags:
      - Authentication
  /api/v2/buckets/{bucketId}:
    get:
      description: Returns Bucket information
      operationId: getBucket
      parameters:
      - explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketExtendedInfo'
          description: Returns Bucket information
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Bucket information
      tags:
      - Bucket
  /api/v2/infrastructures/{infrastructureId}/buckets:
    get:
      description: Returns list of all Buckets
      operationId: getInfrastructureBuckets
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomain query param.
                    <p>
                       <b>Format: </b> filter.subdomain={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomain=$not:$like:John Doe&filter.subdomain=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomain
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomainPermanent query param.
                    <p>
                       <b>Format: </b> filter.subdomainPermanent={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomainPermanent=$not:$like:John Doe&filter.subdomainPermanent=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomainPermanent
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by storagePoolId query param.
                    <p>
                       <b>Format: </b> filter.storagePoolId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.storagePoolId=$not:$like:John Doe&filter.storagePoolId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.storagePoolId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>infrastructureId</li>\n\
          <li>storagePoolId</li>\n<li>serviceStatus</li>\n<li>config.deployStatus</li>\n\
          <li>config.deployType</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - infrastructureId:ASC
            - infrastructureId:DESC
            - storagePoolId:ASC
            - storagePoolId:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            - config.deployStatus:ASC
            - config.deployStatus:DESC
            - config.deployType:ASC
            - config.deployType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,subdomain,subdomainPermanent,storagePoolId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>subdomain</li>\n\
          <li>subdomainPermanent</li>\n<li>storagePoolId</li>\n<li>serviceStatus</li>\n\
          <li>infrastructureId</li>\n<li>config.deployStatus</li>\n<li>config.deployType</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketPaginatedList'
          description: Returns list of all Buckets
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all Buckets
      tags:
      - Bucket
    post:
      description: Creates a Bucket
      operationId: createInfrastructureBucket
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBucket'
        description: The Bucket create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
          description: The Bucket successfully created
          headers:
            Location:
              description: New Bucket link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a Bucket
      tags:
      - Bucket
  /api/v2/infrastructures/{infrastructureId}/buckets/{bucketId}:
    delete:
      description: Deletes a Bucket
      operationId: deleteBucket
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The Bucket successfully deleted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a Bucket
      tags:
      - Bucket
    get:
      description: Returns Bucket information
      operationId: getInfrastructureBucket
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
          description: Returns Bucket information
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Bucket information
      tags:
      - Bucket
  /api/v2/infrastructures/{infrastructureId}/buckets/{bucketId}/config:
    get:
      operationId: getBucketConfigInfo
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketConfiguration'
          description: Returns the Bucket
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get configuration information about the specified Bucket
      tags:
      - Bucket
    patch:
      description: Updates Bucket information
      operationId: updateBucket
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBucket'
        description: The Bucket update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
          description: The Bucket information successfully updated
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates Bucket information
      tags:
      - Bucket
  /api/v2/infrastructures/{infrastructureId}/buckets/{bucketId}/meta:
    patch:
      operationId: updateBucketMeta
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBucketMeta'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Bucket'
          description: Meta update of the Bucket.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
        "500":
          description: Failed to update meta of Bucket.
      security:
      - JWT: []
      - apiKey: []
      summary: Updates the meta of a Bucket
      tags:
      - Bucket
  /api/v2/infrastructures/{infrastructureId}/buckets/{bucketId}/credentials:
    get:
      description: Returns Bucket credentials
      operationId: getBucketCredentials
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketCredentials'
          description: Returns Bucket credentials
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Bucket credentials
      tags:
      - Bucket
  /api/v2/config:
    get:
      description: Returns a configuration object
      operationId: getConfiguration
      parameters:
      - description: Filter to be applied.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Returns a configuration object
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get configuration
      tags:
      - Configuration
  /api/v2/config/{filter}:
    patch:
      description: Partially updates a configuration object
      operationId: patchConfiguration
      parameters:
      - description: "Filter to be applied (auth, bsi, notification, tunnel)."
        explode: false
        in: path
        name: filter
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Object'
        description: Configuration object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Configuration updated successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Partially update configuration
      tags:
      - Configuration
    put:
      description: Updates a configuration object
      operationId: putConfiguration
      parameters:
      - description: "Filter to be applied (auth, bsi, notification, tunnel)."
        explode: false
        in: path
        name: filter
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Object'
        description: Configuration object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Configuration updated successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Update configuration
      tags:
      - Configuration
  /api/v2/custom-isos:
    get:
      description: Returns list of all Custom Isos
      operationId: getCustomIsos
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by displayName query param.
                    <p>
                       <b>Format: </b> filter.displayName={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.displayName=$not:$like:John Doe&filter.displayName=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.displayName
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by accessUrl query param.
                    <p>
                       <b>Format: </b> filter.accessUrl={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.accessUrl=$not:$like:John Doe&filter.accessUrl=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.accessUrl
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li></ul>\n \
          \     "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,name,displayName,accessUrl\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>name</li>\n<li>displayName</li>\n\
          <li>accessUrl</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIsoPaginatedList'
          description: Retrieves a list of Custom Isos.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
      security:
      - JWT: []
      - apiKey: []
      summary: Get all Custom Isos
      tags:
      - Custom Iso
    post:
      operationId: createCustomIso
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCustomIso'
        description: Custom Iso create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIso'
          description: Custom Iso created.
          headers:
            Location:
              description: New Bucket link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a Custom Iso.
      tags:
      - Custom Iso
  /api/v2/custom-isos/{customIsoId}:
    delete:
      operationId: deleteCustomIso
      parameters:
      - explode: false
        in: path
        name: customIsoId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: bucketId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Successfully deleted Custom Iso.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Delete Custom Iso
      tags:
      - Custom Iso
    get:
      description: Returns Custom Iso information
      operationId: getCustomIso
      parameters:
      - explode: false
        in: path
        name: customIsoId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIso'
          description: Returns Custom Iso information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Custom Iso information
      tags:
      - Custom Iso
    patch:
      operationId: updateCustomIso
      parameters:
      - explode: false
        in: path
        name: customIsoId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCustomIso'
        description: The updated Custom Iso object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIso'
          description: Updated Custom Iso information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Custom Iso not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates Custom Iso information
      tags:
      - Custom Iso
  /api/v2/custom-isos/{customIsoId}/actions/make-public:
    post:
      operationId: makeCustomIsoPublic
      parameters:
      - explode: false
        in: path
        name: customIsoId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomIso'
          description: Custom Iso information.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Make Custom Iso public
      tags:
      - Custom Iso
  /api/v2/custom-isos/{customIsoId}/actions/boot-into-server/{serverId}:
    post:
      operationId: bootCustomIsoIntoServer
      parameters:
      - explode: false
        in: path
        name: customIsoId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfo'
          description: Job information.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Boot Custom Iso into Server
      tags:
      - Custom Iso
  /api/v2/drives/{driveId}:
    get:
      description: Returns Drive information
      operationId: getDrive
      parameters:
      - explode: false
        in: path
        name: driveId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
          description: Returns Drive information
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Drive information
      tags:
      - Drive
  /api/v2/infrastructures/{infrastructureId}/drives:
    get:
      description: Returns list of all Drives on the infrastructure
      operationId: getInfrastructureDrives
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by instanceId query param.
                    <p>
                       <b>Format: </b> filter.instanceId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.instanceId=$not:$like:John Doe&filter.instanceId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.instanceId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomain query param.
                    <p>
                       <b>Format: </b> filter.subdomain={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomain=$not:$like:John Doe&filter.subdomain=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomain
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomainPermanent query param.
                    <p>
                       <b>Format: </b> filter.subdomainPermanent={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomainPermanent=$not:$like:John Doe&filter.subdomainPermanent=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomainPermanent
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by storagePoolId query param.
                    <p>
                       <b>Format: </b> filter.storagePoolId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.storagePoolId=$not:$like:John Doe&filter.storagePoolId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.storagePoolId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by provisioningProtocol query param.
                    <p>
                       <b>Format: </b> filter.provisioningProtocol={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.provisioningProtocol=$not:$like:John Doe&filter.provisioningProtocol=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.provisioningProtocol
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>storagePoolId</li>\n\
          <li>infrastructureId</li>\n<li>serviceStatus</li>\n<li>config.deployStatus</li>\n\
          <li>config.deployType</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - storagePoolId:ASC
            - storagePoolId:DESC
            - infrastructureId:ASC
            - infrastructureId:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            - config.deployStatus:ASC
            - config.deployStatus:DESC
            - config.deployType:ASC
            - config.deployType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,subdomain,subdomainPermanent,infrastructureId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>subdomain</li>\n\
          <li>subdomainPermanent</li>\n<li>infrastructureId</li>\n<li>storagePoolId</li>\n\
          <li>serviceStatus</li>\n<li>wwn</li>\n<li>networkVlanId</li>\n<li>provisioningProtocol</li>\n\
          <li>templateId</li>\n<li>config.deployStatus</li>\n<li>config.deployType</li>\n\
          <li>config.templateId</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrivePaginatedList'
          description: Returns list of all Drives on the infrastructure
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all Drives on the infrastructure
      tags:
      - Drive
    post:
      operationId: createDrive
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateDrive'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
          description: Config update of the Drive.
          headers:
            Location:
              description: New Drive link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
      security:
      - JWT: []
      - apiKey: []
      summary: Create a new Drive
      tags:
      - Drive
  /api/v2/infrastructures/{infrastructureId}/drives/{driveId}:
    delete:
      operationId: deleteDrive
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: driveId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successfully deleted Drive.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a Drive
      tags:
      - Drive
    get:
      description: Returns Drive information
      operationId: getInfrastructureDrive
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: driveId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
          description: Returns Drive information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Drive information
      tags:
      - Drive
  /api/v2/infrastructures/{infrastructureId}/drives/{driveId}/config:
    get:
      operationId: getDriveConfigInfo
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: driveId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveConfiguration'
          description: Returns the Drive
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get configuration information about the specified Drive
      tags:
      - Drive
    patch:
      operationId: patchDriveConfig
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: driveId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDrive'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
          description: Config update of the Drive.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Updates the config of a Drive
      tags:
      - Drive
  /api/v2/infrastructures/{infrastructureId}/drives/{driveId}/meta:
    patch:
      operationId: patchDriveMeta
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: driveId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDriveMeta'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Drive'
          description: Meta update of the Drive.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
      security:
      - JWT: []
      - apiKey: []
      summary: Updates the meta of a Drive
      tags:
      - Drive
  /api/v2/infrastructures/{infrastructureId}/drive-groups:
    get:
      description: Returns list of all Drive Groups on the infrastructure
      operationId: getInfrastructureDriveGroups
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverInstanceGroupId query param.
                    <p>
                       <b>Format: </b> filter.serverInstanceGroupId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverInstanceGroupId=$not:$like:John Doe&filter.serverInstanceGroupId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serverInstanceGroupId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by templateId query param.
                    <p>
                       <b>Format: </b> filter.templateId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.templateId=$not:$like:John Doe&filter.templateId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.templateId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomain query param.
                    <p>
                       <b>Format: </b> filter.subdomain={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomain=$not:$like:John Doe&filter.subdomain=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomain
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomainPermanent query param.
                    <p>
                       <b>Format: </b> filter.subdomainPermanent={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomainPermanent=$not:$like:John Doe&filter.subdomainPermanent=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomainPermanent
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by extensionInstanceId query param.
                    <p>
                       <b>Format: </b> filter.extensionInstanceId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.extensionInstanceId=$not:$like:John Doe&filter.extensionInstanceId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.extensionInstanceId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by tags query param.
                    <p>
                       <b>Format: </b> filter.tags={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.tags=$not:$like:John Doe&filter.tags=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$contains</li></ul>
        explode: true
        in: query
        name: filter.tags
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>serviceStatus</li>\n\
          <li>config.deployStatus</li>\n<li>config.deployType</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            - config.deployStatus:ASC
            - config.deployStatus:DESC
            - config.deployType:ASC
            - config.deployType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,subdomain,subdomainPermanent,infrastructureId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>subdomain</li>\n\
          <li>subdomainPermanent</li>\n<li>infrastructureId</li>\n<li>serviceStatus</li>\n\
          <li>templateId</li>\n<li>serverInstanceGroupId</li>\n<li>extensionInstanceId</li>\n\
          <li>config.deployStatus</li>\n<li>config.deployType</li>\n<li>config.templateId</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveGroupPaginatedList'
          description: Returns list of all DriveGroups on the infrastructure
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all Drive Groups on the infrastructure
      tags:
      - Drive Group
    post:
      operationId: createDriveGroup
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroupDrive'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveGroup'
          description: Config update of the Drive Group.
          headers:
            Location:
              description: New Drive Group link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
      security:
      - JWT: []
      - apiKey: []
      summary: Create a new Drive Group
      tags:
      - Drive Group
  /api/v2/infrastructures/{infrastructureId}/drive-groups/{driveGroupId}:
    delete:
      operationId: deleteDriveGroup
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: driveGroupId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successfully deleted Drive Group.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a Drive Group
      tags:
      - Drive Group
    get:
      description: Returns DriveGroup information
      operationId: getInfrastructureDriveGroup
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: driveGroupId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveGroup'
          description: Returns Drive Group information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get DriveGroup information
      tags:
      - Drive Group
  /api/v2/infrastructures/{infrastructureId}/drive-groups/{driveGroupId}/drives:
    get:
      description: Returns the Drives of the Drive Group
      operationId: getDriveGroupDrives
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: driveGroupId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrivePaginatedList'
          description: Returns the Drives of the Drive Group
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get the Drives of the Drive Group
      tags:
      - Drive Group
  /api/v2/infrastructures/{infrastructureId}/drive-groups/{driveGroupId}/config:
    get:
      operationId: getDriveGroupConfigInfo
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: driveGroupId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveGroupConfiguration'
          description: Returns the Drive Group
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get configuration information about the specified Drive Group
      tags:
      - Drive Group
    patch:
      operationId: patchDriveGroupConfig
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: driveGroupId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroupDrive'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveGroup'
          description: Config update of the Drive Group.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Updates the config of a Drive Group
      tags:
      - Drive Group
  /api/v2/infrastructures/{infrastructureId}/drive-groups/{driveGroupId}/meta:
    patch:
      operationId: patchDriveGroupMeta
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: driveGroupId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateDriveGroupMeta'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveGroup'
          description: Meta update of the Drive Group.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
      security:
      - JWT: []
      - apiKey: []
      summary: Updates the meta of a Drive Group
      tags:
      - Drive Group
  /api/v2/infrastructures/{infrastructureId}/extension-instances:
    get:
      description: Returns list of extension instances
      operationId: getExtensionInstances
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by extensionId query param.
                    <p>
                       <b>Format: </b> filter.extensionId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.extensionId=$not:$like:John Doe&filter.extensionId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.extensionId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n\
          <li>extensionId</li>\n<li>infrastructureId</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - label:ASC
            - label:DESC
            - extensionId:ASC
            - extensionId:DESC
            - infrastructureId:ASC
            - infrastructureId:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> label\n          </p>\n     \
          \   <p>\n             <b>Default Value: </b> By default all fields mentioned\
          \ below will be used to search by term\n          </p>\n        <h4>Available\
          \ Fields</h4><ul><li>label</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionInstancePaginatedList'
          description: The list of extension instances
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get extension instances list
      tags:
      - Extension Instance
    post:
      description: Adds extension instance to the specified infrastructure. Note that
        a infrastructure deploy is needed for the changes to take effect.
      operationId: createExtensionInstance
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExtensionInstance'
        description: The extension instance to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionInstance'
          description: The details of created extension instance
          headers:
            Location:
              description: New Extension Instance link
              explode: false
              schema:
                type: string
              style: simple
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found
      security:
      - JWT: []
      - apiKey: []
      summary: Add extension instance to an infrastructure
      tags:
      - Extension Instance
  /api/v2/extension-instances/{extensionInstanceId}:
    delete:
      description: Deletes the specified extension instance
      operationId: deleteExtensionInstance
      parameters:
      - explode: false
        in: path
        name: extensionInstanceId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The specified extension instance was successfully deleted
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Extension instance not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Delete extension instance
      tags:
      - Extension Instance
    get:
      description: Returns the details of the specified extension instance
      operationId: getExtensionInstance
      parameters:
      - explode: false
        in: path
        name: extensionInstanceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionInstance'
          description: The details of the specified extension instance
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Extension instance not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get extension instance details
      tags:
      - Extension Instance
  /api/v2/extension-instances/{extensionInstanceId}/config:
    patch:
      description: Updates the specified extension instance
      operationId: updateExtensionInstance
      parameters:
      - explode: false
        in: path
        name: extensionInstanceId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExtensionInstance'
        description: The extension instance changes
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionInstance'
          description: The specified extension instance was successfully updated
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Extension instance not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Update extension instance configuration
      tags:
      - Extension Instance
  /api/v2/extensions:
    get:
      description: Returns list of the available extensions
      operationId: getExtensions
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ -1\n          </p>\n      <p>\n             <b>Max Value: </b> -1\n  \
          \        </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by status query param.
                    <p>
                       <b>Format: </b> filter.status={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.status=$not:$like:John Doe&filter.status=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.status
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$null</li>
          <li>$ilike</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:ASC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>name</li>\n\
          <li>status</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - name:ASC
            - name:DESC
            - status:ASC
            - status:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> label\n          </p>\n     \
          \   <p>\n             <b>Default Value: </b> By default all fields mentioned\
          \ below will be used to search by term\n          </p>\n        <h4>Available\
          \ Fields</h4><ul><li>label</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtensionList'
          description: The list of the available extensions
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of available extensions
      tags:
      - Extension
    post:
      description: Returns details of the new extension
      operationId: createExtension
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateExtension'
        description: The extension details
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
          description: The details of the created extension
          headers:
            Location:
              description: New Extension link
              explode: false
              schema:
                type: string
              style: simple
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Create extension
      tags:
      - Extension
  /api/v2/extensions/{extensionId}:
    get:
      description: Returns details of the specified extension
      operationId: getExtension
      parameters:
      - explode: false
        in: path
        name: extensionId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
          description: The details of the specified extension
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Extension not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get details for an extension
      tags:
      - Extension
    patch:
      description: Returns details of the updated extension
      operationId: updateExtension
      parameters:
      - explode: false
        in: path
        name: extensionId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExtension'
        description: The extension details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Extension'
          description: The details of the updated extension
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Update extension
      tags:
      - Extension
  /api/v2/extensions/{extensionId}/actions/publish:
    post:
      description: Publishes draft extension.
      operationId: publishExtension
      parameters:
      - explode: false
        in: path
        name: extensionId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The extension was published successfully
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Extension not found
        "409":
          description: The extension state does not allow this operation.
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Publish draft extension
      tags:
      - Extension
  /api/v2/extensions/{extensionId}/actions/archive:
    post:
      description: Archives published extension.
      operationId: archiveExtension
      parameters:
      - explode: false
        in: path
        name: extensionId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The extension was archived successfully
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Extension not found
        "409":
          description: The extension state does not allow this operation.
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Archive published extension
      tags:
      - Extension
  /api/v2/file-shares/{fileShareId}:
    get:
      description: Returns File Share information
      operationId: getFileShare
      parameters:
      - explode: false
        in: path
        name: fileShareId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareExtendedInfo'
          description: Returns File Share information
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get File Share information
      tags:
      - File Share
  /api/v2/infrastructures/{infrastructureId}/file-shares:
    get:
      description: Returns list of all File Shares
      operationId: getInfrastructureFileShares
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomain query param.
                    <p>
                       <b>Format: </b> filter.subdomain={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomain=$not:$like:John Doe&filter.subdomain=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomain
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomainPermanent query param.
                    <p>
                       <b>Format: </b> filter.subdomainPermanent={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomainPermanent=$not:$like:John Doe&filter.subdomainPermanent=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomainPermanent
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by storagePoolId query param.
                    <p>
                       <b>Format: </b> filter.storagePoolId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.storagePoolId=$not:$like:John Doe&filter.storagePoolId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.storagePoolId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>infrastructureId</li>\n\
          <li>storagePoolId</li>\n<li>serviceStatus</li>\n<li>config.deployStatus</li>\n\
          <li>config.deployType</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - infrastructureId:ASC
            - infrastructureId:DESC
            - storagePoolId:ASC
            - storagePoolId:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            - config.deployStatus:ASC
            - config.deployStatus:DESC
            - config.deployType:ASC
            - config.deployType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,subdomain,subdomainPermanent,storagePoolId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>subdomain</li>\n\
          <li>subdomainPermanent</li>\n<li>storagePoolId</li>\n<li>serviceStatus</li>\n\
          <li>infrastructureId</li>\n<li>config.deployStatus</li>\n<li>config.deployType</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSharePaginatedList'
          description: Returns list of all File Shares
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all File Shares
      tags:
      - File Share
    post:
      description: Creates a File Share
      operationId: createInfrastructureFileShare
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFileShare'
        description: The File Share create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShare'
          description: The File Share successfully created
          headers:
            Location:
              description: New File Share link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a File Share
      tags:
      - File Share
  /api/v2/infrastructures/{infrastructureId}/file-shares/{fileShareId}:
    delete:
      description: Deletes a File Share
      operationId: deleteFileShare
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: fileShareId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The File Share successfully deleted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a File Share
      tags:
      - File Share
    get:
      description: Returns File Share information
      operationId: getInfrastructureFileShare
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: fileShareId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShare'
          description: Returns File Share information
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get File Share information
      tags:
      - File Share
  /api/v2/infrastructures/{infrastructureId}/file-shares/{fileShareId}/config:
    get:
      operationId: getFileShareConfigInfo
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: fileShareId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareConfiguration'
          description: Returns the File Share
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get configuration information about the specified File Share
      tags:
      - File Share
    patch:
      description: Updates File Share config information
      operationId: updateFileShareConfig
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: fileShareId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFileShare'
        description: The File Share update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShare'
          description: The File Share config information successfully updated
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates File Share config information
      tags:
      - File Share
  /api/v2/infrastructures/{infrastructureId}/file-shares/{fileShareId}/meta:
    patch:
      operationId: patchFileShareMeta
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: fileShareId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFileShareMeta'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShare'
          description: Meta update of the File Share.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
        "500":
          description: Failed to update meta of File Share.
      security:
      - JWT: []
      - apiKey: []
      summary: Updates the meta of a File Share
      tags:
      - File Share
  /api/v2/infrastructures/{infrastructureId}/file-shares/{fileShareId}/hosts:
    get:
      description: Returns the Hosts of File Share
      operationId: getFileShareHosts
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: fileShareId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareHosts'
          description: Returns the Hosts of File Share
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get the Hosts of File Share
      tags:
      - File Share
  /api/v2/infrastructures/{infrastructureId}/file-shares/{fileShareId}/actions/modify-instance-array-hosts-bulk:
    post:
      description: Updates Instance Array Hosts on the File Share
      operationId: updateFileShareInstanceArrayHostsBulk
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: fileShareId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileShareHostsModifyBulk'
        description: The File Share Instance Array Hosts update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileShareHosts'
          description: The File Share information successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates Instance Array Hosts on the File Share
      tags:
      - File Share
  /api/v2/firmware/baseline:
    get:
      description: Returns a list of firmware baselines
      operationId: getFirmwareBaselines
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by level query param.
                    <p>
                       <b>Format: </b> filter.level={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.level=$not:$like:John Doe&filter.level=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.level
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by levelFilter query param.
                    <p>
                       <b>Format: </b> filter.levelFilter={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.levelFilter=$not:$like:John Doe&filter.levelFilter=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.levelFilter
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>name</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - name:ASC
            - name:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> name,levelFilter\n          </p>\n\
          \        <p>\n             <b>Default Value: </b> By default all fields\
          \ mentioned below will be used to search by term\n          </p>\n     \
          \   <h4>Available Fields</h4><ul><li>name</li>\n<li>levelFilter</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to select.\n      <p>\n             <b>Example:\
          \ </b> id,name,description,catalog,level\n          </p>\n      <p>\n  \
          \           <b>Default Value: </b> By default all fields returns. If you\
          \ want to select only some fields, provide them in query param\n       \
          \   </p>\n      "
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareBaselinePaginatedList'
          description: The list of Firmware Baselines
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get Firmware Baselines
      tags:
      - Firmware Baseline
    post:
      description: Creates a new firmware baseline and returns it
      operationId: createFirmwareBaseline
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirmwareBaseline'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFirmwareBaseline'
          description: The new firmware baseline
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Create a new firmware baseline
      tags:
      - Firmware Baseline
  /api/v2/firmware/baseline/{firmwareBaselineId}:
    delete:
      description: Deletes a firmware baseline
      operationId: deleteFirmwareBaseline
      parameters:
      - description: The firmware baseline id
        explode: false
        in: path
        name: firmwareBaselineId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Delete Firmware Baseline
      tags:
      - Firmware Baseline
    get:
      description: Returns a firmware baseline
      operationId: getFirmwareBaseline
      parameters:
      - description: The firmware baseline id
        explode: false
        in: path
        name: firmwareBaselineId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareBaseline'
          description: The firmware baseline
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Firmware Baseline
      tags:
      - Firmware Baseline
    put:
      description: Updates a firmware baseline
      operationId: updateFirmwareBaseline
      parameters:
      - description: The firmware baseline id
        explode: false
        in: path
        name: firmwareBaselineId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirmwareBaseline'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareBaseline'
          description: The firmware baseline
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Update Firmware Baseline
      tags:
      - Firmware Baseline
  /api/v2/firmware/binary:
    get:
      description: Returns a list of firmware binaries
      operationId: getFirmwareBinaries
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by catalogId query param.
                    <p>
                       <b>Format: </b> filter.catalogId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.catalogId=$not:$like:John Doe&filter.catalogId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.catalogId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by externalId query param.
                    <p>
                       <b>Format: </b> filter.externalId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.externalId=$not:$like:John Doe&filter.externalId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.externalId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by packageId query param.
                    <p>
                       <b>Format: </b> filter.packageId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.packageId=$not:$like:John Doe&filter.packageId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.packageId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by createdTimestamp query param.
                    <p>
                       <b>Format: </b> filter.createdTimestamp={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.createdTimestamp=$not:$like:John Doe&filter.createdTimestamp=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.createdTimestamp
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by updateSeverity query param.
                    <p>
                       <b>Format: </b> filter.updateSeverity={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.updateSeverity=$not:$like:John Doe&filter.updateSeverity=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.updateSeverity
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by rebootRequired query param.
                    <p>
                       <b>Format: </b> filter.rebootRequired={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.rebootRequired=$not:$like:John Doe&filter.rebootRequired=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.rebootRequired
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by vendorReleaseTimestamp query param.
                    <p>
                       <b>Format: </b> filter.vendorReleaseTimestamp={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.vendorReleaseTimestamp=$not:$like:John Doe&filter.vendorReleaseTimestamp=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.vendorReleaseTimestamp
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by packageVersion query param.
                    <p>
                       <b>Format: </b> filter.packageVersion={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.packageVersion=$not:$like:John Doe&filter.packageVersion=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.packageVersion
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>name</li>\n\
          <li>updateSeverity</li>\n<li>catalogId</li>\n<li>rebootRequired</li>\n<li>vendorReleaseTimestamp</li>\n\
          <li>packageVersion</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - name:ASC
            - name:DESC
            - updateSeverity:ASC
            - updateSeverity:DESC
            - catalogId:ASC
            - catalogId:DESC
            - rebootRequired:ASC
            - rebootRequired:DESC
            - vendorReleaseTimestamp:ASC
            - vendorReleaseTimestamp:DESC
            - packageVersion:ASC
            - packageVersion:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> name\n          </p>\n      \
          \  <p>\n             <b>Default Value: </b> By default all fields mentioned\
          \ below will be used to search by term\n          </p>\n        <h4>Available\
          \ Fields</h4><ul><li>name</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to select.\n      <p>\n             <b>Example:\
          \ </b> id,catalogId,externalId,packageId,packageVersion\n          </p>\n\
          \      <p>\n             <b>Default Value: </b> By default all fields returns.\
          \ If you want to select only some fields, provide them in query param\n\
          \          </p>\n      "
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareBinaryPaginatedList'
          description: The list of Firmware Binaries
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get Firmware Binaries
      tags:
      - Firmware Binary
    post:
      description: Creates a new firmware binary and returns it
      operationId: createFirmwareBinary
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirmwareBinary'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareBinary'
          description: The new firmware binary
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Create a new firmware binary
      tags:
      - Firmware Binary
  /api/v2/firmware/binary/{firmwareBinaryId}:
    delete:
      description: Deletes a firmware binary
      operationId: deleteFirmwareBinary
      parameters:
      - description: The firmware binary id
        explode: false
        in: path
        name: firmwareBinaryId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Delete Firmware Binary
      tags:
      - Firmware Binary
    get:
      description: Returns a firmware binary
      operationId: getFirmwareBinary
      parameters:
      - description: The firmware binary id
        explode: false
        in: path
        name: firmwareBinaryId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareBinary'
          description: The firmware binary
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Firmware Binary
      tags:
      - Firmware Binary
    put:
      description: Updates a firmware binary
      operationId: updateFirmwareBinary
      parameters:
      - description: The firmware binary id
        explode: false
        in: path
        name: firmwareBinaryId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirmwareBinary'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareBinary'
          description: The firmware binary
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Update Firmware Binary
      tags:
      - Firmware Binary
  /api/v2/firmware/catalog:
    get:
      description: Returns a list of firmware catalogs
      operationId: getFirmwareCatalogs
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by description query param.
                    <p>
                       <b>Format: </b> filter.description={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.description=$not:$like:John Doe&filter.description=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.description
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by vendor query param.
                    <p>
                       <b>Format: </b> filter.vendor={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.vendor=$not:$like:John Doe&filter.vendor=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.vendor
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by vendorId query param.
                    <p>
                       <b>Format: </b> filter.vendorId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.vendorId=$not:$like:John Doe&filter.vendorId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.vendorId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by vendorUrl query param.
                    <p>
                       <b>Format: </b> filter.vendorUrl={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.vendorUrl=$not:$like:John Doe&filter.vendorUrl=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.vendorUrl
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by vendorReleaseTimestamp query param.
                    <p>
                       <b>Format: </b> filter.vendorReleaseTimestamp={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.vendorReleaseTimestamp=$not:$like:John Doe&filter.vendorReleaseTimestamp=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.vendorReleaseTimestamp
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by updateType query param.
                    <p>
                       <b>Format: </b> filter.updateType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.updateType=$not:$like:John Doe&filter.updateType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.updateType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by createdTimestamp query param.
                    <p>
                       <b>Format: </b> filter.createdTimestamp={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.createdTimestamp=$not:$like:John Doe&filter.createdTimestamp=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.createdTimestamp
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>name</li>\n\
          <li>vendor</li>\n<li>vendorReleaseTimestamp</li>\n<li>updateType</li>\n\
          <li>createdTimestamp</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - name:ASC
            - name:DESC
            - vendor:ASC
            - vendor:DESC
            - vendorReleaseTimestamp:ASC
            - vendorReleaseTimestamp:DESC
            - updateType:ASC
            - updateType:DESC
            - createdTimestamp:ASC
            - createdTimestamp:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> name,description\n          </p>\n\
          \        <p>\n             <b>Default Value: </b> By default all fields\
          \ mentioned below will be used to search by term\n          </p>\n     \
          \   <h4>Available Fields</h4><ul><li>name</li>\n<li>description</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to select.\n      <p>\n             <b>Example:\
          \ </b> id,name,description,vendor,vendorId\n          </p>\n      <p>\n\
          \             <b>Default Value: </b> By default all fields returns. If you\
          \ want to select only some fields, provide them in query param\n       \
          \   </p>\n      "
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareCatalogPaginatedList'
          description: The list of Firmware Catalogs
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get Firmware Catalogs
      tags:
      - Firmware Catalog
    post:
      description: Returns a list of firmware catalogs
      operationId: createFirmwareCatalogs
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFirmwareCatalog'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareCatalog'
          description: The list of Firmware Catalogs
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Create Firmware Catalog
      tags:
      - Firmware Catalog
  /api/v2/firmware/catalog/{firmwareCatalogId}:
    delete:
      description: Deletes a firmware catalog
      operationId: deleteFirmwareCatalog
      parameters:
      - description: The firmware catalog id
        explode: false
        in: path
        name: firmwareCatalogId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: No content
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Delete Firmware Catalog
      tags:
      - Firmware Catalog
    get:
      description: Returns a firmware catalog
      operationId: getFirmwareCatalog
      parameters:
      - description: The firmware catalog id
        explode: false
        in: path
        name: firmwareCatalogId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareCatalog'
          description: The firmware catalog
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Firmware Catalog
      tags:
      - Firmware Catalog
    put:
      description: Updates a firmware catalog
      operationId: updateFirmwareCatalog
      parameters:
      - description: The firmware catalog id
        explode: false
        in: path
        name: firmwareCatalogId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFirmwareCatalog'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareCatalog'
          description: The firmware catalog
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Update Firmware Catalog
      tags:
      - Firmware Catalog
  /api/v2/firmware/configuration:
    get:
      description: Returns Global Firmware Configuration
      operationId: getGlobalFirmwareConfiguration
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalFirmwareUpgradeConfiguration'
          description: Returns Global Firmware Configuration
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get Global Firmware Configuration
      tags:
      - Firmware Policy
    patch:
      description: Updates Global Firmware Policy Configuration
      operationId: updateGlobalFirmwareConfiguration
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGlobalFirmwareUpgradeConfiguration'
        description: The Global Firmware Policy update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GlobalFirmwareUpgradeConfiguration'
          description: The Global Firmware Policy successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates Global Firmware Policy Configuration
      tags:
      - Firmware Policy
  /api/v2/firmware/policies:
    get:
      description: Returns a list of Firmware Policies
      operationId: getFirmwarePolicies
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by status query param.
                    <p>
                       <b>Format: </b> filter.status={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.status=$not:$like:John Doe&filter.status=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.status
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by action query param.
                    <p>
                       <b>Format: </b> filter.action={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.action=$not:$like:John Doe&filter.action=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.action
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by instanceArrayIds query param.
                    <p>
                       <b>Format: </b> filter.instanceArrayIds={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.instanceArrayIds=$not:$like:John Doe&filter.instanceArrayIds=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.instanceArrayIds
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by userIdOwner query param.
                    <p>
                       <b>Format: </b> filter.userIdOwner={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.userIdOwner=$not:$like:John Doe&filter.userIdOwner=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.userIdOwner
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n\
          <li>status</li>\n<li>action</li>\n<li>userIdOwner</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - label:ASC
            - label:DESC
            - status:ASC
            - status:DESC
            - action:ASC
            - action:DESC
            - userIdOwner:ASC
            - userIdOwner:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,status,action,userIdOwner\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>status</li>\n\
          <li>action</li>\n<li>userIdOwner</li>\n<li>instanceArrayIds</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerFirmwareUpgradePolicyPaginatedList'
          description: Returns a list of Firmware Policies
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of Firmware Policies
      tags:
      - Firmware Policy
    post:
      description: Creates a Firmware Policy
      operationId: createFirmwarePolicy
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerFirmwareUpgradePolicy'
        description: The Firmware Policy create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerFirmwareUpgradePolicy'
          description: The Firmware Policy successfully created
          headers:
            Location:
              description: New Firmware Policy link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a Firmware Policy
      tags:
      - Firmware Policy
  /api/v2/firmware/policies/{firmwarePolicyId}:
    delete:
      description: Deletes a Firmware Policy
      operationId: deleteFirmwarePolicy
      parameters:
      - explode: false
        in: path
        name: firmwarePolicyId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The Firmware Policy was successfully deleted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a Firmware Policy
      tags:
      - Firmware Policy
    get:
      description: Returns Firmware Policy information
      operationId: getFirmwarePolicyInfo
      parameters:
      - explode: false
        in: path
        name: firmwarePolicyId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerFirmwareUpgradePolicy'
          description: Returns Firmware Policy information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Firmware Policy information
      tags:
      - Firmware Policy
    patch:
      description: Updates aFirmware Policy
      operationId: updateFirmwarePolicy
      parameters:
      - explode: false
        in: path
        name: firmwarePolicyId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerFirmwareUpgradePolicy'
        description: The Firmware Policy update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerFirmwareUpgradePolicy'
          description: The Firmware Policy successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates a Firmware Policy
      tags:
      - Firmware Policy
  /api/v2/firmware/policies/{firmwarePolicyId}/actions/generate-audit:
    post:
      description: Returns the server components ids that match this policy
      operationId: generateFirmwarePolicyAudit
      parameters:
      - explode: false
        in: path
        name: firmwarePolicyId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerFirmwareUpgradePolicyAudit'
          description: Audit for firmware upgrade policy retrieved
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Returns the server components ids that match this policy
      tags:
      - Firmware Policy
  /api/v2/firmware/policies/actions/apply-without-instance-arrays:
    post:
      description: Applies all Firmware Policies not linked to instance arrays
      operationId: applyFirmwarePoliciesWithoutInstanceArrays
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerFirmwareUpgradePolicyApplyResult'
          description: The result of scheduling the firmware policies
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Applies all Firmware Policies not linked to instance arrays
      tags:
      - Firmware Policy
  /api/v2/firmware/policies/actions/apply-with-instance-arrays:
    post:
      description: Applies all Firmware Policies linked to instance arrays
      operationId: applyFirmwarePoliciesWithInstanceArrays
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerFirmwareUpgradePolicyApplyResult'
          description: The result of scheduling the firmware policies
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Applies all Firmware Policies linked to instance arrays
      tags:
      - Firmware Policy
  /api/v2/firmware/search/baseline:
    post:
      description: Returns a list of firmware catalogs
      operationId: searchFirmwareBaselines
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchFirmwareBinary'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FirmwareCatalogPaginatedList'
          description: The list of Firmware Catalogs
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Search Firmware Baselines
      tags:
      - Firmware Baseline Search
  /api/v2/infrastructures:
    get:
      description: Returns list of all infrastructures
      operationId: getInfrastructures
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by siteId query param.
                    <p>
                       <b>Format: </b> filter.siteId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.siteId=$not:$like:John Doe&filter.siteId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.siteId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by userIdOwner query param.
                    <p>
                       <b>Format: </b> filter.userIdOwner={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.userIdOwner=$not:$like:John Doe&filter.userIdOwner=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.userIdOwner
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomain query param.
                    <p>
                       <b>Format: </b> filter.subdomain={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomain=$not:$like:John Doe&filter.subdomain=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomain
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomainPermanent query param.
                    <p>
                       <b>Format: </b> filter.subdomainPermanent={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomainPermanent=$not:$like:John Doe&filter.subdomainPermanent=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomainPermanent
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by deployId query param.
                    <p>
                       <b>Format: </b> filter.deployId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.deployId=$not:$like:John Doe&filter.deployId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.deployId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>siteId</li>\n\
          <li>subdomain</li>\n<li>subdomainPermanent</li>\n<li>serviceStatus</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - siteId:ASC
            - siteId:DESC
            - subdomain:ASC
            - subdomain:DESC
            - subdomainPermanent:ASC
            - subdomainPermanent:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,siteId,subdomain,subdomainPermanent\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>siteId</li>\n\
          <li>subdomain</li>\n<li>subdomainPermanent</li>\n<li>serviceStatus</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: The account ID to filter user infrastructures by
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructurePaginatedList'
          description: Returns list of all infrastructures
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all infrastructures
      tags:
      - Infrastructure
    post:
      description: Creates a new infrastructure
      operationId: createInfrastructure
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfrastructureCreate'
        description: The infrastructure to create
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infrastructure'
          description: Creates a new infrastructure
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a new infrastructure
      tags:
      - Infrastructure
  /api/v2/infrastructures/{infrastructureId}:
    delete:
      description: Deletes the specified infrastructure
      operationId: deleteInfrastructure
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Deleted the specified infrastructure
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes the specified infrastructure
      tags:
      - Infrastructure
    get:
      description: Retrieves the specified infrastructure
      operationId: getInfrastructure
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infrastructure'
          description: Retrieved the specified infrastructure
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Retrieves the specified infrastructure
      tags:
      - Infrastructure
  /api/v2/infrastructures/{infrastructureId}/config:
    get:
      operationId: getInfrastructureConfigInfo
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfrastructureConfiguration'
          description: Returns the Infrastructure configuration information
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get configuration information about the specified Infrastructure
      tags:
      - Infrastructure
    patch:
      description: Updates the specified infrastructure configuration
      operationId: updateInfrastructureConfiguration
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInfrastructure'
        description: The infrastructure configuration to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infrastructure'
          description: Updated the specified infrastructure configuration
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Updates the specified infrastructure configuration
      tags:
      - Infrastructure
  /api/v2/infrastructures/{infrastructureId}/metadata:
    patch:
      description: Updates the specified infrastructure metadata
      operationId: updateInfrastructureMetadata
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInfrastructureMeta'
        description: The infrastructure metadata to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infrastructure'
          description: Updated the specified infrastructure metadata
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Updates the specified infrastructure metadata
      tags:
      - Infrastructure
  /api/v2/infrastructures/{infrastructureId}/users:
    get:
      description: Retrieves the specified infrastructure users
      operationId: getInfrastructureUsers
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/UserInfo'
                type: array
          description: Retrieved the specified infrastructure users
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Retrieves the specified infrastructure users
      tags:
      - Infrastructure
    post:
      description: Adds a user to the specified infrastructure
      operationId: addInfrastructureUser
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddUserToInfrastructure'
        description: Additional information for the user to add
        required: true
      responses:
        "202":
          description: Added a user to the specified infrastructure
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Adds a user to the specified infrastructure
      tags:
      - Infrastructure
  /api/v2/infrastructures/{infrastructureId}/users/{userId}:
    delete:
      description: Removes a user from the specified infrastructure
      operationId: removeInfrastructureUser
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          description: Removed a user from the specified infrastructure
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Removes a user from the specified infrastructure
      tags:
      - Infrastructure
  /api/v2/infrastructures/{infrastructureId}/user-limits:
    get:
      description: Retrieves the specified infrastructure user limits
      operationId: getInfrastructureUserLimits
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLimits'
          description: Retrieved the specified infrastructure user limits
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Retrieves the specified infrastructure user limits
      tags:
      - Infrastructure
  /api/v2/infrastructures/{infrastructureId}/actions/deploy:
    post:
      description: Deploys the specified infrastructure
      operationId: deployInfrastructure
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfrastructureDeployOptions'
        description: The infrastructure deploy options
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Infrastructure'
          description: Deploys the specified infrastructure
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Deploys the specified infrastructure
      tags:
      - Infrastructure
  /api/v2/infrastructures/{infrastructureId}/actions/revert:
    post:
      description: Reverts the specified infrastructure
      operationId: revertInfrastructure
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "202":
          description: Reverts the specified infrastructure
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Reverts the specified infrastructure
      tags:
      - Infrastructure
  /api/v2/infrastructures/{infrastructureId}/server-instance-groups:
    get:
      description: Returns list of Server Instance Groups in the specified infrastructure
      operationId: getInfrastructureServerInstanceGroups
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: integer
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by extensionInstanceId query param.
                    <p>
                       <b>Format: </b> filter.extensionInstanceId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.extensionInstanceId=$not:$like:John Doe&filter.extensionInstanceId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.extensionInstanceId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - label:ASC
            - label:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> label\n          </p>\n     \
          \   <p>\n             <b>Default Value: </b> By default all fields mentioned\
          \ below will be used to search by term\n          </p>\n        <h4>Available\
          \ Fields</h4><ul><li>label</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceGroupPaginatedList'
          description: The list of Server Instance Groups
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found
      security:
      - JWT: []
      - apiKey: []
      summary: List Server Instance Groups for an infrastructure
      tags:
      - Server Instance Group
    post:
      operationId: createServerInstanceGroup
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerInstanceGroupCreate'
        description: The Server Instance Group to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceGroup'
          description: The details of created virtual machine instance group
          headers:
            Location:
              description: New Server Instance Group link
              explode: false
              schema:
                type: string
              style: simple
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found
      security:
      - JWT: []
      - apiKey: []
      summary: Add a Server Instance Group to an infrastructure. By default it will
        not have any instance.
      tags:
      - Server Instance Group
  /api/v2/infrastructures/{infrastructureId}/server-instances:
    get:
      description: Returns list of Server Instances in the specified infrastructure
      operationId: getInfrastructureServerInstances
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: integer
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by groupId query param.
                    <p>
                       <b>Format: </b> filter.groupId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.groupId=$not:$like:John Doe&filter.groupId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.groupId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverId query param.
                    <p>
                       <b>Format: </b> filter.serverId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverId=$not:$like:John Doe&filter.serverId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serverId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.serverId query param.
                    <p>
                       <b>Format: </b> filter.config.serverId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.serverId=$not:$like:John Doe&filter.config.serverId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.config.serverId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - label:ASC
            - label:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> label\n          </p>\n     \
          \   <p>\n             <b>Default Value: </b> By default all fields mentioned\
          \ below will be used to search by term\n          </p>\n        <h4>Available\
          \ Fields</h4><ul><li>label</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstancePaginatedList'
          description: The list of Server Instances
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found
      security:
      - JWT: []
      - apiKey: []
      summary: List Server Instances for an infrastructure
      tags:
      - Server Instance
    post:
      description: Adds Server Instance to the specified infrastructure
      operationId: createServerInstance
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerInstanceCreate'
        description: The Server Instance to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstance'
          description: The details of created Server Instance
          headers:
            Location:
              description: New Server Instance link
              explode: false
              schema:
                type: string
              style: simple
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found
      security:
      - JWT: []
      - apiKey: []
      summary: Add Server Instance to an infrastructure
      tags:
      - Server Instance
  /api/v2/infrastructures/{infrastructureId}/actions/power-get:
    post:
      description: Gets the power status of the servers associated with specified
        instances
      operationId: getPowerStatusBatch
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: string
              type: array
        description: The list of server instance ids
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstancesPowerState'
          description: Power status for each instance
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found
      security:
      - JWT: []
      - apiKey: []
      summary: Gets power status of multiple servers
      tags:
      - Server Instance
  /api/v2/infrastructures/{infrastructureId}/actions/power-set:
    post:
      description: Initiates shutdown or powers on the servers associated with the
        specified instances
      operationId: setPowerStatusBatch
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstancesSetPowerState'
        description: The list of server instance ids
        required: true
      responses:
        "202":
          description: changes accepted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found
      security:
      - JWT: []
      - apiKey: []
      summary: sets power status of multiple servers
      tags:
      - Server Instance
  /api/v2/jobs:
    get:
      description: Returns a list of Jobs
      operationId: getJobs
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by jobId query param.
                    <p>
                       <b>Format: </b> filter.jobId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.jobId=$not:$like:John Doe&filter.jobId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.jobId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverId query param.
                    <p>
                       <b>Format: </b> filter.serverId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverId=$not:$like:John Doe&filter.serverId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.serverId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by vmPoolId query param.
                    <p>
                       <b>Format: </b> filter.vmPoolId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.vmPoolId=$not:$like:John Doe&filter.vmPoolId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.vmPoolId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by storageId query param.
                    <p>
                       <b>Format: </b> filter.storageId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.storageId=$not:$like:John Doe&filter.storageId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.storageId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by networkDeviceId query param.
                    <p>
                       <b>Format: </b> filter.networkDeviceId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.networkDeviceId=$not:$like:John Doe&filter.networkDeviceId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.networkDeviceId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by jobGroupId query param.
                    <p>
                       <b>Format: </b> filter.jobGroupId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.jobGroupId=$not:$like:John Doe&filter.jobGroupId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.jobGroupId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by instanceId query param.
                    <p>
                       <b>Format: </b> filter.instanceId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.instanceId=$not:$like:John Doe&filter.instanceId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.instanceId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by functionName query param.
                    <p>
                       <b>Format: </b> filter.functionName={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.functionName=$not:$like:John Doe&filter.functionName=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.functionName
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by siteId query param.
                    <p>
                       <b>Format: </b> filter.siteId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.siteId=$not:$like:John Doe&filter.siteId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.siteId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by jobIdBlocked query param.
                    <p>
                       <b>Format: </b> filter.jobIdBlocked={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.jobIdBlocked=$not:$like:John Doe&filter.jobIdBlocked=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.jobIdBlocked
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by jobIdBlockedBy query param.
                    <p>
                       <b>Format: </b> filter.jobIdBlockedBy={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.jobIdBlockedBy=$not:$like:John Doe&filter.jobIdBlockedBy=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.jobIdBlockedBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by status query param.
                    <p>
                       <b>Format: </b> filter.status={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.status=$not:$like:John Doe&filter.status=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.status
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> jobId:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>jobId</li>\n<li>jobGroupId</li>\n\
          <li>status</li>\n<li>createdTimestamp</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - jobId:ASC
            - jobId:DESC
            - jobGroupId:ASC
            - jobGroupId:DESC
            - status:ASC
            - status:DESC
            - createdTimestamp:ASC
            - createdTimestamp:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> jobId,infrastructureId,serverId,vmPoolId,storageId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>jobId</li>\n<li>infrastructureId</li>\n\
          <li>serverId</li>\n<li>vmPoolId</li>\n<li>storageId</li>\n<li>networkDeviceId</li>\n\
          <li>jobGroupId</li>\n<li>functionName</li>\n<li>siteId</li>\n<li>instanceId</li>\n\
          <li>jobIdBlocked</li>\n<li>jobIdBlockedBy</li>\n<li>status</li></ul>\n \
          \       "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobPaginatedList'
          description: Returns a list of Jobs
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of Jobs
      tags:
      - Job
  /api/v2/jobs/{jobId}:
    get:
      description: Returns Job information
      operationId: getJob
      parameters:
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
          description: Returns Job information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Job information
      tags:
      - Job
  /api/v2/jobs/archive:
    get:
      description: Returns a list of Jobs from archive
      operationId: getJobsFromArchive
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by jobId query param.
                    <p>
                       <b>Format: </b> filter.jobId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.jobId=$not:$like:John Doe&filter.jobId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.jobId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverId query param.
                    <p>
                       <b>Format: </b> filter.serverId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverId=$not:$like:John Doe&filter.serverId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.serverId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by vmPoolId query param.
                    <p>
                       <b>Format: </b> filter.vmPoolId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.vmPoolId=$not:$like:John Doe&filter.vmPoolId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.vmPoolId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by storageId query param.
                    <p>
                       <b>Format: </b> filter.storageId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.storageId=$not:$like:John Doe&filter.storageId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.storageId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by networkDeviceId query param.
                    <p>
                       <b>Format: </b> filter.networkDeviceId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.networkDeviceId=$not:$like:John Doe&filter.networkDeviceId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.networkDeviceId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by jobGroupId query param.
                    <p>
                       <b>Format: </b> filter.jobGroupId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.jobGroupId=$not:$like:John Doe&filter.jobGroupId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.jobGroupId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by instanceId query param.
                    <p>
                       <b>Format: </b> filter.instanceId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.instanceId=$not:$like:John Doe&filter.instanceId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.instanceId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by functionName query param.
                    <p>
                       <b>Format: </b> filter.functionName={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.functionName=$not:$like:John Doe&filter.functionName=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.functionName
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by siteId query param.
                    <p>
                       <b>Format: </b> filter.siteId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.siteId=$not:$like:John Doe&filter.siteId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.siteId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by jobIdBlocked query param.
                    <p>
                       <b>Format: </b> filter.jobIdBlocked={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.jobIdBlocked=$not:$like:John Doe&filter.jobIdBlocked=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.jobIdBlocked
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by jobIdBlockedBy query param.
                    <p>
                       <b>Format: </b> filter.jobIdBlockedBy={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.jobIdBlockedBy=$not:$like:John Doe&filter.jobIdBlockedBy=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.jobIdBlockedBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by status query param.
                    <p>
                       <b>Format: </b> filter.status={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.status=$not:$like:John Doe&filter.status=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.status
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> jobId:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>jobId</li>\n<li>jobGroupId</li>\n\
          <li>status</li>\n<li>createdTimestamp</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - jobId:ASC
            - jobId:DESC
            - jobGroupId:ASC
            - jobGroupId:DESC
            - status:ASC
            - status:DESC
            - createdTimestamp:ASC
            - createdTimestamp:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> jobId,infrastructureId,serverId,vmPoolId,storageId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>jobId</li>\n<li>infrastructureId</li>\n\
          <li>serverId</li>\n<li>vmPoolId</li>\n<li>storageId</li>\n<li>networkDeviceId</li>\n\
          <li>jobGroupId</li>\n<li>functionName</li>\n<li>siteId</li>\n<li>instanceId</li>\n\
          <li>jobIdBlocked</li>\n<li>jobIdBlockedBy</li>\n<li>status</li></ul>\n \
          \       "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobArchivePaginatedList'
          description: Returns a list of Jobs from archive
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of Jobs from archive
      tags:
      - Job
  /api/v2/jobs/archive/{jobId}:
    get:
      description: Returns Job from archive information
      operationId: getJobFromArchive
      parameters:
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobArchive'
          description: Returns Job from archive information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Job from archive information
      tags:
      - Job
  /api/v2/jobs/{jobId}/actions/retry:
    post:
      description: Retries a job
      operationId: retryJob
      parameters:
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobRetryInfo'
        description: The job retry options
        required: true
      responses:
        "202":
          description: The job was scheduled for retry
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Retries a job
      tags:
      - Job
  /api/v2/jobs/{jobId}/actions/skip:
    post:
      description: Skips a job
      operationId: skipJob
      parameters:
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "202":
          description: The job was skipped
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Skips a job
      tags:
      - Job
  /api/v2/jobs/{jobId}/actions/issue-command:
    post:
      description: Issues a command for a job that changes the operational state of
        the job
      operationId: issueCommandForJob
      parameters:
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobCommandInfo'
        description: The job retry options
        required: true
      responses:
        "202":
          description: Operational command was issued to the job
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Issues a command for a job that changes the operational state of the
        job
      tags:
      - Job
  /api/v2/jobs/{jobId}/exceptions:
    get:
      description: Returns a list of Job Exceptions
      operationId: getJobExceptions
      parameters:
      - explode: false
        in: path
        name: jobId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by exceptionId query param.
                    <p>
                       <b>Format: </b> filter.exceptionId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.exceptionId=$not:$like:John Doe&filter.exceptionId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.exceptionId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by archiveId query param.
                    <p>
                       <b>Format: </b> filter.archiveId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.archiveId=$not:$like:John Doe&filter.archiveId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.archiveId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by createdTimestamp query param.
                    <p>
                       <b>Format: </b> filter.createdTimestamp={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.createdTimestamp=$not:$like:John Doe&filter.createdTimestamp=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.createdTimestamp
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> exceptionId:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>exceptionId</li>\n\
          <li>createdTimestamp</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - exceptionId:ASC
            - exceptionId:DESC
            - createdTimestamp:ASC
            - createdTimestamp:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> exceptionId,archiveId,createdTimestamp\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>exceptionId</li>\n<li>archiveId</li>\n\
          <li>createdTimestamp</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobExceptionPaginatedList'
          description: Returns a list of Job Exceptions
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of Job Exceptions
      tags:
      - Job
  /api/v2/jobs/statistics:
    get:
      description: Returns Jobs statistics
      operationId: getJobsStatistics
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobStatistics'
          description: Returns Jobs statistics
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get Jobs statistics
      tags:
      - Job
  /api/v2/job-groups:
    get:
      description: Returns a list of Job Groups
      operationId: getJobGroups
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by type query param.
                    <p>
                       <b>Format: </b> filter.type={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.type=$not:$like:John Doe&filter.type=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.type
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by createdTimestamp query param.
                    <p>
                       <b>Format: </b> filter.createdTimestamp={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.createdTimestamp=$not:$like:John Doe&filter.createdTimestamp=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.createdTimestamp
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by finishedTimestamp query param.
                    <p>
                       <b>Format: </b> filter.finishedTimestamp={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.finishedTimestamp=$not:$like:John Doe&filter.finishedTimestamp=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.finishedTimestamp
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverId query param.
                    <p>
                       <b>Format: </b> filter.serverId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverId=$not:$like:John Doe&filter.serverId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.serverId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by driveId query param.
                    <p>
                       <b>Format: </b> filter.driveId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.driveId=$not:$like:John Doe&filter.driveId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.driveId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by vmPoolId query param.
                    <p>
                       <b>Format: </b> filter.vmPoolId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.vmPoolId=$not:$like:John Doe&filter.vmPoolId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.vmPoolId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by storageId query param.
                    <p>
                       <b>Format: </b> filter.storageId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.storageId=$not:$like:John Doe&filter.storageId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.storageId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by networkDeviceId query param.
                    <p>
                       <b>Format: </b> filter.networkDeviceId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.networkDeviceId=$not:$like:John Doe&filter.networkDeviceId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.networkDeviceId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>createdTimestamp</li>\n\
          <li>finishedTimestamp</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - createdTimestamp:ASC
            - createdTimestamp:DESC
            - finishedTimestamp:ASC
            - finishedTimestamp:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,type,serverId,driveId,infrastructureId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>type</li>\n<li>serverId</li>\n\
          <li>driveId</li>\n<li>infrastructureId</li>\n<li>vmPoolId</li>\n<li>storageId</li>\n\
          <li>networkDeviceId</li>\n<li>createdTimestamp</li>\n<li>finishedTimestamp</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGroupPaginatedList'
          description: Returns a list of Job Groups
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of Job Groups
      tags:
      - Job
  /api/v2/job-groups/{jobGroupId}:
    get:
      description: Returns Group information
      operationId: getJobGroup
      parameters:
      - explode: false
        in: path
        name: jobGroupId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGroup'
          description: Returns Group information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Job Group information
      tags:
      - Job
  /api/v2/job-groups/{jobGroupId}/statistics:
    get:
      description: Returns Group statistics
      operationId: getJobGroupStatistics
      parameters:
      - explode: false
        in: path
        name: jobGroupId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobGroupStatistics'
          description: Returns Group statistics
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Job Group statistics
      tags:
      - Job
  /api/v2/logical-networks:
    get:
      description: Returns a list of all Logical Networks
      operationId: getAllLogicalNetworks
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by description query param.
                    <p>
                       <b>Format: </b> filter.description={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.description=$not:$like:John Doe&filter.description=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.description
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by fabricId query param.
                    <p>
                       <b>Format: </b> filter.fabricId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.fabricId=$not:$like:John Doe&filter.fabricId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.fabricId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by logicalNetworkType query param.
                    <p>
                       <b>Format: </b> filter.logicalNetworkType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.logicalNetworkType=$not:$like:John Doe&filter.logicalNetworkType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.logicalNetworkType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:ASC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n\
          <li>name</li>\n<li>fabricId</li>\n<li>infrastructureId</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - label:ASC
            - label:DESC
            - name:ASC
            - name:DESC
            - fabricId:ASC
            - fabricId:DESC
            - infrastructureId:ASC
            - infrastructureId:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> label,name,description\n    \
          \      </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>label</li>\n<li>name</li>\n<li>description</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginated'
          description: Returns list of all Logical Networks
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get all logical networks
      tags:
      - Logical Networks
    post:
      description: Create a new logical network
      operationId: createLogicalNetwork
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLogicalNetworkDto'
        description: The Logical Network create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalNetworkDto'
          description: The Logical Network successfully created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Duplicate logical network
      security:
      - JWT: []
      - apiKey: []
      summary: Create a new logical network
      tags:
      - Logical Networks
  /api/v2/logical-networks/{logicalNetworkId}:
    delete:
      description: Delete a logical network
      operationId: deleteLogicalNetwork
      parameters:
      - explode: false
        in: path
        name: logicalNetworkId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The Logical Network was successfully deleted
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Delete a logical network
      tags:
      - Logical Networks
    get:
      description: Returns a logical network by ID
      operationId: getLogicalNetworkById
      parameters:
      - explode: false
        in: path
        name: logicalNetworkId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalNetworkDto'
          description: Returns a logical network by ID
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a logical network by ID
      tags:
      - Logical Networks
    put:
      description: Update a logical network
      operationId: updateLogicalNetwork
      parameters:
      - explode: false
        in: path
        name: logicalNetworkId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchLogicalNetworkDto'
        description: The Logical Network update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalNetworkDto'
          description: The Logical Network was successfully updated
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Update a logical network
      tags:
      - Logical Networks
  /api/v2/logical-network-profiles:
    get:
      description: Returns a list of all Logical Network Profiles
      operationId: getAllLogicalNetworkProfiles
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by description query param.
                    <p>
                       <b>Format: </b> filter.description={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.description=$not:$like:John Doe&filter.description=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.description
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by logicalNetworkType query param.
                    <p>
                       <b>Format: </b> filter.logicalNetworkType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.logicalNetworkType=$not:$like:John Doe&filter.logicalNetworkType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.logicalNetworkType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:ASC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n\
          <li>name</li>\n<li>logicalNetworkType</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - label:ASC
            - label:DESC
            - name:ASC
            - name:DESC
            - logicalNetworkType:ASC
            - logicalNetworkType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> label,name,description\n    \
          \      </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>label</li>\n<li>name</li>\n<li>description</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Paginated'
          description: Returns list of all Logical Network Profiles
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get all logical network profiles
      tags:
      - Logical Network Profiles
    post:
      description: Create a new logical network profile
      operationId: createLogicalNetworkProfile
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLogicalNetworkProfileDto'
        description: The Logical Network Profile create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalNetworkProfileDto'
          description: The Logical Network Profile successfully created
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Duplicate logical network profile
      security:
      - JWT: []
      - apiKey: []
      summary: Create a new logical network profile
      tags:
      - Logical Network Profiles
  /api/v2/logical-network-profiles/{logicalNetworkProfileId}:
    delete:
      description: Delete a logical network profile
      operationId: deleteLogicalNetworkProfile
      parameters:
      - explode: false
        in: path
        name: logicalNetworkProfileId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The Logical Network Profile was successfully deleted
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Delete a logical network profile
      tags:
      - Logical Network Profiles
    get:
      description: Returns a logical network profile by ID
      operationId: getLogicalNetworkProfileById
      parameters:
      - explode: false
        in: path
        name: logicalNetworkProfileId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalNetworkProfileDto'
          description: Returns a logical network profile by ID
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a logical network profile by ID
      tags:
      - Logical Network Profiles
    put:
      description: Update a logical network profile
      operationId: updateLogicalNetworkProfile
      parameters:
      - explode: false
        in: path
        name: logicalNetworkProfileId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchLogicalNetworkProfileDto'
        description: The Logical Network Profile update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogicalNetworkProfileDto'
          description: The Logical Network Profile was successfully updated
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Update a logical network profile
      tags:
      - Logical Network Profiles
  /api/v2/infrastructures/{infrastructureId}/networks:
    get:
      description: Retrieves all networks on the infrastructure
      operationId: getInfrastructureNetworks
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Network'
                type: array
          description: Networks successfully retrieved.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Retrieves all networks on the infrastructure
      tags:
      - Network
    post:
      description: Creates a new LAN network on the infrastructure
      operationId: createInfrastructureNetwork
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetwork'
        description: The Network create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: The Network successfully created
          headers:
            Location:
              description: New Network link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a new LAN network on the infrastructure
      tags:
      - Network
  /api/v2/infrastructures/{infrastructureId}/networks/{networkId}:
    delete:
      description: Deletes a network from the infrastructure
      operationId: deleteInfrastructureNetwork
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Network successfully deleted.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a network from the infrastructure
      tags:
      - Network
    get:
      description: Gets the specified network from the infrastructure
      operationId: getInfrastructureNetwork
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: networkId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Network'
          description: Network information successfully retrieved.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Gets the specified network from the infrastructure
      tags:
      - Network
  /api/v2/network-devices:
    get:
      operationId: getNetworkDevices
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by switchId query param.
                    <p>
                       <b>Format: </b> filter.switchId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.switchId=$not:$like:John Doe&filter.switchId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.switchId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by status query param.
                    <p>
                       <b>Format: </b> filter.status={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.status=$not:$like:John Doe&filter.status=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.status
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by datacenterName query param.
                    <p>
                       <b>Format: </b> filter.datacenterName={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.datacenterName=$not:$like:John Doe&filter.datacenterName=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.datacenterName
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by chassisIdentifier query param.
                    <p>
                       <b>Format: </b> filter.chassisIdentifier={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.chassisIdentifier=$not:$like:John Doe&filter.chassisIdentifier=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.chassisIdentifier
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by managementAddress query param.
                    <p>
                       <b>Format: </b> filter.managementAddress={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.managementAddress=$not:$like:John Doe&filter.managementAddress=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.managementAddress
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by managementPort query param.
                    <p>
                       <b>Format: </b> filter.managementPort={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.managementPort=$not:$like:John Doe&filter.managementPort=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.managementPort
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by provisionerType query param.
                    <p>
                       <b>Format: </b> filter.provisionerType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.provisionerType=$not:$like:John Doe&filter.provisionerType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.provisionerType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by position query param.
                    <p>
                       <b>Format: </b> filter.position={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.position=$not:$like:John Doe&filter.position=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.position
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by identifierString query param.
                    <p>
                       <b>Format: </b> filter.identifierString={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.identifierString=$not:$like:John Doe&filter.identifierString=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.identifierString
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> switchId:ASC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>switchId</li>\n\
          <li>status</li>\n<li>datacenterName</li>\n<li>status</li>\n<li>position</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - switchId:ASC
            - switchId:DESC
            - status:ASC
            - status:DESC
            - datacenterName:ASC
            - datacenterName:DESC
            - status:ASC
            - status:DESC
            - position:ASC
            - position:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> switchId,status,datacenterName,managementAddress,provisionerType\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>switchId</li>\n<li>status</li>\n\
          <li>datacenterName</li>\n<li>managementAddress</li>\n<li>provisionerType</li>\n\
          <li>position</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDevicePaginatedList'
          description: Returns paginated Network Devices
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get paginated Network Devices
      tags:
      - Network Device
    post:
      operationId: NetworkDeviceController_createNetworkDevice
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkDevice'
        description: The Network Device create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDevice'
          description: Returns created Network Device
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Create Network Device
      tags:
      - Network Device
  /api/v2/network-devices/statistics:
    get:
      operationId: NetworkDeviceController_getNetworkDeviceStatistics
      parameters: []
      responses:
        "200":
          description: Returns Network Device Statistics
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get Network Device Statistics
      tags:
      - Network Device
  /api/v2/network-devices/{networkDeviceId}:
    delete:
      operationId: NetworkDeviceController_deleteNetworkDevice
      parameters:
      - explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Network Device deleted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Delete Network Device
      tags:
      - Network Device
    get:
      operationId: getNetworkDevice
      parameters:
      - explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDevice'
          description: Returns Network Device
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Network Device
      tags:
      - Network Device
    patch:
      operationId: NetworkDeviceController_updateNetworkDevice
      parameters:
      - explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworkDevice'
        description: The Network Device update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkDevice'
          description: Returns updated Network Device
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      - apiKey: []
      summary: Update Network Device
      tags:
      - Network Device
  /api/v2/network-devices/{networkDeviceId}/actions/archive:
    post:
      operationId: archiveNetworkDevice
      parameters:
      - explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Network Device archived
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Archives a network device
      tags:
      - Network Device
  /api/v2/network-devices/{networkDeviceId}/replace:
    post:
      operationId: NetworkDeviceController_replaceNetworkDevice
      parameters:
      - description: Network device ID
        explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
          description: Replace network device
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Network device not found
      security:
      - JWT: []
      - apiKey: []
      summary: Replace network device
      tags:
      - Network Device
  /api/v2/network-devices/re-provision:
    post:
      description: Re-provision network equipment
      operationId: reProvisionNetworkEquipment
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkEquipmentReprovision'
        description: The network equipment re-provision options
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfo'
          description: Network equipment re-provision started
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Re-provision network equipment
      tags:
      - Network Device
  /api/v2/network-devices/network-devices/{networkDeviceId}/tags:
    get:
      operationId: NetworkDeviceController_getTagsForNetworkDevice
      parameters:
      - explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: string
                type: array
          description: Tags for Network Device
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Network device not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get tags for Network Device
      tags:
      - Network Device
    patch:
      operationId: NetworkDeviceController_removeTagsFromNetworkDevice
      parameters:
      - explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              type: string
        description: The tags to remove
        required: true
      responses:
        "204":
          description: Tags removed from Network Device
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Network device not found
      security:
      - JWT: []
      - apiKey: []
      summary: Clear tags from Network Device
      tags:
      - Network Device
    post:
      operationId: NetworkDeviceController_addTagsToNetworkDevice
      parameters:
      - explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkDeviceController_updateTagsForNetworkDevice_request'
        description: The tags to add
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                type: object
          description: Tags added to Network Device
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Network device not found
      security:
      - JWT: []
      - apiKey: []
      summary: Add tags to Network Device
      tags:
      - Network Device
    put:
      operationId: NetworkDeviceController_updateTagsForNetworkDevice
      parameters:
      - explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkDeviceController_updateTagsForNetworkDevice_request'
        description: The tags to update
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Tags updated for Network Device
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Network device not found
      security:
      - JWT: []
      - apiKey: []
      summary: Update tags for Network Device
      tags:
      - Network Device
  /api/v2/network-devices/{networkDeviceId}/iscsi-boot-servers:
    get:
      operationId: NetworkDeviceController_getIscsiBootServers
      parameters:
      - explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          description: iSCSI boot servers found
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Network device not found
      security:
      - JWT: []
      - apiKey: []
      summary: Returns information about servers which are setup to boot from iSCSI
        block devices. This is useful in the event of a switch device reboot
      tags:
      - Network Device
  /api/v2/network-devices/defaults/{datacenterName}:
    get:
      operationId: getNetworkDeviceDefaults
      parameters:
      - explode: false
        in: path
        name: datacenterName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NetworkDeviceDefaults'
                type: array
          description: Network device defaults found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: No network device defaults found
      security:
      - JWT: []
      - apiKey: []
      summary: Get network device defaults for a datacenter
      tags:
      - Network Device
  /api/v2/network-devices/defaults:
    delete:
      operationId: removeNetworkDeviceDefaults
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              items:
                type: number
              type: array
        description: Network device defaults IDs
        required: true
      responses:
        "204":
          description: Network device defaults removed
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Remove network device defaults
      tags:
      - Network Device
    post:
      operationId: addNetworkDeviceDefaults
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkDeviceDefaults'
        description: Network device defaults
        required: true
      responses:
        "201":
          description: Network device defaults added
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Add network device defaults
      tags:
      - Network Device
  /api/v2/network-devices/{networkDeviceId}/actions/ports:
    post:
      operationId: getNetworkDevicePorts
      parameters:
      - explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          description: Ports found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: No ports found
      security:
      - JWT: []
      - apiKey: []
      summary: Get port statistics for network device directly from the device
      tags:
      - Network Device
  /api/v2/network-devices/{networkDeviceId}/ports:
    get:
      operationId: getNetworkDeviceInventoryPorts
      parameters:
      - explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          description: Ports found
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: No ports found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all ports for network device from the inventory (cached)
      tags:
      - Network Device
  /api/v2/network-devices/{networkDeviceId}/actions/set-port-status:
    post:
      operationId: setNetworkDevicePortStatus
      parameters:
      - description: Network device ID
        explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkDevicePortStatus'
        description: Port status
        required: true
      responses:
        "200":
          description: Port status updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Set port status
      tags:
      - Network Device
  /api/v2/network-devices/{networkDeviceId}/actions/reset:
    post:
      description: Resets a network device to default state and destroy all configurations
      operationId: resetNetworkDevice
      parameters:
      - description: Network device ID
        explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Network device reset to default state
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Resets a network device to default state
      tags:
      - Network Device
  /api/v2/network-devices/{networkDeviceId}/actions/syslog-subscribe:
    post:
      description: Enables remote syslog for a network device
      operationId: enableNetworkDeviceSyslog
      parameters:
      - description: Network device ID
        explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Enables remote syslog for a network device
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Enables remote syslog for a network device
      tags:
      - Network Device
  /api/v2/network-devices/{networkDeviceId}/actions/change-status:
    patch:
      description: Change status of a network device
      operationId: changeNetworkDeviceStatus
      parameters:
      - description: Network device ID
        explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkDeviceStatus'
        description: Network device status
        required: true
      responses:
        "200":
          description: Network device status updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Change status of a network device
      tags:
      - Network Device
  /api/v2/network-devices/{networkDeviceId}/actions/discover:
    post:
      description: "Discover network device interfaces, hardware and software configuration\
        \ and return them and/or persist them"
      operationId: discoverNetworkDevice
      parameters:
      - description: Network device identifier
        explode: false
        in: path
        name: networkDeviceId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DiscoveryQuery'
        required: true
      responses:
        "200":
          description: Network device discovered and the data returned
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: "Discover network device interfaces, hardware and software configuration"
      tags:
      - Network Device
  /api/v2/network-fabrics:
    get:
      operationId: getNetworkFabrics
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by description query param.
                    <p>
                       <b>Format: </b> filter.description={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.description=$not:$like:John Doe&filter.description=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.description
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by siteId query param.
                    <p>
                       <b>Format: </b> filter.siteId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.siteId=$not:$like:John Doe&filter.siteId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.siteId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by fabricConfiguration.fabricType query param.
                    <p>
                       <b>Format: </b> filter.fabricConfiguration.fabricType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.fabricConfiguration.fabricType=$not:$like:John Doe&filter.fabricConfiguration.fabricType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.fabricConfiguration.fabricType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>siteId</li>\n\
          <li>name</li>\n<li>createdTimestamp</li>\n<li>updatedTimestamp</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - siteId:ASC
            - siteId:DESC
            - name:ASC
            - name:DESC
            - createdTimestamp:ASC
            - createdTimestamp:DESC
            - updatedTimestamp:ASC
            - updatedTimestamp:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> name,description,siteId,fabricConfiguration.fabricType\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>name</li>\n<li>description</li>\n\
          <li>siteId</li>\n<li>fabricConfiguration.fabricType</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabricPaginatedList'
          description: List of all network fabrics
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: List all network fabrics
      tags:
      - Network Fabric
    post:
      operationId: createNetworkFabric
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNetworkFabric'
        description: The network fabric create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabric'
          description: The network fabric successfully created
          headers:
            Location:
              description: New network fabric link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Invalid request sent
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Create a new network fabric
      tags:
      - Network Fabric
  /api/v2/network-fabrics/{networkFabricId}:
    delete:
      operationId: deleteNetworkFabric
      parameters:
      - explode: false
        in: path
        name: networkFabricId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: Network fabric was successfully deleted
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Network fabric not found
      security:
      - JWT: []
      - apiKey: []
      summary: Delete a network fabric
      tags:
      - Network Fabric
    get:
      operationId: getNetworkFabricById
      parameters:
      - explode: false
        in: path
        name: networkFabricId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabric'
          description: Returns a network fabric by ID
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Network fabric not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a network fabric by ID
      tags:
      - Network Fabric
    patch:
      operationId: updateNetworkFabric
      parameters:
      - description: The ID of the network fabric to update
        explode: false
        in: path
        name: networkFabricId
        required: true
        schema:
          type: integer
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateNetworkFabric'
        description: Network fabric updates
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabric'
          description: Network fabric that was successfully updated
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Network Fabric not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Update a network fabric
      tags:
      - Network Fabric
  /api/v2/network-fabrics/{networkFabricId}/network-equipment:
    get:
      operationId: getFabricAndNetworkEquipment
      parameters:
      - description: The ID of the fabric
        explode: false
        in: path
        name: networkFabricId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabric'
          description: Returns a Network Fabric with the associated network equipment
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Network fabric not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get fabric and network equipment associated with the fabric
      tags:
      - Network Fabric
    post:
      operationId: addNetworkEquipmentsToFabric
      parameters:
      - description: The ID of the fabric
        explode: false
        in: path
        name: networkFabricId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetworkEquipmentToFabric'
        description: The network equipment list containing the IDs of the network
          equipments to add to the fabric
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabric'
          description: The network equipments have been successfully added to the
            fabric.
        "400":
          description: Invalid request sent
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Network fabric not found
      security:
      - JWT: []
      - apiKey: []
      summary: Add a list of network equipments to a fabric
      tags:
      - Network Fabric
  /api/v2/network-fabrics/{networkFabricId}/network-equipment/{networkEquipmentId}:
    delete:
      operationId: removeNetworkEquipmentFromFabric
      parameters:
      - description: The ID of the fabric to remove the network equipment from
        explode: false
        in: path
        name: networkFabricId
        required: true
        schema:
          type: integer
        style: simple
      - description: The ID of the network equipment to remove from the fabric
        explode: false
        in: path
        name: networkEquipmentId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetworkFabric'
          description: The network equipment has been successfully removed from the
            fabric.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Network fabric or network equipment not found
      security:
      - JWT: []
      - apiKey: []
      summary: Remove a network equipment from a fabric
      tags:
      - Network Fabric
  /api/v2/os-templates:
    get:
      description: Returns list of the available OS templates
      operationId: getOSTemplates
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by device.type query param.
                    <p>
                       <b>Format: </b> filter.device.type={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.device.type=$not:$like:John Doe&filter.device.type=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.device.type
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$null</li>
          <li>$ilike</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by os.name query param.
                    <p>
                       <b>Format: </b> filter.os.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.os.name=$not:$like:John Doe&filter.os.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.os.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by status query param.
                    <p>
                       <b>Format: </b> filter.status={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.status=$not:$like:John Doe&filter.status=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.status
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by visibility query param.
                    <p>
                       <b>Format: </b> filter.visibility={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.visibility=$not:$like:John Doe&filter.visibility=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.visibility
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by tags query param.
                    <p>
                       <b>Format: </b> filter.tags={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.tags=$not:$like:John Doe&filter.tags=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$ilike</li>
          <li>$eq</li></ul>
        explode: true
        in: query
        name: filter.tags
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>device.type</li>\n\
          <li>visibility</li>\n<li>status</li>\n<li>createdBy</li>\n<li>createdAt</li>\n\
          <li>modifiedAt</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - device.type:ASC
            - device.type:DESC
            - visibility:ASC
            - visibility:DESC
            - status:ASC
            - status:DESC
            - createdBy:ASC
            - createdBy:DESC
            - createdAt:ASC
            - createdAt:DESC
            - modifiedAt:ASC
            - modifiedAt:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,name,label,device.type,os.name\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>name</li>\n<li>label</li>\n\
          <li>device.type</li>\n<li>os.name</li>\n<li>os.version</li>\n<li>visibility</li>\n\
          <li>status</li>\n<li>createdBy</li>\n<li>modifiedBy</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to select.\n      <p>\n             <b>Example:\
          \ </b> id,name,description,label,device.type\n          </p>\n      <p>\n\
          \             <b>Default Value: </b> By default all fields returns. If you\
          \ want to select only some fields, provide them in query param\n       \
          \   </p>\n      "
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSTemplatePaginatedList'
          description: The list of the available OS templates
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of available OS templates
      tags:
      - OS Template
    post:
      description: Returns details of the new OS template
      operationId: createOSTemplate
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSTemplateCreate'
        description: The OS template details
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSTemplate'
          description: The details of the created OS template
          headers:
            Location:
              description: New OS template link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Create OS template
      tags:
      - OS Template
  /api/v2/os-templates/{osTemplateId}:
    delete:
      description: Deletes the specified OS template
      operationId: deleteOSTemplate
      parameters:
      - explode: false
        in: path
        name: osTemplateId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: OS Template not found
      security:
      - JWT: []
      - apiKey: []
      summary: Delete OS template
      tags:
      - OS Template
    get:
      description: Returns details of the specified OS template
      operationId: getOSTemplate
      parameters:
      - explode: false
        in: path
        name: osTemplateId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSTemplate'
          description: The details of the specified OS template
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: OS Template not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get details for an OS template
      tags:
      - OS Template
    put:
      description: Returns details of the updated OS template
      operationId: updateOSTemplate
      parameters:
      - explode: false
        in: path
        name: osTemplateId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OSTemplateUpdate'
        description: The OS template details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSTemplate'
          description: The details of the updated OS template
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Update OS template
      tags:
      - OS Template
  /api/v2/os-templates/{osTemplateId}/credentials:
    get:
      description: Returns the credentials for the specified OS template
      operationId: getOSTemplateCredentials
      parameters:
      - explode: false
        in: path
        name: osTemplateId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OSTemplateOsCredential'
          description: The credentials for the specified OS template
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: OS Template not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get OS template credentials
      tags:
      - OS Template
  /api/v2/resource-pools:
    get:
      description: Returns list of all Resource Pools
      operationId: getResourcePools
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by resourcePoolId query param.
                    <p>
                       <b>Format: </b> filter.resourcePoolId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.resourcePoolId=$not:$like:John Doe&filter.resourcePoolId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.resourcePoolId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by resourcePoolLabel query param.
                    <p>
                       <b>Format: </b> filter.resourcePoolLabel={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.resourcePoolLabel=$not:$like:John Doe&filter.resourcePoolLabel=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.resourcePoolLabel
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by resourcePoolDescription query param.
                    <p>
                       <b>Format: </b> filter.resourcePoolDescription={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.resourcePoolDescription=$not:$like:John Doe&filter.resourcePoolDescription=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.resourcePoolDescription
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by resourcePoolCreatedTimestamp query param.
                    <p>
                       <b>Format: </b> filter.resourcePoolCreatedTimestamp={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.resourcePoolCreatedTimestamp=$not:$like:John Doe&filter.resourcePoolCreatedTimestamp=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.resourcePoolCreatedTimestamp
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by resourcePoolUpdatedTimestamp query param.
                    <p>
                       <b>Format: </b> filter.resourcePoolUpdatedTimestamp={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.resourcePoolUpdatedTimestamp=$not:$like:John Doe&filter.resourcePoolUpdatedTimestamp=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.resourcePoolUpdatedTimestamp
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> resourcePoolId:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>resourcePoolId</li>\n\
          <li>resourcePoolLabel</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - resourcePoolId:ASC
            - resourcePoolId:DESC
            - resourcePoolLabel:ASC
            - resourcePoolLabel:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> resourcePoolLabel,resourcePoolDescription\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>resourcePoolLabel</li>\n<li>resourcePoolDescription</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePoolPaginatedList'
          description: Returns list of all Resource Pools
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get all Resource Pools
      tags:
      - Resource Pool
    post:
      description: Creates a Resource Pool
      operationId: createResourcePool
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateResourcePool'
        description: The Resource Pool create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePool'
          description: The Resource Pool successfully created
          headers:
            Location:
              description: New Resource Pool link
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Duplicate resource pool
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a Resource Pool
      tags:
      - Resource Pool
  /api/v2/resource-pools/{resourcePoolId}:
    delete:
      description: Deletes a Resource Pool
      operationId: deleteResourcePool
      parameters:
      - explode: false
        in: path
        name: resourcePoolId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The Resource Pool was successfully deleted
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a Resource Pool
      tags:
      - Resource Pool
    get:
      description: Returns Resource Pool information
      operationId: getResourcePool
      parameters:
      - explode: false
        in: path
        name: resourcePoolId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePool'
          description: Returns Resource Pool information
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Resource Pool information
      tags:
      - Resource Pool
    put:
      description: Updates Resource Pool information
      operationId: updateResourcePool
      parameters:
      - explode: false
        in: path
        name: resourcePoolId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateResourcePool'
        description: The Resource Pool update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourcePool'
          description: The Resource Pool was successfully updated
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Updates Resource Pool information
      tags:
      - Resource Pool
  /api/v2/resource-pools/{resourcePoolId}/servers:
    get:
      description: Returns list of all servers that are part of a Resource Pool
      operationId: getResourcePoolServers
      parameters:
      - explode: false
        in: path
        name: resourcePoolId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: number
                type: array
          description: Returns list of all servers that are part of a Resource Pool
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all servers that are part of a Resource Pool
      tags:
      - Resource Pool
  /api/v2/resource-pools/{resourcePoolId}/server/{serverId}:
    delete:
      description: Remove a server from a Resource Pool
      operationId: removeServerFromResourcePool
      parameters:
      - explode: false
        in: path
        name: resourcePoolId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The server was successfully removed from the Resource Pool
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Remove a server from a Resource Pool
      tags:
      - Resource Pool
    put:
      description: Add a server to a Resource Pool
      operationId: addServerToResourcePool
      parameters:
      - explode: false
        in: path
        name: resourcePoolId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          description: The server was successfully added to the Resource Pool
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Add a server to a Resource Pool
      tags:
      - Resource Pool
  /api/v2/resource-pools/{resourcePoolId}/subnet-pools:
    get:
      description: Returns list of all subnet pools that are part of a resource pool
      operationId: getResourcePoolSubnetPools
      parameters:
      - explode: false
        in: path
        name: resourcePoolId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: number
                type: array
          description: Returns list of all subnet pools that are part of a resource
            pool
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all subnet pools that are part of a resource pool
      tags:
      - Resource Pool
  /api/v2/resource-pools/{resourcePoolId}/subnet-pool/{subnetPoolId}:
    delete:
      description: Remove a subnet from a resource pool
      operationId: removeSubnetPoolFromResourcePool
      parameters:
      - explode: false
        in: path
        name: resourcePoolId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: subnetPoolId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The subnet pool was successfully removed from the resource
            pool
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Remove a subnet from a resource pool
      tags:
      - Resource Pool
    put:
      description: Add a subnet pool to a resource pool
      operationId: addSubnetPoolToResourcePool
      parameters:
      - explode: false
        in: path
        name: resourcePoolId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: subnetPoolId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          description: The subnet was successfully added to the resource pool
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Add a subnet pool to a resource pool
      tags:
      - Resource Pool
  /api/v2/resource-pools/{resourcePoolId}/users:
    get:
      description: Returns list of all users that have access to a Resource Pool
      operationId: getResourcePoolUsers
      parameters:
      - explode: false
        in: path
        name: resourcePoolId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Returns list of all users that have access to a Resource Pool
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all users that have access to a Resource Pool
      tags:
      - Resource Pool
  /api/v2/resource-pools/user/{userId}:
    get:
      description: Returns list of all Resource Pools that a user has access to
      operationId: getUserResourcePools
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  type: object
                type: array
          description: Returns list of all Resource Pools that a user has access to
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all Resource Pools that a user has access to
      tags:
      - Resource Pool
  /api/v2/resource-pools/user/{userId}/pool/{resourcePoolId}:
    delete:
      description: Remove a user from a Resource Pool
      operationId: removeResourcePoolUser
      parameters:
      - explode: false
        in: path
        name: resourcePoolId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The user was successfully removed from the Resource Pool
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Remove a user from a Resource Pool
      tags:
      - Resource Pool
    post:
      description: Add a user to a Resource Pool
      operationId: addResourcePoolUser
      parameters:
      - explode: false
        in: path
        name: resourcePoolId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "201":
          description: The user was successfully added to the Resource Pool
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Add a user to a Resource Pool
      tags:
      - Resource Pool
  /api/v2/authentication/providers:
    get:
      description: Returns the available authentication providers
      operationId: getProviders
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AuthenticationProvider'
                type: array
          description: Returns the available authentication providers
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get available authentication providers
      tags:
      - Security
  /api/v2/authentication/providers/{name}:
    patch:
      description: Updates authentication provider
      operationId: updateProvider
      parameters:
      - description: The provider name
        explode: false
        in: path
        name: name
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationProviderUpdate'
        description: The provider updates
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthenticationProvider'
          description: Authentication provider successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates authentication provider
      tags:
      - Security
  /api/v2/servers/cleanup-policies:
    get:
      description: Returns a list of Server Cleanup Policies
      operationId: getServerCleanupPolicies
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - label:ASC
            - label:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label\n          </p>\n  \
          \      <p>\n             <b>Default Value: </b> By default all fields mentioned\
          \ below will be used to search by term\n          </p>\n        <h4>Available\
          \ Fields</h4><ul><li>id</li>\n<li>label</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCleanupPolicyPaginatedList'
          description: Returns a list of Server Cleanup Policies
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of Server Cleanup Policies
      tags:
      - Server Cleanup Policy
    post:
      description: Creates a Server Cleanup Policy
      operationId: createServerCleanupPolicy
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerCleanupPolicy'
        description: The Server Cleanup Policy create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCleanupPolicy'
          description: The Server Cleanup Policy successfully created
          headers:
            Location:
              description: New Server Cleanup Policy link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a Server Cleanup Policy
      tags:
      - Server Cleanup Policy
  /api/v2/servers/cleanup-policies/{serverCleanupPolicyId}:
    delete:
      description: Deletes a Server Cleanup Policy
      operationId: deleteServerCleanupPolicy
      parameters:
      - explode: false
        in: path
        name: serverCleanupPolicyId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The Server Cleanup Policy was successfully deleted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a Server Cleanup Policy
      tags:
      - Server Cleanup Policy
    get:
      description: Returns Server Cleanup Policy information
      operationId: getServerCleanupPolicyInfo
      parameters:
      - explode: false
        in: path
        name: serverCleanupPolicyId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCleanupPolicy'
          description: Returns Server Cleanup Policy information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Cleanup Policy information
      tags:
      - Server Cleanup Policy
    patch:
      description: Updates a Server Cleanup Policy
      operationId: updateServerCleanupPolicy
      parameters:
      - explode: false
        in: path
        name: serverCleanupPolicyId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerCleanupPolicy'
        description: The Server Cleanup Policy update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCleanupPolicy'
          description: The Server Cleanup Policy successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates a Server Cleanup Policy
      tags:
      - Server Cleanup Policy
  /api/v2/servers/default-credentials:
    get:
      description: Returns a list of Server Default Credentials
      operationId: getServersDefaultCredentials
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by siteId query param.
                    <p>
                       <b>Format: </b> filter.siteId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.siteId=$not:$like:John Doe&filter.siteId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.siteId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverSerialNumber query param.
                    <p>
                       <b>Format: </b> filter.serverSerialNumber={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverSerialNumber=$not:$like:John Doe&filter.serverSerialNumber=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.serverSerialNumber
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverMacAddress query param.
                    <p>
                       <b>Format: </b> filter.serverMacAddress={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverMacAddress=$not:$like:John Doe&filter.serverMacAddress=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.serverMacAddress
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>siteId</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - siteId:ASC
            - siteId:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,siteId,serverSerialNumber,serverMacAddress\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>siteId</li>\n<li>serverSerialNumber</li>\n\
          <li>serverMacAddress</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerDefaultCredentialsPaginatedList'
          description: Returns a list of Server Default Credentials
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of Server Default Credentials
      tags:
      - Server Default Credentials
    post:
      description: Creates a Server Default Credentials
      operationId: createServerDefaultCredentials
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerDefaultCredentials'
        description: The Server Default Credentials create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerDefaultCredentials'
          description: The Server Default Credentials successfully created
          headers:
            Location:
              description: New Server Default Credentials link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a Server Default Credentials
      tags:
      - Server Default Credentials
  /api/v2/servers/default-credentials/{serverDefaultCredentialsId}:
    delete:
      description: Deletes a Server Default Credentials
      operationId: deleteServerDefaultCredentials
      parameters:
      - explode: false
        in: path
        name: serverDefaultCredentialsId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The Server Default Credentials was successfully deleted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a Server Default Credentials
      tags:
      - Server Default Credentials
    get:
      description: Returns Server Default Credentials information
      operationId: getServerDefaultCredentialsInfo
      parameters:
      - explode: false
        in: path
        name: serverDefaultCredentialsId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerDefaultCredentials'
          description: Returns Server Default Credentials information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Default Credentials information
      tags:
      - Server Default Credentials
    patch:
      description: Updates a Server Default Credentials
      operationId: updateServerDefaultCredentials
      parameters:
      - explode: false
        in: path
        name: serverDefaultCredentialsId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerDefaultCredentials'
        description: The Server Default Credentials update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerDefaultCredentials'
          description: The Server Default Credentials successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates a Server Default Credentials
      tags:
      - Server Default Credentials
  /api/v2/servers/default-credentials/{serverDefaultCredentialsId}/credentials:
    get:
      description: Returns Server Default Credentials unencrypted
      operationId: getServerDefaultCredentialsCredentials
      parameters:
      - explode: false
        in: path
        name: serverDefaultCredentialsId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerDefaultCredentialsCredentials'
          description: Returns Server Default Credentials unencrypted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Default Credentials unencrypted
      tags:
      - Server Default Credentials
  /api/v2/servers/{serverId}/firmware/components:
    get:
      description: Returns a list of Server Components
      operationId: getServerComponents
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by externalId query param.
                    <p>
                       <b>Format: </b> filter.externalId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.externalId=$not:$like:John Doe&filter.externalId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.externalId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverId query param.
                    <p>
                       <b>Format: </b> filter.serverId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverId=$not:$like:John Doe&filter.serverId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.serverId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by firmwareTargetVersion query param.
                    <p>
                       <b>Format: </b> filter.firmwareTargetVersion={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.firmwareTargetVersion=$not:$like:John Doe&filter.firmwareTargetVersion=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.firmwareTargetVersion
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by firmwareVersion query param.
                    <p>
                       <b>Format: </b> filter.firmwareVersion={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.firmwareVersion=$not:$like:John Doe&filter.firmwareVersion=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.firmwareVersion
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by firmwareUpdateTimestamp query param.
                    <p>
                       <b>Format: </b> filter.firmwareUpdateTimestamp={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.firmwareUpdateTimestamp=$not:$like:John Doe&filter.firmwareUpdateTimestamp=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.firmwareUpdateTimestamp
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by firmwareScheduledTimestamp query param.
                    <p>
                       <b>Format: </b> filter.firmwareScheduledTimestamp={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.firmwareScheduledTimestamp=$not:$like:John Doe&filter.firmwareScheduledTimestamp=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.firmwareScheduledTimestamp
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by firmwareStatus query param.
                    <p>
                       <b>Format: </b> filter.firmwareStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.firmwareStatus=$not:$like:John Doe&filter.firmwareStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.firmwareStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:ASC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>externalId</li>\n\
          <li>serverId</li>\n<li>name</li>\n<li>firmwareVersion</li>\n<li>firmwareScheduledTimestamp</li>\n\
          <li>firmwareStatus</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - externalId:ASC
            - externalId:DESC
            - serverId:ASC
            - serverId:DESC
            - name:ASC
            - name:DESC
            - firmwareVersion:ASC
            - firmwareVersion:DESC
            - firmwareScheduledTimestamp:ASC
            - firmwareScheduledTimestamp:DESC
            - firmwareStatus:ASC
            - firmwareStatus:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,externalId,serverId,name,firmwareVersion\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>externalId</li>\n\
          <li>serverId</li>\n<li>name</li>\n<li>firmwareVersion</li>\n<li>firmwareScheduledTimestamp</li>\n\
          <li>firmwareStatus</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerComponentPaginatedList'
          description: Returns a list of Server Components
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of Server Components
      tags:
      - Server Firmware
  /api/v2/servers/{serverId}/firmware/components/{componentId}:
    get:
      description: Returns Server component information
      operationId: getServerComponentInfo
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: componentId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerComponent'
          description: Returns Server component information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server component information
      tags:
      - Server Firmware
    patch:
      description: Updates a Server Component
      operationId: updateServerComponent
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: componentId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerComponent'
        description: The Server Component update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerComponent'
          description: The Server Component successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates a Server Component
      tags:
      - Server Firmware
  /api/v2/servers/firmware/actions/generate-upgrade-audit:
    post:
      description: Generates a Firmware Upgrade Audit for the specified Servers
      operationId: generateServersFirmwareUpgradeAudit
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateFirmwareUpgradeAudit'
        description: The Firmware Upgrade Audit options
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: The Firmware Upgrade Audit was successfully generated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      - apiKey: []
      summary: Generates a Firmware Upgrade Audit for the specified Servers
      tags:
      - Server Firmware
  /api/v2/servers/{serverId}/firmware/actions/fetch-and-update-available-versions:
    post:
      description: Fetches and updates the available firmware versions for the specified
        Server
      operationId: fetchAndUpdateServerFirmwareAvailableVersions
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The available firmware versions were successfully fetched and
            updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server not found
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      - apiKey: []
      summary: Fetches and updates the available firmware versions for the specified
        Server
      tags:
      - Server Firmware
  /api/v2/servers/{serverId}/firmware/actions/update-info:
    post:
      description: Updates the firmware information of the Server Components
      operationId: updateServerFirmwareInfo
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The firmware information of the Server Components was successfully
            updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server not found
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      - apiKey: []
      summary: Updates the firmware information of the Server Components
      tags:
      - Server Firmware
  /api/v2/servers/{serverId}/firmware/actions/schedule-upgrade:
    post:
      description: Schedules a firmware upgrade for the specified Server
      operationId: scheduleServerFirmwareUpgrade
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleFirmwareUpgrade'
        description: The Schedule Firmware Upgrade object
        required: true
      responses:
        "204":
          description: The server was scheduled for firmware upgrade
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server not found
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      - apiKey: []
      summary: Schedules a firmware upgrade for the specified Server
      tags:
      - Server Firmware
  /api/v2/servers/{serverId}/firmware/components/{serverComponentId}/actions/upgrade:
    post:
      description: Upgrades the firmware of the specified component on Server
      operationId: upgradeFirmwareOfServerComponent
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: serverComponentId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FirmwareUpgrade'
        description: The Firmware Upgrade object
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfo'
          description: The component firmware upgrade has started
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server not found
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      - apiKey: []
      summary: Upgrades the firmware of the specified component on Server
      tags:
      - Server Firmware
  /api/v2/servers/{serverId}/firmware/actions/upgrade:
    post:
      description: Upgrades the firmware of all updatable components on Server
      operationId: upgradeFirmwareOfServer
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobInfo'
          description: The firmware upgrade of all upgradable components has started
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server not found
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      - apiKey: []
      summary: Upgrades the firmware of all updatable components on Server
      tags:
      - Server Firmware
  /api/v2/servers/firmware/actions/batch-upgrade:
    post:
      description: Upgrades the firmware of all updatable components on specified
        Servers
      operationId: upgradeFirmwareOfServersBatch
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchServerFirmwareUpgrade'
        description: The Firmware Upgrade object
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchServerFirmwareUpgradeResponse'
          description: The firmware upgrade of all upgradable components on the specified
            Servers has started
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      - apiKey: []
      summary: Upgrades the firmware of all updatable components on the specified
        Servers
      tags:
      - Server Firmware
  /api/v2/servers/{serverId}/firmware/inventory:
    post:
      description: Retrieves server firmware inventory from redfish
      operationId: getServerFirmwareInventory
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: object
          description: Retrieved server firmware inventory from redfish
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Retrieves server firmware inventory from redfish
      tags:
      - Server Firmware
  /api/v2/server-instance-groups/{serverInstanceGroupId}:
    delete:
      description: Delete Server Instance Group. Will not take effect if there are
        instances in this group. To delete the instances in a group mark them for
        delete individually.
      operationId: deleteServerInstanceGroup
      parameters:
      - explode: false
        in: path
        name: serverInstanceGroupId
        required: true
        schema:
          type: integer
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The specified Server Instance was successfully deleted
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Delete Server Instance Group. Will not take effect if there are instances
        in this group.
      tags:
      - Server Instance Group
    get:
      description: Returns the details of the specified Server Instance Group
      operationId: getServerInstanceGroup
      parameters:
      - explode: false
        in: path
        name: serverInstanceGroupId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceGroup'
          description: The details of the specified Server Instance Group
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance Group not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Instance Groups details
      tags:
      - Server Instance Group
  /api/v2/server-instance-groups/{serverInstanceGroupId}/config:
    get:
      description: Returns the config details of the specified Server Instance Group
      operationId: getServerInstanceGroupConfig
      parameters:
      - explode: false
        in: path
        name: serverInstanceGroupId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceGroupConfiguration'
          description: The config details of the specified Server Instance Group
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance Group not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Instance Group config details
      tags:
      - Server Instance Group
    patch:
      description: Updates the specified Server Instance Group configuration
      operationId: updateServerInstanceGroupConfig
      parameters:
      - explode: false
        in: path
        name: serverInstanceGroupId
        required: true
        schema:
          type: integer
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerInstanceGroupUpdate'
        description: The Server Instance Group configuration changes
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceGroupConfiguration'
          description: The specified Server Instance Group configuration was successfully
            updated
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance Group not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Updates Server Instance Group configuration
      tags:
      - Server Instance Group
  /api/v2/server-instance-groups/{serverInstanceGroupId}/meta:
    patch:
      description: Updates the specified Server Instance Group meta information
      operationId: updateServerInstanceGroupMeta
      parameters:
      - explode: false
        in: path
        name: serverInstanceGroupId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericMeta'
        description: The Server Instance Group meta information
        required: true
      responses:
        "204":
          description: The specified Server Instance Group meta information was successfully
            updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance Group not found
      security:
      - JWT: []
      - apiKey: []
      summary: Update an Server Instance Group meta information
      tags:
      - Server Instance Group
  /api/v2/server-instance-groups/{serverInstanceGroupId}/server-instances:
    get:
      description: Returns list of Server Instances in the specified group
      operationId: getServerInstanceGroupServerInstances
      parameters:
      - explode: false
        in: path
        name: serverInstanceGroupId
        required: true
        schema:
          type: integer
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by groupId query param.
                    <p>
                       <b>Format: </b> filter.groupId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.groupId=$not:$like:John Doe&filter.groupId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.groupId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverId query param.
                    <p>
                       <b>Format: </b> filter.serverId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverId=$not:$like:John Doe&filter.serverId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serverId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.serverId query param.
                    <p>
                       <b>Format: </b> filter.config.serverId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.serverId=$not:$like:John Doe&filter.config.serverId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.config.serverId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - label:ASC
            - label:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> label\n          </p>\n     \
          \   <p>\n             <b>Default Value: </b> By default all fields mentioned\
          \ below will be used to search by term\n          </p>\n        <h4>Available\
          \ Fields</h4><ul><li>label</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstancePaginatedList'
          description: The list of Server Instances
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance Group not found
      security:
      - JWT: []
      - apiKey: []
      summary: List Server Instances for a Server Instance Group
      tags:
      - Server Instance Group
  /api/v2/server-instance-groups/{serverInstanceGroupId}/drive-groups:
    get:
      description: Returns the drive groups
      operationId: getServerInstanceGroupDriveGroups
      parameters:
      - explode: false
        in: path
        name: serverInstanceGroupId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveGroupList'
          description: The drive groups of the specified Server Instance Group
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance Group not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Instance Group Drive Groups
      tags:
      - Server Instance Group
  /api/v2/server-instance-groups/{serverInstanceGroupId}/interfaces:
    get:
      description: Returns the interfaces for the specified Server Instance Group
      operationId: getServerInstanceGroupInterfaces
      parameters:
      - explode: false
        in: path
        name: serverInstanceGroupId
        required: true
        schema:
          type: integer
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>infrastructureId</li>\n\
          <li>serviceStatus</li>\n<li>config.deployStatus</li>\n<li>config.deployType</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - infrastructureId:ASC
            - infrastructureId:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            - config.deployStatus:ASC
            - config.deployStatus:DESC
            - config.deployType:ASC
            - config.deployType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,subdomain,subdomainPermanent,infrastructureId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>subdomain</li>\n\
          <li>subdomainPermanent</li>\n<li>infrastructureId</li>\n<li>serviceStatus</li>\n\
          <li>config.deployStatus</li>\n<li>config.deployType</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceGroupInterfacePaginatedList'
          description: The interfaces of the specified Server Instance Group
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance Group not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Instance Group Interfaces
      tags:
      - Server Instance Group
  /api/v2/server-instance-groups/{serverInstanceGroupId}/interfaces/{interfaceId}:
    get:
      description: Returns the details of the specified Server Instance Group Interface
      operationId: getServerInstanceGroupInterface
      parameters:
      - explode: false
        in: path
        name: serverInstanceGroupId
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: interfaceId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceGroupInterface'
          description: The details of the specified Server Instance Group Interface
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance Group Interface not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Instance Group Interface details
      tags:
      - Server Instance Group
  /api/v2/server-instance-groups/{serverInstanceGroupId}/actions/apply-profile/{serverInstanceProfileId}:
    post:
      description: Apply the Server profile configuration to all the Server Instances
        in the group. The infrastructure must be deployed for the changes to take
        effect. This is equivalent to running the same operation on each Server.
      operationId: applyProfileToServerInstanceGroup
      parameters:
      - explode: false
        in: path
        name: serverInstanceGroupId
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: serverInstanceProfileId
        required: true
        schema:
          type: integer
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: ""
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance Group not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Apply the Server profile configuration to all the Server Instances
        in the group
      tags:
      - Server Instance Group
  /api/v2/server-instance-profiles:
    get:
      description: ""
      operationId: getServerInstanceProfiles
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by ownerId query param.
                    <p>
                       <b>Format: </b> filter.ownerId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.ownerId=$not:$like:John Doe&filter.ownerId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.ownerId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> label:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n\
          <li>ownerId</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - label:ASC
            - label:DESC
            - ownerId:ASC
            - ownerId:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> label,ownerId\n          </p>\n\
          \        <p>\n             <b>Default Value: </b> By default all fields\
          \ mentioned below will be used to search by term\n          </p>\n     \
          \   <h4>Available Fields</h4><ul><li>label</li>\n<li>ownerId</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to select.\n      <p>\n             <b>Example:\
          \ </b> id,label,ownerId\n          </p>\n      <p>\n             <b>Default\
          \ Value: </b> By default all fields returns. If you want to select only\
          \ some fields, provide them in query param\n          </p>\n      "
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceProfilePaginatedList'
          description: The list of Server Instance Profiles
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: List all Server Instance Profiles
      tags:
      - Server Instance Profile
    post:
      description: Creates new Server Instance Profile
      operationId: createServerInstanceProfile
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerInstanceProfileCreate'
        description: The Server Instance Profile to create
        required: true
      responses:
        "201":
          description: The Server Instance Profile was successfully created
          headers:
            Location:
              description: New instance profile link
              explode: false
              schema:
                type: string
              style: simple
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Create Server Instance Profile
      tags:
      - Server Instance Profile
  /api/v2/server-instance-profiles/{serverInstanceProfileId}:
    delete:
      description: Deletes the specified Server Instance Profile
      operationId: deleteServerInstanceProfile
      parameters:
      - explode: false
        in: path
        name: serverInstanceProfileId
        required: true
        schema:
          type: integer
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The Server Instance Profile was successfully deleted
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance Profile not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Delete Server Instance Profile
      tags:
      - Server Instance Profile
    get:
      description: Returns details of the specified Server Instance Profile
      operationId: getServerInstanceProfile
      parameters:
      - explode: false
        in: path
        name: serverInstanceProfileId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceProfile'
          description: The details of the specified Server Instance Profile
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance Profile not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Instance Profile details
      tags:
      - Server Instance Profile
    patch:
      description: Returns details of the updated Server Instance Profile
      operationId: updateServerInstanceProfile
      parameters:
      - explode: false
        in: path
        name: serverInstanceProfileId
        required: true
        schema:
          type: integer
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerInstanceProfileUpdate'
        description: The Server Instance Profile changes
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceProfile'
          description: The details of the updated Server Instance Profile
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Update Server Instance Profile
      tags:
      - Server Instance Profile
  /api/v2/server-instances:
    get:
      description: Returns list of Server Instances
      operationId: getServerInstances
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by groupId query param.
                    <p>
                       <b>Format: </b> filter.groupId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.groupId=$not:$like:John Doe&filter.groupId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.groupId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverId query param.
                    <p>
                       <b>Format: </b> filter.serverId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverId=$not:$like:John Doe&filter.serverId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serverId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.serverId query param.
                    <p>
                       <b>Format: </b> filter.config.serverId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.serverId=$not:$like:John Doe&filter.config.serverId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.config.serverId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - label:ASC
            - label:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> label\n          </p>\n     \
          \   <p>\n             <b>Default Value: </b> By default all fields mentioned\
          \ below will be used to search by term\n          </p>\n        <h4>Available\
          \ Fields</h4><ul><li>label</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstancePaginatedList'
          description: The list of Server Instances
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: List Server Instances
      tags:
      - Server Instance
  /api/v2/server-instances/{serverInstanceId}:
    delete:
      description: Deletes the specified Server Instance
      operationId: deleteServerInstance
      parameters:
      - explode: false
        in: path
        name: serverInstanceId
        required: true
        schema:
          type: integer
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The specified Server Instance was successfully deleted
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Delete Server Instance
      tags:
      - Server Instance
    get:
      description: Returns the details of the specified Server Instance
      operationId: getServerInstance
      parameters:
      - explode: false
        in: path
        name: serverInstanceId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstance'
          description: The details of the specified Server Instance
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Instance details
      tags:
      - Server Instance
  /api/v2/server-instances/{serverInstanceId}/config:
    get:
      description: Returns the config details of the specified Server Instance
      operationId: getServerInstanceConfig
      parameters:
      - explode: false
        in: path
        name: serverInstanceId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceConfiguration'
          description: The config details of the specified Server Instance
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Instance config details
      tags:
      - Server Instance
    patch:
      description: Updates the specified Server Instance configuration
      operationId: updateServerInstanceConfig
      parameters:
      - explode: false
        in: path
        name: serverInstanceId
        required: true
        schema:
          type: integer
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerInstanceUpdate'
        description: The Server Instance configuration changes
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceConfiguration'
          description: The specified Server Instance configuration was successfully
            updated
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Update Server Instance configuration
      tags:
      - Server Instance
  /api/v2/server-instances/{serverInstanceId}/credentials:
    get:
      description: Returns the credentials for various protocols including the IPs
        allocated
      operationId: getServerInstanceCredentials
      parameters:
      - explode: false
        in: path
        name: serverInstanceId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The credentials of the specified Server Instance
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Instance credentials
      tags:
      - Server Instance
  /api/v2/server-instances/statistics:
    get:
      description: Returns the statistics related to server instances
      operationId: getServerInstanceStatistics
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceStatistics'
          description: The Server Instance Statistics
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Instance counters
      tags:
      - Server Instance
  /api/v2/server-instances/{serverInstanceId}/drives:
    get:
      description: Returns the drives
      operationId: getServerInstanceDrives
      parameters:
      - explode: false
        in: path
        name: serverInstanceId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DriveList'
          description: The drives of the specified Server Instance
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Instance Drives
      tags:
      - Server Instance
  /api/v2/server-instances/{serverInstanceId}/interfaces:
    get:
      description: Returns the interfaces for the specified Server Instance
      operationId: getServerInstanceInterfaces
      parameters:
      - explode: false
        in: path
        name: serverInstanceId
        required: true
        schema:
          type: integer
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>infrastructureId</li>\n\
          <li>serviceStatus</li>\n<li>config.deployStatus</li>\n<li>config.deployType</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - infrastructureId:ASC
            - infrastructureId:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            - config.deployStatus:ASC
            - config.deployStatus:DESC
            - config.deployType:ASC
            - config.deployType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,subdomain,subdomainPermanent,infrastructureId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>subdomain</li>\n\
          <li>subdomainPermanent</li>\n<li>infrastructureId</li>\n<li>serviceStatus</li>\n\
          <li>config.deployStatus</li>\n<li>config.deployType</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceInterfacePaginatedList'
          description: The interfaces of the specified Server Instance
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Instance Interfaces
      tags:
      - Server Instance
  /api/v2/server-instances/{serverInstanceId}/interfaces/{interfaceId}:
    get:
      description: Returns the details of the specified Server Instance Interface
      operationId: getServerInstanceInterface
      parameters:
      - explode: false
        in: path
        name: serverInstanceId
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: interfaceId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceInterface'
          description: The details of the specified Server Instance Interface
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance Interface not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Instance Interface details
      tags:
      - Server Instance
  /api/v2/server-instances/{serverInstanceId}/interfaces/{interfaceId}/config:
    patch:
      description: Updates a Server Instance Interface (such as by attaching it to
        a network)
      operationId: updateServerInstanceInterfaceConfig
      parameters:
      - explode: false
        in: path
        name: serverInstanceId
        required: true
        schema:
          type: integer
        style: simple
      - explode: false
        in: path
        name: interfaceId
        required: true
        schema:
          type: integer
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerInstanceInterfaceUpdate'
        description: The Server Instance Interface configuration changes
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerInstanceInterfaceConfiguration'
          description: The updated Server Instance Interface configuration
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Update Server Instance Interface configuration
      tags:
      - Server Instance
  /api/v2/server-instances/{serverInstanceId}/actions/reset:
    post:
      description: Resets deployed server. The operation is executed immediately.
      operationId: resetServerInstance
      parameters:
      - explode: false
        in: path
        name: serverInstanceId
        required: true
        schema:
          type: integer
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The Server Instance was reset successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance not found
        "409":
          description: The Server Instance state does not allow this operation.
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Reset a deployed server
      tags:
      - Server Instance
  /api/v2/server-instances/{serverInstanceId}/actions/apply-profile:
    post:
      description: Apply the Server profile configuration to this Server Instance.
        The infrastructure must be deployed for the changes to take effect.
      operationId: applyProfileToServerInstance
      parameters:
      - explode: false
        in: path
        name: serverInstanceId
        required: true
        schema:
          type: integer
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerInstanceProfileReference'
        description: The Server Instance Profile reference
        required: true
      responses:
        "204":
          description: ""
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance not found
        "409":
          description: The Server Instance state does not allow this operation.
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Apply the Server Instance Profile configuration to the Server Instance
      tags:
      - Server Instance
  /api/v2/server-instances/{serverInstanceId}/actions/power_set:
    post:
      description: Set power to this Server Instance.
      operationId: setPowerToServerInstance
      parameters:
      - explode: false
        in: path
        name: serverInstanceId
        required: true
        schema:
          type: integer
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerInstancePowerSet'
        required: true
      responses:
        "200":
          description: The Server Instance power was set successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance not found
        "409":
          description: The Server Instance state does not allow this operation.
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Set power to the Server Instance
      tags:
      - Server Instance
  /api/v2/server-instances/{serverInstanceId}/actions/power_get:
    post:
      description: Get the power status of the Server Instance.
      operationId: getPowerFromServerInstance
      parameters:
      - explode: false
        in: path
        name: serverInstanceId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          description: The Server Instance power retrieved
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server Instance not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get the power status of the Server Instance
      tags:
      - Server Instance
  /api/v2/server-instances/{serverInstanceId}/actions/reinstall-os:
    post:
      description: Manage the flag to reinstall the operating system on the server.
        The reinstall operation is executed during the next deploy operation
      operationId: reinstallServerInstanceOS
      parameters:
      - explode: false
        in: path
        name: serverInstanceId
        required: true
        schema:
          type: integer
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerInstanceReinstallOS'
        description: reinstall OS options
        required: true
      responses:
        "200":
          description: flag was changed successfully
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Server instance not found
        "409":
          description: The server instance state does not allow this operation.
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Manage the flag to reinstall the operating system on the server
      tags:
      - Server Instance
  /api/v2/servers:
    get:
      description: Returns a list of Servers
      operationId: getServers
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by serverTypeId query param.
                    <p>
                       <b>Format: </b> filter.serverTypeId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverTypeId=$not:$like:John Doe&filter.serverTypeId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serverTypeId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverId query param.
                    <p>
                       <b>Format: </b> filter.serverId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverId=$not:$like:John Doe&filter.serverId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serverId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by siteId query param.
                    <p>
                       <b>Format: </b> filter.siteId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.siteId=$not:$like:John Doe&filter.siteId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.siteId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by vendor query param.
                    <p>
                       <b>Format: </b> filter.vendor={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.vendor=$not:$like:John Doe&filter.vendor=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.vendor
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serialNumber query param.
                    <p>
                       <b>Format: </b> filter.serialNumber={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serialNumber=$not:$like:John Doe&filter.serialNumber=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serialNumber
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by managementAddress query param.
                    <p>
                       <b>Format: </b> filter.managementAddress={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.managementAddress=$not:$like:John Doe&filter.managementAddress=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.managementAddress
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by model query param.
                    <p>
                       <b>Format: </b> filter.model={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.model=$not:$like:John Doe&filter.model=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.model
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by administrationState query param.
                    <p>
                       <b>Format: </b> filter.administrationState={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.administrationState=$not:$like:John Doe&filter.administrationState=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.administrationState
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverDiskWipe query param.
                    <p>
                       <b>Format: </b> filter.serverDiskWipe={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverDiskWipe=$not:$like:John Doe&filter.serverDiskWipe=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serverDiskWipe
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by powerStatus query param.
                    <p>
                       <b>Format: </b> filter.powerStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.powerStatus=$not:$like:John Doe&filter.powerStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.powerStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverDhcpStatus query param.
                    <p>
                       <b>Format: </b> filter.serverDhcpStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverDhcpStatus=$not:$like:John Doe&filter.serverDhcpStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serverDhcpStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverClass query param.
                    <p>
                       <b>Format: </b> filter.serverClass={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverClass=$not:$like:John Doe&filter.serverClass=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serverClass
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverStatus query param.
                    <p>
                       <b>Format: </b> filter.serverStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverStatus=$not:$like:John Doe&filter.serverStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serverStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by requiresManualCleaning query param.
                    <p>
                       <b>Format: </b> filter.requiresManualCleaning={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.requiresManualCleaning=$not:$like:John Doe&filter.requiresManualCleaning=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.requiresManualCleaning
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by instance.infrastructure.infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.instance.infrastructure.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.instance.infrastructure.infrastructureId=$not:$like:John Doe&filter.instance.infrastructure.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.instance.infrastructure.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> serverId:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>serverId</li>\n\
          <li>serverTypeId</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - serverId:ASC
            - serverId:DESC
            - serverTypeId:ASC
            - serverTypeId:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> vendor,model\n          </p>\n\
          \        <p>\n             <b>Default Value: </b> By default all fields\
          \ mentioned below will be used to search by term\n          </p>\n     \
          \   <h4>Available Fields</h4><ul><li>vendor</li>\n<li>model</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerPaginatedList'
          description: Returns a list of Servers
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of Servers
      tags:
      - Server
    post:
      description: Initializes server registration process
      operationId: registerServer
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterServer'
        description: The server registration information
        required: true
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterServerResponse'
          description: Server registration initiated
          headers:
            Location:
              description: New Server link
              explode: false
              schema:
                type: string
              style: simple
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict
        "422":
          description: Unprocessable Entity
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      - apiKey: []
      summary: Initialize server registration
      tags:
      - Server
  /api/v2/servers/{serverId}/actions/re-register:
    post:
      description: Re-registers a server
      operationId: reRegisterServer
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReRegisterServerResponse'
          description: Server re-registration initiated
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      - apiKey: []
      summary: Re-register a server
      tags:
      - Server
  /api/v2/servers/{serverId}:
    delete:
      description: Deletes a Server
      operationId: deleteServer
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Server deleted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a Server
      tags:
      - Server
    get:
      description: Returns Server information
      operationId: getServerInfo
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: Returns Server information
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server information
      tags:
      - Server
    patch:
      description: Updates the server information
      operationId: updateServer
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServer'
        description: The server information update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Server'
          description: The server information was updated
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad Request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      - apiKey: []
      summary: Updates the server information
      tags:
      - Server
  /api/v2/servers/{serverId}/actions/archive:
    post:
      description: Archives a Server
      operationId: archiveServer
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Server archived
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      - apiKey: []
      summary: Archives a Server
      tags:
      - Server
  /api/v2/servers/statistics:
    get:
      description: Returns Servers statistics
      operationId: getServersStatistics
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerStatistics'
          description: Returns Servers statistics
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Servers statistics
      tags:
      - Server
  /api/v2/servers/{serverId}/capabilities:
    get:
      description: Returns Server capabilities
      operationId: getServerCapabilities
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCapabilities'
          description: Returns Server capabilities
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server capabilities
      tags:
      - Server
  /api/v2/servers/{serverId}/credentials:
    get:
      description: Returns Server credentials
      operationId: getServerCredentials
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCredentials'
          description: Returns Server credentials
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server credentials
      tags:
      - Server
  /api/v2/servers/{serverId}/actions/update-ipmi-credentials:
    post:
      description: Updates Server ipmi credentials
      operationId: updateServerIpmiCredentials
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerIpmiCredentials'
        description: The Server Ipmi credentials object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerCredentials'
          description: Updates Server ipmi credentials
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Update Server ipmi credentials
      tags:
      - Server
  /api/v2/servers/{serverId}/actions/enable-snmp:
    post:
      description: Enables SNMP on a Server
      operationId: updateServerEnableSnmp
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: number
          description: Id pointing to the job that enables SNMP on the Server
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Enables SNMP on a Server
      tags:
      - Server
  /api/v2/servers/{serverId}/vnc-info:
    get:
      description: Returns VNC information
      operationId: getServerVNCInfo
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerVNCInfo'
          description: Returns VNC information
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get VNC information
      tags:
      - Server
  /api/v2/servers/{serverId}/remote-console-info:
    get:
      description: Returns Remote Console information
      operationId: getServerRemoteConsoleInfo
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteConsoleInfo'
          description: Returns Remote Console information
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get Remote Console information
      tags:
      - Server
  /api/v2/servers/{serverId}/actions/factory-reset:
    post:
      description: Resets a server to factory defaults
      operationId: resetServerToFactoryDefaults
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "202":
          description: Resets a server to factory defaults
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Resets a server to factory defaults
      tags:
      - Server
  /api/v2/servers/{serverId}/actions/syslog-subscribe:
    post:
      description: Enables remote syslog for a server
      operationId: enableServerSyslog
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Enables remote syslog for a server
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Enables remote syslog for a server
      tags:
      - Server
  /api/v2/servers/{serverId}/actions/get-power:
    post:
      description: Gets the power state of a server
      operationId: getServerPowerStatus
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: Gets the power state of a server
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Gets the power state of a server
      tags:
      - Server
  /api/v2/servers/{serverId}/actions/set-power:
    post:
      description: Sets the power state of a server
      operationId: setServerPowerState
      parameters:
      - explode: false
        in: path
        name: serverId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerPowerSet'
        description: The server power options
        required: true
      responses:
        "204":
          description: Sets the power state of a server
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Sets the power state of a server
      tags:
      - Server
  /api/v2/server-types:
    get:
      description: Returns a list of Server Types
      operationId: getServerTypes
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by ramGbytes query param.
                    <p>
                       <b>Format: </b> filter.ramGbytes={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.ramGbytes=$not:$like:John Doe&filter.ramGbytes=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.ramGbytes
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by processorCount query param.
                    <p>
                       <b>Format: </b> filter.processorCount={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.processorCount=$not:$like:John Doe&filter.processorCount=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.processorCount
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by processorCoreCount query param.
                    <p>
                       <b>Format: </b> filter.processorCoreCount={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.processorCoreCount=$not:$like:John Doe&filter.processorCoreCount=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.processorCoreCount
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by displayName query param.
                    <p>
                       <b>Format: </b> filter.displayName={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.displayName=$not:$like:John Doe&filter.displayName=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.displayName
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by networkTotalCapacityMbps query param.
                    <p>
                       <b>Format: </b> filter.networkTotalCapacityMbps={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.networkTotalCapacityMbps=$not:$like:John Doe&filter.networkTotalCapacityMbps=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.networkTotalCapacityMbps
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by isExperimental query param.
                    <p>
                       <b>Format: </b> filter.isExperimental={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.isExperimental=$not:$like:John Doe&filter.isExperimental=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.isExperimental
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by forUnmanagedServersOnly query param.
                    <p>
                       <b>Format: </b> filter.forUnmanagedServersOnly={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.forUnmanagedServersOnly=$not:$like:John Doe&filter.forUnmanagedServersOnly=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.forUnmanagedServersOnly
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by forGenericEndpointsOnly query param.
                    <p>
                       <b>Format: </b> filter.forGenericEndpointsOnly={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.forGenericEndpointsOnly=$not:$like:John Doe&filter.forGenericEndpointsOnly=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.forGenericEndpointsOnly
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by supportsOobProvisioning query param.
                    <p>
                       <b>Format: </b> filter.supportsOobProvisioning={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.supportsOobProvisioning=$not:$like:John Doe&filter.supportsOobProvisioning=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.supportsOobProvisioning
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by allowedVendorSkuIds query param.
                    <p>
                       <b>Format: </b> filter.allowedVendorSkuIds={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.allowedVendorSkuIds=$not:$like:John Doe&filter.allowedVendorSkuIds=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.allowedVendorSkuIds
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n\
          <li>name</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - label:ASC
            - label:DESC
            - name:ASC
            - name:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> name,label\n          </p>\n\
          \        <p>\n             <b>Default Value: </b> By default all fields\
          \ mentioned below will be used to search by term\n          </p>\n     \
          \   <h4>Available Fields</h4><ul><li>name</li>\n<li>label</li></ul>\n  \
          \      "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerTypePaginatedList'
          description: Returns a list of Server Types
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of Server Types
      tags:
      - Server Type
    post:
      description: Creates a Server Type
      operationId: createServerType
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateServerType'
        description: The Server Type create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerType'
          description: The Server Type successfully created
          headers:
            Location:
              description: New Server Type link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a Server Type
      tags:
      - Server Type
  /api/v2/server-types/{serverTypeId}:
    delete:
      description: Deletes a Server Type
      operationId: deleteServerType
      parameters:
      - explode: false
        in: path
        name: serverTypeId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The Server Type was successfully deleted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a Server Type
      tags:
      - Server Type
    get:
      description: Returns Server Type information
      operationId: getServerTypeInfo
      parameters:
      - explode: false
        in: path
        name: serverTypeId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerType'
          description: Returns Server Type information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Type information
      tags:
      - Server Type
    patch:
      description: Updates a Server Type
      operationId: updateServerType
      parameters:
      - explode: false
        in: path
        name: serverTypeId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateServerType'
        description: The Server Type update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerType'
          description: The Server Type successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates a Server Type
      tags:
      - Server Type
  /api/v2/server-types/statistics:
    post:
      description: Returns Server Type statistics batch
      operationId: getServerTypesStatisticsBatch
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServerTypeStatisticsBatchOptions'
        description: The server type statistics batch options
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerTypeStatisticsBatch'
          description: Returns Server Type statistics batch
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Server Type statistics batch
      tags:
      - Server Type
  /api/v2/server-types/actions/clean-unused:
    post:
      description: Deletes unused server types
      operationId: removeUnusedServerTypes
      parameters: []
      responses:
        "204":
          description: The unused Server Types were successfully deleted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes unused server types
      tags:
      - Server Type
  /api/v2/shared-drives/{sharedDriveId}:
    get:
      description: Returns Shared Drive information
      operationId: getSharedDrive
      parameters:
      - explode: false
        in: path
        name: sharedDriveId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDrive'
          description: Returns Shared Drive information
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Shared Drive information
      tags:
      - Shared Drive
  /api/v2/infrastructures/{infrastructureId}/shared-drives:
    get:
      description: Returns list of all Shared Drives on the infrastructure
      operationId: getInfrastructureSharedDrives
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomain query param.
                    <p>
                       <b>Format: </b> filter.subdomain={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomain=$not:$like:John Doe&filter.subdomain=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomain
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomainPermanent query param.
                    <p>
                       <b>Format: </b> filter.subdomainPermanent={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomainPermanent=$not:$like:John Doe&filter.subdomainPermanent=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomainPermanent
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by storagePoolId query param.
                    <p>
                       <b>Format: </b> filter.storagePoolId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.storagePoolId=$not:$like:John Doe&filter.storagePoolId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.storagePoolId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by wwn query param.
                    <p>
                       <b>Format: </b> filter.wwn={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.wwn=$not:$like:John Doe&filter.wwn=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.wwn
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by ioLimitPolicy query param.
                    <p>
                       <b>Format: </b> filter.ioLimitPolicy={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.ioLimitPolicy=$not:$like:John Doe&filter.ioLimitPolicy=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.ioLimitPolicy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by networkVlanId query param.
                    <p>
                       <b>Format: </b> filter.networkVlanId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.networkVlanId=$not:$like:John Doe&filter.networkVlanId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.networkVlanId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by allocationAffinity query param.
                    <p>
                       <b>Format: </b> filter.allocationAffinity={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.allocationAffinity=$not:$like:John Doe&filter.allocationAffinity=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.allocationAffinity
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by provisioningProtocol query param.
                    <p>
                       <b>Format: </b> filter.provisioningProtocol={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.provisioningProtocol=$not:$like:John Doe&filter.provisioningProtocol=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.provisioningProtocol
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>storagePoolId</li>\n\
          <li>infrastructureId</li>\n<li>serviceStatus</li>\n<li>config.deployStatus</li>\n\
          <li>config.deployType</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - storagePoolId:ASC
            - storagePoolId:DESC
            - infrastructureId:ASC
            - infrastructureId:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            - config.deployStatus:ASC
            - config.deployStatus:DESC
            - config.deployType:ASC
            - config.deployType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,subdomain,subdomainPermanent,infrastructureId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>subdomain</li>\n\
          <li>subdomainPermanent</li>\n<li>infrastructureId</li>\n<li>storagePoolId</li>\n\
          <li>serviceStatus</li>\n<li>wwn</li>\n<li>ioLimitPolicy</li>\n<li>networkVlanId</li>\n\
          <li>allocationAffinity</li>\n<li>provisioningProtocol</li>\n<li>config.deployStatus</li>\n\
          <li>config.deployType</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDrivePaginatedList'
          description: Returns list of all Shared Drives on the infrastructure
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all Shared Drives on the infrastructure
      tags:
      - Shared Drive
    post:
      operationId: createSharedDrive
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSharedDrive'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDrive'
          description: Config update of the Shared Drive.
          headers:
            Location:
              description: New Shared Drive link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
        "500":
          description: Failed to update config of Shared Drive.
      security:
      - JWT: []
      - apiKey: []
      summary: Create a new Shared Drive
      tags:
      - Shared Drive
  /api/v2/infrastructures/{infrastructureId}/shared-drives/{sharedDriveId}:
    delete:
      operationId: deleteSharedDrive
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: sharedDriveId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Successfully deleted Shared Drive.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
        "500":
          description: Failed to delete Shared Drive
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a Shared Drive
      tags:
      - Shared Drive
    get:
      description: Returns Shared Drive information
      operationId: getInfrastructureSharedDrive
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: sharedDriveId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDrive'
          description: Returns Shared Drive information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Shared Drive information
      tags:
      - Shared Drive
  /api/v2/infrastructures/{infrastructureId}/shared-drives/{sharedDriveId}/config:
    get:
      operationId: getSharedDriveConfigInfo
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: sharedDriveId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDriveConfiguration'
          description: Returns the Shared Drive
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get configuration information about the specified Shared Drive
      tags:
      - Shared Drive
    patch:
      operationId: patchSharedDriveConfig
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: sharedDriveId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSharedDrive'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDrive'
          description: Config update of the Shared Drive.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
        "500":
          description: Failed to update config of Shared Drive.
      security:
      - JWT: []
      - apiKey: []
      summary: Updates the config of a Shared Drive
      tags:
      - Shared Drive
  /api/v2/infrastructures/{infrastructureId}/shared-drives/{sharedDriveId}/meta:
    patch:
      operationId: patchSharedDriveMeta
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: sharedDriveId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSharedDriveMeta'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDrive'
          description: Meta update of the Shared Drive.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
        "500":
          description: Failed to update meta of Shared Drive.
      security:
      - JWT: []
      - apiKey: []
      summary: Updates the meta of a Shared Drive
      tags:
      - Shared Drive
  /api/v2/infrastructures/{infrastructureId}/shared-drives/{sharedDriveId}/hosts:
    get:
      description: Returns the Hosts of Shared Drive
      operationId: getSharedDriveHosts
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: sharedDriveId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDriveHosts'
          description: Returns the Hosts of Shared Drive
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get the Hosts of Shared Drive
      tags:
      - Shared Drive
  /api/v2/infrastructures/{infrastructureId}/shared-drives/{sharedDriveId}/actions/modify-instance-array-hosts-bulk:
    post:
      description: Updates Instance Array Hosts on the Shared Drive
      operationId: updateSharedDriveInstanceArrayHostsBulk
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: sharedDriveId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SharedDriveHostsModifyBulk'
        description: The Shared Drive Instance Array Hosts update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDriveHosts'
          description: The Shared Drive information successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates Instance Array Hosts on the Shared Drive
      tags:
      - Shared Drive
  /api/v2/sites:
    get:
      description: Returns a list of Sites
      operationId: getSites
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by slug query param.
                    <p>
                       <b>Format: </b> filter.slug={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.slug=$not:$like:John Doe&filter.slug=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.slug
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li></ul>\n \
          \     "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,name,slug\n          </p>\n\
          \        <p>\n             <b>Default Value: </b> By default all fields\
          \ mentioned below will be used to search by term\n          </p>\n     \
          \   <h4>Available Fields</h4><ul><li>id</li>\n<li>name</li>\n<li>slug</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SitePaginatedList'
          description: Returns a list of Sites
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of Sites
      tags:
      - Site
    post:
      description: Creates a Site
      operationId: createSite
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteCreate'
        description: The Site create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: The Site successfully created
          headers:
            Location:
              description: New Site link
              explode: false
              schema:
                type: string
              style: simple
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a Site
      tags:
      - Site
  /api/v2/sites/{siteId}:
    get:
      description: Returns Site information
      operationId: getSite
      parameters:
      - explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: Returns Site information
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Site information
      tags:
      - Site
    patch:
      description: Updates a Site
      operationId: updateSite
      parameters:
      - explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteUpdate'
        description: The Site update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Site'
          description: The Site successfully updated
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Updates a Site
      tags:
      - Site
  /api/v2/sites/{siteId}/config:
    get:
      description: Returns Site Config information
      operationId: getSiteConfig
      parameters:
      - explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfig'
          description: Returns Site Config information
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Site Config information
      tags:
      - Site
    patch:
      description: Updates a Site Config
      operationId: updateSiteConfig
      parameters:
      - explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SiteConfigUpdate'
        description: The Site Config update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteConfig'
          description: The Site Config successfully updated
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Updates a Site Config
      tags:
      - Site
  /api/v2/sites/{siteId}/actions/decommission:
    post:
      description: Decommissions a Site
      operationId: decommissionSite
      parameters:
      - explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Site decommissioned
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
        "500":
          description: Internal Server Error
      security:
      - JWT: []
      - apiKey: []
      summary: Decommissions a Site
      tags:
      - Site
  /api/v2/sites/statistics:
    get:
      description: Returns Sites statistics
      operationId: getSitesStatistics
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SiteStatistics'
          description: Returns Sites statistics
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get Sites statistics
      tags:
      - Site
  /api/v2/sites/{siteId}/controllers:
    get:
      description: Returns a list of agents for a site
      operationId: getAgents
      parameters:
      - explode: false
        in: path
        name: siteId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AgentInfo'
                type: array
          description: Returns a list of Agents for a site
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of agents for a site
      tags:
      - Site
  /api/v2/storages:
    get:
      description: Returns a list of Storages
      operationId: getStorages
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by storageId query param.
                    <p>
                       <b>Format: </b> filter.storageId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.storageId=$not:$like:John Doe&filter.storageId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.storageId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by userId query param.
                    <p>
                       <b>Format: </b> filter.userId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.userId=$not:$like:John Doe&filter.userId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.userId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by siteId query param.
                    <p>
                       <b>Format: </b> filter.siteId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.siteId=$not:$like:John Doe&filter.siteId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.siteId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by storageTechnology query param.
                    <p>
                       <b>Format: </b> filter.storageTechnology={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.storageTechnology=$not:$like:John Doe&filter.storageTechnology=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.storageTechnology
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> storageId:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>storageId</li>\n\
          <li>userId</li>\n<li>siteId</li>\n<li>storageDriver</li>\n<li>storageTechnology</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - storageId:ASC
            - storageId:DESC
            - userId:ASC
            - userId:DESC
            - siteId:ASC
            - siteId:DESC
            - storageDriver:ASC
            - storageDriver:DESC
            - storageTechnology:ASC
            - storageTechnology:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> storageId,userId,siteId,storageDriver,storageTechnology\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>storageId</li>\n<li>userId</li>\n\
          <li>siteId</li>\n<li>storageDriver</li>\n<li>storageTechnology</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoragePaginatedList'
          description: Returns a list of Storages
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of Storages
      tags:
      - Storage
    post:
      description: Creates a Storage
      operationId: createStorage
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStorage'
        description: The Storage create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegisterStorageResponse'
          description: The Storage successfully created
          headers:
            Location:
              description: New Storage link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a Storage
      tags:
      - Storage
  /api/v2/storages/statistics:
    get:
      description: Returns Storages statistics
      operationId: getStorageStatistics
      parameters:
      - description: Include storages in maintenance.
        explode: true
        in: query
        name: includeMaintenance
        required: false
        schema:
          type: string
        style: form
      - description: Include experimental storages.
        explode: true
        in: query
        name: includeExperimental
        required: false
        schema:
          type: string
        style: form
      - description: Minimum space.
        explode: true
        in: query
        name: minimumSpace
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StorageStatistics'
          description: Returns Storages statistics
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get Storages statistics
      tags:
      - Storage
  /api/v2/storages/{storageId}:
    delete:
      description: Deletes a Storage
      operationId: deleteStorage
      parameters:
      - explode: false
        in: path
        name: storageId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStorage'
        description: The Storage object to delete
        required: true
      responses:
        "204":
          description: The Storage successfully deleted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a Storage
      tags:
      - Storage
    get:
      description: Retrieves a Storage
      operationId: getStorage
      parameters:
      - explode: false
        in: path
        name: storageId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage'
          description: The Storage successfully retrieved
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Retrieves a Storage
      tags:
      - Storage
    patch:
      description: Updates a Storage
      operationId: updateStorage
      parameters:
      - explode: false
        in: path
        name: storageId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStorage'
        description: The Storage update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Storage'
          description: The Storage successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates a Storage
      tags:
      - Storage
  /api/v2/storages/{storageId}/iscsi-boot-servers:
    get:
      description: Returns information about servers which are setup to boot from
        iSCSI block devices
      operationId: getStorageIscsiBootServers
      parameters:
      - explode: false
        in: path
        name: storageId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/IscsiBootServerInfo'
                type: array
          description: The servers that can boot iSCSI block devices attached on this
            storage
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Returns information about servers which are setup to boot from iSCSI
        block devices
      tags:
      - Storage
  /api/v2/storages/{storageId}/actions/update-cache:
    post:
      description: Execute a Storage action
      operationId: executeStorageAction
      parameters:
      - explode: false
        in: path
        name: storageId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The storage action was successfully executed
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Execute a Storage action
      tags:
      - Storage
  /api/v2/storages/{storageId}/network-device-configurations:
    get:
      description: Retrieves Storage Network Device Configurations
      operationId: getStorageNetworkDeviceConfigurations
      parameters:
      - explode: false
        in: path
        name: storageId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/StorageNetworkDeviceConfiguration'
                type: array
          description: The Storage Network Device Configurations successfully retrieved
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Retrieves Storage Network Device Configurations
      tags:
      - Storage
    post:
      description: Creates a Storage Network Device Configuration
      operationId: createStorageNetworkDeviceConfiguration
      parameters:
      - explode: false
        in: path
        name: storageId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateStorageNetworkDeviceConfiguration'
        description: The new Storage Network Device Configuration object
        required: true
      responses:
        "201":
          description: Storage NetworkDeviceConfiguration successfully created
          headers:
            Location:
              description: New Storage Network Device link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a Storage Network Device Configuration
      tags:
      - Storage
  /api/v2/storages/{storageId}/network-device-configurations/{storageNetworkDeviceConfigurationId}:
    delete:
      description: Deletes a Storage Network Device Configuration
      operationId: deleteStorageNetworkDeviceConfiguration
      parameters:
      - explode: false
        in: path
        name: storageId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: storageNetworkDeviceConfigurationId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: ""
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a Storage Network Device Configuration
      tags:
      - Storage
    patch:
      description: Updates a Storage Network Device Configuration
      operationId: updateStorageNetworkDeviceConfiguration
      parameters:
      - explode: false
        in: path
        name: storageId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: storageNetworkDeviceConfigurationId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStorageNetworkDeviceConfiguration'
        description: The updated Storage Network Device Configuration object
        required: true
      responses:
        "201":
          description: ""
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates a Storage Network Device Configuration
      tags:
      - Storage
  /api/v2/storages/{storageId}/shared-drives:
    get:
      description: Returns list of all Shared Drives linked to the specified Storage
      operationId: getStorageSharedDrives
      parameters:
      - explode: false
        in: path
        name: storageId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomain query param.
                    <p>
                       <b>Format: </b> filter.subdomain={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomain=$not:$like:John Doe&filter.subdomain=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomain
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomainPermanent query param.
                    <p>
                       <b>Format: </b> filter.subdomainPermanent={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomainPermanent=$not:$like:John Doe&filter.subdomainPermanent=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomainPermanent
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by storagePoolId query param.
                    <p>
                       <b>Format: </b> filter.storagePoolId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.storagePoolId=$not:$like:John Doe&filter.storagePoolId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.storagePoolId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by wwn query param.
                    <p>
                       <b>Format: </b> filter.wwn={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.wwn=$not:$like:John Doe&filter.wwn=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.wwn
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by ioLimitPolicy query param.
                    <p>
                       <b>Format: </b> filter.ioLimitPolicy={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.ioLimitPolicy=$not:$like:John Doe&filter.ioLimitPolicy=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.ioLimitPolicy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by networkVlanId query param.
                    <p>
                       <b>Format: </b> filter.networkVlanId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.networkVlanId=$not:$like:John Doe&filter.networkVlanId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.networkVlanId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by allocationAffinity query param.
                    <p>
                       <b>Format: </b> filter.allocationAffinity={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.allocationAffinity=$not:$like:John Doe&filter.allocationAffinity=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.allocationAffinity
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by provisioningProtocol query param.
                    <p>
                       <b>Format: </b> filter.provisioningProtocol={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.provisioningProtocol=$not:$like:John Doe&filter.provisioningProtocol=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.provisioningProtocol
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>storagePoolId</li>\n\
          <li>infrastructureId</li>\n<li>serviceStatus</li>\n<li>config.deployStatus</li>\n\
          <li>config.deployType</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - storagePoolId:ASC
            - storagePoolId:DESC
            - infrastructureId:ASC
            - infrastructureId:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            - config.deployStatus:ASC
            - config.deployStatus:DESC
            - config.deployType:ASC
            - config.deployType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,subdomain,subdomainPermanent,infrastructureId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>subdomain</li>\n\
          <li>subdomainPermanent</li>\n<li>infrastructureId</li>\n<li>storagePoolId</li>\n\
          <li>serviceStatus</li>\n<li>wwn</li>\n<li>ioLimitPolicy</li>\n<li>networkVlanId</li>\n\
          <li>allocationAffinity</li>\n<li>provisioningProtocol</li>\n<li>config.deployStatus</li>\n\
          <li>config.deployType</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharedDrivePaginatedList'
          description: Returns list of all Shared Drives linked to the specified Storage
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all Shared Drives linked to the specified storage
      tags:
      - Storage
  /api/v2/storages/{storageId}/drives:
    get:
      description: Returns list of all Drives linked to the specified Storage
      operationId: getStorageDrives
      parameters:
      - explode: false
        in: path
        name: storageId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by instanceId query param.
                    <p>
                       <b>Format: </b> filter.instanceId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.instanceId=$not:$like:John Doe&filter.instanceId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.instanceId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomain query param.
                    <p>
                       <b>Format: </b> filter.subdomain={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomain=$not:$like:John Doe&filter.subdomain=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomain
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomainPermanent query param.
                    <p>
                       <b>Format: </b> filter.subdomainPermanent={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomainPermanent=$not:$like:John Doe&filter.subdomainPermanent=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomainPermanent
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by storagePoolId query param.
                    <p>
                       <b>Format: </b> filter.storagePoolId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.storagePoolId=$not:$like:John Doe&filter.storagePoolId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.storagePoolId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by provisioningProtocol query param.
                    <p>
                       <b>Format: </b> filter.provisioningProtocol={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.provisioningProtocol=$not:$like:John Doe&filter.provisioningProtocol=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.provisioningProtocol
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>storagePoolId</li>\n\
          <li>infrastructureId</li>\n<li>serviceStatus</li>\n<li>config.deployStatus</li>\n\
          <li>config.deployType</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - storagePoolId:ASC
            - storagePoolId:DESC
            - infrastructureId:ASC
            - infrastructureId:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            - config.deployStatus:ASC
            - config.deployStatus:DESC
            - config.deployType:ASC
            - config.deployType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,subdomain,subdomainPermanent,infrastructureId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>subdomain</li>\n\
          <li>subdomainPermanent</li>\n<li>infrastructureId</li>\n<li>storagePoolId</li>\n\
          <li>serviceStatus</li>\n<li>wwn</li>\n<li>networkVlanId</li>\n<li>provisioningProtocol</li>\n\
          <li>templateId</li>\n<li>config.deployStatus</li>\n<li>config.deployType</li>\n\
          <li>config.templateId</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DrivePaginatedList'
          description: Returns list of all Shared Drives linked to the specified Storage
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all Drives linked to the specified storage
      tags:
      - Storage
  /api/v2/storages/{storageId}/file-shares:
    get:
      description: Returns list of all File Shares linked to the specified Storage
      operationId: getStorageFileShares
      parameters:
      - explode: false
        in: path
        name: storageId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomain query param.
                    <p>
                       <b>Format: </b> filter.subdomain={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomain=$not:$like:John Doe&filter.subdomain=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomain
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomainPermanent query param.
                    <p>
                       <b>Format: </b> filter.subdomainPermanent={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomainPermanent=$not:$like:John Doe&filter.subdomainPermanent=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomainPermanent
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by storagePoolId query param.
                    <p>
                       <b>Format: </b> filter.storagePoolId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.storagePoolId=$not:$like:John Doe&filter.storagePoolId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.storagePoolId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>infrastructureId</li>\n\
          <li>storagePoolId</li>\n<li>serviceStatus</li>\n<li>config.deployStatus</li>\n\
          <li>config.deployType</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - infrastructureId:ASC
            - infrastructureId:DESC
            - storagePoolId:ASC
            - storagePoolId:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            - config.deployStatus:ASC
            - config.deployStatus:DESC
            - config.deployType:ASC
            - config.deployType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,subdomain,subdomainPermanent,storagePoolId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>subdomain</li>\n\
          <li>subdomainPermanent</li>\n<li>storagePoolId</li>\n<li>serviceStatus</li>\n\
          <li>infrastructureId</li>\n<li>config.deployStatus</li>\n<li>config.deployType</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSharePaginatedList'
          description: Returns list of all File Shares linked to the specified Storage
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all File Shares linked to the specified storage
      tags:
      - Storage
  /api/v2/storages/{storageId}/buckets:
    get:
      description: Returns list of all Buckets linked to the specified Storage
      operationId: getStorageBuckets
      parameters:
      - explode: false
        in: path
        name: storageId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomain query param.
                    <p>
                       <b>Format: </b> filter.subdomain={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomain=$not:$like:John Doe&filter.subdomain=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomain
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomainPermanent query param.
                    <p>
                       <b>Format: </b> filter.subdomainPermanent={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomainPermanent=$not:$like:John Doe&filter.subdomainPermanent=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomainPermanent
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by storagePoolId query param.
                    <p>
                       <b>Format: </b> filter.storagePoolId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.storagePoolId=$not:$like:John Doe&filter.storagePoolId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.storagePoolId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>infrastructureId</li>\n\
          <li>storagePoolId</li>\n<li>serviceStatus</li>\n<li>config.deployStatus</li>\n\
          <li>config.deployType</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - infrastructureId:ASC
            - infrastructureId:DESC
            - storagePoolId:ASC
            - storagePoolId:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            - config.deployStatus:ASC
            - config.deployStatus:DESC
            - config.deployType:ASC
            - config.deployType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,subdomain,subdomainPermanent,storagePoolId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>subdomain</li>\n\
          <li>subdomainPermanent</li>\n<li>storagePoolId</li>\n<li>serviceStatus</li>\n\
          <li>infrastructureId</li>\n<li>config.deployStatus</li>\n<li>config.deployType</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BucketPaginatedList'
          description: Returns list of all Buckets linked to the specified Storage
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all Buckets linked to the specified storage
      tags:
      - Storage
  /api/v2/version:
    get:
      description: Returns the MetalSoft system version
      operationId: getVersion
      parameters: []
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Version'
          description: Returns the MetalSoft system version
        "401":
          description: Unauthorized
      security:
      - JWT: []
      - apiKey: []
      summary: Get MetalSoft system version
      tags:
      - System
  /api/v2/template-assets:
    get:
      description: Returns list of the available template assets
      operationId: getTemplateAssets
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by templateId query param.
                    <p>
                       <b>Format: </b> filter.templateId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.templateId=$not:$like:John Doe&filter.templateId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.templateId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by usage query param.
                    <p>
                       <b>Format: </b> filter.usage={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.usage=$not:$like:John Doe&filter.usage=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.usage
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by file.mimeType query param.
                    <p>
                       <b>Format: </b> filter.file.mimeType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.file.mimeType=$not:$like:John Doe&filter.file.mimeType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.file.mimeType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by tags query param.
                    <p>
                       <b>Format: </b> filter.tags={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.tags=$not:$like:John Doe&filter.tags=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$ilike</li>
          <li>$eq</li></ul>
        explode: true
        in: query
        name: filter.tags
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> templateId:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>templateId</li>\n\
          <li>usage</li>\n<li>file.mimeType</li>\n<li>createdAt</li>\n<li>modifiedAt</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - templateId:ASC
            - templateId:DESC
            - usage:ASC
            - usage:DESC
            - file.mimeType:ASC
            - file.mimeType:DESC
            - createdAt:ASC
            - createdAt:DESC
            - modifiedAt:ASC
            - modifiedAt:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,templateId,usage,file.name,file.mimeType\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>templateId</li>\n\
          <li>usage</li>\n<li>file.name</li>\n<li>file.mimeType</li>\n<li>createdBy</li>\n\
          <li>modifiedBy</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "List of fields to select.\n      <p>\n             <b>Example:\
          \ </b> id,templateId,usage,file.name,file.mimeType\n          </p>\n   \
          \   <p>\n             <b>Default Value: </b> By default all fields returns.\
          \ If you want to select only some fields, provide them in query param\n\
          \          </p>\n      "
        explode: true
        in: query
        name: select
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateAssetPaginatedList'
          description: The list of the available template assets
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get a list of available template assets
      tags:
      - Template Asset
    post:
      description: Returns details of the new template asset
      operationId: createTemplateAsset
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateAssetCreate'
        description: The template asset details
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateAsset'
          description: The details of the created template asset
          headers:
            Location:
              description: New template asset link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Create template asset
      tags:
      - Template Asset
  /api/v2/template-assets/{templateAssetId}:
    delete:
      description: Deletes the specified template asset
      operationId: deleteTemplateAsset
      parameters:
      - explode: false
        in: path
        name: templateAssetId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Template asset not found
      security:
      - JWT: []
      - apiKey: []
      summary: Delete template asset
      tags:
      - Template Asset
    get:
      description: Returns details of the specified template asset
      operationId: getTemplateAsset
      parameters:
      - explode: false
        in: path
        name: templateAssetId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateAsset'
          description: The details of the specified template asset
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Template asset not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get details for an template asset
      tags:
      - Template Asset
    put:
      description: Returns details of the updated template asset
      operationId: updateTemplateAsset
      parameters:
      - explode: false
        in: path
        name: templateAssetId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateAssetCreate'
        description: The template asset details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateAsset'
          description: The details of the updated template asset
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Update template asset
      tags:
      - Template Asset
  /api/v2/events:
    get:
      description: Returns list of all Events
      operationId: getEvents
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by userIdAuthenticated query param.
                    <p>
                       <b>Format: </b> filter.userIdAuthenticated={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.userIdAuthenticated=$not:$like:John Doe&filter.userIdAuthenticated=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.userIdAuthenticated
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by type query param.
                    <p>
                       <b>Format: </b> filter.type={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.type=$not:$like:John Doe&filter.type=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.type
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by severity query param.
                    <p>
                       <b>Format: </b> filter.severity={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.severity=$not:$like:John Doe&filter.severity=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.severity
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by visibility query param.
                    <p>
                       <b>Format: </b> filter.visibility={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.visibility=$not:$like:John Doe&filter.visibility=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.visibility
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by infrastructureId query param.
                    <p>
                       <b>Format: </b> filter.infrastructureId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureId=$not:$like:John Doe&filter.infrastructureId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.infrastructureId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by userId query param.
                    <p>
                       <b>Format: </b> filter.userId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.userId=$not:$like:John Doe&filter.userId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.userId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by storagePoolId query param.
                    <p>
                       <b>Format: </b> filter.storagePoolId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.storagePoolId=$not:$like:John Doe&filter.storagePoolId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.storagePoolId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serverId query param.
                    <p>
                       <b>Format: </b> filter.serverId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serverId=$not:$like:John Doe&filter.serverId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.serverId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by jobId query param.
                    <p>
                       <b>Format: </b> filter.jobId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.jobId=$not:$like:John Doe&filter.jobId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.jobId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by siteId query param.
                    <p>
                       <b>Format: </b> filter.siteId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.siteId=$not:$like:John Doe&filter.siteId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.siteId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li></ul>\n \
          \     "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,type,severity,visibility,infrastructureId\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>type</li>\n<li>severity</li>\n\
          <li>visibility</li>\n<li>infrastructureId</li>\n<li>userId</li>\n<li>serverId</li>\n\
          <li>jobId</li>\n<li>siteId</li>\n<li>title</li>\n<li>message</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventPaginatedList'
          description: Retrieves a list of Events.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
      security:
      - JWT: []
      - apiKey: []
      summary: Get all Events
      tags:
      - Event
  /api/v2/events/{eventId}:
    get:
      description: Returns Event information
      operationId: getEvent
      parameters:
      - explode: false
        in: path
        name: eventId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Event'
          description: Returns Event information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get Event information
      tags:
      - Event
  /api/v2/users:
    get:
      description: Returns a list of users
      operationId: getUsers
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by displayName query param.
                    <p>
                       <b>Format: </b> filter.displayName={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.displayName=$not:$like:John Doe&filter.displayName=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.displayName
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by email query param.
                    <p>
                       <b>Format: </b> filter.email={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.email=$not:$like:John Doe&filter.email=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.email
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by accountId query param.
                    <p>
                       <b>Format: </b> filter.accountId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.accountId=$not:$like:John Doe&filter.accountId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.accountId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by archived query param.
                    <p>
                       <b>Format: </b> filter.archived={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.archived=$not:$like:John Doe&filter.archived=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.archived
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by infrastructureIdDefault query param.
                    <p>
                       <b>Format: </b> filter.infrastructureIdDefault={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.infrastructureIdDefault=$not:$like:John Doe&filter.infrastructureIdDefault=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.infrastructureIdDefault
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> displayName:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>displayName</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - displayName:ASC
            - displayName:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> displayName,email\n         \
          \ </p>\n        <p>\n             <b>Default Value: </b> By default all\
          \ fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>displayName</li>\n<li>email</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserPaginatedList'
          description: The list of users
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get users
      tags:
      - User
    post:
      description: Creates a user
      operationId: createUser
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
        description: The user to create
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User successfully created
          headers:
            Location:
              description: New User link
              explode: false
              schema:
                type: string
              style: simple
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a user
      tags:
      - User
  /api/v2/users/{userId}:
    get:
      description: Returns a user
      operationId: getUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: number
        style: simple
      - description: The recursion level of the displayed details. Default is 0.
        explode: true
        in: query
        name: recursion
        required: false
        schema:
          type: number
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Returns a user
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get user
      tags:
      - User
    patch:
      description: Updates a user
      operationId: updateUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUser'
        description: The user updates
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User successfully updated
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Update user
      tags:
      - User
  /api/v2/users/{userId}/actions/change-account:
    post:
      description: Changes account for user
      operationId: changeUserAccount
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeUserAccount'
        description: The new account id
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Account successfully changed for user
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Change account for user
      tags:
      - User
  /api/v2/users/{userId}/actions/archive:
    post:
      description: Archives a user
      operationId: archiveUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User successfully archived
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Archive user
      tags:
      - User
  /api/v2/users/{userId}/actions/unarchive:
    post:
      description: Unarchive a user
      operationId: unarchiveUser
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: User successfully unarchived
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Unarchive user
      tags:
      - User
  /api/v2/users/{userId}/limits:
    get:
      description: Returns the limits of a user
      operationId: getUserLimits
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLimits'
          description: Returns the limits of a user
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get user limits
      tags:
      - User
    patch:
      description: Updates the limits of a user
      operationId: updateUserLimits
      parameters:
      - explode: false
        in: path
        name: userId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLimits'
        description: The new limits
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserLimits'
          description: User limits successfully updated
          headers:
            ETag:
              description: Entity tag
              explode: false
              schema:
                type: string
              style: simple
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Update user limits
      tags:
      - User
  /api/v2/vms/{vmId}:
    get:
      description: Retrieves the VM information
      operationId: getVM
      parameters:
      - explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VM'
          description: The VM information was successfully retrieved
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Retrieves the VM information
      tags:
      - VM
    patch:
      description: Updates VM information
      operationId: updateVM
      parameters:
      - explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVM'
        description: The VM update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VM'
          description: The VM information successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates VM information
      tags:
      - VM
  /api/v2/vms/{vmId}/power-status:
    get:
      description: Retrieves the power status of the VM
      operationId: getVMPowerStatus
      parameters:
      - explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The VM power status was successfully retrieved
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Retrieves the power status of the VM
      tags:
      - VM
  /api/v2/vms/{vmId}/start:
    post:
      description: Starts the VM
      operationId: startVM
      parameters:
      - explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          description: The VM was successfully started
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Starts the VM
      tags:
      - VM
  /api/v2/vms/{vmId}/shutdown:
    post:
      description: Shuts down the VM
      operationId: shutdownVM
      parameters:
      - explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          description: The VM was successfully shut down
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Shuts down the VM
      tags:
      - VM
  /api/v2/vms/{vmId}/reboot:
    post:
      description: Reboots the VM
      operationId: rebootVM
      parameters:
      - explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          description: The VM was successfully rebooted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Reboots the VM
      tags:
      - VM
  /api/v2/vms/{vmId}/remote-console-info:
    get:
      description: Returns Remote Console information
      operationId: getVMRemoteConsoleInfo
      parameters:
      - explode: false
        in: path
        name: vmId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RemoteConsoleInfo'
          description: Returns Remote Console information
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get Remote Console information
      tags:
      - VM
  /api/v2/infrastructures/{infrastructureId}/vm-instances:
    get:
      description: Returns list of all VM Instances on the infrastructure
      operationId: getInfrastructureVMInstances
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomain query param.
                    <p>
                       <b>Format: </b> filter.subdomain={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomain=$not:$like:John Doe&filter.subdomain=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomain
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomainPermanent query param.
                    <p>
                       <b>Format: </b> filter.subdomainPermanent={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomainPermanent=$not:$like:John Doe&filter.subdomainPermanent=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomainPermanent
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>serviceStatus</li>\n\
          <li>config.deployStatus</li>\n<li>config.deployType</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            - config.deployStatus:ASC
            - config.deployStatus:DESC
            - config.deployType:ASC
            - config.deployType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,subdomain,subdomainPermanent,serviceStatus\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>subdomain</li>\n\
          <li>subdomainPermanent</li>\n<li>serviceStatus</li>\n<li>config.deployStatus</li>\n\
          <li>config.deployType</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstancePaginatedList'
          description: Returns list of all VM Instances on the infrastructure
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get all VM Instances on the infrastructure
      tags:
      - VM Instance
    post:
      description: Creates a VM Instance
      operationId: createVMInstance
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVMInstance'
        description: The VM Instance create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstance'
          description: The VM Instance successfully created
          headers:
            Location:
              description: New VM Instance link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a VM Instance
      tags:
      - VM Instance
  /api/v2/infrastructures/{infrastructureId}/vm-instances/{vmInstanceId}:
    delete:
      description: Deletes a VM Instance
      operationId: deleteVMInstance
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The VM Instance successfully deleted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a VM Instance
      tags:
      - VM Instance
    get:
      description: Returns VM Instance information
      operationId: getInfrastructureVMInstance
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstance'
          description: Returns VM Instance information
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get VM Instance information
      tags:
      - VM Instance
  /api/v2/infrastructures/{infrastructureId}/vm-instances/{vmInstanceId}/config:
    get:
      operationId: getVMInstanceConfigInfo
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstanceConfiguration'
          description: Returns the VM Instance
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get configuration information about the specified VM Instance
      tags:
      - VM Instance
    patch:
      description: Updates VM Instance config information
      operationId: updateVMInstanceConfig
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVMInstance'
        description: The VM Instance update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstance'
          description: The VM Instance information successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Updates VM Instance config information
      tags:
      - VM Instance
  /api/v2/infrastructures/{infrastructureId}/vm-instances/{vmInstanceId}/meta:
    patch:
      operationId: patchVMInstanceMeta
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVMInstanceMeta'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstance'
          description: Meta update of the VM Instance.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
      security:
      - JWT: []
      - apiKey: []
      summary: Updates the meta of a VM Instance
      tags:
      - VM Instance
  /api/v2/infrastructures/{infrastructureId}/vm-instances/{vmInstanceId}/actions/apply-type/{vmTypeId}:
    post:
      description: Applies a VM Type to a VM Instance
      operationId: applyVMTypeOnVMInstance
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmTypeId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstance'
          description: VM Type applied on VM Instance.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Applies a VM Type to a VM Instance
      tags:
      - VM Instance
  /api/v2/infrastructures/{infrastructureId}/vm-instances/{vmInstanceId}/power-status:
    get:
      description: Retrieves the power status of the VM Instance
      operationId: getVMInstancePowerStatus
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                type: string
          description: The VM Instance power status
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Retrieves the power status of the VM Instance
      tags:
      - VM Instance
  /api/v2/infrastructures/{infrastructureId}/vm-instances/{vmInstanceId}/start:
    post:
      description: Starts the VM Instance
      operationId: startVMInstance
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The VM Instance was successfully started
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Starts the VM Instance
      tags:
      - VM Instance
  /api/v2/infrastructures/{infrastructureId}/vm-instances/{vmInstanceId}/shutdown:
    post:
      description: Shuts down the VM Instance
      operationId: shutdownVMInstance
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The VM Instance was successfully shut down
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Shuts down the VM Instance
      tags:
      - VM Instance
  /api/v2/infrastructures/{infrastructureId}/vm-instances/{vmInstanceId}/reboot:
    post:
      description: Reboots the VM Instance
      operationId: rebootVMInstance
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The VM Instance was successfully rebooted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Reboots the VM Instance
      tags:
      - VM Instance
  /api/v2/infrastructures/{infrastructureId}/vm-instance-groups:
    get:
      description: Returns list of all VM Instance Groups on the infrastructure
      operationId: getInfrastructureVMInstanceGroups
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomain query param.
                    <p>
                       <b>Format: </b> filter.subdomain={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomain=$not:$like:John Doe&filter.subdomain=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomain
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by subdomainPermanent query param.
                    <p>
                       <b>Format: </b> filter.subdomainPermanent={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.subdomainPermanent=$not:$like:John Doe&filter.subdomainPermanent=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.subdomainPermanent
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>serviceStatus</li>\n\
          <li>config.deployStatus</li>\n<li>config.deployType</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            - config.deployStatus:ASC
            - config.deployStatus:DESC
            - config.deployType:ASC
            - config.deployType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,subdomain,subdomainPermanent,serviceStatus\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>subdomain</li>\n\
          <li>subdomainPermanent</li>\n<li>serviceStatus</li>\n<li>config.deployStatus</li>\n\
          <li>config.deployType</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstanceGroupPaginatedList'
          description: Returns list of all VM Instance Groups on the infrastructure
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get all VM Instance Groups on the infrastructure
      tags:
      - VM Instance Group
    post:
      description: Creates a VM Instance Group
      operationId: createVMInstanceGroup
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVMInstanceGroup'
        description: The VM Instance Group create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstanceGroup'
          description: The VM Instance Group successfully created
          headers:
            Location:
              description: New VM Instance Group link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a VM Instance Group
      tags:
      - VM Instance Group
  /api/v2/infrastructures/{infrastructureId}/vm-instance-groups/{vmInstanceGroupId}:
    delete:
      description: Deletes a VM Instance Group
      operationId: deleteVMInstanceGroup
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceGroupId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: The VM Instance Group successfully deleted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
        "412":
          description: Precondition failed
        "428":
          description: Precondition required
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a VM Instance Group
      tags:
      - VM Instance Group
    get:
      description: Returns VM Instance Group information
      operationId: getInfrastructureVMInstanceGroup
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceGroupId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstanceGroup'
          description: Returns VM Instance Group information
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get VM Instance Group information
      tags:
      - VM Instance Group
  /api/v2/infrastructures/{infrastructureId}/vm-instance-groups/{vmInstanceGroupId}/config:
    get:
      operationId: getVMInstanceGroupConfigInfo
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceGroupId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstanceGroupConfiguration'
          description: Returns the VM Instance Group
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get configuration information about the specified VM Instance Group
      tags:
      - VM Instance Group
    patch:
      description: Updates VM Instance Group information
      operationId: updateVMInstanceGroupConfig
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceGroupId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVMInstanceGroup'
        description: The VM Instance Group update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstanceGroup'
          description: The VM Instance Group information successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates VM Instance Group information
      tags:
      - VM Instance Group
  /api/v2/infrastructures/{infrastructureId}/vm-instance-groups/{vmInstanceGroupId}/meta:
    patch:
      operationId: patchVMInstanceGroupMeta
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceGroupId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVMInstanceGroupMeta'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstanceGroup'
          description: Meta update of the VM Instance Group.
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Infrastructure not found.
      security:
      - JWT: []
      - apiKey: []
      summary: Updates the meta of a VM Instance Group
      tags:
      - VM Instance Group
  /api/v2/infrastructures/{infrastructureId}/vm-instance-groups/{vmInstanceGroupId}/actions/apply-type/{vmTypeId}:
    post:
      description: Applies a VM Type to a VM Instance Group
      operationId: applyVMTypeOnVMInstanceGroup
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceGroupId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmTypeId
        required: true
        schema:
          type: number
        style: simple
      - description: Entity tag
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstanceGroup'
          description: VM Type applied on VM Instance Group.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Applies a VM Type to a VM Instance Group
      tags:
      - VM Instance Group
  /api/v2/infrastructures/{infrastructureId}/vm-instance-groups/{vmInstanceGroupId}/vm-instances:
    get:
      description: Returns the VM Instances of VM Instance Group
      operationId: getVMInstanceGroupVMInstances
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceGroupId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstancePaginatedList'
          description: Returns the VM Instances of VM Instance Group
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get the VM Instances of VM Instance Group
      tags:
      - VM Instance Group
  /api/v2/infrastructures/{infrastructureId}/vm-instance-groups/{vmInstanceGroupId}/interfaces:
    get:
      description: Returns list of all VM Instance Group Interfaces on the VM Instance
        Group
      operationId: getVMInstanceGroupInterfaces
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceGroupId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by networkId query param.
                    <p>
                       <b>Format: </b> filter.networkId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.networkId=$not:$like:John Doe&filter.networkId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.networkId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by serviceStatus query param.
                    <p>
                       <b>Format: </b> filter.serviceStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.serviceStatus=$not:$like:John Doe&filter.serviceStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.serviceStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployStatus query param.
                    <p>
                       <b>Format: </b> filter.config.deployStatus={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployStatus=$not:$like:John Doe&filter.config.deployStatus=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployStatus
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by config.deployType query param.
                    <p>
                       <b>Format: </b> filter.config.deployType={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.config.deployType=$not:$like:John Doe&filter.config.deployType=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li>
          <li>$in</li></ul>
        explode: true
        in: query
        name: filter.config.deployType
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>networkId</li>\n\
          <li>serviceStatus</li>\n<li>config.deployStatus</li>\n<li>config.deployType</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - networkId:ASC
            - networkId:DESC
            - serviceStatus:ASC
            - serviceStatus:DESC
            - config.deployStatus:ASC
            - config.deployStatus:DESC
            - config.deployType:ASC
            - config.deployType:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> id,label,networkId,serviceStatus,config.deployStatus\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n<li>networkId</li>\n\
          <li>serviceStatus</li>\n<li>config.deployStatus</li>\n<li>config.deployType</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstanceGroupPaginatedList'
          description: Returns list of all VM Instance Group Interfaces on the VM
            Instance Group
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get all VM Instance Group Interfaces on the VM Instance Group
      tags:
      - VM Instance Group
    post:
      description: Creates a new Virtual Interface for the VM Instance Group
      operationId: createVMInterfaceOnVMInstanceGroup
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceGroupId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVMInstanceGroupInterface'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstanceGroupInterface'
          description: Virtual Interface created successfully.
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a new Virtual Interface for the VM Instance Group
      tags:
      - VM Instance Group
  /api/v2/infrastructures/{infrastructureId}/vm-instance-groups/{vmInstanceGroupId}/interfaces/{vmInstanceGroupInterfaceId}:
    get:
      description: Returns VM Instance Group Interface information
      operationId: getVMInstanceGroupInterfaceInfo
      parameters:
      - explode: false
        in: path
        name: infrastructureId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceGroupId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmInstanceGroupInterfaceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMInstanceGroupInterface'
          description: Returns VM Instance Group Interface information
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
      security:
      - JWT: []
      - apiKey: []
      summary: Get VM Instance Group Interface information
      tags:
      - VM Instance Group
  /api/v2/vm-pools:
    get:
      description: Returns list of all VM Pools
      operationId: getVMPools
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by siteId query param.
                    <p>
                       <b>Format: </b> filter.siteId={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.siteId=$not:$like:John Doe&filter.siteId=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.siteId
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by managementHost query param.
                    <p>
                       <b>Format: </b> filter.managementHost={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.managementHost=$not:$like:John Doe&filter.managementHost=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.managementHost
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by status query param.
                    <p>
                       <b>Format: </b> filter.status={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.status=$not:$like:John Doe&filter.status=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.status
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by driver query param.
                    <p>
                       <b>Format: </b> filter.driver={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.driver=$not:$like:John Doe&filter.driver=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$eq</li></ul>
        explode: true
        in: query
        name: filter.driver
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>name</li>\n\
          <li>type</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - name:ASC
            - name:DESC
            - type:ASC
            - type:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> name\n          </p>\n      \
          \  <p>\n             <b>Default Value: </b> By default all fields mentioned\
          \ below will be used to search by term\n          </p>\n        <h4>Available\
          \ Fields</h4><ul><li>name</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMPoolPaginatedList'
          description: Returns list of all VM Pools
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all VM Pools
      tags:
      - VM Pool
    post:
      description: Creates a VM Pool
      operationId: createVMPool
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVMPool'
        description: The VM Pool create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMPool'
          description: The VM Pool successfully created
          headers:
            Location:
              description: New VM Pool link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a VM Pool
      tags:
      - VM Pool
  /api/v2/vm-pools/{vmPoolId}:
    delete:
      description: Deletes a VM Pool
      operationId: deleteVMPool
      parameters:
      - explode: false
        in: path
        name: vmPoolId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The VM Pool successfully deleted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a VM Pool
      tags:
      - VM Pool
    get:
      description: Returns VM Pool information
      operationId: getVMPool
      parameters:
      - explode: false
        in: path
        name: vmPoolId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMPool'
          description: Returns VM Pool information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get VM Pool information
      tags:
      - VM Pool
    patch:
      description: Updates VM Pool information
      operationId: updateVMPool
      parameters:
      - explode: false
        in: path
        name: vmPoolId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVMPool'
        description: The VM Pool update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMPool'
          description: The VM Pool information successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates VM Pool information
      tags:
      - VM Pool
  /api/v2/vm-pools/{vmPoolId}/vms:
    get:
      description: Returns all VMs linked to the VM Pool
      operationId: getVMPoolVMs
      parameters:
      - explode: false
        in: path
        name: vmPoolId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by address query param.
                    <p>
                       <b>Format: </b> filter.address={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.address=$not:$like:John Doe&filter.address=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.address
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>name</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - name:ASC
            - name:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> name\n          </p>\n      \
          \  <p>\n             <b>Default Value: </b> By default all fields mentioned\
          \ below will be used to search by term\n          </p>\n        <h4>Available\
          \ Fields</h4><ul><li>name</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMPaginatedList'
          description: Returned all VMs linked to the VM Pool
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Returns all VMs linked to the VM Pool
      tags:
      - VM Pool
  /api/v2/vm-pools/{vmPoolId}/cluster-hosts:
    get:
      description: Returns list of VM Cluster Hosts linked to the VM Pool
      operationId: getVMPoolClusterHosts
      parameters:
      - explode: false
        in: path
        name: vmPoolId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by address query param.
                    <p>
                       <b>Format: </b> filter.address={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.address=$not:$like:John Doe&filter.address=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.address
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>name</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - name:ASC
            - name:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> name\n          </p>\n      \
          \  <p>\n             <b>Default Value: </b> By default all fields mentioned\
          \ below will be used to search by term\n          </p>\n        <h4>Available\
          \ Fields</h4><ul><li>name</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMPoolHostsPaginatedList'
          description: Returns list of VM Cluster Hosts linked to the VM Pool
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get list of VM Cluster Hosts linked to the VM Pool
      tags:
      - VM Pool
  /api/v2/vm-pools/{vmPoolId}/cluster-hosts/{vmPoolClusterHostId}:
    get:
      description: Returns a VM Cluster Host
      operationId: getVMPoolClusterHost
      parameters:
      - explode: false
        in: path
        name: vmPoolId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmPoolClusterHostId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMPoolHosts'
          description: Returns a VM Cluster Host
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Retrieves a VM Cluster Host
      tags:
      - VM Pool
  /api/v2/vm-pools/{vmPoolId}/cluster-hosts/{vmPoolClusterHostId}/interfaces:
    get:
      description: Returns a list of VM Cluster Host Interfaces
      operationId: getVMPoolClusterHostInterfaces
      parameters:
      - explode: false
        in: path
        name: vmPoolId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmPoolClusterHostId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/VMPoolHostInterfaces'
                type: array
          description: Returns a list of VM Cluster Host Interfaces
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Retrieves a list of VM Cluster Host Interfaces
      tags:
      - VM Pool
  /api/v2/vm-pools/{vmPoolId}/cluster-hosts/{vmPoolClusterHostId}/interfaces/{vmPoolClusterHostInterfaceId}:
    get:
      description: Returns a VM Cluster Host Interface
      operationId: getVMPoolClusterHostInterface
      parameters:
      - explode: false
        in: path
        name: vmPoolId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmPoolClusterHostId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmPoolClusterHostInterfaceId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMPoolHostInterfaces'
          description: Returns a VM Cluster Host Interface
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Retrieves a VM Cluster Host Interface
      tags:
      - VM Pool
    patch:
      description: Updates a VM Cluster Host Interface
      operationId: updateVMPoolClusterHostInterface
      parameters:
      - explode: false
        in: path
        name: vmPoolId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmPoolClusterHostId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmPoolClusterHostInterfaceId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVMPoolHostInterface'
        description: The VM Pool Cluster Host Interface update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMPoolHostInterfaces'
          description: Returns a VM Cluster Host Interface
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Updates a VM Cluster Host Interface
      tags:
      - VM Pool
  /api/v2/vm-pools/{vmPoolId}/cluster-hosts/{vmPoolClusterHostId}/vms:
    get:
      description: Returns a list of VM Cluster Host VMs
      operationId: getVMPoolClusterHostVMs
      parameters:
      - explode: false
        in: path
        name: vmPoolId
        required: true
        schema:
          type: number
        style: simple
      - explode: false
        in: path
        name: vmPoolClusterHostId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by address query param.
                    <p>
                       <b>Format: </b> filter.address={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.address=$not:$like:John Doe&filter.address=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.address
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>name</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - name:ASC
            - name:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> name\n          </p>\n      \
          \  <p>\n             <b>Default Value: </b> By default all fields mentioned\
          \ below will be used to search by term\n          </p>\n        <h4>Available\
          \ Fields</h4><ul><li>name</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMPaginatedList'
          description: Returns a list of VM Cluster Host VMs
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Retrieves a list of VM Cluster Host VMs
      tags:
      - VM Pool
  /api/v2/vm-types:
    get:
      description: Returns list of all VM Types
      operationId: getVMTypes
      parameters:
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by label query param.
                    <p>
                       <b>Format: </b> filter.label={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.label=$not:$like:John Doe&filter.label=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.label
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by displayName query param.
                    <p>
                       <b>Format: </b> filter.displayName={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.displayName=$not:$like:John Doe&filter.displayName=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.displayName
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>label</li>\n\
          <li>name</li>\n<li>displayName</li></ul>\n      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - label:ASC
            - label:DESC
            - name:ASC
            - name:DESC
            - displayName:ASC
            - displayName:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> label,name,displayName\n    \
          \      </p>\n        <p>\n             <b>Default Value: </b> By default\
          \ all fields mentioned below will be used to search by term\n          </p>\n\
          \        <h4>Available Fields</h4><ul><li>label</li>\n<li>name</li>\n<li>displayName</li></ul>\n\
          \        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMTypePaginatedList'
          description: Returns list of all VM Types
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get all VM Types
      tags:
      - VM Type
    post:
      description: Creates a VM Type
      operationId: createVMType
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVMType'
        description: The VM Type create object
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMType'
          description: The VM Type successfully created
          headers:
            Location:
              description: New VM Type link
              explode: false
              schema:
                type: string
              style: simple
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Creates a VM Type
      tags:
      - VM Type
  /api/v2/vm-types/{vmTypeId}:
    delete:
      description: Deletes a VM Type
      operationId: deleteVMType
      parameters:
      - explode: false
        in: path
        name: vmTypeId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "204":
          description: The VM Type successfully deleted
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Deletes a VM Type
      tags:
      - VM Type
    get:
      description: Returns VM Type information
      operationId: getVMType
      parameters:
      - explode: false
        in: path
        name: vmTypeId
        required: true
        schema:
          type: number
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMType'
          description: Returns VM Type information
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Get VM Type information
      tags:
      - VM Type
    patch:
      description: Updates VM Type information
      operationId: updateVMType
      parameters:
      - explode: false
        in: path
        name: vmTypeId
        required: true
        schema:
          type: number
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVMType'
        description: The VM Type update object
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMType'
          description: The VM Type information successfully updated
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
        "409":
          description: Conflict
      security:
      - JWT: []
      - apiKey: []
      summary: Updates VM Type information
      tags:
      - VM Type
  /api/v2/vm-types/{vmTypeId}/vms:
    get:
      description: Returns all VMs linked to the VM Type
      operationId: getVMsByVMType
      parameters:
      - explode: false
        in: path
        name: vmTypeId
        required: true
        schema:
          type: number
        style: simple
      - description: "Page number to retrieve.If you provide invalid value the default\
          \ page number will applied\n        <p>\n             <b>Example: </b> 1\n\
          \          </p>\n        <p>\n             <b>Default Value: </b> 1\n  \
          \        </p>\n        "
        explode: true
        in: query
        name: page
        required: false
        schema:
          type: number
        style: form
      - description: "Number of records per page.\n      <p>\n             <b>Example:\
          \ </b> 20\n          </p>\n      <p>\n             <b>Default Value: </b>\
          \ 20\n          </p>\n      <p>\n             <b>Max Value: </b> 100\n \
          \         </p>\n\n      If provided value is greater than max value, max\
          \ value will be applied.\n      "
        explode: true
        in: query
        name: limit
        required: false
        schema:
          type: number
        style: form
      - description: |-
          Filter by id query param.
                    <p>
                       <b>Format: </b> filter.id={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.id=$not:$like:John Doe&filter.id=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.id
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by name query param.
                    <p>
                       <b>Format: </b> filter.name={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.name=$not:$like:John Doe&filter.name=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.name
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: |-
          Filter by address query param.
                    <p>
                       <b>Format: </b> filter.address={$not}:OPERATION:VALUE
                    </p>
                    <p>
                       <b>Example: </b> filter.address=$not:$like:John Doe&filter.address=like:John
                    </p>
                    <h4>Available Operations</h4><ul><li>$and</li>
          <li>$or</li>
          <li>$not</li>
          <li>$eq</li>
          <li>$gt</li>
          <li>$gte</li>
          <li>$in</li>
          <li>$null</li>
          <li>$lt</li>
          <li>$lte</li>
          <li>$btw</li>
          <li>$ilike</li>
          <li>$sw</li>
          <li>$contains</li></ul>
        explode: true
        in: query
        name: filter.address
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: "Parameter to sort by.\n      <p>To sort by multiple fields,\
          \ just provide query param multiple types. The order in url defines an order\
          \ of sorting</p>\n      <p>\n             <b>Format: </b> fieldName:DIRECTION\n\
          \          </p>\n      <p>\n             <b>Example: </b> sortBy=id:DESC&sortBy=createdAt:ASC\n\
          \          </p>\n      <p>\n             <b>Default Value: </b> id:DESC\n\
          \          </p>\n      <h4>Available Fields</h4><ul><li>id</li>\n<li>name</li></ul>\n\
          \      "
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          items:
            enum:
            - id:ASC
            - id:DESC
            - name:ASC
            - name:DESC
            type: string
          type: array
        style: form
      - description: "Search term to filter result values\n        <p>\n         \
          \    <b>Example: </b> John\n          </p>\n        <p>\n             <b>Default\
          \ Value: </b> No default value\n          </p>\n        "
        explode: true
        in: query
        name: search
        required: false
        schema:
          type: string
        style: form
      - description: "List of fields to search by term to filter result values\n \
          \       <p>\n             <b>Example: </b> name\n          </p>\n      \
          \  <p>\n             <b>Default Value: </b> By default all fields mentioned\
          \ below will be used to search by term\n          </p>\n        <h4>Available\
          \ Fields</h4><ul><li>name</li></ul>\n        "
        explode: true
        in: query
        name: searchBy
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VMPaginatedList'
          description: Returned all VMs linked to the VM Type
        "400":
          description: Bad request
        "401":
          description: Unauthorized
        "403":
          description: Forbidden
        "404":
          description: Not found
      security:
      - JWT: []
      - apiKey: []
      summary: Returns all VMs linked to the VM Type
      tags:
      - VM Type
components:
  schemas:
    PaginatedResponseLinks:
      description: Links to navigate through the paginated results
      properties:
        first:
          format: uri
          title: Link to first page
          type: string
        previous:
          format: uri
          title: Link to previous page
          type: string
        current:
          format: uri
          title: Link to current page
          type: string
        next:
          format: uri
          title: Link to next page
          type: string
        last:
          format: uri
          title: Link to last page
          type: string
      type: object
    PaginatedResponseMeta:
      description: Metadata about the pagination of the response
      properties:
        itemsPerPage:
          description: The number of items per page to return in the response
          title: Number of items per page
          type: integer
        totalItems:
          description: Total number of items matching the query
          title: Total number of items
          type: integer
        currentPage:
          description: Current page number (1-based indexing)
          example: 1
          minimum: 1
          title: Current requested page
          type: integer
        totalPages:
          description: Total number of pages based on the total number of items and
            the number of items per page
          example: 5
          minimum: 0
          title: Total number of pages
          type: integer
        sortBy:
          description: "Array of [field, direction] pairs for sorting. Each pair must\
            \ contain exactly 2 strings."
          items:
            items:
              type: string
            maxItems: 2
            minItems: 2
            type: array
          minItems: 1
          title: Sorting configuration
          type: array
        searchBy:
          example:
          - name
          - description
          items:
            type: string
          title: Searchable columns
          type: array
        search:
          description: Text to search for in searchable fields
          example: Dell R450
          minLength: 1
          title: Search term
          type: string
        select:
          description: List of fields to include in the response
          example:
          - id
          - name
          - description
          items:
            type: string
          minItems: 1
          title: List of selected fields
          type: array
        filter:
          additionalProperties: false
          description: Key-value pairs of filters applied to the query
          example:
            status: active
            vendor:
            - dell
            - hp
          title: Filters applied to the query
          type: object
      required:
      - currentPage
      - itemsPerPage
      - totalItems
      - totalPages
      type: object
    AccountAddress:
      example:
        country: country
        postalCode: postalCode
        addressLine1: addressLine1
        addressLine2: addressLine2
        state: state
      properties:
        addressLine1:
          description: The first line of the account address
          type: string
        addressLine2:
          description: The second line of the account address
          type: string
        postalCode:
          description: The postal code of the account address
          type: string
        state:
          description: The state of the account address
          type: string
        country:
          description: The country of the account address
          type: string
      type: object
    AccountLimits:
      example:
        wanSubnetPrefixSizeToMaxCount: "{}"
        userResourceServerTypeNameToMaxCount: "{}"
      properties:
        userResourceServerTypeNameToMaxCount:
          type: object
        wanSubnetPrefixSizeToMaxCount:
          type: object
      type: object
    Link:
      example:
        rel: self
        href: /api/v2/path/to/resource
      properties:
        rel:
          description: "Indicates the relation type of the hyperlink (e.g., \"self\"\
            \ refers to the current resource)."
          example: self
          type: string
        href:
          description: The URI for accessing the linked resource.
          example: /api/v2/path/to/resource
          type: string
      required:
      - href
      - rel
      type: object
    Account:
      example:
        parentAccountId: 0.8008281904610115
        archived: 5.962133916683182
        code: code
        address:
          country: country
          postalCode: postalCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        secondaryContactId: 1.4658129805029452
        name: name
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 1
        fiscalNumber: fiscalNumber
        limits:
          wanSubnetPrefixSizeToMaxCount: "{}"
          userResourceServerTypeNameToMaxCount: "{}"
        revision: 1
        primaryContactId: 6.027456183070403
      properties:
        id:
          description: Account ID
          example: 1
          type: number
        revision:
          description: Revision number
          example: 1
          type: number
        parentAccountId:
          description: The ID of the parent account
          type: number
        name:
          description: The name of the account
          type: string
        code:
          description: The code of the account
          type: string
        fiscalNumber:
          description: The fiscal number of the account
          type: string
        address:
          $ref: '#/components/schemas/AccountAddress'
        primaryContactId:
          description: The user ID of the primary contact
          type: number
        secondaryContactId:
          description: The user ID of the secondary contact
          type: number
        archived:
          description: Whether the account is archived
          type: number
        limits:
          $ref: '#/components/schemas/AccountLimits'
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - id
      - limits
      - name
      - revision
      type: object
    AccountPaginatedList:
      example:
        data:
        - parentAccountId: 0.8008281904610115
          archived: 5.962133916683182
          code: code
          address:
            country: country
            postalCode: postalCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          secondaryContactId: 1.4658129805029452
          name: name
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          fiscalNumber: fiscalNumber
          limits:
            wanSubnetPrefixSizeToMaxCount: "{}"
            userResourceServerTypeNameToMaxCount: "{}"
          revision: 1
          primaryContactId: 6.027456183070403
        - parentAccountId: 0.8008281904610115
          archived: 5.962133916683182
          code: code
          address:
            country: country
            postalCode: postalCode
            addressLine1: addressLine1
            addressLine2: addressLine2
            state: state
          secondaryContactId: 1.4658129805029452
          name: name
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          fiscalNumber: fiscalNumber
          limits:
            wanSubnetPrefixSizeToMaxCount: "{}"
            userResourceServerTypeNameToMaxCount: "{}"
          revision: 1
          primaryContactId: 6.027456183070403
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/Account'
          title: List of account's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateAccount:
      example:
        parentAccountId: 0.8008281904610115
        code: code
        address:
          country: country
          postalCode: postalCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        name: name
        fiscalNumber: fiscalNumber
      properties:
        parentAccountId:
          description: The ID of the parent account
          type: number
        name:
          description: The name of the account
          type: string
        code:
          description: The code of the account
          type: string
        fiscalNumber:
          description: The fiscal number of the account
          type: string
        address:
          $ref: '#/components/schemas/AccountAddress'
      required:
      - name
      type: object
    UpdateAccount:
      example:
        parentAccountId: 0.8008281904610115
        code: code
        address:
          country: country
          postalCode: postalCode
          addressLine1: addressLine1
          addressLine2: addressLine2
          state: state
        secondaryContactId: 1.4658129805029452
        name: name
        fiscalNumber: fiscalNumber
        primaryContactId: 6.027456183070403
      properties:
        parentAccountId:
          description: The ID of the parent account
          type: number
        name:
          description: The name of the account
          type: string
        code:
          description: The code of the account
          type: string
        fiscalNumber:
          description: The fiscal number of the account
          type: string
        address:
          $ref: '#/components/schemas/AccountAddress'
        primaryContactId:
          description: The user ID of the primary contact
          type: number
        secondaryContactId:
          description: The user ID of the secondary contact
          type: number
      required:
      - name
      type: object
    UserInfo:
      example:
        lastLoginTimestamp: lastLoginTimestamp
        archived: 0.8008281904610115
        accountId: 6.027456183070403
        accessLevel: accessLevel
        displayName: displayName
        createdTimestamp: createdTimestamp
        language: en
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: id
        email: email
        revision: revision
      properties:
        id:
          description: User ID
          type: string
        revision:
          description: Revision number
          type: string
        displayName:
          description: The display name of the user
          type: string
        email:
          description: The email address of the user
          type: string
        createdTimestamp:
          description: The timestamp when the user was created
          type: string
        lastLoginTimestamp:
          description: The timestamp when the user logged in last
          type: string
        accessLevel:
          description: The access level of the user
          type: string
        language:
          description: The language of the user
          enum:
          - en
          - ro
          type: string
        archived:
          description: Whether the user is a archived
          type: number
        accountId:
          description: The account ID of the user
          type: number
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - accessLevel
      - accountId
      - archived
      - createdTimestamp
      - displayName
      - email
      - id
      - language
      - lastLoginTimestamp
      - revision
      type: object
    UserPaginatedList:
      example:
        data:
        - lastLoginTimestamp: lastLoginTimestamp
          archived: 0.8008281904610115
          accountId: 6.027456183070403
          accessLevel: accessLevel
          displayName: displayName
          createdTimestamp: createdTimestamp
          language: en
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: id
          email: email
          revision: revision
        - lastLoginTimestamp: lastLoginTimestamp
          archived: 0.8008281904610115
          accountId: 6.027456183070403
          accessLevel: accessLevel
          displayName: displayName
          createdTimestamp: createdTimestamp
          language: en
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: id
          email: email
          revision: revision
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/UserInfo'
          title: List of user info's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    AIGenerateRequest:
      example:
        datacenter: datacenter
        prompt: prompt
      properties:
        datacenter:
          description: Datacenter that is being filtered
          type: string
        prompt:
          description: String input sent to the AI
          type: string
      required:
      - datacenter
      - prompt
      type: object
    AIGenerateResponse:
      example:
        result: result
        steps: steps
      properties:
        result:
          description: Response to the question asked by the user
          type: string
        steps:
          description: Steps to be taken to achieve the result
          type: string
      required:
      - result
      - steps
      type: object
    AuthenticationRequestPropertiesMySql:
      example:
        password: secret-password
        email: test.email@metalsoft.io
      properties:
        email:
          description: The email of the user
          example: test.email@metalsoft.io
          type: string
        password:
          description: The password of the user
          example: secret-password
          type: string
      required:
      - email
      - password
      type: object
    AuthenticationRequestPropertiesSaml:
      properties:
        data:
          description: The data for the SAML authentication request.
          type: object
      required:
      - data
      type: object
    AuthenticationRequestPropertiesLdap:
      properties:
        data:
          description: The data for the LDAP authentication request.
          type: object
      required:
      - data
      type: object
    AuthenticationRequest:
      example:
        provider: mysql
        properties:
          password: secret-password
          email: test.email@metalsoft.io
      properties:
        provider:
          default: mysql
          description: Type of the authentication request.
          enum:
          - mysql
          - ldap
          - saml
          type: string
        properties:
          $ref: '#/components/schemas/AuthenticationRequest_properties'
      required:
      - properties
      - provider
      type: object
    AdminPasswordRevealPermissions:
      properties:
        cluster:
          type: boolean
        instance:
          type: boolean
        drive:
          type: boolean
        hdfs:
          type: boolean
        datacenter:
          type: boolean
        chassis_rack:
          type: boolean
        container:
          type: boolean
        storage_pool:
          type: boolean
        server:
          type: boolean
        switch:
          type: boolean
        workflow:
          type: boolean
      type: object
    SpecialPermissions:
      properties:
        create_verified_user:
          type: boolean
      type: object
    UserPermissions:
      properties:
        adminPasswordRevealPermissions:
          allOf:
          - $ref: '#/components/schemas/AdminPasswordRevealPermissions'
          description: Admin password reveal permissions
        specialPermissions:
          allOf:
          - $ref: '#/components/schemas/SpecialPermissions'
          description: Special permissions
        rolePermissions:
          description: Role permissions
          example:
          - role1
          - role2
          items:
            type: string
          type: array
      required:
      - rolePermissions
      - specialPermissions
      type: object
    UserLimits:
      example:
        fileShareMinSizeGb: 8.969578798196912
        driveArrayDrivesMaxCount: 1.0246457001441578
        infrastructureLanMaxCount: 3.5571952270680973
        sharedDriveMaxSizeMbytes: 6.519180951018382
        vmInstanceMaxDiskSizeMbytes: 7.143538047012306
        showDiagramAppClusterTypeKubernetesEksa: true
        containerArraySecretsMaxCount: 7.386281948385884
        showDiagramVmInstanceGroups: true
        infrastructureSanMaxCount: 6.965117697638846
        showDiagramAppClusterTypeMysqlPercona: true
        vmInstanceGroupVmInstancesMaxCount: 3.0937452626664474
        userSshKeysCountMax: 3.2588565619047607
        infrastructureContainerClusterZookeeperAllowed: true
        showDiagramAppClusterTypeDatastax: true
        driveMaxSizeMbytes: 6.84685269835264
        infrastructureFileShareMaxCount: 2.8841621266687802
        showDiagramAppClusterTypeSplunk: true
        enableCustomRaidConfiguration: true
        infrastructureContainerClusterSparksqlAllowed: true
        infrastructureWanMaxCount: 6.878052220127876
        allowVlanOverrides: true
        fileShareMaxSizeGb: 4.652396432933246
        showDiagramAppClusterTypeVmwareVcf: true
        infrastructureClusterMaxCount: 4.965218492984954
        infrastructureVolumeTemplateExperimentalAllowed: true
        infrastructureContainerClusterMaxCount: 5.025004791520295
        showDiagramAppClusterTypeMapr: true
        infrastructureContainerClusterZoomdataAllowed: true
        infrastructureVmInstanceGroupMaxCount: 3.353193347011243
        showDiagramAppClusterTypeCouchbase: true
        driveMinSizeMbytes: 7.457744773683766
        infrastructureActiveMaxCount: 1.1730742509559433
        containerArrayContainersMinCount: 3.616076749251911
        bucketMinSizeGb: 3.0205796992916243
        showDiagramAppClusterTypeCloudera: true
        showStackTrace: true
        containerArrayContainersMaxCount: 9.301444243932576
        ownerIsBillable: true
        infrastructureDataLakeEnabled: true
        sharedDriveMinSizeMbytes: 0.10263654006109402
        userResourceServersMaxCount: 5.533258397034986
        wanSubnetIpv4MaxCount: 4.078845849666752
        showDiagramAppClusterTypeExasol: true
        driveArrayDrivesMinCount: 1.4894159098541704
        allowNetworkProfiles: true
        showOperatingSystemImagesTab: true
        wanSubnetIpv6MaxCount: 0.2025324113236393
        showDiagramAppsGlobal: true
        infrastructureInstanceArrayMaxCount: 6.438423552598547
        infrastructureDriveArrayMaxCount: 8.762042012749001
        wanSubnetPrefixSizeToMaxCount: "{}"
        bucketMaxSizeGb: 7.740351818741173
        containerPlatformContainerArrayMaxCount: 1.2315135367772556
        infrastructureContainerClusterKafkaAllowed: true
        infrastructureBucketMaxCount: 6.778324963048013
        infrastructureContainerClusterSparkArrayAllowed: true
        userResourceIscsiStorageSpaceMaxGbytes: 7.04836565559697
        infrastructureContainerClusterStreamsetsAllowed: true
        instanceArrayInstancesMinCount: 6.704019297950036
        infrastructureSharedDriveMaxCount: 1.284659006116532
        showDiagramAppClusterTypeMesos: true
        infrastructureDataLakeMaxCount: 9.369310271410669
        showExperimentalPages: true
        infrastructureContainerClusterPostgresqlAllowed: true
        showEliChatBot: true
        showDiagramAppClusterTypeHortonworks: true
        storageTypes:
        - storageTypes
        - storageTypes
        showDiagramAppClusterTypeKubernetes: true
        userResourceServerTypeNameToMaxCount: "{}"
        enableCustomSubnets: true
        instanceArrayInstancesMaxCount: 5.944895607614016
        showLegacyPages: true
        infrastructureContainerPlatformMaxCount: 9.965781217890562
        showDiagramAppClusterTypeVmwareVsphere: true
        infrastructureClusterMysqlAllowed: true
        containerArrayDriveArraysMinCount: 4.145608029883936
        showTemplateAssetsView: true
        showDiagramAppClusterTypeDatameer: true
        thresholdMaxCount: 3.0576100241049344
        serverTypeReservationMaxQuantity: 7.058770351582356
        containerArrayDriveArraysMaxCount: 2.027123023002322
        infrastructureInactiveMaxCount: 9.018348186070783
        showDiagramAppClusterTypeElasticsearch: true
        serverTypeReservationMaxCount: 0.8851374739011653
        infrastructureDeletedMaxCount: 6.683562403749608
        allowedNetworkProfiles: "{}"
      properties:
        containerArrayContainersMaxCount:
          type: number
        containerArrayContainersMinCount:
          type: number
        containerArrayDriveArraysMaxCount:
          type: number
        containerArrayDriveArraysMinCount:
          type: number
        containerArraySecretsMaxCount:
          type: number
        containerPlatformContainerArrayMaxCount:
          type: number
        driveArrayDrivesMaxCount:
          type: number
        driveArrayDrivesMinCount:
          type: number
        driveMaxSizeMbytes:
          type: number
        driveMinSizeMbytes:
          type: number
        infrastructureActiveMaxCount:
          type: number
        infrastructureClusterMaxCount:
          type: number
        infrastructureClusterMysqlAllowed:
          type: boolean
        infrastructureContainerClusterKafkaAllowed:
          type: boolean
        infrastructureContainerClusterMaxCount:
          type: number
        infrastructureContainerClusterPostgresqlAllowed:
          type: boolean
        infrastructureContainerClusterSparkArrayAllowed:
          type: boolean
        infrastructureContainerClusterSparksqlAllowed:
          type: boolean
        infrastructureContainerClusterStreamsetsAllowed:
          type: boolean
        infrastructureContainerClusterZookeeperAllowed:
          type: boolean
        infrastructureContainerClusterZoomdataAllowed:
          type: boolean
        infrastructureContainerPlatformMaxCount:
          type: number
        infrastructureDataLakeEnabled:
          type: boolean
        infrastructureDataLakeMaxCount:
          type: number
        infrastructureDeletedMaxCount:
          type: number
        infrastructureDriveArrayMaxCount:
          type: number
        infrastructureInactiveMaxCount:
          type: number
        infrastructureInstanceArrayMaxCount:
          type: number
        infrastructureLanMaxCount:
          type: number
        infrastructureSanMaxCount:
          type: number
        infrastructureSharedDriveMaxCount:
          type: number
        infrastructureFileShareMaxCount:
          type: number
        infrastructureBucketMaxCount:
          type: number
        infrastructureVolumeTemplateExperimentalAllowed:
          type: boolean
        infrastructureWanMaxCount:
          type: number
        instanceArrayInstancesMaxCount:
          type: number
        instanceArrayInstancesMinCount:
          type: number
        infrastructureVmInstanceGroupMaxCount:
          type: number
        vmInstanceGroupVmInstancesMaxCount:
          type: number
        vmInstanceMaxDiskSizeMbytes:
          type: number
        ownerIsBillable:
          type: boolean
        serverTypeReservationMaxCount:
          type: number
        serverTypeReservationMaxQuantity:
          type: number
        sharedDriveMaxSizeMbytes:
          type: number
        sharedDriveMinSizeMbytes:
          type: number
        fileShareMaxSizeGb:
          type: number
        fileShareMinSizeGb:
          type: number
        bucketMaxSizeGb:
          type: number
        bucketMinSizeGb:
          type: number
        allowVlanOverrides:
          type: boolean
        allowNetworkProfiles:
          type: boolean
        showOperatingSystemImagesTab:
          type: boolean
        showTemplateAssetsView:
          type: boolean
        storageTypes:
          items:
            type: string
          type: array
        thresholdMaxCount:
          type: number
        userResourceIscsiStorageSpaceMaxGbytes:
          type: number
        userResourceServersMaxCount:
          type: number
        userResourceServerTypeNameToMaxCount:
          type: object
        userSshKeysCountMax:
          type: number
        wanSubnetIpv4MaxCount:
          type: number
        wanSubnetIpv6MaxCount:
          type: number
        wanSubnetPrefixSizeToMaxCount:
          type: object
        showLegacyPages:
          type: boolean
        showExperimentalPages:
          type: boolean
        showDiagramAppsGlobal:
          type: boolean
        showDiagramAppClusterTypeCloudera:
          type: boolean
        showDiagramAppClusterTypeCouchbase:
          type: boolean
        showDiagramAppClusterTypeDatameer:
          type: boolean
        showDiagramAppClusterTypeDatastax:
          type: boolean
        showDiagramAppClusterTypeElasticsearch:
          type: boolean
        showDiagramAppClusterTypeExasol:
          type: boolean
        showDiagramAppClusterTypeHortonworks:
          type: boolean
        showDiagramAppClusterTypeKubernetes:
          type: boolean
        showDiagramAppClusterTypeMapr:
          type: boolean
        showDiagramAppClusterTypeMesos:
          type: boolean
        showDiagramAppClusterTypeMysqlPercona:
          type: boolean
        showDiagramAppClusterTypeSplunk:
          type: boolean
        showDiagramAppClusterTypeVmwareVsphere:
          type: boolean
        showDiagramAppClusterTypeVmwareVcf:
          type: boolean
        showDiagramAppClusterTypeKubernetesEksa:
          type: boolean
        showDiagramVmInstanceGroups:
          type: boolean
        showEliChatBot:
          type: boolean
        enableCustomRaidConfiguration:
          type: boolean
        enableCustomSubnets:
          type: boolean
        showStackTrace:
          type: boolean
        allowedNetworkProfiles:
          type: object
      type: object
    User:
      example:
        authenticatorCreatedTimestamp: authenticatorCreatedTimestamp
        isTestingMode: 5.637376656633329
        franchise: franchise
        passwordChangeRequired: 1.4658129805029452
        promotionTags: "{}"
        displayName: displayName
        language: en
        infrastructureIdDefault: 7.061401241503109
        authenticatorMustChange: 0.8008281904610115
        isTestAccount: 4.258773108174356
        archived: 7.260521264802104
        blocked: 6.027456183070403
        provider: default
        permissions: ""
        isBrandManager: 1.041444916118296
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: id
        isDatastorePublisher: 4.678947989005849
        brand: default
        email: email
        limits:
          fileShareMinSizeGb: 8.969578798196912
          driveArrayDrivesMaxCount: 1.0246457001441578
          infrastructureLanMaxCount: 3.5571952270680973
          sharedDriveMaxSizeMbytes: 6.519180951018382
          vmInstanceMaxDiskSizeMbytes: 7.143538047012306
          showDiagramAppClusterTypeKubernetesEksa: true
          containerArraySecretsMaxCount: 7.386281948385884
          showDiagramVmInstanceGroups: true
          infrastructureSanMaxCount: 6.965117697638846
          showDiagramAppClusterTypeMysqlPercona: true
          vmInstanceGroupVmInstancesMaxCount: 3.0937452626664474
          userSshKeysCountMax: 3.2588565619047607
          infrastructureContainerClusterZookeeperAllowed: true
          showDiagramAppClusterTypeDatastax: true
          driveMaxSizeMbytes: 6.84685269835264
          infrastructureFileShareMaxCount: 2.8841621266687802
          showDiagramAppClusterTypeSplunk: true
          enableCustomRaidConfiguration: true
          infrastructureContainerClusterSparksqlAllowed: true
          infrastructureWanMaxCount: 6.878052220127876
          allowVlanOverrides: true
          fileShareMaxSizeGb: 4.652396432933246
          showDiagramAppClusterTypeVmwareVcf: true
          infrastructureClusterMaxCount: 4.965218492984954
          infrastructureVolumeTemplateExperimentalAllowed: true
          infrastructureContainerClusterMaxCount: 5.025004791520295
          showDiagramAppClusterTypeMapr: true
          infrastructureContainerClusterZoomdataAllowed: true
          infrastructureVmInstanceGroupMaxCount: 3.353193347011243
          showDiagramAppClusterTypeCouchbase: true
          driveMinSizeMbytes: 7.457744773683766
          infrastructureActiveMaxCount: 1.1730742509559433
          containerArrayContainersMinCount: 3.616076749251911
          bucketMinSizeGb: 3.0205796992916243
          showDiagramAppClusterTypeCloudera: true
          showStackTrace: true
          containerArrayContainersMaxCount: 9.301444243932576
          ownerIsBillable: true
          infrastructureDataLakeEnabled: true
          sharedDriveMinSizeMbytes: 0.10263654006109402
          userResourceServersMaxCount: 5.533258397034986
          wanSubnetIpv4MaxCount: 4.078845849666752
          showDiagramAppClusterTypeExasol: true
          driveArrayDrivesMinCount: 1.4894159098541704
          allowNetworkProfiles: true
          showOperatingSystemImagesTab: true
          wanSubnetIpv6MaxCount: 0.2025324113236393
          showDiagramAppsGlobal: true
          infrastructureInstanceArrayMaxCount: 6.438423552598547
          infrastructureDriveArrayMaxCount: 8.762042012749001
          wanSubnetPrefixSizeToMaxCount: "{}"
          bucketMaxSizeGb: 7.740351818741173
          containerPlatformContainerArrayMaxCount: 1.2315135367772556
          infrastructureContainerClusterKafkaAllowed: true
          infrastructureBucketMaxCount: 6.778324963048013
          infrastructureContainerClusterSparkArrayAllowed: true
          userResourceIscsiStorageSpaceMaxGbytes: 7.04836565559697
          infrastructureContainerClusterStreamsetsAllowed: true
          instanceArrayInstancesMinCount: 6.704019297950036
          infrastructureSharedDriveMaxCount: 1.284659006116532
          showDiagramAppClusterTypeMesos: true
          infrastructureDataLakeMaxCount: 9.369310271410669
          showExperimentalPages: true
          infrastructureContainerClusterPostgresqlAllowed: true
          showEliChatBot: true
          showDiagramAppClusterTypeHortonworks: true
          storageTypes:
          - storageTypes
          - storageTypes
          showDiagramAppClusterTypeKubernetes: true
          userResourceServerTypeNameToMaxCount: "{}"
          enableCustomSubnets: true
          instanceArrayInstancesMaxCount: 5.944895607614016
          showLegacyPages: true
          infrastructureContainerPlatformMaxCount: 9.965781217890562
          showDiagramAppClusterTypeVmwareVsphere: true
          infrastructureClusterMysqlAllowed: true
          containerArrayDriveArraysMinCount: 4.145608029883936
          showTemplateAssetsView: true
          showDiagramAppClusterTypeDatameer: true
          thresholdMaxCount: 3.0576100241049344
          serverTypeReservationMaxQuantity: 7.058770351582356
          containerArrayDriveArraysMaxCount: 2.027123023002322
          infrastructureInactiveMaxCount: 9.018348186070783
          showDiagramAppClusterTypeElasticsearch: true
          serverTypeReservationMaxCount: 0.8851374739011653
          infrastructureDeletedMaxCount: 6.683562403749608
          allowedNetworkProfiles: "{}"
        lastLoginType: md5
        experimentalTags: "{}"
        isSuspended: 2.3021358869347655
        planType: vanilla
        accessLevel: accessLevel
        createdTimestamp: createdTimestamp
        externalIds: "{}"
        revision: revision
        isBillable: 5.962133916683182
        lastLoginTimestamp: lastLoginTimestamp
        excludeFromReports: 6.628464275087742
        accountId: 9.132027271330688
        emailStatus: not_verified
        authenticatorEnabled: true
        guiSettings: "{}"
      properties:
        id:
          description: User ID
          type: string
        revision:
          description: Revision number
          type: string
        franchise:
          description: The franchise of the user
          type: string
        displayName:
          description: The display name of the user
          type: string
        email:
          description: The email address of the user
          type: string
        authenticatorMustChange:
          description: Whether the user must change authenticator
          type: number
        authenticatorCreatedTimestamp:
          description: The timestamp when the authenticator was created
          type: string
        authenticatorEnabled:
          description: Whether the user has an authenticator
          type: boolean
        createdTimestamp:
          description: The timestamp when the user was created
          type: string
        lastLoginTimestamp:
          description: The timestamp when the user logged in last
          type: string
        lastLoginType:
          description: The last login type of the user
          enum:
          - md5
          - smtp
          type: string
        blocked:
          description: Whether the user is blocked
          type: number
        emailStatus:
          description: The email status of the user
          enum:
          - not_verified
          - verified
          type: string
        passwordChangeRequired:
          description: Whether the user must change password
          type: number
        accessLevel:
          description: The access level of the user
          type: string
        isBillable:
          description: Whether the user is billable
          type: number
        isTestingMode:
          description: Whether the user is in testing mode
          type: number
        isSuspended:
          description: Whether the user is suspended
          type: number
        language:
          description: The language of the user
          enum:
          - en
          - ro
          type: string
        infrastructureIdDefault:
          description: The default infrastructure ID of the user
          type: number
        guiSettings:
          description: The GUI settings of the user
          type: object
        promotionTags:
          description: The promotion tags of the user
          type: object
        experimentalTags:
          description: The experimental tags of the user
          type: object
        permissions:
          allOf:
          - $ref: '#/components/schemas/UserPermissions'
          description: The permissions of the user
        externalIds:
          description: The external IDs of the user
          type: object
        limits:
          $ref: '#/components/schemas/UserLimits'
        excludeFromReports:
          description: Whether the user is excluded from reports
          type: number
        isTestAccount:
          description: Whether the user is a test account
          type: number
        planType:
          default: vanilla
          description: The plan type of the user
          enum:
          - vanilla
          - starter
          - starter_redundant
          - custom
          type: string
        brand:
          default: default
          description: The brand of the user
          type: string
        isBrandManager:
          description: Whether the user is a brand manager
          type: number
        isDatastorePublisher:
          description: Whether the user is a datastore publisher
          type: number
        provider:
          default: default
          description: The provider of the user
          type: string
        archived:
          description: Whether the user is a archived
          type: number
        accountId:
          description: The account ID of the user
          type: number
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - accessLevel
      - accountId
      - archived
      - authenticatorCreatedTimestamp
      - authenticatorEnabled
      - authenticatorMustChange
      - blocked
      - brand
      - createdTimestamp
      - displayName
      - email
      - emailStatus
      - excludeFromReports
      - franchise
      - id
      - isBillable
      - isBrandManager
      - isDatastorePublisher
      - isSuspended
      - isTestAccount
      - isTestingMode
      - language
      - lastLoginTimestamp
      - lastLoginType
      - passwordChangeRequired
      - planType
      - provider
      - revision
      type: object
    AuthenticationUserProvider:
      example:
        provider: mysql
      properties:
        provider:
          description: The provider name
          enum:
          - mysql
          - ldap
          - saml
          example: mysql
          type: string
      required:
      - provider
      type: object
    AuthenticationProviders:
      example:
        ldap: true
        ssoEntryPoint: https://saml.example.com
        saml: true
        mysql: true
      properties:
        ldap:
          description: Whether or not the application allows LDAP authentication
          example: true
          type: boolean
        mysql:
          description: Whether or not the application allows MYSQL authentication
          example: true
          type: boolean
        saml:
          description: Whether or not the application allows SAML authentication
          example: true
          type: boolean
        ssoEntryPoint:
          description: The entry point for SAML authentication
          example: https://saml.example.com
          type: string
      required:
      - ldap
      - mysql
      - saml
      - ssoEntryPoint
      type: object
    BucketConfiguration:
      example:
        sizeGB: 6.027456183070403
        dnsSubdomainChangeId: 5.962133916683182
        subdomain: subdomain
        infrastructureDeployId: 5.637376656633329
        storagePoolId: 1.4658129805029452
        label: label
        updatedTimestamp: updatedTimestamp
        deployType: create
        revision: 0.8008281904610115
        deployStatus: not_started
      properties:
        revision:
          description: Revision of the Bucket Configuration
          type: number
        sizeGB:
          description: Disk size in GB for Bucket
          type: number
        updatedTimestamp:
          description: Timestamp of the Bucket last update.
          type: string
        storagePoolId:
          description: Id of the storage pool the Bucket is assigned to
          type: number
        label:
          description: Label of the Bucket.
          type: string
        subdomain:
          description: Subdomain of the Bucket.
          type: string
        dnsSubdomainChangeId:
          description: Id of the DNS subdomain for the Drive Group.
          type: number
        deployType:
          default: create
          description: Deploy type of the Drive Group
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          default: not_started
          description: Deploy status of the Drive Group
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        infrastructureDeployId:
          description: Id of the deployment for the Drive Group.
          type: number
      required:
      - deployStatus
      - deployType
      - label
      - revision
      - sizeGB
      - subdomain
      - updatedTimestamp
      type: object
    GenericGUISettings:
      example:
        rowIndex: 6.027456183070403
        columnIndex: 1.4658129805029452
        userAgent: userAgent
        randomInstanceID: randomInstanceID
        showWidgetChildren: true
      properties:
        rowIndex:
          description: Row index of the object.
          type: number
        columnIndex:
          description: Column index of the object.
          type: number
        showWidgetChildren:
          description: Whether to show the object children in the GUI.
          type: boolean
        randomInstanceID:
          description: Random instance ID.
          type: string
        userAgent:
          description: User agent.
          type: string
      type: object
    BucketMeta:
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
      type: object
    BucketExtendedInfo:
      example:
        accessKeyId: accessKeyId
        sizeGB: 0.8008281904610115
        dnsSubdomainId: 2.3021358869347655
        createdTimestamp: createdTimestamp
        label: label
        subdomainPermanent: subdomainPermanent
        updatedTimestamp: updatedTimestamp
        revision: 5.962133916683182
        endpoint: endpoint
        infrastructureId: 5.637376656633329
        serviceStatus: ordered
        meta: ""
        infrastructure: "{}"
        networkVlanId: 7.061401241503109
        subdomain: subdomain
        storagePoolId: 6.027456183070403
        id: 1.4658129805029452
        secretKeyEncrypted: secretKeyEncrypted
        config: ""
      properties:
        sizeGB:
          description: Disk size in GB for Bucket
          type: number
        updatedTimestamp:
          description: Timestamp of the Bucket last update.
          type: string
        storagePoolId:
          description: Id of the storage pool the Bucket is assigned to
          type: number
        label:
          description: Label of the Bucket.
          type: string
        subdomain:
          description: Subdomain of the Bucket.
          type: string
        id:
          description: Id of the Bucket
          type: number
        revision:
          description: Revision of the Bucket
          type: number
        infrastructureId:
          description: Infrastructure id of the Bucket
          type: number
        createdTimestamp:
          description: Timestamp of the Bucket creation.
          type: string
        serviceStatus:
          description: Service status of the Bucket
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          type: string
        subdomainPermanent:
          description: Subdomain permanent of the Bucket.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the Bucket.
          type: number
        networkVlanId:
          description: Id of the VLAN for the Bucket.
          type: number
        endpoint:
          description: Endpoint of the Bucket.
          type: string
        accessKeyId:
          description: Endpoint of the Bucket.
          type: string
        secretKeyEncrypted:
          description: Endpoint of the Bucket.
          type: string
        config:
          allOf:
          - $ref: '#/components/schemas/BucketConfiguration'
          description: The current changes to be deployed for the Bucket.
        meta:
          allOf:
          - $ref: '#/components/schemas/BucketMeta'
          description: Meta information of the Bucket.
        infrastructure:
          description: Infrastructure information
          type: object
      required:
      - config
      - createdTimestamp
      - dnsSubdomainId
      - id
      - infrastructure
      - infrastructureId
      - label
      - meta
      - revision
      - serviceStatus
      - sizeGB
      - subdomain
      - subdomainPermanent
      - updatedTimestamp
      type: object
    CreateBucket:
      example:
        sizeGB: 0.8008281904610115
        label: label
      properties:
        sizeGB:
          description: Disk size in GB for Bucket
          type: number
        label:
          description: Label of the Bucket.
          type: string
      required:
      - sizeGB
      type: object
    Bucket:
      example:
        accessKeyId: accessKeyId
        sizeGB: 0.8008281904610115
        dnsSubdomainId: 2.3021358869347655
        createdTimestamp: createdTimestamp
        label: label
        subdomainPermanent: subdomainPermanent
        updatedTimestamp: updatedTimestamp
        revision: 5.962133916683182
        endpoint: endpoint
        infrastructureId: 5.637376656633329
        serviceStatus: ordered
        meta: ""
        networkVlanId: 7.061401241503109
        subdomain: subdomain
        storagePoolId: 6.027456183070403
        id: 1.4658129805029452
        secretKeyEncrypted: secretKeyEncrypted
        config: ""
      properties:
        sizeGB:
          description: Disk size in GB for Bucket
          type: number
        updatedTimestamp:
          description: Timestamp of the Bucket last update.
          type: string
        storagePoolId:
          description: Id of the storage pool the Bucket is assigned to
          type: number
        label:
          description: Label of the Bucket.
          type: string
        subdomain:
          description: Subdomain of the Bucket.
          type: string
        id:
          description: Id of the Bucket
          type: number
        revision:
          description: Revision of the Bucket
          type: number
        infrastructureId:
          description: Infrastructure id of the Bucket
          type: number
        createdTimestamp:
          description: Timestamp of the Bucket creation.
          type: string
        serviceStatus:
          description: Service status of the Bucket
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          type: string
        subdomainPermanent:
          description: Subdomain permanent of the Bucket.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the Bucket.
          type: number
        networkVlanId:
          description: Id of the VLAN for the Bucket.
          type: number
        endpoint:
          description: Endpoint of the Bucket.
          type: string
        accessKeyId:
          description: Endpoint of the Bucket.
          type: string
        secretKeyEncrypted:
          description: Endpoint of the Bucket.
          type: string
        config:
          allOf:
          - $ref: '#/components/schemas/BucketConfiguration'
          description: The current changes to be deployed for the Bucket.
        meta:
          allOf:
          - $ref: '#/components/schemas/BucketMeta'
          description: Meta information of the Bucket.
      required:
      - config
      - createdTimestamp
      - dnsSubdomainId
      - id
      - infrastructureId
      - label
      - meta
      - revision
      - serviceStatus
      - sizeGB
      - subdomain
      - subdomainPermanent
      - updatedTimestamp
      type: object
    BucketPaginatedList:
      example:
        data:
        - accessKeyId: accessKeyId
          sizeGB: 0.8008281904610115
          dnsSubdomainId: 2.3021358869347655
          createdTimestamp: createdTimestamp
          label: label
          subdomainPermanent: subdomainPermanent
          updatedTimestamp: updatedTimestamp
          revision: 5.962133916683182
          endpoint: endpoint
          infrastructureId: 5.637376656633329
          serviceStatus: ordered
          meta: ""
          infrastructure: "{}"
          networkVlanId: 7.061401241503109
          subdomain: subdomain
          storagePoolId: 6.027456183070403
          id: 1.4658129805029452
          secretKeyEncrypted: secretKeyEncrypted
          config: ""
        - accessKeyId: accessKeyId
          sizeGB: 0.8008281904610115
          dnsSubdomainId: 2.3021358869347655
          createdTimestamp: createdTimestamp
          label: label
          subdomainPermanent: subdomainPermanent
          updatedTimestamp: updatedTimestamp
          revision: 5.962133916683182
          endpoint: endpoint
          infrastructureId: 5.637376656633329
          serviceStatus: ordered
          meta: ""
          infrastructure: "{}"
          networkVlanId: 7.061401241503109
          subdomain: subdomain
          storagePoolId: 6.027456183070403
          id: 1.4658129805029452
          secretKeyEncrypted: secretKeyEncrypted
          config: ""
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/BucketExtendedInfo'
          title: List of bucket extended info's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    UpdateBucket:
      example:
        sizeGB: 0.8008281904610115
        label: label
        guiSettings:
          rowIndex: 6.027456183070403
          columnIndex: 1.4658129805029452
          userAgent: userAgent
          randomInstanceID: randomInstanceID
          showWidgetChildren: true
      properties:
        sizeGB:
          description: Disk size in GB for Bucket
          type: number
        label:
          description: Label of the Bucket.
          type: string
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
      type: object
    UpdateBucketMeta:
      example:
        guiSettings:
          rowIndex: 6.027456183070403
          columnIndex: 1.4658129805029452
          userAgent: userAgent
          randomInstanceID: randomInstanceID
          showWidgetChildren: true
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
      type: object
    BucketCredentials:
      properties: {}
      type: object
    Object:
      properties: {}
      type: object
    CustomIso:
      example:
        accessUrl: accessUrl
        displayName: displayName
        createdTimestamp: createdTimestamp
        userIdOwner: 6.027456183070403
        passwordEncrypted: passwordEncrypted
        type: http
        updatedTimestamp: updatedTimestamp
        imageUrl: imageUrl
        name: name
        isPublic: 5.962133916683182
        modifiedBy: 1.4658129805029452
        id: 0.8008281904610115
        username: username
      properties:
        id:
          description: The ID of the custom ISO
          type: number
        userIdOwner:
          description: The ID of the user who owns the custom ISO. If public then
            null
          type: number
        modifiedBy:
          description: The ID of the user who last edited the custom ISO
          type: number
        name:
          description: The name of the custom ISO
          type: string
        displayName:
          description: The display name of the custom ISO
          type: string
        type:
          description: The type of the custom ISO
          enum:
          - http
          type: string
        isPublic:
          description: Flag to indicate if the custom ISO is public
          type: number
        accessUrl:
          description: The access URL of the custom ISO
          type: string
        username:
          description: The username used to access the custom ISO
          type: string
        passwordEncrypted:
          description: The password used to access the custom ISO
          type: string
        createdTimestamp:
          description: The timestamp when the custom ISO was created
          type: string
        updatedTimestamp:
          description: The timestamp when the custom ISO was last updated
          type: string
        imageUrl:
          description: The URL to the image of the custom ISO for mounting on the
            server
          type: string
      required:
      - accessUrl
      - createdTimestamp
      - displayName
      - id
      - isPublic
      - name
      - type
      - updatedTimestamp
      type: object
    CustomIsoPaginatedList:
      example:
        data:
        - accessUrl: accessUrl
          displayName: displayName
          createdTimestamp: createdTimestamp
          userIdOwner: 6.027456183070403
          passwordEncrypted: passwordEncrypted
          type: http
          updatedTimestamp: updatedTimestamp
          imageUrl: imageUrl
          name: name
          isPublic: 5.962133916683182
          modifiedBy: 1.4658129805029452
          id: 0.8008281904610115
          username: username
        - accessUrl: accessUrl
          displayName: displayName
          createdTimestamp: createdTimestamp
          userIdOwner: 6.027456183070403
          passwordEncrypted: passwordEncrypted
          type: http
          updatedTimestamp: updatedTimestamp
          imageUrl: imageUrl
          name: name
          isPublic: 5.962133916683182
          modifiedBy: 1.4658129805029452
          id: 0.8008281904610115
          username: username
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/CustomIso'
          title: List of custom iso's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateCustomIso:
      example:
        accessUrl: accessUrl
        displayName: displayName
        name: name
      properties:
        name:
          description: The name of the custom ISO
          type: string
        accessUrl:
          description: The access URL of the custom ISO
          type: string
        displayName:
          description: The display name of the custom ISO
          type: string
      required:
      - accessUrl
      - name
      type: object
    UpdateCustomIso:
      example:
        accessUrl: accessUrl
        displayName: displayName
      properties:
        accessUrl:
          description: The access URL of the custom ISO
          type: string
        displayName:
          description: The display name of the custom ISO
          type: string
      type: object
    JobInfo:
      example:
        jobId: 0.8008281904610115
        jobGroupId: 6.027456183070403
      properties:
        jobId:
          description: The id of the job.
          type: number
        jobGroupId:
          description: The id of the job group.
          type: number
      required:
      - jobGroupId
      - jobId
      type: object
    DriveConfiguration:
      example:
        sshPort: 5.962133916683182
        iscsiIndexHex: iscsiIndexHex
        groupId: 1
        label: label
        sizeMb: 1.4658129805029452
        templateId: 1
        updatedTimestamp: updatedTimestamp
        filesystemInfo: "{}"
        deployType: create
        revision: 0.8008281904610115
        storageImageName: storageImageName
        instanceId: 1
        dnsSubdomainChangeId: 5.637376656633329
        osAdminPasswordEncrypted: osAdminPasswordEncrypted
        osAdminUsername: osAdminUsername
        storageType: iscsi_ssd
        subdomain: subdomain
        infrastructureDeployId: 2.3021358869347655
        operatingSystemInfo: "{}"
        storagePoolId: 6.027456183070403
        containerId: 1
        deployStatus: not_started
      properties:
        revision:
          description: Revision of the Drive Configuration
          type: number
        label:
          description: Label of the Drive.
          type: string
        groupId:
          description: Drive Array Id
          example: 1
          type: number
        containerId:
          example: 1
          type: number
        instanceId:
          example: 1
          type: number
        storagePoolId:
          description: Id of the storage pool the Drive is assigned to
          type: number
        sizeMb:
          description: Disk size in MB for Drive
          type: number
        storageImageName:
          description: The name of the storage image used by the Drive.
          type: string
        iscsiIndexHex:
          description: The iSCSI Index in hex format of the Drive.
          type: string
        templateId:
          description: Template Id
          example: 1
          type: number
        osAdminUsername:
          description: The OS Admin Username the Drive will use.
          type: string
        osAdminPasswordEncrypted:
          description: The OS Admin Password the Drive will use.
          type: string
        storageType:
          default: iscsi_ssd
          description: Storage type of the Drive
          enum:
          - iscsi_ssd
          - iscsi_hdd
          - dummy
          type: string
        subdomain:
          description: Subdomain of the Drive.
          type: string
        updatedTimestamp:
          description: Timestamp of the Drive last update.
          type: string
        sshPort:
          description: SSH port used by the Drive.
          type: number
        operatingSystemInfo:
          description: Operating system information of the Drive.
          type: object
        filesystemInfo:
          description: Filesystem information of the Drive.
          type: object
        dnsSubdomainChangeId:
          description: Id of the DNS subdomain for the Drive.
          type: number
        deployType:
          default: create
          description: Deploy type of the Drive
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          default: not_started
          description: Deploy status of the Drive
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        infrastructureDeployId:
          description: Id of the deployment for the Drive.
          type: number
      required:
      - deployStatus
      - deployType
      - groupId
      - label
      - revision
      - sizeMb
      - storageType
      - updatedTimestamp
      type: object
    DriveMeta:
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
      type: object
    Drive:
      example:
        iscsiIndexHex: iscsiIndexHex
        groupId: 1
        sizeMb: 6.027456183070403
        templateId: 1
        updatedTimestamp: updatedTimestamp
        targets: "{}"
        sshKeyPairInternalEncrypted: "{}"
        storageVirtualSizeCachedMb: 3.616076749251911
        wwn: wwn
        storageImageName: storageImageName
        storageUpdatedTimestamp: storageUpdatedTimestamp
        instanceId: 1
        dnsSubdomainPermanentId: 4.145608029883936
        osAdminPasswordEncrypted: osAdminPasswordEncrypted
        serviceStatus: ordered
        osAdminUsername: osAdminUsername
        networkVlanId: 7.386281948385884
        operatingSystemInfo: "{}"
        storagePoolId: 0.8008281904610115
        id: 5.962133916683182
        containerId: 1
        storageRealSizeCachedMb: 7.061401241503109
        sshPort: 1.4658129805029452
        provisioningProtocol: iSCSI
        storageRealSizeWithSnapshotsCachedMb: 9.301444243932576
        dnsSubdomainId: 2.027123023002322
        createdTimestamp: createdTimestamp
        label: label
        subdomainPermanent: subdomainPermanent
        filesystemInfo: "{}"
        revision: 5.637376656633329
        clusterCustomInfo: "{}"
        infrastructureId: 2.3021358869347655
        meta: ""
        storageType: iscsi_ssd
        subdomain: subdomain
        config: ""
      properties:
        label:
          description: Label of the Drive.
          type: string
        groupId:
          description: Drive Array Id
          example: 1
          type: number
        containerId:
          example: 1
          type: number
        instanceId:
          example: 1
          type: number
        storagePoolId:
          description: Id of the storage pool the Drive is assigned to
          type: number
        sizeMb:
          description: Disk size in MB for Drive
          type: number
        storageImageName:
          description: The name of the storage image used by the Drive.
          type: string
        iscsiIndexHex:
          description: The iSCSI Index in hex format of the Drive.
          type: string
        templateId:
          description: Template Id
          example: 1
          type: number
        osAdminUsername:
          description: The OS Admin Username the Drive will use.
          type: string
        osAdminPasswordEncrypted:
          description: The OS Admin Password the Drive will use.
          type: string
        storageType:
          default: iscsi_ssd
          description: Storage type of the Drive
          enum:
          - iscsi_ssd
          - iscsi_hdd
          - dummy
          type: string
        subdomain:
          description: Subdomain of the Drive.
          type: string
        updatedTimestamp:
          description: Timestamp of the Drive last update.
          type: string
        sshPort:
          description: SSH port used by the Drive.
          type: number
        operatingSystemInfo:
          description: Operating system information of the Drive.
          type: object
        filesystemInfo:
          description: Filesystem information of the Drive.
          type: object
        id:
          description: Id of the Drive
          type: number
        revision:
          description: Revision of the Drive State
          type: number
        infrastructureId:
          description: Infrastructure id of the Drive
          type: number
        serviceStatus:
          description: Service status of the Drive
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          type: string
        storageRealSizeCachedMb:
          description: Cached information of the real size of the storage in MB.
          type: number
        storageRealSizeWithSnapshotsCachedMb:
          description: Cached information of the real size of the storage (including
            snapshots) in MB.
          type: number
        storageVirtualSizeCachedMb:
          description: Cached information of the virtual size of the storage in MB.
          type: number
        storageUpdatedTimestamp:
          description: Timestamp of the latest update of cached information for the
            Drive.
          type: string
        targets:
          description: Targets of the Drive.
          type: object
        clusterCustomInfo:
          description: Custom information of the Drive.
          type: object
        sshKeyPairInternalEncrypted:
          description: Pair of SSH Keys to use on the Drive.
          type: object
        wwn:
          type: string
        provisioningProtocol:
          description: Provisioning protocol of the Drive
          enum:
          - iSCSI
          - SCSI_FC
          type: string
        subdomainPermanent:
          description: Subdomain permanent of the Drive.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the Drive.
          type: number
        dnsSubdomainPermanentId:
          description: Id of the permanent DNS subdomain for the Drive.
          type: number
        networkVlanId:
          description: Id of the VLAN for the Drive.
          type: number
        config:
          allOf:
          - $ref: '#/components/schemas/DriveConfiguration'
          description: The current changes to be deployed for the Drive.
        createdTimestamp:
          description: Timestamp of the Drive creation.
          type: string
        meta:
          allOf:
          - $ref: '#/components/schemas/DriveMeta'
          description: Meta information of the Drive.
      required:
      - config
      - createdTimestamp
      - groupId
      - id
      - infrastructureId
      - label
      - meta
      - provisioningProtocol
      - revision
      - serviceStatus
      - sizeMb
      - storageType
      - storageUpdatedTimestamp
      - updatedTimestamp
      type: object
    DrivePaginatedList:
      example:
        data:
        - iscsiIndexHex: iscsiIndexHex
          groupId: 1
          sizeMb: 6.027456183070403
          templateId: 1
          updatedTimestamp: updatedTimestamp
          targets: "{}"
          sshKeyPairInternalEncrypted: "{}"
          storageVirtualSizeCachedMb: 3.616076749251911
          wwn: wwn
          storageImageName: storageImageName
          storageUpdatedTimestamp: storageUpdatedTimestamp
          instanceId: 1
          dnsSubdomainPermanentId: 4.145608029883936
          osAdminPasswordEncrypted: osAdminPasswordEncrypted
          serviceStatus: ordered
          osAdminUsername: osAdminUsername
          networkVlanId: 7.386281948385884
          operatingSystemInfo: "{}"
          storagePoolId: 0.8008281904610115
          id: 5.962133916683182
          containerId: 1
          storageRealSizeCachedMb: 7.061401241503109
          sshPort: 1.4658129805029452
          provisioningProtocol: iSCSI
          storageRealSizeWithSnapshotsCachedMb: 9.301444243932576
          dnsSubdomainId: 2.027123023002322
          createdTimestamp: createdTimestamp
          label: label
          subdomainPermanent: subdomainPermanent
          filesystemInfo: "{}"
          revision: 5.637376656633329
          clusterCustomInfo: "{}"
          infrastructureId: 2.3021358869347655
          meta: ""
          storageType: iscsi_ssd
          subdomain: subdomain
          config: ""
        - iscsiIndexHex: iscsiIndexHex
          groupId: 1
          sizeMb: 6.027456183070403
          templateId: 1
          updatedTimestamp: updatedTimestamp
          targets: "{}"
          sshKeyPairInternalEncrypted: "{}"
          storageVirtualSizeCachedMb: 3.616076749251911
          wwn: wwn
          storageImageName: storageImageName
          storageUpdatedTimestamp: storageUpdatedTimestamp
          instanceId: 1
          dnsSubdomainPermanentId: 4.145608029883936
          osAdminPasswordEncrypted: osAdminPasswordEncrypted
          serviceStatus: ordered
          osAdminUsername: osAdminUsername
          networkVlanId: 7.386281948385884
          operatingSystemInfo: "{}"
          storagePoolId: 0.8008281904610115
          id: 5.962133916683182
          containerId: 1
          storageRealSizeCachedMb: 7.061401241503109
          sshPort: 1.4658129805029452
          provisioningProtocol: iSCSI
          storageRealSizeWithSnapshotsCachedMb: 9.301444243932576
          dnsSubdomainId: 2.027123023002322
          createdTimestamp: createdTimestamp
          label: label
          subdomainPermanent: subdomainPermanent
          filesystemInfo: "{}"
          revision: 5.637376656633329
          clusterCustomInfo: "{}"
          infrastructureId: 2.3021358869347655
          meta: ""
          storageType: iscsi_ssd
          subdomain: subdomain
          config: ""
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/Drive'
          title: List of drive's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateDrive:
      example:
        groupId: 0.8008281904610115
        label: label
        sizeMb: 6.027456183070403
      properties:
        label:
          description: Label of the Drive.
          type: string
        groupId:
          description: Id of the Drive Group
          type: number
        sizeMb:
          description: Disk size in MB for Drive
          type: number
      required:
      - groupId
      type: object
    UpdateDrive:
      example:
        label: label
        sizeMb: 0.8008281904610115
      properties:
        label:
          description: Label of the Drive.
          type: string
        sizeMb:
          description: Disk size in MB for Drive
          type: number
      type: object
    UpdateDriveMeta:
      example:
        guiSettings:
          rowIndex: 6.027456183070403
          columnIndex: 1.4658129805029452
          userAgent: userAgent
          randomInstanceID: randomInstanceID
          showWidgetChildren: true
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
      type: object
    DriveGroupConfiguration:
      example:
        containerArrayId: 1
        label: label
        ioLimitPolicy: ioLimitPolicy
        templateId: 1
        filesystemInfo: "{}"
        updatedTimestamp: updatedTimestamp
        deployType: create
        revision: 0.8008281904610115
        expandWithServerInstanceGroup: 1
        infrastructureId: 6.027456183070403
        dnsSubdomainChangeId: 5.962133916683182
        storageType: iscsi_ssd
        subdomain: subdomain
        infrastructureDeployId: 5.637376656633329
        serverInstanceGroupId: 1
        driveSizeMbDefault: 1.4658129805029452
        deployStatus: not_started
      properties:
        revision:
          description: Revision of the Drive Group Configuration
          type: number
        label:
          description: Label of the Drive Group.
          type: string
        infrastructureId:
          description: Infrastructure id of the Drive Group
          type: number
        templateId:
          description: Template Id
          example: 1
          type: number
        driveSizeMbDefault:
          description: Default disk size in MB for new Drives in the Drive Group
          type: number
        serverInstanceGroupId:
          example: 1
          type: number
        containerArrayId:
          example: 1
          type: number
        expandWithServerInstanceGroup:
          description: Flag to determine whether the Drive Group should be expanded
            with a Server Instance Group by adding one drive for each instance
          example: 1
          type: number
        ioLimitPolicy:
          description: The IO limit policy of the Drive Group.
          type: string
        storageType:
          default: iscsi_ssd
          description: Service status of the Drive Group
          enum:
          - iscsi_ssd
          - iscsi_hdd
          - dummy
          type: string
        filesystemInfo:
          description: Filesystem information of the Drive Group.
          type: object
        subdomain:
          description: Subdomain of the Drive Group.
          type: string
        updatedTimestamp:
          description: Timestamp of the Drive Group last update.
          type: string
        dnsSubdomainChangeId:
          description: Id of the DNS subdomain for the Drive Group.
          type: number
        deployType:
          default: create
          description: Deploy type of the Drive Group
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          default: not_started
          description: Deploy status of the Drive Group
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        infrastructureDeployId:
          description: Id of the deployment for the Drive Group.
          type: number
      required:
      - deployStatus
      - deployType
      - driveSizeMbDefault
      - expandWithServerInstanceGroup
      - infrastructureId
      - label
      - revision
      - storageType
      - updatedTimestamp
      type: object
    DriveGroupMeta:
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
        tags:
          description: Tags for the Drive Group.
          items:
            type: string
          type: array
      type: object
    DriveGroup:
      example:
        dnsSubdomainId: 5.637376656633329
        createdTimestamp: createdTimestamp
        extensionInstanceId: 1
        containerArrayId: 1
        label: label
        ioLimitPolicy: ioLimitPolicy
        subdomainPermanent: subdomainPermanent
        templateId: 1
        allocationAffinity: same_storage
        filesystemInfo: "{}"
        updatedTimestamp: updatedTimestamp
        revision: 5.962133916683182
        expandWithServerInstanceGroup: 1
        containerClusterId: 1
        dnsSubdomainPermanentId: 2.3021358869347655
        infrastructureId: 0.8008281904610115
        serviceStatus: ordered
        meta: ""
        storageType: iscsi_ssd
        subdomain: subdomain
        serverInstanceGroupId: 1
        id: 1.4658129805029452
        driveSizeMbDefault: 6.027456183070403
        config: ""
      properties:
        label:
          description: Label of the Drive Group.
          type: string
        infrastructureId:
          description: Infrastructure id of the Drive Group
          type: number
        templateId:
          description: Template Id
          example: 1
          type: number
        driveSizeMbDefault:
          description: Default disk size in MB for new Drives in the Drive Group
          type: number
        serverInstanceGroupId:
          example: 1
          type: number
        containerArrayId:
          example: 1
          type: number
        expandWithServerInstanceGroup:
          description: Flag to determine whether the Drive Group should be expanded
            with a Server Instance Group by adding one drive for each instance
          example: 1
          type: number
        ioLimitPolicy:
          description: The IO limit policy of the Drive Group.
          type: string
        storageType:
          default: iscsi_ssd
          description: Service status of the Drive Group
          enum:
          - iscsi_ssd
          - iscsi_hdd
          - dummy
          type: string
        filesystemInfo:
          description: Filesystem information of the Drive Group.
          type: object
        subdomain:
          description: Subdomain of the Drive Group.
          type: string
        updatedTimestamp:
          description: Timestamp of the Drive Group last update.
          type: string
        id:
          description: Id of the Drive Group
          type: number
        revision:
          description: Revision of the Drive Group State
          type: number
        extensionInstanceId:
          example: 1
          type: number
        containerClusterId:
          example: 1
          type: number
        serviceStatus:
          description: Service status of the Drive Group
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          type: string
        subdomainPermanent:
          description: Subdomain permanent of the Drive Group.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the Drive Group.
          type: number
        dnsSubdomainPermanentId:
          description: Id of the permanent DNS subdomain for the Drive Group.
          type: number
        allocationAffinity:
          description: Allocation affinity of the Drive Group
          enum:
          - same_storage
          - different_storage
          type: string
        config:
          allOf:
          - $ref: '#/components/schemas/DriveGroupConfiguration'
          description: The current changes to be deployed for the Drive Group.
        createdTimestamp:
          description: Timestamp of the Drive Group creation.
          type: string
        meta:
          allOf:
          - $ref: '#/components/schemas/DriveGroupMeta'
          description: Meta information of the Drive Group.
      required:
      - allocationAffinity
      - config
      - createdTimestamp
      - driveSizeMbDefault
      - expandWithServerInstanceGroup
      - id
      - infrastructureId
      - label
      - meta
      - revision
      - serviceStatus
      - storageType
      - updatedTimestamp
      type: object
    DriveGroupPaginatedList:
      example:
        data:
        - dnsSubdomainId: 5.637376656633329
          createdTimestamp: createdTimestamp
          extensionInstanceId: 1
          containerArrayId: 1
          label: label
          ioLimitPolicy: ioLimitPolicy
          subdomainPermanent: subdomainPermanent
          templateId: 1
          allocationAffinity: same_storage
          filesystemInfo: "{}"
          updatedTimestamp: updatedTimestamp
          revision: 5.962133916683182
          expandWithServerInstanceGroup: 1
          containerClusterId: 1
          dnsSubdomainPermanentId: 2.3021358869347655
          infrastructureId: 0.8008281904610115
          serviceStatus: ordered
          meta: ""
          storageType: iscsi_ssd
          subdomain: subdomain
          serverInstanceGroupId: 1
          id: 1.4658129805029452
          driveSizeMbDefault: 6.027456183070403
          config: ""
        - dnsSubdomainId: 5.637376656633329
          createdTimestamp: createdTimestamp
          extensionInstanceId: 1
          containerArrayId: 1
          label: label
          ioLimitPolicy: ioLimitPolicy
          subdomainPermanent: subdomainPermanent
          templateId: 1
          allocationAffinity: same_storage
          filesystemInfo: "{}"
          updatedTimestamp: updatedTimestamp
          revision: 5.962133916683182
          expandWithServerInstanceGroup: 1
          containerClusterId: 1
          dnsSubdomainPermanentId: 2.3021358869347655
          infrastructureId: 0.8008281904610115
          serviceStatus: ordered
          meta: ""
          storageType: iscsi_ssd
          subdomain: subdomain
          serverInstanceGroupId: 1
          id: 1.4658129805029452
          driveSizeMbDefault: 6.027456183070403
          config: ""
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/DriveGroup'
          title: List of drive group's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateGroupDrive:
      example:
        expandWithServerInstanceGroup: 1
        driveCount: 1
        extensionInstanceId: 1
        label: label
        ioLimitPolicy: ioLimitPolicy
        allocationAffinity: same_storage
        driveSizeMbDefault: 0.8008281904610115
      properties:
        driveSizeMbDefault:
          description: Default disk size in MB for new Drives in the Drive Group
          type: number
        extensionInstanceId:
          example: 1
          type: number
        label:
          description: Label of the Drive.
          type: string
        driveCount:
          description: Number of drives in the Drive Group
          example: 1
          type: number
        ioLimitPolicy:
          description: The IO limit policy of the Drive Group.
          type: string
        expandWithServerInstanceGroup:
          description: Flag to determine whether the Drive Group should be expanded
            with a Server Instance Group by adding one drive for each instance
          example: 1
          type: number
        allocationAffinity:
          description: Allocation affinity of the Drive Group
          enum:
          - same_storage
          - different_storage
          type: string
      required:
      - driveCount
      - driveSizeMbDefault
      type: object
    UpdateGroupDrive:
      example:
        expandWithServerInstanceGroup: 1
        label: label
        ioLimitPolicy: ioLimitPolicy
        allocationAffinity: same_storage
        driveSizeMbDefault: 0.8008281904610115
      properties:
        label:
          description: Label of the Drive.
          type: string
        driveSizeMbDefault:
          description: Default disk size in MB for new Drives in the Drive Group
          type: number
        ioLimitPolicy:
          description: The IO limit policy of the Drive Group.
          type: string
        expandWithServerInstanceGroup:
          description: Flag to determine whether the Drive Group should be expanded
            with a Server Instance Group by adding one drive for each instance
          example: 1
          type: number
        allocationAffinity:
          description: Allocation affinity of the Drive Group
          enum:
          - same_storage
          - different_storage
          type: string
      type: object
    UpdateDriveGroupMeta:
      example:
        guiSettings:
          rowIndex: 6.027456183070403
          columnIndex: 1.4658129805029452
          userAgent: userAgent
          randomInstanceID: randomInstanceID
          showWidgetChildren: true
        tags:
        - tags
        - tags
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
        tags:
          description: Tags for the Drive Group.
          items:
            type: string
          type: array
      type: object
    ExtensionVariable:
      example:
        label: label
        value: value
      properties:
        label:
          description: The variable label.
          type: string
        value:
          description: The variable value.
          type: string
      required:
      - label
      - value
      type: object
    CreateExtensionInstance:
      example:
        label: ext-instance-123
        inputVariables:
        - label: label
          value: value
        - label: label
          value: value
        extensionId: 12
      properties:
        label:
          description: The extension instance label. Will be automatically generated
            if not provided.
          example: ext-instance-123
          maxLength: 63
          minLength: 1
          type: string
        extensionId:
          description: The extension ID.
          example: 12
          type: number
        inputVariables:
          description: Input variables values.
          items:
            $ref: '#/components/schemas/ExtensionVariable'
          type: array
      type: object
    ExtensionInstanceConfiguration:
      properties:
        revision:
          description: Revision number
          example: 1
          type: number
        label:
          description: The extension instance label. Will be automatically generated
            if not provided.
          example: ext-instance-123
          maxLength: 63
          minLength: 1
          type: string
        automaticManagement:
          description: Flag specifying if the extension instance supports automatic
            management.
          example: 1
          type: number
        subdomain:
          description: Subdomain of the Extension Instance.
          type: string
        dnsSubdomainChangeId:
          description: Id of the DNS subdomain for the Extension Instance.
          type: number
        deployType:
          default: create
          description: Deploy type of the Extension Instance
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          default: not_started
          description: Deploy status of the Extension Instance
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        infrastructureDeployId:
          description: Id of the deployment for the Extension Instance.
          type: number
        updatedTimestamp:
          description: Timestamp of the Extension Instance last update.
          type: string
      required:
      - automaticManagement
      - deployStatus
      - deployType
      - label
      - revision
      - updatedTimestamp
      type: object
    ExtensionInstance:
      example:
        dnsSubdomainId: 0.8008281904610115
        createdTimestamp: createdTimestamp
        label: ext-instance-123
        subdomainPermanent: subdomainPermanent
        updatedTimestamp: updatedTimestamp
        revision: 1
        automaticManagement: 1
        dnsSubdomainPermanentId: 6.027456183070403
        infrastructureId: 1
        serviceStatus: ordered
        subdomain: subdomain
        outputVariables:
        - label: label
          value: value
        - label: label
          value: value
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 1
        inputVariables:
        - label: label
          value: value
        - label: label
          value: value
        extensionId: 12
        config: ""
      properties:
        revision:
          description: Revision number
          example: 1
          type: number
        label:
          description: The extension instance label. Will be automatically generated
            if not provided.
          example: ext-instance-123
          maxLength: 63
          minLength: 1
          type: string
        automaticManagement:
          description: Flag specifying if the extension instance supports automatic
            management.
          example: 1
          type: number
        subdomain:
          description: Subdomain of the Extension Instance.
          type: string
        updatedTimestamp:
          description: Timestamp of the Extension Instance last update.
          type: string
        id:
          description: The extension instance ID.
          example: 1
          type: number
        infrastructureId:
          description: The infrastructure ID.
          example: 1
          type: number
        extensionId:
          description: The extension ID.
          example: 12
          type: number
        serviceStatus:
          description: Service status of the Extension Instance
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          type: string
        subdomainPermanent:
          description: Subdomain permanent of the Extension Instance.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the Extension Instance.
          type: number
        dnsSubdomainPermanentId:
          description: Id of the permanent DNS subdomain for the Extension Instance.
          type: number
        inputVariables:
          description: Input variables values.
          items:
            $ref: '#/components/schemas/ExtensionVariable'
          type: array
        outputVariables:
          description: Output variables values.
          items:
            $ref: '#/components/schemas/ExtensionVariable'
          type: array
        config:
          allOf:
          - $ref: '#/components/schemas/ExtensionInstanceConfiguration'
          description: The current changes to be deployed for the Extension Instance.
        createdTimestamp:
          description: Timestamp of the Extension Instance creation.
          type: string
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - automaticManagement
      - config
      - createdTimestamp
      - extensionId
      - id
      - infrastructureId
      - inputVariables
      - label
      - outputVariables
      - revision
      - serviceStatus
      - updatedTimestamp
      type: object
    ExtensionInstancePaginatedList:
      example:
        data:
        - dnsSubdomainId: 0.8008281904610115
          createdTimestamp: createdTimestamp
          label: ext-instance-123
          subdomainPermanent: subdomainPermanent
          updatedTimestamp: updatedTimestamp
          revision: 1
          automaticManagement: 1
          dnsSubdomainPermanentId: 6.027456183070403
          infrastructureId: 1
          serviceStatus: ordered
          subdomain: subdomain
          outputVariables:
          - label: label
            value: value
          - label: label
            value: value
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          inputVariables:
          - label: label
            value: value
          - label: label
            value: value
          extensionId: 12
          config: ""
        - dnsSubdomainId: 0.8008281904610115
          createdTimestamp: createdTimestamp
          label: ext-instance-123
          subdomainPermanent: subdomainPermanent
          updatedTimestamp: updatedTimestamp
          revision: 1
          automaticManagement: 1
          dnsSubdomainPermanentId: 6.027456183070403
          infrastructureId: 1
          serviceStatus: ordered
          subdomain: subdomain
          outputVariables:
          - label: label
            value: value
          - label: label
            value: value
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          inputVariables:
          - label: label
            value: value
          - label: label
            value: value
          extensionId: 12
          config: ""
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/ExtensionInstance'
          title: List of extension instance's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    UpdateExtensionInstance:
      example:
        inputVariables:
        - label: label
          value: value
        - label: label
          value: value
      properties:
        inputVariables:
          description: Input variables values.
          items:
            $ref: '#/components/schemas/ExtensionVariable'
          type: array
      type: object
    ExtensionDependency:
      example:
        controllerVersion: controllerVersion
        osTemplates:
        - osTemplates
        - osTemplates
        - osTemplates
        - osTemplates
        - osTemplates
      properties:
        controllerVersion:
          description: Metalsoft Controller version required by the extension.
          maxLength: 32
          type: string
        osTemplates:
          description: List of OS templates required by the extension.
          items:
            maxLength: 64
            type: string
          maxItems: 12
          type: array
      required:
      - controllerVersion
      - osTemplates
      type: object
    ExtensionInput:
      example:
        setOnly: false
        hidden: false
        defaultValue: defaultValue
        name: name
        options:
          validationRegEx: validationRegEx
        inputType: ExtensionInputString
        label: label
      properties:
        label:
          description: Label of the input.
          maxLength: 63
          type: string
        name:
          description: Name of the input.
          maxLength: 64
          type: string
        inputType:
          description: Type of the input.
          enum:
          - ExtensionInputString
          - ExtensionInputInteger
          - ExtensionInputBoolean
          - ExtensionInputServerType
          - ExtensionInputOsTemplate
          type: string
        options:
          $ref: '#/components/schemas/ExtensionInput_options'
        setOnly:
          default: false
          description: Flag to indicate if the input is required.
          type: boolean
        hidden:
          default: false
          description: Flag to indicate if the input is hidden in the UI.
          type: boolean
        defaultValue:
          description: Default value.
          type: string
      required:
      - inputType
      - label
      - name
      - options
      type: object
    ExtensionOutput:
      example:
        template: template
        name: name
        outputType: outputType
        label: label
      properties:
        label:
          description: Label of the output.
          maxLength: 63
          type: string
        name:
          description: Name of the output.
          maxLength: 64
          type: string
        outputType:
          description: Type of the output.
          maxLength: 32
          type: string
        template:
          description: Template of the output.
          maxLength: 128
          type: string
      required:
      - label
      - name
      - outputType
      type: object
    CustomVariable:
      example:
        name: name
        value: value
      properties:
        name:
          description: Custom variable name.
          maxLength: 64
          type: string
        value:
          description: Custom variable value.
          maxLength: 128
          type: string
      required:
      - name
      - value
      type: object
    ExtensionInstanceArray:
      example:
        connectedSharedDrives:
        - connectedSharedDrives
        - connectedSharedDrives
        - connectedSharedDrives
        - connectedSharedDrives
        - connectedSharedDrives
        osTemplate: osTemplate
        instanceCount: instanceCount
        serverType: serverType
        label: label
        customVariables:
        - name: name
          value: value
        - name: name
          value: value
        - name: name
          value: value
        - name: name
          value: value
        - name: name
          value: value
        dependencies:
        - dependencies
        - dependencies
        - dependencies
        - dependencies
        - dependencies
      properties:
        label:
          description: Label of the instance array.
          maxLength: 63
          type: string
        instanceCount:
          description: Instance count value or reference to variable.
          maxLength: 128
          type: string
        serverType:
          description: Server type variable reference.
          maxLength: 128
          type: string
        osTemplate:
          description: OS template variable reference.
          maxLength: 128
          type: string
        connectedSharedDrives:
          description: Connected shared drive arrays.
          items:
            maxLength: 128
            type: string
          maxItems: 12
          type: array
        customVariables:
          description: Custom variables. The value may be a reference to an input
            variable.
          items:
            $ref: '#/components/schemas/CustomVariable'
          maxItems: 12
          type: array
        dependencies:
          description: Labels of instance arrays this one depends on.
          items:
            maxLength: 63
            type: string
          maxItems: 12
          type: array
      required:
      - instanceCount
      - label
      - osTemplate
      - serverType
      type: object
    ExtensionSharedDrive:
      example:
        sizeGb: 10
        label: label
      properties:
        label:
          description: Label of the shared drive array.
          maxLength: 63
          type: string
        sizeGb:
          description: Size of the shared drive array in GB..
          example: 10
          type: number
      required:
      - label
      - sizeGb
      type: object
    ExtensionInfrastructure:
      example:
        instanceArrays:
        - connectedSharedDrives:
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          osTemplate: osTemplate
          instanceCount: instanceCount
          serverType: serverType
          label: label
          customVariables:
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          dependencies:
          - dependencies
          - dependencies
          - dependencies
          - dependencies
          - dependencies
        - connectedSharedDrives:
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          osTemplate: osTemplate
          instanceCount: instanceCount
          serverType: serverType
          label: label
          customVariables:
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          dependencies:
          - dependencies
          - dependencies
          - dependencies
          - dependencies
          - dependencies
        - connectedSharedDrives:
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          osTemplate: osTemplate
          instanceCount: instanceCount
          serverType: serverType
          label: label
          customVariables:
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          dependencies:
          - dependencies
          - dependencies
          - dependencies
          - dependencies
          - dependencies
        - connectedSharedDrives:
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          osTemplate: osTemplate
          instanceCount: instanceCount
          serverType: serverType
          label: label
          customVariables:
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          dependencies:
          - dependencies
          - dependencies
          - dependencies
          - dependencies
          - dependencies
        - connectedSharedDrives:
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          - connectedSharedDrives
          osTemplate: osTemplate
          instanceCount: instanceCount
          serverType: serverType
          label: label
          customVariables:
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          - name: name
            value: value
          dependencies:
          - dependencies
          - dependencies
          - dependencies
          - dependencies
          - dependencies
        sharedDrives:
        - sizeGb: 10
          label: label
        - sizeGb: 10
          label: label
        - sizeGb: 10
          label: label
        - sizeGb: 10
          label: label
        - sizeGb: 10
          label: label
      properties:
        instanceArrays:
          description: Instance array details for the infrastructure requirement.
          items:
            $ref: '#/components/schemas/ExtensionInstanceArray'
          maxItems: 12
          type: array
        sharedDrives:
          description: Shared drive details for the infrastructure requirement.
          items:
            $ref: '#/components/schemas/ExtensionSharedDrive'
          maxItems: 12
          type: array
      type: object
    ExtensionAsset:
      example:
        name: name
        label: label
        requiredAssets:
        - requiredAssets
        - requiredAssets
        - requiredAssets
        - requiredAssets
        - requiredAssets
        url: url
        assetType: assetType
      properties:
        label:
          description: Label of the asset.
          maxLength: 63
          type: string
        name:
          description: Name of the asset.
          maxLength: 64
          type: string
        assetType:
          description: Type of the asset.
          maxLength: 32
          type: string
        url:
          description: URL of the asset.
          maxLength: 128
          type: string
        requiredAssets:
          description: Required assets by this asset.
          items:
            maxLength: 63
            type: string
          maxItems: 12
          type: array
      required:
      - assetType
      - label
      - name
      - url
      type: object
    ExtensionTask:
      example:
        taskType: ExtensionTaskAnsible
        options:
          executionTimeout: 0
          executionTimeoutTick: 0
          asset: asset
          version: version
          playbook: playbook
        label: label
      properties:
        label:
          description: Label of the task.
          maxLength: 63
          type: string
        taskType:
          description: Type of the task.
          enum:
          - ExtensionTaskAnsible
          - ExtensionTaskWebhook
          type: string
        options:
          $ref: '#/components/schemas/ExtensionTask_options'
      required:
      - label
      - options
      - taskType
      type: object
    ExtensionActions:
      example:
        preDeploy:
        - taskType: ExtensionTaskAnsible
          options:
            executionTimeout: 0
            executionTimeoutTick: 0
            asset: asset
            version: version
            playbook: playbook
          label: label
        - taskType: ExtensionTaskAnsible
          options:
            executionTimeout: 0
            executionTimeoutTick: 0
            asset: asset
            version: version
            playbook: playbook
          label: label
        - taskType: ExtensionTaskAnsible
          options:
            executionTimeout: 0
            executionTimeoutTick: 0
            asset: asset
            version: version
            playbook: playbook
          label: label
        - taskType: ExtensionTaskAnsible
          options:
            executionTimeout: 0
            executionTimeoutTick: 0
            asset: asset
            version: version
            playbook: playbook
          label: label
        - taskType: ExtensionTaskAnsible
          options:
            executionTimeout: 0
            executionTimeoutTick: 0
            asset: asset
            version: version
            playbook: playbook
          label: label
        postDeploy:
        - taskType: ExtensionTaskAnsible
          options:
            executionTimeout: 0
            executionTimeoutTick: 0
            asset: asset
            version: version
            playbook: playbook
          label: label
        - taskType: ExtensionTaskAnsible
          options:
            executionTimeout: 0
            executionTimeoutTick: 0
            asset: asset
            version: version
            playbook: playbook
          label: label
        - taskType: ExtensionTaskAnsible
          options:
            executionTimeout: 0
            executionTimeoutTick: 0
            asset: asset
            version: version
            playbook: playbook
          label: label
        - taskType: ExtensionTaskAnsible
          options:
            executionTimeout: 0
            executionTimeoutTick: 0
            asset: asset
            version: version
            playbook: playbook
          label: label
        - taskType: ExtensionTaskAnsible
          options:
            executionTimeout: 0
            executionTimeoutTick: 0
            asset: asset
            version: version
            playbook: playbook
          label: label
      properties:
        preDeploy:
          description: Pre-deploy tasks.
          items:
            $ref: '#/components/schemas/ExtensionTask'
          maxItems: 12
          type: array
        postDeploy:
          description: Post-deploy tasks.
          items:
            $ref: '#/components/schemas/ExtensionTask'
          maxItems: 12
          type: array
      type: object
    ExtensionDefinition:
      example:
        outputs:
        - template: template
          name: name
          outputType: outputType
          label: label
        - template: template
          name: name
          outputType: outputType
          label: label
        - template: template
          name: name
          outputType: outputType
          label: label
        - template: template
          name: name
          outputType: outputType
          label: label
        - template: template
          name: name
          outputType: outputType
          label: label
        onCreate:
          preDeploy:
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          postDeploy:
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
        schemaVersion: schemaVersion
        kind: kind
        inputs:
        - setOnly: false
          hidden: false
          defaultValue: defaultValue
          name: name
          options:
            validationRegEx: validationRegEx
          inputType: ExtensionInputString
          label: label
        - setOnly: false
          hidden: false
          defaultValue: defaultValue
          name: name
          options:
            validationRegEx: validationRegEx
          inputType: ExtensionInputString
          label: label
        - setOnly: false
          hidden: false
          defaultValue: defaultValue
          name: name
          options:
            validationRegEx: validationRegEx
          inputType: ExtensionInputString
          label: label
        - setOnly: false
          hidden: false
          defaultValue: defaultValue
          name: name
          options:
            validationRegEx: validationRegEx
          inputType: ExtensionInputString
          label: label
        - setOnly: false
          hidden: false
          defaultValue: defaultValue
          name: name
          options:
            validationRegEx: validationRegEx
          inputType: ExtensionInputString
          label: label
        icon: icon
        description: description
        label: label
        dependencies:
          controllerVersion: controllerVersion
          osTemplates:
          - osTemplates
          - osTemplates
          - osTemplates
          - osTemplates
          - osTemplates
        onEdit:
          preDeploy:
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          postDeploy:
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
        onDelete:
          preDeploy:
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          postDeploy:
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
          - taskType: ExtensionTaskAnsible
            options:
              executionTimeout: 0
              executionTimeoutTick: 0
              asset: asset
              version: version
              playbook: playbook
            label: label
        assets:
        - name: name
          label: label
          requiredAssets:
          - requiredAssets
          - requiredAssets
          - requiredAssets
          - requiredAssets
          - requiredAssets
          url: url
          assetType: assetType
        - name: name
          label: label
          requiredAssets:
          - requiredAssets
          - requiredAssets
          - requiredAssets
          - requiredAssets
          - requiredAssets
          url: url
          assetType: assetType
        - name: name
          label: label
          requiredAssets:
          - requiredAssets
          - requiredAssets
          - requiredAssets
          - requiredAssets
          - requiredAssets
          url: url
          assetType: assetType
        - name: name
          label: label
          requiredAssets:
          - requiredAssets
          - requiredAssets
          - requiredAssets
          - requiredAssets
          - requiredAssets
          url: url
          assetType: assetType
        - name: name
          label: label
          requiredAssets:
          - requiredAssets
          - requiredAssets
          - requiredAssets
          - requiredAssets
          - requiredAssets
          url: url
          assetType: assetType
        vendor: vendor
        infrastructure:
          instanceArrays:
          - connectedSharedDrives:
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            osTemplate: osTemplate
            instanceCount: instanceCount
            serverType: serverType
            label: label
            customVariables:
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            dependencies:
            - dependencies
            - dependencies
            - dependencies
            - dependencies
            - dependencies
          - connectedSharedDrives:
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            osTemplate: osTemplate
            instanceCount: instanceCount
            serverType: serverType
            label: label
            customVariables:
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            dependencies:
            - dependencies
            - dependencies
            - dependencies
            - dependencies
            - dependencies
          - connectedSharedDrives:
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            osTemplate: osTemplate
            instanceCount: instanceCount
            serverType: serverType
            label: label
            customVariables:
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            dependencies:
            - dependencies
            - dependencies
            - dependencies
            - dependencies
            - dependencies
          - connectedSharedDrives:
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            osTemplate: osTemplate
            instanceCount: instanceCount
            serverType: serverType
            label: label
            customVariables:
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            dependencies:
            - dependencies
            - dependencies
            - dependencies
            - dependencies
            - dependencies
          - connectedSharedDrives:
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            - connectedSharedDrives
            osTemplate: osTemplate
            instanceCount: instanceCount
            serverType: serverType
            label: label
            customVariables:
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            - name: name
              value: value
            dependencies:
            - dependencies
            - dependencies
            - dependencies
            - dependencies
            - dependencies
          sharedDrives:
          - sizeGb: 10
            label: label
          - sizeGb: 10
            label: label
          - sizeGb: 10
            label: label
          - sizeGb: 10
            label: label
          - sizeGb: 10
            label: label
        extensionType: extensionType
        name: name
        extensionVersion: extensionVersion
      properties:
        kind:
          description: The kind of extension.
          maxLength: 32
          type: string
        schemaVersion:
          description: Schema version of the extension.
          maxLength: 12
          type: string
        name:
          description: Name of the extension.
          maxLength: 255
          type: string
        label:
          description: Label of the extension.
          maxLength: 63
          type: string
        extensionType:
          description: Type of the extension.
          maxLength: 32
          type: string
        vendor:
          description: Vendor of the extension.
          maxLength: 64
          type: string
        extensionVersion:
          description: Version of the extension.
          maxLength: 12
          type: string
        description:
          description: Description of the extension.
          maxLength: 255
          type: string
        icon:
          description: Icon of the extension.
          type: string
        dependencies:
          $ref: '#/components/schemas/ExtensionDependency'
        inputs:
          description: List of inputs for the platform service.
          items:
            $ref: '#/components/schemas/ExtensionInput'
          maxItems: 12
          type: array
        outputs:
          description: List of outputs for the platform service.
          items:
            $ref: '#/components/schemas/ExtensionOutput'
          maxItems: 12
          type: array
        infrastructure:
          $ref: '#/components/schemas/ExtensionInfrastructure'
        assets:
          description: List of assets for the platform service.
          items:
            $ref: '#/components/schemas/ExtensionAsset'
          maxItems: 12
          type: array
        onCreate:
          $ref: '#/components/schemas/ExtensionActions'
        onEdit:
          $ref: '#/components/schemas/ExtensionActions'
        onDelete:
          $ref: '#/components/schemas/ExtensionActions'
      required:
      - assets
      - dependencies
      - extensionType
      - extensionVersion
      - icon
      - infrastructure
      - inputs
      - kind
      - label
      - name
      - outputs
      - schemaVersion
      - vendor
      type: object
    ExtensionInputString:
      example:
        validationRegEx: validationRegEx
      properties:
        validationRegEx:
          description: Validation regex pattern for the input.
          maxLength: 64
          type: string
      type: object
    ExtensionInputInteger:
      properties:
        minValue:
          description: Minimum allowed value.
          type: integer
        maxValue:
          description: Maximum allowed value.
          type: integer
        deniedValues:
          description: Denied values.
          items:
            type: integer
          maxItems: 12
          type: array
      type: object
    ExtensionInputServerType:
      properties:
        minCpu:
          description: Minimum CPU cores.
          exclusiveMinimum: true
          minimum: 0
          type: integer
        minRamGb:
          description: Minimum RAM GBs.
          exclusiveMinimum: true
          minimum: 0
          type: integer
        vendor:
          description: Server vendor.
          maxLength: 64
          type: string
      type: object
    ExtensionInputOsTemplate:
      properties:
        osFamily:
          description: OS family type.
          maxLength: 64
          type: string
      type: object
    ExtensionInputBoolean:
      properties:
        defaultValue:
          description: Default value.
          type: boolean
      type: object
    ExtensionTaskAnsible:
      example:
        executionTimeout: 0
        executionTimeoutTick: 0
        asset: asset
        version: version
        playbook: playbook
      properties:
        asset:
          description: Asset for the Ansible task.
          maxLength: 63
          type: string
        playbook:
          description: Playbook for the Ansible task.
          maxLength: 32
          type: string
        executionTimeout:
          description: Execution Timeout.
          exclusiveMinimum: true
          minimum: 0
          type: integer
        executionTimeoutTick:
          description: Execution Timeout Tick.
          exclusiveMinimum: true
          minimum: 0
          type: integer
        version:
          description: Version.
          maxLength: 32
          type: string
      type: object
    ExtensionTaskWebhook:
      properties:
        endpoint:
          description: Webhook task endpoint.
          maxLength: 128
          type: string
        requestTemplate:
          description: Webhook task request body template.
          type: string
      type: object
    ExtensionInfo:
      example:
        name: My App
        icon: icon
        description: My App Description
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 10
        label: incus-6x
        slug: my-app
        status: draft
      properties:
        id:
          description: The extension ID
          example: 10
          type: number
        slug:
          description: The extension unique slug
          example: my-app
          type: string
        name:
          description: The extension name
          example: My App
          maxLength: 255
          type: string
        label:
          description: The extension unique label
          example: incus-6x
          maxLength: 63
          pattern: "^(?!.*-$)[a-z]{1}[a-z0-9-]{0,62}$"
          type: string
        description:
          description: The extension description
          example: My App Description
          maxLength: 255
          type: string
        status:
          description: Extension status
          enum:
          - draft
          - active
          - archived
          example: draft
          type: string
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
        icon:
          description: Icon of the extension.
          type: string
      type: object
    ExtensionList:
      example:
        data:
        - name: My App
          icon: icon
          description: My App Description
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 10
          label: incus-6x
          slug: my-app
          status: draft
        - name: My App
          icon: icon
          description: My App Description
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 10
          label: incus-6x
          slug: my-app
          status: draft
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
      properties:
        data:
          items:
            $ref: '#/components/schemas/ExtensionInfo'
          title: List of extension infos
          type: array
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - data
      type: object
    Extension:
      example:
        name: My App
        description: My App Description
        definition:
          outputs:
          - template: template
            name: name
            outputType: outputType
            label: label
          - template: template
            name: name
            outputType: outputType
            label: label
          - template: template
            name: name
            outputType: outputType
            label: label
          - template: template
            name: name
            outputType: outputType
            label: label
          - template: template
            name: name
            outputType: outputType
            label: label
          onCreate:
            preDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            postDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
          schemaVersion: schemaVersion
          kind: kind
          inputs:
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          icon: icon
          description: description
          label: label
          dependencies:
            controllerVersion: controllerVersion
            osTemplates:
            - osTemplates
            - osTemplates
            - osTemplates
            - osTemplates
            - osTemplates
          onEdit:
            preDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            postDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
          onDelete:
            preDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            postDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
          assets:
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          vendor: vendor
          infrastructure:
            instanceArrays:
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            sharedDrives:
            - sizeGb: 10
              label: label
            - sizeGb: 10
              label: label
            - sizeGb: 10
              label: label
            - sizeGb: 10
              label: label
            - sizeGb: 10
              label: label
          extensionType: extensionType
          name: name
          extensionVersion: extensionVersion
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 10
        label: incus-6x
        slug: my-app
        revision: 1
        status: draft
      properties:
        id:
          description: The extension ID
          example: 10
          type: number
        revision:
          description: Revision number
          example: 1
          type: number
        slug:
          description: The extension unique slug
          example: my-app
          type: string
        name:
          description: The extension name
          example: My App
          maxLength: 255
          type: string
        label:
          description: The extension unique label
          example: incus-6x
          maxLength: 63
          pattern: "^(?!.*-$)[a-z]{1}[a-z0-9-]{0,62}$"
          type: string
        description:
          description: The extension description
          example: My App Description
          maxLength: 255
          type: string
        status:
          description: Extension status
          enum:
          - draft
          - active
          - archived
          example: draft
          type: string
        definition:
          $ref: '#/components/schemas/ExtensionDefinition'
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - definition
      - description
      - id
      - name
      - revision
      - slug
      - status
      type: object
    CreateExtension:
      example:
        name: My App
        description: My App Description
        definition:
          outputs:
          - template: template
            name: name
            outputType: outputType
            label: label
          - template: template
            name: name
            outputType: outputType
            label: label
          - template: template
            name: name
            outputType: outputType
            label: label
          - template: template
            name: name
            outputType: outputType
            label: label
          - template: template
            name: name
            outputType: outputType
            label: label
          onCreate:
            preDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            postDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
          schemaVersion: schemaVersion
          kind: kind
          inputs:
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          icon: icon
          description: description
          label: label
          dependencies:
            controllerVersion: controllerVersion
            osTemplates:
            - osTemplates
            - osTemplates
            - osTemplates
            - osTemplates
            - osTemplates
          onEdit:
            preDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            postDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
          onDelete:
            preDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            postDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
          assets:
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          vendor: vendor
          infrastructure:
            instanceArrays:
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            sharedDrives:
            - sizeGb: 10
              label: label
            - sizeGb: 10
              label: label
            - sizeGb: 10
              label: label
            - sizeGb: 10
              label: label
            - sizeGb: 10
              label: label
          extensionType: extensionType
          name: name
          extensionVersion: extensionVersion
        label: incus-6x
      properties:
        name:
          description: The extension name
          example: My App
          maxLength: 255
          type: string
        label:
          description: The extension unique label
          example: incus-6x
          maxLength: 63
          pattern: "^(?!.*-$)[a-z]{1}[a-z0-9-]{0,62}$"
          type: string
        description:
          description: The extension description
          example: My App Description
          maxLength: 255
          type: string
        definition:
          $ref: '#/components/schemas/ExtensionDefinition'
      required:
      - definition
      - description
      - name
      type: object
    UpdateExtension:
      example:
        name: My App
        description: My App Description
        definition:
          outputs:
          - template: template
            name: name
            outputType: outputType
            label: label
          - template: template
            name: name
            outputType: outputType
            label: label
          - template: template
            name: name
            outputType: outputType
            label: label
          - template: template
            name: name
            outputType: outputType
            label: label
          - template: template
            name: name
            outputType: outputType
            label: label
          onCreate:
            preDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            postDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
          schemaVersion: schemaVersion
          kind: kind
          inputs:
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          - setOnly: false
            hidden: false
            defaultValue: defaultValue
            name: name
            options:
              validationRegEx: validationRegEx
            inputType: ExtensionInputString
            label: label
          icon: icon
          description: description
          label: label
          dependencies:
            controllerVersion: controllerVersion
            osTemplates:
            - osTemplates
            - osTemplates
            - osTemplates
            - osTemplates
            - osTemplates
          onEdit:
            preDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            postDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
          onDelete:
            preDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            postDeploy:
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
            - taskType: ExtensionTaskAnsible
              options:
                executionTimeout: 0
                executionTimeoutTick: 0
                asset: asset
                version: version
                playbook: playbook
              label: label
          assets:
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          - name: name
            label: label
            requiredAssets:
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            - requiredAssets
            url: url
            assetType: assetType
          vendor: vendor
          infrastructure:
            instanceArrays:
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            - connectedSharedDrives:
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              - connectedSharedDrives
              osTemplate: osTemplate
              instanceCount: instanceCount
              serverType: serverType
              label: label
              customVariables:
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              - name: name
                value: value
              dependencies:
              - dependencies
              - dependencies
              - dependencies
              - dependencies
              - dependencies
            sharedDrives:
            - sizeGb: 10
              label: label
            - sizeGb: 10
              label: label
            - sizeGb: 10
              label: label
            - sizeGb: 10
              label: label
            - sizeGb: 10
              label: label
          extensionType: extensionType
          name: name
          extensionVersion: extensionVersion
        label: incus-6x
      properties:
        name:
          description: The extension name
          example: My App
          maxLength: 255
          type: string
        label:
          description: The extension unique label
          example: incus-6x
          maxLength: 63
          pattern: "^(?!.*-$)[a-z]{1}[a-z0-9-]{0,62}$"
          type: string
        description:
          description: The extension description
          example: My App Description
          maxLength: 255
          type: string
        definition:
          $ref: '#/components/schemas/ExtensionDefinition'
      required:
      - definition
      - description
      - name
      type: object
    FileShareConfiguration:
      example:
        sizeGB: 6.027456183070403
        dnsSubdomainChangeId: 5.962133916683182
        subdomain: subdomain
        infrastructureDeployId: 5.637376656633329
        storagePoolId: 1.4658129805029452
        label: label
        updatedTimestamp: updatedTimestamp
        deployType: create
        revision: 0.8008281904610115
        deployStatus: not_started
      properties:
        revision:
          description: Revision of the File Share Configuration
          type: number
        sizeGB:
          description: Disk size in GB for File Share
          type: number
        updatedTimestamp:
          description: Timestamp of the File Share last update.
          type: string
        storagePoolId:
          description: Id of the storage pool the File Share is assigned to
          type: number
        label:
          description: Label of the File Share.
          type: string
        subdomain:
          description: Subdomain of the File Share.
          type: string
        dnsSubdomainChangeId:
          description: Id of the DNS subdomain for the Drive Group.
          type: number
        deployType:
          default: create
          description: Deploy type of the Drive Group
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          default: not_started
          description: Deploy status of the Drive Group
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        infrastructureDeployId:
          description: Id of the deployment for the Drive Group.
          type: number
      required:
      - deployStatus
      - deployType
      - label
      - revision
      - sizeGB
      - updatedTimestamp
      type: object
    FileShareMeta:
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
      type: object
    FileShareExtendedInfo:
      example:
        sizeGB: 0.8008281904610115
        dnsSubdomainId: 2.3021358869347655
        createdTimestamp: createdTimestamp
        label: label
        subdomainPermanent: subdomainPermanent
        updatedTimestamp: updatedTimestamp
        revision: 5.962133916683182
        endpoint: endpoint
        infrastructureId: 5.637376656633329
        serviceStatus: ordered
        meta: ""
        infrastructure: "{}"
        networkVlanId: 7.061401241503109
        subdomain: subdomain
        storagePoolId: 6.027456183070403
        id: 1.4658129805029452
        config: ""
      properties:
        sizeGB:
          description: Disk size in GB for File Share
          type: number
        updatedTimestamp:
          description: Timestamp of the File Share last update.
          type: string
        storagePoolId:
          description: Id of the storage pool the File Share is assigned to
          type: number
        label:
          description: Label of the File Share.
          type: string
        subdomain:
          description: Subdomain of the File Share.
          type: string
        id:
          description: Id of the File Share
          type: number
        revision:
          description: Revision of the File Share
          type: number
        infrastructureId:
          description: Infrastructure id of the File Share
          type: number
        createdTimestamp:
          description: Timestamp of the File Share creation.
          type: string
        serviceStatus:
          description: Service status of the File Share
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          type: string
        subdomainPermanent:
          description: Subdomain permanent of the File Share.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the File Share.
          type: number
        networkVlanId:
          description: Id of the VLAN for the File Share.
          type: number
        endpoint:
          description: Endpoint of the File Share.
          type: string
        config:
          allOf:
          - $ref: '#/components/schemas/FileShareConfiguration'
          description: The current changes to be deployed for the File Share.
        meta:
          allOf:
          - $ref: '#/components/schemas/FileShareMeta'
          description: Meta information of the File Share.
        infrastructure:
          description: Infrastructure information
          type: object
      required:
      - config
      - createdTimestamp
      - id
      - infrastructure
      - infrastructureId
      - label
      - meta
      - revision
      - serviceStatus
      - sizeGB
      - updatedTimestamp
      type: object
    CreateFileShare:
      example:
        sizeGB: 0.8008281904610115
        label: label
      properties:
        sizeGB:
          description: Disk size in GB for File Share
          type: number
        label:
          description: Display name of the File Share.
          type: string
      required:
      - sizeGB
      type: object
    FileShare:
      example:
        sizeGB: 0.8008281904610115
        dnsSubdomainId: 2.3021358869347655
        createdTimestamp: createdTimestamp
        label: label
        subdomainPermanent: subdomainPermanent
        updatedTimestamp: updatedTimestamp
        revision: 5.962133916683182
        endpoint: endpoint
        infrastructureId: 5.637376656633329
        serviceStatus: ordered
        meta: ""
        networkVlanId: 7.061401241503109
        subdomain: subdomain
        storagePoolId: 6.027456183070403
        id: 1.4658129805029452
        config: ""
      properties:
        sizeGB:
          description: Disk size in GB for File Share
          type: number
        updatedTimestamp:
          description: Timestamp of the File Share last update.
          type: string
        storagePoolId:
          description: Id of the storage pool the File Share is assigned to
          type: number
        label:
          description: Label of the File Share.
          type: string
        subdomain:
          description: Subdomain of the File Share.
          type: string
        id:
          description: Id of the File Share
          type: number
        revision:
          description: Revision of the File Share
          type: number
        infrastructureId:
          description: Infrastructure id of the File Share
          type: number
        createdTimestamp:
          description: Timestamp of the File Share creation.
          type: string
        serviceStatus:
          description: Service status of the File Share
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          type: string
        subdomainPermanent:
          description: Subdomain permanent of the File Share.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the File Share.
          type: number
        networkVlanId:
          description: Id of the VLAN for the File Share.
          type: number
        endpoint:
          description: Endpoint of the File Share.
          type: string
        config:
          allOf:
          - $ref: '#/components/schemas/FileShareConfiguration'
          description: The current changes to be deployed for the File Share.
        meta:
          allOf:
          - $ref: '#/components/schemas/FileShareMeta'
          description: Meta information of the File Share.
      required:
      - config
      - createdTimestamp
      - id
      - infrastructureId
      - label
      - meta
      - revision
      - serviceStatus
      - sizeGB
      - updatedTimestamp
      type: object
    FileSharePaginatedList:
      example:
        data:
        - sizeGB: 0.8008281904610115
          dnsSubdomainId: 2.3021358869347655
          createdTimestamp: createdTimestamp
          label: label
          subdomainPermanent: subdomainPermanent
          updatedTimestamp: updatedTimestamp
          revision: 5.962133916683182
          endpoint: endpoint
          infrastructureId: 5.637376656633329
          serviceStatus: ordered
          meta: ""
          infrastructure: "{}"
          networkVlanId: 7.061401241503109
          subdomain: subdomain
          storagePoolId: 6.027456183070403
          id: 1.4658129805029452
          config: ""
        - sizeGB: 0.8008281904610115
          dnsSubdomainId: 2.3021358869347655
          createdTimestamp: createdTimestamp
          label: label
          subdomainPermanent: subdomainPermanent
          updatedTimestamp: updatedTimestamp
          revision: 5.962133916683182
          endpoint: endpoint
          infrastructureId: 5.637376656633329
          serviceStatus: ordered
          meta: ""
          infrastructure: "{}"
          networkVlanId: 7.061401241503109
          subdomain: subdomain
          storagePoolId: 6.027456183070403
          id: 1.4658129805029452
          config: ""
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/FileShareExtendedInfo'
          title: List of file share extended info's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    UpdateFileShare:
      example:
        sizeGB: 0.8008281904610115
        label: label
      properties:
        sizeGB:
          description: Disk size in GB for File Share
          type: number
        label:
          description: Label of the File Share.
          type: string
      type: object
    UpdateFileShareMeta:
      example:
        guiSettings:
          rowIndex: 6.027456183070403
          columnIndex: 1.4658129805029452
          userAgent: userAgent
          randomInstanceID: randomInstanceID
          showWidgetChildren: true
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
      type: object
    FileShareHosts:
      example:
        instanceGroup: "{}"
      properties:
        instanceGroup:
          description: File Share Hosts.
          type: object
      required:
      - instanceGroup
      type: object
    FileShareHostBulkOperation:
      example:
        instanceArrayId: 0.8008281904610115
        operationType: add
      properties:
        instanceArrayId:
          description: Id of the Instance Array Host that will be modified
          type: number
        operationType:
          description: Operation type for the Instance Array Host
          enum:
          - add
          - remove
          type: string
      required:
      - instanceArrayId
      - operationType
      type: object
    FileShareHostsModifyBulk:
      example:
        fileShareHostBulkOperations:
        - instanceArrayId: 0.8008281904610115
          operationType: add
        - instanceArrayId: 0.8008281904610115
          operationType: add
      properties:
        fileShareHostBulkOperations:
          description: List of operations to be performed on the File Share Hosts
          items:
            $ref: '#/components/schemas/FileShareHostBulkOperation'
          type: array
      required:
      - fileShareHostBulkOperations
      type: object
    BaselineLevelType:
      enum:
      - datacenter
      - serverType
      - osTemplate
      type: string
    FirmwareBaseline:
      example:
        level: datacenter
        catalog:
        - "1"
        - "2"
        - "3"
        createdTimestamp: 2025-01-07T12:00:00Z
        name: Data center baseline name
        description: "Baseline for all servers from Dell, Lenovo, HP in datacenter"
        levelFilter:
        - datacenter1
        - datacenter2
        links: "{}"
        id: 1
      properties:
        id:
          description: Unique identifier for the firmware baseline
          example: 1
          title: Baseline ID
          type: number
        name:
          example: Data center baseline name
          title: Baseline name
          type: string
        description:
          example: "Baseline for all servers from Dell, Lenovo, HP in datacenter"
          title: Baseline description
          type: string
        catalog:
          example:
          - "1"
          - "2"
          - "3"
          items:
            type: string
          title: Catalog IDs which are part of this baseline
          type: array
        level:
          allOf:
          - $ref: '#/components/schemas/BaselineLevelType'
          example: datacenter
          title: Baseline level type
        levelFilter:
          example:
          - datacenter1
          - datacenter2
          items:
            type: string
          title: "Filter applicable to baseline level, specified as an array of string\
            \ values"
          type: array
        createdTimestamp:
          description: Timestamp when the baseline was created
          example: 2025-01-07T12:00:00Z
          type: string
        links:
          description: Links to other resources
          type: object
      required:
      - createdTimestamp
      - id
      - level
      - levelFilter
      - links
      - name
      type: object
    FirmwareBaselinePaginatedList:
      example:
        data:
        - level: datacenter
          catalog:
          - "1"
          - "2"
          - "3"
          createdTimestamp: 2025-01-07T12:00:00Z
          name: Data center baseline name
          description: "Baseline for all servers from Dell, Lenovo, HP in datacenter"
          levelFilter:
          - datacenter1
          - datacenter2
          links: "{}"
          id: 1
        - level: datacenter
          catalog:
          - "1"
          - "2"
          - "3"
          createdTimestamp: 2025-01-07T12:00:00Z
          name: Data center baseline name
          description: "Baseline for all servers from Dell, Lenovo, HP in datacenter"
          levelFilter:
          - datacenter1
          - datacenter2
          links: "{}"
          id: 1
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/FirmwareBaseline'
          title: List of firmware baseline's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateFirmwareBaseline:
      example:
        level: datacenter
        catalog:
        - "1"
        - "2"
        - "3"
        name: Data center baseline name
        description: "Baseline for all servers from Dell, Lenovo, HP in datacenter"
        levelFilter:
        - datacenter1
        - datacenter2
      properties:
        name:
          example: Data center baseline name
          title: Baseline name
          type: string
        description:
          example: "Baseline for all servers from Dell, Lenovo, HP in datacenter"
          title: Baseline description
          type: string
        catalog:
          example:
          - "1"
          - "2"
          - "3"
          items:
            type: string
          title: Catalog IDs which are part of this baseline
          type: array
        level:
          allOf:
          - $ref: '#/components/schemas/BaselineLevelType'
          example: datacenter
          title: Baseline level type
        levelFilter:
          example:
          - datacenter1
          - datacenter2
          items:
            type: string
          title: "Filter applicable to baseline level, specified as an array of string\
            \ values"
          type: array
      required:
      - level
      - levelFilter
      - name
      type: object
    UpdateFirmwareBaseline:
      example:
        level: datacenter
        catalog:
        - "1"
        - "2"
        - "3"
        name: Data center baseline name
        description: "Baseline for all servers from Dell, Lenovo, HP in datacenter"
        levelFilter:
        - datacenter1
        - datacenter2
      properties:
        name:
          example: Data center baseline name
          title: Baseline name
          type: string
        description:
          example: "Baseline for all servers from Dell, Lenovo, HP in datacenter"
          title: Baseline description
          type: string
        catalog:
          example:
          - "1"
          - "2"
          - "3"
          items:
            type: string
          title: Catalog IDs which are part of this baseline
          type: array
        level:
          allOf:
          - $ref: '#/components/schemas/BaselineLevelType'
          example: datacenter
          title: Baseline level type
        levelFilter:
          example:
          - datacenter1
          - datacenter2
          items:
            type: string
          title: "Filter applicable to baseline level, specified as an array of string\
            \ values"
          type: array
      required:
      - level
      - levelFilter
      - name
      type: object
    FirmwareBinaryUpdateSeverity:
      enum:
      - critical
      - recommended
      - optional
      - unknown
      type: string
    VendorSupportedDevice:
      properties: {}
      type: object
    ServerFirmwareBinaryVendorSupportedSystems:
      properties: {}
      type: object
    FirmwareBinary:
      example:
        rebootRequired: true
        vendorSupportedDevices:
        - id: "123121"
          model: R240
        - id: "123122"
          model: R740
        packageId: ID_12
        externalId: R740-1.0.0
        packageVersion: 1.0.0
        catalogId: 46
        vendorSupportedSystems:
        - id: PowerEdge
        - id: ThinkSystem
        - id: ProLiant
        vendorInfoUrl: https://www.dell.com/support/home/en-us/drivers/driversdetails?driverid=xxxxx
        vendor:
          releaseDateTime: "1231"
        vendorDownloadUrl: https://downloads.dell.com/xxxxx
        name: Test
        links: "{}"
        id: 46
        updateSeverity: critical
        cacheDownloadUrl: https://downloads.dell.com/xxxxx
        vendorReleaseTimestamp: 2020-01-01
      properties:
        id:
          example: 46
          title: Firmware binary ID
          type: number
        catalogId:
          example: 46
          title: Catalog id
          type: number
        externalId:
          example: R740-1.0.0
          title: External id
          type: string
        vendorInfoUrl:
          example: https://www.dell.com/support/home/en-us/drivers/driversdetails?driverid=xxxxx
          title: Vendor info url
          type: string
        vendorDownloadUrl:
          example: https://downloads.dell.com/xxxxx
          title: Vendor download url
          type: string
        cacheDownloadUrl:
          example: https://downloads.dell.com/xxxxx
          title: Cache download url
          type: string
        name:
          example: Test
          title: Firmware binary name
          type: string
        packageId:
          example: ID_12
          title: Firmware binary package id
          type: string
        packageVersion:
          example: 1.0.0
          title: Firmware binary package version
          type: string
        rebootRequired:
          example: true
          title: Firmware binary reboot required
          type: boolean
        updateSeverity:
          allOf:
          - $ref: '#/components/schemas/FirmwareBinaryUpdateSeverity'
          example: critical
          title: Firmware binary update severity
        vendorSupportedDevices:
          example:
          - id: "123121"
            model: R240
          - id: "123122"
            model: R740
          items:
            $ref: '#/components/schemas/VendorSupportedDevice'
          title: Firmware binary vendor supported devices
          type: array
        vendorSupportedSystems:
          example:
          - id: PowerEdge
          - id: ThinkSystem
          - id: ProLiant
          items:
            $ref: '#/components/schemas/ServerFirmwareBinaryVendorSupportedSystems'
          title: Firmware binary vendor supported systems
          type: array
        vendorReleaseTimestamp:
          example: 2020-01-01
          title: Firmware binary vendor release date
          type: string
        vendor:
          example:
            releaseDateTime: "1231"
          title: Firmware binary vendor record
          type: object
        links:
          description: Links to other resources
          type: object
      required:
      - catalogId
      - id
      - links
      - name
      - rebootRequired
      - updateSeverity
      - vendor
      - vendorDownloadUrl
      - vendorSupportedDevices
      - vendorSupportedSystems
      type: object
    FirmwareBinaryPaginatedList:
      example:
        data:
        - rebootRequired: true
          vendorSupportedDevices:
          - id: "123121"
            model: R240
          - id: "123122"
            model: R740
          packageId: ID_12
          externalId: R740-1.0.0
          packageVersion: 1.0.0
          catalogId: 46
          vendorSupportedSystems:
          - id: PowerEdge
          - id: ThinkSystem
          - id: ProLiant
          vendorInfoUrl: https://www.dell.com/support/home/en-us/drivers/driversdetails?driverid=xxxxx
          vendor:
            releaseDateTime: "1231"
          vendorDownloadUrl: https://downloads.dell.com/xxxxx
          name: Test
          links: "{}"
          id: 46
          updateSeverity: critical
          cacheDownloadUrl: https://downloads.dell.com/xxxxx
          vendorReleaseTimestamp: 2020-01-01
        - rebootRequired: true
          vendorSupportedDevices:
          - id: "123121"
            model: R240
          - id: "123122"
            model: R740
          packageId: ID_12
          externalId: R740-1.0.0
          packageVersion: 1.0.0
          catalogId: 46
          vendorSupportedSystems:
          - id: PowerEdge
          - id: ThinkSystem
          - id: ProLiant
          vendorInfoUrl: https://www.dell.com/support/home/en-us/drivers/driversdetails?driverid=xxxxx
          vendor:
            releaseDateTime: "1231"
          vendorDownloadUrl: https://downloads.dell.com/xxxxx
          name: Test
          links: "{}"
          id: 46
          updateSeverity: critical
          cacheDownloadUrl: https://downloads.dell.com/xxxxx
          vendorReleaseTimestamp: 2020-01-01
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/FirmwareBinary'
          title: List of firmware binary's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateFirmwareBinary:
      example:
        rebootRequired: true
        vendorSupportedDevices:
        - id: "123121"
          model: R240
        - id: "123122"
          model: R740
        packageId: ID_12
        externalId: R740-1.0.0
        packageVersion: 1.0.0
        catalogId: 46
        vendorSupportedSystems:
        - id: PowerEdge
        - id: ThinkSystem
        - id: ProLiant
        vendorInfoUrl: https://www.dell.com/support/home/en-us/drivers/driversdetails?driverid=xxxxx
        vendor:
          releaseDateTime: "1231"
        vendorDownloadUrl: https://downloads.dell.com/xxxxx
        name: Test
        updateSeverity: critical
        cacheDownloadUrl: https://downloads.dell.com/xxxxx
        vendorReleaseTimestamp: 2020-01-01
      properties:
        catalogId:
          example: 46
          title: Catalog id
          type: number
        externalId:
          example: R740-1.0.0
          title: External id
          type: string
        vendorInfoUrl:
          example: https://www.dell.com/support/home/en-us/drivers/driversdetails?driverid=xxxxx
          title: Vendor info url
          type: string
        vendorDownloadUrl:
          example: https://downloads.dell.com/xxxxx
          title: Vendor download url
          type: string
        cacheDownloadUrl:
          example: https://downloads.dell.com/xxxxx
          title: Cache download url
          type: string
        name:
          example: Test
          title: Firmware binary name
          type: string
        packageId:
          example: ID_12
          title: Firmware binary package id
          type: string
        packageVersion:
          example: 1.0.0
          title: Firmware binary package version
          type: string
        rebootRequired:
          example: true
          title: Firmware binary reboot required
          type: boolean
        updateSeverity:
          allOf:
          - $ref: '#/components/schemas/FirmwareBinaryUpdateSeverity'
          example: critical
          title: Firmware binary update severity
        vendorSupportedDevices:
          example:
          - id: "123121"
            model: R240
          - id: "123122"
            model: R740
          items:
            $ref: '#/components/schemas/VendorSupportedDevice'
          title: Firmware binary vendor supported devices
          type: array
        vendorSupportedSystems:
          example:
          - id: PowerEdge
          - id: ThinkSystem
          - id: ProLiant
          items:
            $ref: '#/components/schemas/ServerFirmwareBinaryVendorSupportedSystems'
          title: Firmware binary vendor supported systems
          type: array
        vendorReleaseTimestamp:
          example: 2020-01-01
          title: Firmware binary vendor release date
          type: string
        vendor:
          example:
            releaseDateTime: "1231"
          title: Firmware binary vendor
          type: object
      required:
      - catalogId
      - name
      - rebootRequired
      - updateSeverity
      - vendorDownloadUrl
      - vendorSupportedDevices
      - vendorSupportedSystems
      type: object
    UpdateFirmwareBinary:
      example:
        rebootRequired: true
        vendorSupportedDevices:
        - id: "123121"
          model: R240
        - id: "123122"
          model: R740
        packageId: ID_12
        externalId: R740-1.0.0
        packageVersion: 1.0.0
        catalogId: 46
        vendorSupportedSystems:
        - id: PowerEdge
        - id: ThinkSystem
        - id: ProLiant
        vendorInfoUrl: https://www.dell.com/support/home/en-us/drivers/driversdetails?driverid=xxxxx
        vendor:
          releaseDateTime: "1231"
        vendorDownloadUrl: https://downloads.dell.com/xxxxx
        name: Test
        updateSeverity: critical
        cacheDownloadUrl: https://downloads.dell.com/xxxxx
        vendorReleaseTimestamp: 2020-01-01
      properties:
        catalogId:
          example: 46
          title: Catalog id
          type: number
        externalId:
          example: R740-1.0.0
          title: External id
          type: string
        vendorInfoUrl:
          example: https://www.dell.com/support/home/en-us/drivers/driversdetails?driverid=xxxxx
          title: Vendor info url
          type: string
        vendorDownloadUrl:
          example: https://downloads.dell.com/xxxxx
          title: Vendor download url
          type: string
        cacheDownloadUrl:
          example: https://downloads.dell.com/xxxxx
          title: Cache download url
          type: string
        name:
          example: Test
          title: Firmware binary name
          type: string
        packageId:
          example: ID_12
          title: Firmware binary package id
          type: string
        packageVersion:
          example: 1.0.0
          title: Firmware binary package version
          type: string
        rebootRequired:
          example: true
          title: Firmware binary reboot required
          type: boolean
        updateSeverity:
          allOf:
          - $ref: '#/components/schemas/FirmwareBinaryUpdateSeverity'
          example: critical
          title: Firmware binary update severity
        vendorSupportedDevices:
          example:
          - id: "123121"
            model: R240
          - id: "123122"
            model: R740
          items:
            $ref: '#/components/schemas/VendorSupportedDevice'
          title: Firmware binary vendor supported devices
          type: array
        vendorSupportedSystems:
          example:
          - id: PowerEdge
          - id: ThinkSystem
          - id: ProLiant
          items:
            $ref: '#/components/schemas/ServerFirmwareBinaryVendorSupportedSystems'
          title: Firmware binary vendor supported systems
          type: array
        vendorReleaseTimestamp:
          example: 2020-01-01
          title: Firmware binary vendor release date
          type: string
        vendor:
          example:
            releaseDateTime: "1231"
          title: Firmware binary vendor
          type: object
      required:
      - catalogId
      - name
      - rebootRequired
      - updateSeverity
      - vendorDownloadUrl
      - vendorSupportedDevices
      - vendorSupportedSystems
      type: object
    FirmwareCatalog:
      example:
        vendorUrl: https://vendor.example.com/catalog
        vendorConfiguration: "{}"
        createdTimestamp: 2025-01-07T12:00:00Z
        description: Description for Firmware Catalog A
        vendorId: VENDOR123
        metalsoftServerTypesSupported:
        - metalsoftServerTypesSupported
        - metalsoftServerTypesSupported
        vendor: hp
        name: Firmware Catalog A
        links: "{}"
        id: 1
        vendorServerTypesSupported:
        - vendorServerTypesSupported
        - vendorServerTypesSupported
        vendorReleaseTimestamp: 2025-01-07T12:00:00Z
        updateType: online
      properties:
        id:
          description: Unique identifier for the firmware catalog
          example: 1
          title: Catalog ID
          type: number
        name:
          description: "Name of the catalog, must be unique"
          example: Firmware Catalog A
          type: string
        description:
          description: User description of the catalog
          example: Description for Firmware Catalog A
          type: string
        vendor:
          description: "Firmware catalog vendor: dell, hp, lenovo"
          enum:
          - hp
          - dell
          - lenovo
          type: string
        vendorId:
          description: Vendor identifier for the catalog
          example: VENDOR123
          type: string
        vendorUrl:
          description: Vendor URL for the firmware catalog
          example: https://vendor.example.com/catalog
          type: string
        vendorReleaseTimestamp:
          description: Vendor release timestamp for the catalog
          example: 2025-01-07T12:00:00Z
          type: string
        updateType:
          default: online
          description: "Catalog update type: online or offline"
          enum:
          - online
          - offline
          type: string
        metalsoftServerTypesSupported:
          description: List of supported Metalsoft server types for which firmware
            binaries are available
          items:
            type: string
          type: array
        vendorServerTypesSupported:
          description: List of supported server types for which firmware binaries
            are available
          items:
            type: string
          type: array
        vendorConfiguration:
          description: Vendor configuration
          type: object
        createdTimestamp:
          description: Timestamp when the catalog was created
          example: 2025-01-07T12:00:00Z
          type: string
        links:
          description: Links to other resources
          type: object
      required:
      - createdTimestamp
      - id
      - links
      - name
      - updateType
      - vendor
      type: object
    FirmwareCatalogPaginatedList:
      example:
        data:
        - vendorUrl: https://vendor.example.com/catalog
          vendorConfiguration: "{}"
          createdTimestamp: 2025-01-07T12:00:00Z
          description: Description for Firmware Catalog A
          vendorId: VENDOR123
          metalsoftServerTypesSupported:
          - metalsoftServerTypesSupported
          - metalsoftServerTypesSupported
          vendor: hp
          name: Firmware Catalog A
          links: "{}"
          id: 1
          vendorServerTypesSupported:
          - vendorServerTypesSupported
          - vendorServerTypesSupported
          vendorReleaseTimestamp: 2025-01-07T12:00:00Z
          updateType: online
        - vendorUrl: https://vendor.example.com/catalog
          vendorConfiguration: "{}"
          createdTimestamp: 2025-01-07T12:00:00Z
          description: Description for Firmware Catalog A
          vendorId: VENDOR123
          metalsoftServerTypesSupported:
          - metalsoftServerTypesSupported
          - metalsoftServerTypesSupported
          vendor: hp
          name: Firmware Catalog A
          links: "{}"
          id: 1
          vendorServerTypesSupported:
          - vendorServerTypesSupported
          - vendorServerTypesSupported
          vendorReleaseTimestamp: 2025-01-07T12:00:00Z
          updateType: online
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/FirmwareCatalog'
          title: List of firmware catalog's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    FirmwareVendorType:
      enum:
      - dell
      - lenovo
      - hp
      type: string
    CatalogUpdateType:
      enum:
      - online
      - offline
      type: string
    CreateFirmwareCatalog:
      example:
        vendorUrl: https://downloads.dell.com/catalog/Catalog.xml.gz
        metalsoftServerTypesSupported:
        - M.8.6.1
        - M.32.32.1
        - M.32.32.2
        vendor: dell
        vendorConfiguration:
          version: 17.11.07
          dateTime: 2017-11-07T05:39:00+05:30
          releaseID: FC7HC
          identifier: 3efb2c3f-9887-4726-b689-5a1c3f9c4de1
          hashMD5: 2c3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5
          size: "1234567890"
        name: Dell PowerEdge R740
        description: Firmware catalog for Dell PowerEdge R740
        vendorId: Dell X1234
        vendorServerTypesSupported:
        - PowerEdge R240
        - PowerEdge R250
        - PowerEdge R430
        - PowerEdge R730
        updateType: online
        vendorReleaseTimestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          example: Dell PowerEdge R740
          title: Catalog name
          type: string
        description:
          example: Firmware catalog for Dell PowerEdge R740
          title: Catalog description
          type: string
        vendor:
          allOf:
          - $ref: '#/components/schemas/FirmwareVendorType'
          example: dell
          title: Firmware catalog vendor
        updateType:
          allOf:
          - $ref: '#/components/schemas/CatalogUpdateType'
          example: online
          title: Firmware catalog update type
        vendorId:
          example: Dell X1234
          title: Vendor identifier for the catalog
          type: string
        vendorUrl:
          example: https://downloads.dell.com/catalog/Catalog.xml.gz
          title: Vendor URL for the firmware catalog
          type: string
        vendorReleaseTimestamp:
          format: date-time
          title: Vendor release timestamp for the catalog
          type: string
        metalsoftServerTypesSupported:
          example:
          - M.8.6.1
          - M.32.32.1
          - M.32.32.2
          items:
            type: string
          title: Array with server types supported by Metalsoft
          type: array
        vendorServerTypesSupported:
          description: Array of the server types supported by the vendor for this
            catalog
          example:
          - PowerEdge R240
          - PowerEdge R250
          - PowerEdge R430
          - PowerEdge R730
          items:
            type: string
          title: Serialized  with server types supported by the vendor
          type: array
        vendorConfiguration:
          description: Record of the vendor configuration for this catalog
          example:
            version: 17.11.07
            dateTime: 2017-11-07T05:39:00+05:30
            releaseID: FC7HC
            identifier: 3efb2c3f-9887-4726-b689-5a1c3f9c4de1
            hashMD5: 2c3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5
            size: "1234567890"
          title: Serialized  with vendor configuration
          type: object
      required:
      - name
      - updateType
      - vendor
      type: object
    UpdateFirmwareCatalog:
      example:
        vendorUrl: https://downloads.dell.com/catalog/Catalog.xml.gz
        metalsoftServerTypesSupported:
        - M.8.6.1
        - M.32.32.1
        - M.32.32.2
        vendor: dell
        vendorConfiguration:
          version: 17.11.07
          dateTime: 2017-11-07T05:39:00+05:30
          releaseID: FC7HC
          identifier: 3efb2c3f-9887-4726-b689-5a1c3f9c4de1
          hashMD5: 2c3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5
          size: "1234567890"
        name: Dell PowerEdge R740
        description: Firmware catalog for Dell PowerEdge R740
        vendorId: Dell X1234
        vendorServerTypesSupported:
        - PowerEdge R240
        - PowerEdge R250
        - PowerEdge R430
        - PowerEdge R730
        updateType: online
        vendorReleaseTimestamp: 2000-01-23T04:56:07.000+00:00
      properties:
        name:
          example: Dell PowerEdge R740
          title: Catalog name
          type: string
        description:
          example: Firmware catalog for Dell PowerEdge R740
          title: Catalog description
          type: string
        vendor:
          allOf:
          - $ref: '#/components/schemas/FirmwareVendorType'
          example: dell
          title: Firmware catalog vendor
        updateType:
          allOf:
          - $ref: '#/components/schemas/CatalogUpdateType'
          example: online
          title: Firmware catalog update type
        vendorId:
          example: Dell X1234
          title: Vendor identifier for the catalog
          type: string
        vendorUrl:
          example: https://downloads.dell.com/catalog/Catalog.xml.gz
          title: Vendor URL for the firmware catalog
          type: string
        vendorReleaseTimestamp:
          format: date-time
          title: Vendor release timestamp for the catalog
          type: string
        metalsoftServerTypesSupported:
          example:
          - M.8.6.1
          - M.32.32.1
          - M.32.32.2
          items:
            type: string
          title: Array with server types supported by Metalsoft
          type: array
        vendorServerTypesSupported:
          description: Array of the server types supported by the vendor for this
            catalog
          example:
          - PowerEdge R240
          - PowerEdge R250
          - PowerEdge R430
          - PowerEdge R730
          items:
            type: string
          title: Serialized  with server types supported by the vendor
          type: array
        vendorConfiguration:
          description: Record of the vendor configuration for this catalog
          example:
            version: 17.11.07
            dateTime: 2017-11-07T05:39:00+05:30
            releaseID: FC7HC
            identifier: 3efb2c3f-9887-4726-b689-5a1c3f9c4de1
            hashMD5: 2c3e4f5a6b7c8d9e0f1a2b3c4d5e6f7a8b9c0d1e2f3a4b5c6d7e8f9a0b1c2d3e4f5
            size: "1234567890"
          title: Serialized  with vendor configuration
          type: object
      required:
      - name
      - updateType
      - vendor
      type: object
    GlobalFirmwareUpgradeConfiguration:
      example:
        upgradeStartTime: 2024-01-01T00:00:00Z
        activated: true
        upgradeEndTime: 2024-01-01T02:30:00Z
      properties:
        activated:
          description: Indicates whether the firmware upgrade policies are activated
            globally.
          example: true
          type: boolean
        upgradeStartTime:
          description: The timestamp when the firmware upgrade policies are allowed
            to be executed. Only the hours and minutes are considered.
          example: 2024-01-01T00:00:00Z
          type: string
        upgradeEndTime:
          description: The timestamp when the firmware upgrade policies are no longer
            allowed to be executed. Only the hours and minutes are considered.
          example: 2024-01-01T02:30:00Z
          type: string
      type: object
    UpdateGlobalFirmwareUpgradeConfiguration:
      example:
        upgradeStartTime: 2024-01-01T00:00:00Z
        activated: true
        upgradeEndTime: 2024-01-01T02:30:00Z
      properties:
        activated:
          description: Indicates whether the firmware upgrade policies are activated
            globally.
          example: true
          type: boolean
        upgradeStartTime:
          description: The timestamp when the firmware upgrade policies are allowed
            to be executed. Only the hours and minutes are considered.
          example: 2024-01-01T00:00:00Z
          type: string
        upgradeEndTime:
          description: The timestamp when the firmware upgrade policies are no longer
            allowed to be executed. Only the hours and minutes are considered.
          example: 2024-01-01T02:30:00Z
          type: string
      type: object
    ServerFirmwareUpgradePolicyRule:
      properties:
        property:
          description: The property to be checked for the firmware upgrade policy.
          enum:
          - server_component_name
          - server_component_type
          - server_component_firmware_version
          - site_id
          - server_vendor
          - server_id
          - server_type_id
          - server_tags_json
          - server_component_target_version
          example: server_component_name
          type: string
        operation:
          description: The operation to be performed on the firmware upgrade policy.
          enum:
          - string_contains
          - string_equals
          example: string_equals
          type: string
        value:
          description: The value to be compared for the firmware upgrade policy.
          example: 1.0.0
          type: string
      required:
      - operation
      - property
      - value
      type: object
    ServerFirmwareUpgradePolicy:
      example:
        instanceArrayIds:
        - 1
        createdTimestamp: createdTimestamp
        userIdOwner: 1
        action: accept
        rules:
        - property: server_component_name
          operation: string_equals
          value: 1.0.0
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 1
        label: Firmware upgrade policy 1
        updatedTimestamp: updatedTimestamp
        status: active
      properties:
        id:
          description: The unique identifier of the firmware upgrade policy.
          example: 1
          type: number
        label:
          description: The label of the firmware upgrade policy.
          example: Firmware upgrade policy 1
          type: string
        userIdOwner:
          description: The unique identifier of the user who owns the firmware upgrade
            policy.
          example: 1
          type: number
        createdTimestamp:
          description: Timestamp of the Server Firmware Upgrade Policy creation.
          type: string
        updatedTimestamp:
          description: Timestamp of the Server Firmware Upgrade Policy last update.
          type: string
        status:
          description: The status of the firmware upgrade policy.
          enum:
          - active
          - stopped
          example: active
          type: string
        action:
          description: The action of the firmware upgrade policy.
          enum:
          - accept
          - deny
          - accept_with_confirmation
          example: accept
          type: string
        rules:
          description: The rules of the firmware upgrade policy.
          example:
          - property: server_component_name
            operation: string_equals
            value: 1.0.0
          items:
            $ref: '#/components/schemas/ServerFirmwareUpgradePolicyRule'
          type: array
        instanceArrayIds:
          description: The unique identifiers of the instance arrays associated with
            the firmware upgrade policy.
          example:
          - 1
          items:
            type: number
          type: array
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - action
      - createdTimestamp
      - id
      - label
      - status
      - updatedTimestamp
      type: object
    ServerFirmwareUpgradePolicyPaginatedList:
      example:
        data:
        - instanceArrayIds:
          - 1
          createdTimestamp: createdTimestamp
          userIdOwner: 1
          action: accept
          rules:
          - property: server_component_name
            operation: string_equals
            value: 1.0.0
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          label: Firmware upgrade policy 1
          updatedTimestamp: updatedTimestamp
          status: active
        - instanceArrayIds:
          - 1
          createdTimestamp: createdTimestamp
          userIdOwner: 1
          action: accept
          rules:
          - property: server_component_name
            operation: string_equals
            value: 1.0.0
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          label: Firmware upgrade policy 1
          updatedTimestamp: updatedTimestamp
          status: active
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServerFirmwareUpgradePolicy'
          title: List of server firmware upgrade policy's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateServerFirmwareUpgradePolicy:
      example:
        instanceArrayIds:
        - 1
        userIdOwner: 1
        action: accept
        rules:
        - property: server_component_name
          operation: string_equals
          value: 1.0.0
        label: Firmware upgrade policy 1
      properties:
        label:
          description: The label of the firmware upgrade policy.
          example: Firmware upgrade policy 1
          type: string
        userIdOwner:
          description: The unique identifier of the user who owns the firmware upgrade
            policy.
          example: 1
          type: number
        action:
          description: The action of the firmware upgrade policy.
          enum:
          - accept
          - deny
          - accept_with_confirmation
          example: accept
          type: string
        rules:
          description: The rules of the firmware upgrade policy.
          example:
          - property: server_component_name
            operation: string_equals
            value: 1.0.0
          items:
            $ref: '#/components/schemas/ServerFirmwareUpgradePolicyRule'
          type: array
        instanceArrayIds:
          description: The unique identifiers of the instance arrays associated with
            the firmware upgrade policy.
          example:
          - 1
          items:
            type: number
          type: array
      required:
      - action
      - label
      type: object
    UpdateServerFirmwareUpgradePolicy:
      example:
        instanceArrayIds:
        - 1
        action: accept
        rules:
        - property: server_component_name
          operation: string_equals
          value: 1.0.0
        label: Firmware upgrade policy 1
        status: active
      properties:
        rules:
          description: The rules of the firmware upgrade policy.
          example:
          - property: server_component_name
            operation: string_equals
            value: 1.0.0
          items:
            $ref: '#/components/schemas/ServerFirmwareUpgradePolicyRule'
          type: array
        instanceArrayIds:
          description: The unique identifiers of the instance arrays associated with
            the firmware upgrade policy.
          example:
          - 1
          items:
            type: number
          type: array
        label:
          description: The label of the firmware upgrade policy.
          example: Firmware upgrade policy 1
          type: string
        status:
          description: The status of the firmware upgrade policy.
          enum:
          - active
          - stopped
          example: active
          type: string
        action:
          description: The action of the firmware upgrade policy.
          enum:
          - accept
          - deny
          - accept_with_confirmation
          example: accept
          type: string
      type: object
    ServerFirmwareUpgradePolicyAudit:
      example:
        audit: "{}"
      properties:
        audit:
          description: An object having as key the server component id and as value
            the target firmware version or null if not set
          type: object
      required:
      - audit
      type: object
    ServerFirmwareUpgradePolicyApplyResult:
      example:
        scheduled:
        - 0.8008281904610115
        - 0.8008281904610115
        failedToSchedule:
        - 6.027456183070403
        - 6.027456183070403
      properties:
        scheduled:
          description: The list of server component ids that have been successfully
            scheduled for firmware upgrade.
          items:
            type: number
          type: array
        failedToSchedule:
          description: The list of server component ids that have failed to be scheduled
            for firmware upgrade.
          items:
            type: number
          type: array
      required:
      - failedToSchedule
      - scheduled
      type: object
    BaselineFilter:
      properties:
        datacenter:
          example:
          - omega-dc
          items:
            type: string
          title: "Datacenter filter, array of datacenter names"
          type: array
        serverType:
          example:
          - M.02.12
          items:
            type: string
          title: "Server type filter, array of server types as specified in Metalsoft"
          type: array
        osTemplate:
          example:
          - CentOS 8.2
          items:
            type: string
          title: "OS template filter, array of OS template names as specified in Metalsoft"
          type: array
        baselineId:
          example:
          - "1"
          - "2"
          items:
            type: string
          title: "Filter by baselineId, more than one baseline can be specified"
          type: array
      type: object
    SearchFirmwareBinary:
      example:
        vendor: dell
        serverComponentFilter:
        - id: 1
          componentId: "1544834"
        - id: 2
          componentId: "2453411"
        baselineFilter:
          datacenter:
          - omega-dc
      properties:
        vendor:
          allOf:
          - $ref: '#/components/schemas/FirmwareVendorType'
          example: dell
          title: Firmware vendor
        baselineFilter:
          allOf:
          - $ref: '#/components/schemas/BaselineFilter'
          example:
            datacenter:
            - omega-dc
          title: Baseline filter
        serverComponentFilter:
          description: "Array of vendor component filters, structure is specific per\
            \ vendor"
          example:
          - id: 1
            componentId: "1544834"
          - id: 2
            componentId: "2453411"
          items:
            type: string
          title: Server component filter
          type: array
      required:
      - baselineFilter
      - vendor
      type: object
    InfrastructureConfig:
      properties:
        revision:
          description: Revision of the Infrastructure
          type: number
        label:
          type: string
        deployType:
          default: create
          description: Deploy type of the Infrastructure
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          default: not_started
          description: Deploy status of the Infrastructure
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        serverTypeIdToPreferredServerIds:
          description: An object having as key the server type id and as value an
            array of preferred server ids
          type: object
        infrastructureDeployId:
          description: Id of the deployment for the Infrastructure
          type: number
        dnsSubdomainChangeId:
          description: DNS Subdomain Change ID
          type: number
        datacenterName:
          description: Datacenter name where the Infrastructure is located.
          type: string
        siteId:
          description: The ID of the site where the Infrastructure is located.
          type: number
        customVariables:
          description: Custom variables in JSON format.
          type: object
        userIdOwner:
          description: User ID of the owner of the Infrastructure.
          type: number
        subdomain:
          description: Subdomain associated with the Infrastructure.
          type: string
        instancesCountActive:
          description: Number of active instances.
          type: number
        drivesCountActive:
          description: Number of active drives.
          type: number
        ipv4SubnetsCountActive:
          description: Number of active IPv4 subnets.
          type: number
        ipv6SubnetsCountActive:
          description: Number of active IPv6 subnets.
          type: number
        ipv4UnusedIpAddresses:
          description: Number of unused IPv4 addresses.
          type: number
        description:
          description: Description of the infrastructure.
          type: string
        settings:
          description: Settings in JSON format.
          type: object
        isApiPrivate:
          description: Whether the infrastructure API is private.
          type: number
        experimentalPriority:
          description: Experimental priority.
          enum:
          - disallow
          - avoid
          - equal
          - prefer
          type: string
        isPublicDesignsMember:
          description: Whether the infrastructure is a member of public designs.
          type: number
        certificatesJson:
          description: Certificates in JSON format.
          type: string
        deployCookieJarJson:
          description: Deploy cookie jar JSON.
          type: object
        deferredDeployAttemptLastErrorJson:
          description: Last error of deferred deploy attempt.
          type: object
        isAutomanaged:
          description: Whether the infrastructure is automanaged.
          type: number
        emptyEdit:
          description: Number of empty edits
          type: number
        reservedLanIpRanges:
          description: Reserved LAN IP ranges in JSON format.
          type: object
        subnetPoolLan:
          description: Subnet pool for LAN in JSON format.
          type: object
        updatedTimestamp:
          description: Timestamp of the latest update for the Infrastructure.
          type: string
        dnsSubdomainId:
          description: DNS Subdomain ID.
          type: number
      type: object
    InfrastructureMeta:
      example:
        guiSettings:
          rowIndex: 6.027456183070403
          columnIndex: 1.4658129805029452
          userAgent: userAgent
          randomInstanceID: randomInstanceID
          showWidgetChildren: true
        tags:
        - tags
        - tags
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
        tags:
          description: Tags for the Infrastructure.
          items:
            type: string
          type: array
      type: object
    JobGroupStatisticsWithoutId:
      example:
        jobsCompleted: 1
        jobsTotal: 1
        groupCompletedTimestamp: 2022-01-01T00:00:00Z
        jobsThrownError: 1
        groupCreatedTimestamp: 2022-01-01T00:00:00Z
      properties:
        groupCreatedTimestamp:
          description: Group created timestamp
          example: 2022-01-01T00:00:00Z
          type: string
        groupCompletedTimestamp:
          description: Group completed timestamp
          example: 2022-01-01T00:00:00Z
          type: string
        jobsThrownError:
          description: Total count of jobs with errors
          example: 1
          minimum: 0
          type: integer
        jobsCompleted:
          description: Total count of completed jobs
          example: 1
          minimum: 0
          type: integer
        jobsTotal:
          description: Total count of jobs
          example: 1
          minimum: 0
          type: integer
      required:
      - groupCompletedTimestamp
      - groupCreatedTimestamp
      - jobsCompleted
      - jobsThrownError
      - jobsTotal
      type: object
    Infrastructure:
      example:
        experimentalPriority: disallow
        datacenterName: datacenterName
        description: description
        ipv6SubnetsCountActive: 5.637376656633329
        updatedTimestamp: updatedTimestamp
        customVariables: "{}"
        ipv4UnusedIpAddresses: 2.3021358869347655
        dnsSubdomainPermanentId: 1.2315135367772556
        serviceStatus: ordered
        isApiPrivate: 7.061401241503109
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 1
        isAutomanaged: 3.616076749251911
        instancesCountActive: 6.027456183070403
        settings: "{}"
        certificatesJson: certificatesJson
        dnsSubdomainId: 7.386281948385884
        drivesCountActive: 1.4658129805029452
        createdTimestamp: createdTimestamp
        userIdOwner: 0.8008281904610115
        label: label
        subdomainPermanent: subdomainPermanent
        revision: 2.027123023002322
        isPublicDesignsMember: 9.301444243932576
        ipv4SubnetsCountActive: 5.962133916683182
        designIsLocked: 1.0246457001441578
        meta: ""
        deployCookieJarJson: "{}"
        deferredDeployAttemptLastErrorJson: "{}"
        subdomain: subdomain
        siteId: 4.145608029883936
        config: ""
        statistics:
          jobsCompleted: 1
          jobsTotal: 1
          groupCompletedTimestamp: 2022-01-01T00:00:00Z
          jobsThrownError: 1
          groupCreatedTimestamp: 2022-01-01T00:00:00Z
      properties:
        label:
          type: string
        customVariables:
          description: Custom variables in JSON format.
          type: object
        userIdOwner:
          description: User ID of the owner of the Infrastructure.
          type: number
        subdomain:
          description: Subdomain associated with the Infrastructure.
          type: string
        instancesCountActive:
          description: Number of active instances.
          type: number
        drivesCountActive:
          description: Number of active drives.
          type: number
        ipv4SubnetsCountActive:
          description: Number of active IPv4 subnets.
          type: number
        ipv6SubnetsCountActive:
          description: Number of active IPv6 subnets.
          type: number
        ipv4UnusedIpAddresses:
          description: Number of unused IPv4 addresses.
          type: number
        description:
          description: Description of the infrastructure.
          type: string
        settings:
          description: Settings in JSON format.
          type: object
        isApiPrivate:
          description: Whether the infrastructure API is private.
          type: number
        experimentalPriority:
          description: Experimental priority.
          enum:
          - disallow
          - avoid
          - equal
          - prefer
          type: string
        isPublicDesignsMember:
          description: Whether the infrastructure is a member of public designs.
          type: number
        certificatesJson:
          description: Certificates in JSON format.
          type: string
        deployCookieJarJson:
          description: Deploy cookie jar JSON.
          type: object
        deferredDeployAttemptLastErrorJson:
          description: Last error of deferred deploy attempt.
          type: object
        isAutomanaged:
          description: Whether the infrastructure is automanaged.
          type: number
        updatedTimestamp:
          description: Timestamp of the latest update for the Infrastructure.
          type: string
        id:
          description: Infrastructure Id
          example: 1
          type: number
        revision:
          description: Revision of the Infrastructure
          type: number
        serviceStatus:
          description: Service status of the Infrastructure
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          type: string
        datacenterName:
          description: Datacenter name where the Infrastructure is located.
          type: string
        siteId:
          description: The ID of the site where the Infrastructure is located.
          type: number
        createdTimestamp:
          description: Timestamp of the Infrastructure creation.
          type: string
        subdomainPermanent:
          description: Permanent subdomain associated with the Infrastructure.
          type: string
        dnsSubdomainId:
          description: DNS Subdomain ID.
          type: number
        dnsSubdomainPermanentId:
          description: Permanent DNS Subdomain ID.
          type: number
        designIsLocked:
          description: Infrastructure design locked flag.
          type: number
        config:
          allOf:
          - $ref: '#/components/schemas/InfrastructureConfig'
          description: The current changes to be deployed for the Infrastructure.
        meta:
          allOf:
          - $ref: '#/components/schemas/InfrastructureMeta'
          description: Meta information for the Infrastructure
        statistics:
          $ref: '#/components/schemas/JobGroupStatisticsWithoutId'
        links:
          description: Links to other resources
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - config
      - createdTimestamp
      - datacenterName
      - designIsLocked
      - id
      - label
      - revision
      - serviceStatus
      - siteId
      - updatedTimestamp
      type: object
    InfrastructurePaginatedList:
      example:
        data:
        - experimentalPriority: disallow
          datacenterName: datacenterName
          description: description
          ipv6SubnetsCountActive: 5.637376656633329
          updatedTimestamp: updatedTimestamp
          customVariables: "{}"
          ipv4UnusedIpAddresses: 2.3021358869347655
          dnsSubdomainPermanentId: 1.2315135367772556
          serviceStatus: ordered
          isApiPrivate: 7.061401241503109
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          isAutomanaged: 3.616076749251911
          instancesCountActive: 6.027456183070403
          settings: "{}"
          certificatesJson: certificatesJson
          dnsSubdomainId: 7.386281948385884
          drivesCountActive: 1.4658129805029452
          createdTimestamp: createdTimestamp
          userIdOwner: 0.8008281904610115
          label: label
          subdomainPermanent: subdomainPermanent
          revision: 2.027123023002322
          isPublicDesignsMember: 9.301444243932576
          ipv4SubnetsCountActive: 5.962133916683182
          designIsLocked: 1.0246457001441578
          meta: ""
          deployCookieJarJson: "{}"
          deferredDeployAttemptLastErrorJson: "{}"
          subdomain: subdomain
          siteId: 4.145608029883936
          config: ""
          statistics:
            jobsCompleted: 1
            jobsTotal: 1
            groupCompletedTimestamp: 2022-01-01T00:00:00Z
            jobsThrownError: 1
            groupCreatedTimestamp: 2022-01-01T00:00:00Z
        - experimentalPriority: disallow
          datacenterName: datacenterName
          description: description
          ipv6SubnetsCountActive: 5.637376656633329
          updatedTimestamp: updatedTimestamp
          customVariables: "{}"
          ipv4UnusedIpAddresses: 2.3021358869347655
          dnsSubdomainPermanentId: 1.2315135367772556
          serviceStatus: ordered
          isApiPrivate: 7.061401241503109
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          isAutomanaged: 3.616076749251911
          instancesCountActive: 6.027456183070403
          settings: "{}"
          certificatesJson: certificatesJson
          dnsSubdomainId: 7.386281948385884
          drivesCountActive: 1.4658129805029452
          createdTimestamp: createdTimestamp
          userIdOwner: 0.8008281904610115
          label: label
          subdomainPermanent: subdomainPermanent
          revision: 2.027123023002322
          isPublicDesignsMember: 9.301444243932576
          ipv4SubnetsCountActive: 5.962133916683182
          designIsLocked: 1.0246457001441578
          meta: ""
          deployCookieJarJson: "{}"
          deferredDeployAttemptLastErrorJson: "{}"
          subdomain: subdomain
          siteId: 4.145608029883936
          config: ""
          statistics:
            jobsCompleted: 1
            jobsTotal: 1
            groupCompletedTimestamp: 2022-01-01T00:00:00Z
            jobsThrownError: 1
            groupCreatedTimestamp: 2022-01-01T00:00:00Z
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/Infrastructure'
          title: List of infrastructure's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    InfrastructureCreate:
      example:
        meta:
          guiSettings:
            rowIndex: 6.027456183070403
            columnIndex: 1.4658129805029452
            userAgent: userAgent
            randomInstanceID: randomInstanceID
            showWidgetChildren: true
          tags:
          - tags
          - tags
        userIdOwner: 6.027456183070403
        siteId: 0.8008281904610115
        description: description
        label: label
        customVariables: "{}"
      properties:
        label:
          type: string
        siteId:
          description: The ID of the site where the Infrastructure is located.
          type: number
        customVariables:
          description: Custom variables in JSON format.
          type: object
        userIdOwner:
          description: User ID of the owner of the Infrastructure.
          type: number
        description:
          description: Description of the infrastructure.
          type: string
        meta:
          $ref: '#/components/schemas/InfrastructureMeta'
      required:
      - label
      - siteId
      type: object
    UpdateInfrastructure:
      example:
        label: label
        customVariables: "{}"
      properties:
        label:
          type: string
        customVariables:
          description: Custom variables in JSON format.
          type: object
      type: object
    InfrastructureConfiguration:
      example:
        experimentalPriority: disallow
        datacenterName: datacenterName
        serverTypeIdToPreferredServerIds: "{}"
        description: description
        ipv6SubnetsCountActive: 3.616076749251911
        updatedTimestamp: updatedTimestamp
        deployType: create
        customVariables: "{}"
        ipv4UnusedIpAddresses: 2.027123023002322
        dnsSubdomainChangeId: 1.4658129805029452
        isApiPrivate: 4.145608029883936
        infrastructureDeployId: 6.027456183070403
        reservedLanIpRanges: "{}"
        subnetPoolLan: "{}"
        isAutomanaged: 1.2315135367772556
        instancesCountActive: 2.3021358869347655
        settings: "{}"
        certificatesJson: certificatesJson
        dnsSubdomainId: 1.4894159098541704
        emptyEdit: 1.0246457001441578
        drivesCountActive: 7.061401241503109
        userIdOwner: 5.637376656633329
        label: label
        revision: 0.8008281904610115
        isPublicDesignsMember: 7.386281948385884
        ipv4SubnetsCountActive: 9.301444243932576
        deployCookieJarJson: "{}"
        deferredDeployAttemptLastErrorJson: "{}"
        siteId: 5.962133916683182
        subdomain: subdomain
        deployStatus: not_started
      properties:
        revision:
          description: Revision of the Infrastructure
          type: number
        label:
          type: string
        deployType:
          default: create
          description: Deploy type of the Infrastructure
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          default: not_started
          description: Deploy status of the Infrastructure
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        serverTypeIdToPreferredServerIds:
          description: An object having as key the server type id and as value an
            array of preferred server ids
          type: object
        infrastructureDeployId:
          description: Id of the deployment for the Infrastructure
          type: number
        dnsSubdomainChangeId:
          description: DNS Subdomain Change ID
          type: number
        datacenterName:
          description: Datacenter name where the Infrastructure is located.
          type: string
        siteId:
          description: The ID of the site where the Infrastructure is located.
          type: number
        customVariables:
          description: Custom variables in JSON format.
          type: object
        userIdOwner:
          description: User ID of the owner of the Infrastructure.
          type: number
        subdomain:
          description: Subdomain associated with the Infrastructure.
          type: string
        instancesCountActive:
          description: Number of active instances.
          type: number
        drivesCountActive:
          description: Number of active drives.
          type: number
        ipv4SubnetsCountActive:
          description: Number of active IPv4 subnets.
          type: number
        ipv6SubnetsCountActive:
          description: Number of active IPv6 subnets.
          type: number
        ipv4UnusedIpAddresses:
          description: Number of unused IPv4 addresses.
          type: number
        description:
          description: Description of the infrastructure.
          type: string
        settings:
          description: Settings in JSON format.
          type: object
        isApiPrivate:
          description: Whether the infrastructure API is private.
          type: number
        experimentalPriority:
          description: Experimental priority.
          enum:
          - disallow
          - avoid
          - equal
          - prefer
          type: string
        isPublicDesignsMember:
          description: Whether the infrastructure is a member of public designs.
          type: number
        certificatesJson:
          description: Certificates in JSON format.
          type: string
        deployCookieJarJson:
          description: Deploy cookie jar JSON.
          type: object
        deferredDeployAttemptLastErrorJson:
          description: Last error of deferred deploy attempt.
          type: object
        isAutomanaged:
          description: Whether the infrastructure is automanaged.
          type: number
        emptyEdit:
          description: Number of empty edits
          type: number
        reservedLanIpRanges:
          description: Reserved LAN IP ranges in JSON format.
          type: object
        subnetPoolLan:
          description: Subnet pool for LAN in JSON format.
          type: object
        updatedTimestamp:
          description: Timestamp of the latest update for the Infrastructure.
          type: string
        dnsSubdomainId:
          description: DNS Subdomain ID.
          type: number
      required:
      - datacenterName
      - deployStatus
      - deployType
      - label
      - revision
      - siteId
      - updatedTimestamp
      type: object
    UpdateInfrastructureMeta:
      example:
        guiSettings:
          rowIndex: 6.027456183070403
          columnIndex: 1.4658129805029452
          userAgent: userAgent
          randomInstanceID: randomInstanceID
          showWidgetChildren: true
        tags:
        - tags
        - tags
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
        tags:
          description: Tags for the Infrastructure.
          items:
            type: string
          type: array
      type: object
    AddUserToInfrastructure:
      example:
        userEmail: userEmail
        createIfNotExists: false
      properties:
        userEmail:
          description: The email of the user
          type: string
        createIfNotExists:
          default: false
          description: Create a new user if the user does not exist
          type: boolean
      required:
      - createIfNotExists
      - userEmail
      type: object
    InfrastructureDeployShutdownOptions:
      example:
        attemptSoftShutdown: true
        softShutdownTimeout: 0.8008281904610115
        forceShutdown: true
        attemptHardShutdown: true
      properties:
        attemptSoftShutdown:
          description: Attempt soft shutdown
          type: boolean
        softShutdownTimeout:
          description: Soft shutdown timeout in seconds
          type: number
        attemptHardShutdown:
          description: Attempt hard shutdown after softShutdownTimeout expires
          type: boolean
        forceShutdown:
          description: Force shutdown
          type: boolean
      required:
      - attemptHardShutdown
      - attemptSoftShutdown
      - forceShutdown
      - softShutdownTimeout
      type: object
    InfrastructureDeployOptions:
      example:
        shutdownOptions:
          attemptSoftShutdown: true
          softShutdownTimeout: 0.8008281904610115
          forceShutdown: true
          attemptHardShutdown: true
        allowDataLoss: true
        serverTypeIdToPreferredServerIds: "{}"
      properties:
        allowDataLoss:
          description: Allow data loss
          type: boolean
        shutdownOptions:
          $ref: '#/components/schemas/InfrastructureDeployShutdownOptions'
        serverTypeIdToPreferredServerIds:
          description: An object having as key the server type id and as value an
            array of preferred server ids
          type: object
      required:
      - allowDataLoss
      - shutdownOptions
      type: object
    GenericMeta:
      example:
        guiSettings: ""
        tags:
        - tags
        - tags
      properties:
        guiSettings:
          allOf:
          - $ref: '#/components/schemas/GenericGUISettings'
          description: GUI settings in JSON format.
        tags:
          default: []
          description: List of tags representative for the associated product.
          items:
            type: string
          type: array
      type: object
    ServerInstanceGroupConfiguration:
      example:
        ipv4SubnetCreateAuto: 1
        driveArrayIdBoot: 6
        overrideIpv4WanVlanId: 8
        diskCount: 7
        updatedTimestamp: updatedTimestamp
        customVariables: "{}"
        deployType: create
        processorCoreMhz: 7
        volumeTemplateId: 5
        dnsSubdomainChangeId: 3
        processorCoreCount: 3
        infrastructureDeployId: 7
        virtualInterfacesEnabled: 0
        firewallRulesSetId: 6
        instanceArrayBootMethod: pxe_iscsi
        networkProfileGroupId: 4
        defaultServerProfileID: 1
        serverGroupName: server-instance-123
        emptyEdit: 3
        processorCount: 3
        firewallProfileId: 2
        ipAllocateAuto: 6
        firewallManaged: 6
        label: server-instance-123
        diskTypes:
        - diskTypes
        - diskTypes
        additionalWanIpv4Json: "{}"
        revision: 1
        firmwarePoliciesJson:
        - "{}"
        - "{}"
        networkEquipmentForceSubnetPoolIpv4WanId: 7
        diskSizeMbytes: 6
        instanceCount: 3
        subdomain: subdomain
        ramGbytes: 0
        deployStatus: not_started
      properties:
        revision:
          description: Revision number
          example: 1
          type: number
        label:
          description: The server instance group label. Will be automatically generated
            if not provided.
          example: server-instance-123
          maxLength: 63
          type: string
        serverGroupName:
          example: server-instance-123
          maxLength: 255
          type: string
        updatedTimestamp:
          description: Timestamp of the latest update for the Server Instance Group.
          type: string
        subdomain:
          description: Subdomain of the Server Group.
          type: string
        instanceCount:
          default: 1
          description: The number of instances to be created on the InstanceArray.
          type: integer
        ipAllocateAuto:
          default: 1
          description: Automatically allocate IP addresses to child Instance`s InstanceInterface
            elements.
          type: integer
        ipv4SubnetCreateAuto:
          default: 1
          description: Automatically create or expand Subnet elements until the necessary
            IPv4 addresses are allocated.
          type: integer
        firewallProfileId:
          type: integer
        firewallRulesSetId:
          type: integer
        firewallManaged:
          type: integer
        firmwarePoliciesJson:
          description: Object containing associated firmware policies.
          items:
            type: object
          nullable: true
          type: array
        volumeTemplateId:
          description: The volume template ID (or name) to use if the servers in the
            InstanceArray have local disks.
          type: integer
        driveArrayIdBoot:
          description: Id of the bootable drive for the Server Instance Group.
          type: integer
        instanceArrayBootMethod:
          description: Instance Array Boot Method
          enum:
          - pxe_iscsi
          - local_drives
          type: string
        customVariables:
          description: Object containing custom variables and variable overrides.
          type: object
        processorCount:
          default: 1
          description: The CPU count on each instance.
          type: integer
        processorCoreCount:
          default: 1
          description: The minimum cores of a CPU.
          type: integer
        processorCoreMhz:
          default: 1000
          description: The minimum clock speed of a CPU.
          type: integer
        ramGbytes:
          default: 1
          description: The minimum RAM capacity of each instance.
          type: integer
        diskCount:
          default: 0
          description: The minimum number of physical disks.
          type: integer
        diskSizeMbytes:
          default: 0
          description: The minimum size of a single disk.
          type: integer
        diskTypes:
          default: []
          description: The types of physical disks.
          items:
            type: string
          type: array
        virtualInterfacesEnabled:
          default: 0
          description: Enable virtual interfaces
          type: integer
        additionalWanIpv4Json:
          description: Contains info about additional ips to be assigned to the WAN
            interfaces.
          type: object
        networkProfileGroupId:
          type: integer
        overrideIpv4WanVlanId:
          description: The ipv4 vlan that should override the default from the WAN
            Network for the primary ip.
          type: integer
        networkEquipmentForceSubnetPoolIpv4WanId:
          description: ID of a ipv4 WAN subnet-pool from which to force the subnet
            allocation for the InstanceInterfaces associated with this InstanceArray.
          type: integer
        defaultServerProfileID:
          description: "The group's default server profile. Useful when creating a\
            \ server instance with a group id set, the profile will be automatically\
            \ applied."
          example: 1
          type: integer
        emptyEdit:
          description: Number of empty edits
          type: integer
        deployType:
          description: Server Instance Group deploy type
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          description: Server Instance Group deploy status
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        dnsSubdomainChangeId:
          description: Id of the DNS subdomain for the Server Instance Group.
          type: integer
        infrastructureDeployId:
          description: Id of the deployment for the Instance Group.
          type: integer
      required:
      - deployStatus
      - deployType
      - diskCount
      - diskSizeMbytes
      - diskTypes
      - firewallManaged
      - instanceArrayBootMethod
      - instanceCount
      - ipAllocateAuto
      - ipv4SubnetCreateAuto
      - label
      - processorCoreCount
      - processorCoreMhz
      - processorCount
      - revision
      - updatedTimestamp
      - virtualInterfacesEnabled
      type: object
    ServerInstanceGroup:
      example:
        ipv4SubnetCreateAuto: 7
        driveArrayIdBoot: 7
        overrideIpv4WanVlanId: 9
        extensionInstanceId: 6
        diskCount: 7
        updatedTimestamp: updatedTimestamp
        customVariables: "{}"
        isVmGroup: 9
        processorCoreMhz: 1
        dnsSubdomainPermanentId: 5
        volumeTemplateId: 4
        processorCoreCount: 1
        serviceStatus: ordered
        virtualInterfacesEnabled: 4
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 1
        firewallRulesSetId: 3
        instanceArrayBootMethod: pxe_iscsi
        networkProfileGroupId: 5
        dnsSubdomainId: 1
        defaultServerProfileID: 1
        serverGroupName: server-instance-123
        networkProfileSnapshotId: 9
        processorCount: 1
        createdTimestamp: createdTimestamp
        firewallProfileId: 9
        ipAllocateAuto: 2
        firewallManaged: 2
        label: server-instance-123
        subdomainPermanent: subdomainPermanent
        diskTypes:
        - diskTypes
        - diskTypes
        additionalWanIpv4Json: "{}"
        revision: 1
        firmwarePoliciesJson:
        - "{}"
        - "{}"
        networkEquipmentForceSubnetPoolIpv4WanId: 6
        diskSizeMbytes: 1
        infrastructureId: 0
        vmInstanceGroupId: 6
        meta: ""
        instanceCount: 5
        resourcePoolId: 8
        subdomain: subdomain
        ramGbytes: 6
        config:
          ipv4SubnetCreateAuto: 1
          driveArrayIdBoot: 6
          overrideIpv4WanVlanId: 8
          diskCount: 7
          updatedTimestamp: updatedTimestamp
          customVariables: "{}"
          deployType: create
          processorCoreMhz: 7
          volumeTemplateId: 5
          dnsSubdomainChangeId: 3
          processorCoreCount: 3
          infrastructureDeployId: 7
          virtualInterfacesEnabled: 0
          firewallRulesSetId: 6
          instanceArrayBootMethod: pxe_iscsi
          networkProfileGroupId: 4
          defaultServerProfileID: 1
          serverGroupName: server-instance-123
          emptyEdit: 3
          processorCount: 3
          firewallProfileId: 2
          ipAllocateAuto: 6
          firewallManaged: 6
          label: server-instance-123
          diskTypes:
          - diskTypes
          - diskTypes
          additionalWanIpv4Json: "{}"
          revision: 1
          firmwarePoliciesJson:
          - "{}"
          - "{}"
          networkEquipmentForceSubnetPoolIpv4WanId: 7
          diskSizeMbytes: 6
          instanceCount: 3
          subdomain: subdomain
          ramGbytes: 0
          deployStatus: not_started
      properties:
        id:
          description: The server instance group ID.
          example: 1
          type: integer
        revision:
          description: Revision number
          example: 1
          type: number
        label:
          description: The server instance group label. Will be automatically generated
            if not provided.
          example: server-instance-123
          maxLength: 63
          type: string
        serverGroupName:
          example: server-instance-123
          maxLength: 255
          type: string
        infrastructureId:
          type: integer
        extensionInstanceId:
          type: integer
        createdTimestamp:
          description: Timestamp of the Server Instance Group creation.
          type: string
        updatedTimestamp:
          description: Timestamp of the latest update for the Server Instance Group.
          type: string
        meta:
          allOf:
          - $ref: '#/components/schemas/GenericMeta'
          description: Meta information
        subdomain:
          description: Subdomain of the Server Group.
          type: string
        subdomainPermanent:
          description: Subdomain permanent of the Server Group.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the Server Group.
          type: integer
        dnsSubdomainPermanentId:
          description: Id of the permanent DNS subdomain for the Server Group.
          type: integer
        instanceCount:
          default: 1
          description: The number of instances to be created on the InstanceArray.
          type: integer
        ipAllocateAuto:
          default: 1
          description: Automatically allocate IP addresses to child Instance`s InstanceInterface
            elements.
          type: integer
        ipv4SubnetCreateAuto:
          default: 1
          description: Automatically create or expand Subnet elements until the necessary
            IPv4 addresses are allocated.
          type: integer
        firewallProfileId:
          type: integer
        firewallRulesSetId:
          type: integer
        firewallManaged:
          type: integer
        firmwarePoliciesJson:
          description: Object containing associated firmware policies.
          items:
            type: object
          nullable: true
          type: array
        volumeTemplateId:
          description: The volume template ID (or name) to use if the servers in the
            InstanceArray have local disks.
          type: integer
        driveArrayIdBoot:
          description: Id of the bootable drive for the Server Instance Group.
          type: integer
        instanceArrayBootMethod:
          description: Instance Array Boot Method
          enum:
          - pxe_iscsi
          - local_drives
          type: string
        customVariables:
          description: Object containing custom variables and variable overrides.
          type: object
        processorCount:
          default: 1
          description: The CPU count on each instance.
          type: integer
        processorCoreCount:
          default: 1
          description: The minimum cores of a CPU.
          type: integer
        processorCoreMhz:
          default: 1000
          description: The minimum clock speed of a CPU.
          type: integer
        ramGbytes:
          default: 1
          description: The minimum RAM capacity of each instance.
          type: integer
        diskCount:
          default: 0
          description: The minimum number of physical disks.
          type: integer
        diskSizeMbytes:
          default: 0
          description: The minimum size of a single disk.
          type: integer
        diskTypes:
          default: []
          description: The types of physical disks.
          items:
            type: string
          type: array
        virtualInterfacesEnabled:
          default: 0
          description: Enable virtual interfaces
          type: integer
        additionalWanIpv4Json:
          description: Contains info about additional ips to be assigned to the WAN
            interfaces.
          type: object
        networkProfileGroupId:
          type: integer
        networkProfileSnapshotId:
          type: integer
        overrideIpv4WanVlanId:
          description: The ipv4 vlan that should override the default from the WAN
            Network for the primary ip.
          type: integer
        networkEquipmentForceSubnetPoolIpv4WanId:
          description: ID of a ipv4 WAN subnet-pool from which to force the subnet
            allocation for the InstanceInterfaces associated with this InstanceArray.
          type: integer
        serviceStatus:
          description: Current status of the Server Instance Group.
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          example: ordered
          type: string
        resourcePoolId:
          description: The resource pool assigned to this instance array
          type: integer
        isVmGroup:
          description: Flag to indicate if the Server Instance Group is belongs to
            a VM.
          type: integer
        vmInstanceGroupId:
          description: Id of the VM Instance Group this Server Instance Group belongs
            to.
          type: integer
        defaultServerProfileID:
          description: "The group's default server profile. Useful when creating a\
            \ server instance with a group id set, the profile will be automatically\
            \ applied."
          example: 1
          type: integer
        config:
          $ref: '#/components/schemas/ServerInstanceGroupConfiguration'
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - createdTimestamp
      - diskCount
      - diskSizeMbytes
      - diskTypes
      - firewallManaged
      - id
      - infrastructureId
      - instanceArrayBootMethod
      - instanceCount
      - ipAllocateAuto
      - ipv4SubnetCreateAuto
      - isVmGroup
      - label
      - processorCoreCount
      - processorCoreMhz
      - processorCount
      - revision
      - serviceStatus
      - updatedTimestamp
      - virtualInterfacesEnabled
      type: object
    ServerInstanceGroupPaginatedList:
      example:
        data:
        - ipv4SubnetCreateAuto: 7
          driveArrayIdBoot: 7
          overrideIpv4WanVlanId: 9
          extensionInstanceId: 6
          diskCount: 7
          updatedTimestamp: updatedTimestamp
          customVariables: "{}"
          isVmGroup: 9
          processorCoreMhz: 1
          dnsSubdomainPermanentId: 5
          volumeTemplateId: 4
          processorCoreCount: 1
          serviceStatus: ordered
          virtualInterfacesEnabled: 4
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          firewallRulesSetId: 3
          instanceArrayBootMethod: pxe_iscsi
          networkProfileGroupId: 5
          dnsSubdomainId: 1
          defaultServerProfileID: 1
          serverGroupName: server-instance-123
          networkProfileSnapshotId: 9
          processorCount: 1
          createdTimestamp: createdTimestamp
          firewallProfileId: 9
          ipAllocateAuto: 2
          firewallManaged: 2
          label: server-instance-123
          subdomainPermanent: subdomainPermanent
          diskTypes:
          - diskTypes
          - diskTypes
          additionalWanIpv4Json: "{}"
          revision: 1
          firmwarePoliciesJson:
          - "{}"
          - "{}"
          networkEquipmentForceSubnetPoolIpv4WanId: 6
          diskSizeMbytes: 1
          infrastructureId: 0
          vmInstanceGroupId: 6
          meta: ""
          instanceCount: 5
          resourcePoolId: 8
          subdomain: subdomain
          ramGbytes: 6
          config:
            ipv4SubnetCreateAuto: 1
            driveArrayIdBoot: 6
            overrideIpv4WanVlanId: 8
            diskCount: 7
            updatedTimestamp: updatedTimestamp
            customVariables: "{}"
            deployType: create
            processorCoreMhz: 7
            volumeTemplateId: 5
            dnsSubdomainChangeId: 3
            processorCoreCount: 3
            infrastructureDeployId: 7
            virtualInterfacesEnabled: 0
            firewallRulesSetId: 6
            instanceArrayBootMethod: pxe_iscsi
            networkProfileGroupId: 4
            defaultServerProfileID: 1
            serverGroupName: server-instance-123
            emptyEdit: 3
            processorCount: 3
            firewallProfileId: 2
            ipAllocateAuto: 6
            firewallManaged: 6
            label: server-instance-123
            diskTypes:
            - diskTypes
            - diskTypes
            additionalWanIpv4Json: "{}"
            revision: 1
            firmwarePoliciesJson:
            - "{}"
            - "{}"
            networkEquipmentForceSubnetPoolIpv4WanId: 7
            diskSizeMbytes: 6
            instanceCount: 3
            subdomain: subdomain
            ramGbytes: 0
            deployStatus: not_started
        - ipv4SubnetCreateAuto: 7
          driveArrayIdBoot: 7
          overrideIpv4WanVlanId: 9
          extensionInstanceId: 6
          diskCount: 7
          updatedTimestamp: updatedTimestamp
          customVariables: "{}"
          isVmGroup: 9
          processorCoreMhz: 1
          dnsSubdomainPermanentId: 5
          volumeTemplateId: 4
          processorCoreCount: 1
          serviceStatus: ordered
          virtualInterfacesEnabled: 4
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          firewallRulesSetId: 3
          instanceArrayBootMethod: pxe_iscsi
          networkProfileGroupId: 5
          dnsSubdomainId: 1
          defaultServerProfileID: 1
          serverGroupName: server-instance-123
          networkProfileSnapshotId: 9
          processorCount: 1
          createdTimestamp: createdTimestamp
          firewallProfileId: 9
          ipAllocateAuto: 2
          firewallManaged: 2
          label: server-instance-123
          subdomainPermanent: subdomainPermanent
          diskTypes:
          - diskTypes
          - diskTypes
          additionalWanIpv4Json: "{}"
          revision: 1
          firmwarePoliciesJson:
          - "{}"
          - "{}"
          networkEquipmentForceSubnetPoolIpv4WanId: 6
          diskSizeMbytes: 1
          infrastructureId: 0
          vmInstanceGroupId: 6
          meta: ""
          instanceCount: 5
          resourcePoolId: 8
          subdomain: subdomain
          ramGbytes: 6
          config:
            ipv4SubnetCreateAuto: 1
            driveArrayIdBoot: 6
            overrideIpv4WanVlanId: 8
            diskCount: 7
            updatedTimestamp: updatedTimestamp
            customVariables: "{}"
            deployType: create
            processorCoreMhz: 7
            volumeTemplateId: 5
            dnsSubdomainChangeId: 3
            processorCoreCount: 3
            infrastructureDeployId: 7
            virtualInterfacesEnabled: 0
            firewallRulesSetId: 6
            instanceArrayBootMethod: pxe_iscsi
            networkProfileGroupId: 4
            defaultServerProfileID: 1
            serverGroupName: server-instance-123
            emptyEdit: 3
            processorCount: 3
            firewallProfileId: 2
            ipAllocateAuto: 6
            firewallManaged: 6
            label: server-instance-123
            diskTypes:
            - diskTypes
            - diskTypes
            additionalWanIpv4Json: "{}"
            revision: 1
            firmwarePoliciesJson:
            - "{}"
            - "{}"
            networkEquipmentForceSubnetPoolIpv4WanId: 7
            diskSizeMbytes: 6
            instanceCount: 3
            subdomain: subdomain
            ramGbytes: 0
            deployStatus: not_started
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServerInstanceGroup'
          title: List of server instance group's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    ServerInstanceGroupCreate:
      example:
        serverTypeId: 5
        serverGroupName: server-instance-123
        ipv4SubnetCreateAuto: 5
        driveArrayIdBoot: 2
        overrideIpv4WanVlanId: 1
        processorCount: 7
        extensionInstanceId: 0
        ipAllocateAuto: 1
        label: server-instance-123
        diskCount: 4
        customVariables: "{}"
        diskTypes:
        - diskTypes
        - diskTypes
        additionalWanIpv4Json: "{}"
        networkEquipmentForceSubnetPoolIpv4WanId: 1
        processorCoreMhz: 3
        diskSizeMbytes: 7
        volumeTemplateId: 5
        meta: ""
        instanceCount: 6
        processorCoreCount: 9
        resourcePoolId: 6
        ramGbytes: 2
        virtualInterfacesEnabled: 1
      properties:
        serverGroupName:
          example: server-instance-123
          maxLength: 255
          type: string
        extensionInstanceId:
          type: integer
        meta:
          allOf:
          - $ref: '#/components/schemas/GenericMeta'
          description: Meta information
        instanceCount:
          default: 1
          description: The number of instances to be created on the InstanceArray.
          type: integer
        ipAllocateAuto:
          default: 1
          description: Automatically allocate IP addresses to child Instance`s InstanceInterface
            elements.
          type: integer
        ipv4SubnetCreateAuto:
          default: 1
          description: Automatically create or expand Subnet elements until the necessary
            IPv4 addresses are allocated.
          type: integer
        volumeTemplateId:
          description: The volume template ID (or name) to use if the servers in the
            InstanceArray have local disks.
          type: integer
        driveArrayIdBoot:
          description: Id of the bootable drive for the Server Instance Group.
          type: integer
        customVariables:
          description: Object containing custom variables and variable overrides.
          type: object
        processorCount:
          default: 1
          description: The CPU count on each instance.
          type: integer
        processorCoreCount:
          default: 1
          description: The minimum cores of a CPU.
          type: integer
        processorCoreMhz:
          default: 1000
          description: The minimum clock speed of a CPU.
          type: integer
        ramGbytes:
          default: 1
          description: The minimum RAM capacity of each instance.
          type: integer
        diskCount:
          default: 0
          description: The minimum number of physical disks.
          type: integer
        diskSizeMbytes:
          default: 0
          description: The minimum size of a single disk.
          type: integer
        diskTypes:
          default: []
          description: The types of physical disks.
          items:
            type: string
          type: array
        virtualInterfacesEnabled:
          default: 0
          description: Enable virtual interfaces
          type: integer
        additionalWanIpv4Json:
          description: Contains info about additional ips to be assigned to the WAN
            interfaces.
          type: object
        overrideIpv4WanVlanId:
          description: The ipv4 vlan that should override the default from the WAN
            Network for the primary ip.
          type: integer
        networkEquipmentForceSubnetPoolIpv4WanId:
          description: ID of a ipv4 WAN subnet-pool from which to force the subnet
            allocation for the InstanceInterfaces associated with this InstanceArray.
          type: integer
        resourcePoolId:
          description: The resource pool assigned to this instance array
          type: integer
        label:
          description: The server instance group label. Will be automatically generated
            if not provided.
          example: server-instance-123
          maxLength: 63
          type: string
        serverTypeId:
          description: The server type ID.
          example: 5
          type: integer
      type: object
    ServerInstanceStorageProfileControllerVolume:
      properties:
        controllerName:
          description: The name of the controller.
          type: string
        volumeName:
          description: The name of the volume.
          type: string
        diskSizeGb:
          description: The size of the disk in GB.
          type: number
        diskType:
          description: The type of the disk.
          enum:
          - none
          - HDD
          - SSD
          - NVME
          type: string
        diskCount:
          description: The number of disks.
          type: number
        raidType:
          description: The RAID type of the volume.
          enum:
          - raid0
          - raid1
          - raid5
          - raid10
          type: string
      required:
      - controllerName
      - diskCount
      - diskSizeGb
      - diskType
      - raidType
      - volumeName
      type: object
    ServerInstanceStorageProfileController:
      properties:
        id:
          description: The id of the Storage Controller.
          example: RAID-1.1
          type: string
        mode:
          description: The mode of the Storage Controller.
          enum:
          - HBA
          - eHBA
          - RAID
          example: RAID
          type: string
        volumes:
          description: The information for each Volume of the Storage Controller.
          items:
            $ref: '#/components/schemas/ServerInstanceStorageProfileControllerVolume'
          type: array
      required:
      - id
      - mode
      type: object
    ServerInstanceStorageProfile:
      properties:
        controllers:
          description: The information for each Storage Controller of the Instance
            Storage Profile.
          items:
            $ref: '#/components/schemas/ServerInstanceStorageProfileController'
          type: array
      type: object
    ServerInstanceConfiguration:
      example:
        serverTypeId: 5
        emptyEdit: 1
        raidProfile: ""
        groupId: 2
        iscsiInitiatorPasswordEncrypted: iscsiInitiatorPasswordEncrypted
        controlPanelUrl: controlPanelUrl
        networkProfiles:
        - networkId: 1
          networkProfileId: 1
        - networkId: 1
          networkProfileId: 1
        driveIdBootable: 4
        label: instance-123
        templateId: 1
        updatedTimestamp: updatedTimestamp
        serverId: 7
        customVariables: "{}"
        deployType: create
        revision: 1
        iscsiInitiatorUsername: iscsiInitiatorUsername
        iscsiInitiatorIqn: iscsiInitiatorIqn
        dnsSubdomainChangeId: 1
        subdomain: subdomain
        infrastructureDeployId: 6
        instanceWanMlagId: 1
        enableAutoPortChannel: true
        deployStatus: not_started
      properties:
        revision:
          description: Revision number
          example: 1
          type: number
        label:
          description: The server instance label.
          example: instance-123
          type: string
        updatedTimestamp:
          description: Timestamp of the latest update for the Server Instance.
          type: string
        groupId:
          type: integer
        driveIdBootable:
          type: integer
        subdomain:
          description: Subdomain of the Server Group.
          type: string
        serverTypeId:
          description: The server type ID.
          example: 5
          type: integer
        serverId:
          description: The ID of the server assigned to the instance.
          type: integer
        templateId:
          description: 'The template id of the operating system to deploy on the server.
            Can be null in which case no OS will be deployed but all operations will
            continue as normal. '
          example: 1
          type: integer
        instanceWanMlagId:
          type: integer
        customVariables:
          type: object
        raidProfile:
          allOf:
          - $ref: '#/components/schemas/ServerInstanceStorageProfile'
          description: RAID profile for the Instance Interface.
        enableAutoPortChannel:
          default: true
          description: If enabled will enable port channel to be automatically created.
          example: true
          type: boolean
        iscsiInitiatorIqn:
          description: iSCSI Initiator IQN for the Instance Interface.
          type: string
        iscsiInitiatorUsername:
          description: iSCSI Initiator Username for the Instance Interface.
          type: string
        iscsiInitiatorPasswordEncrypted:
          description: iSCSI Initiator Password for the Instance Interface.
          type: string
        controlPanelUrl:
          description: Control panel url for the Instance Interface.
          type: string
        networkProfiles:
          description: Network profiles mapping for each network in this infrastructure.
          items:
            $ref: '#/components/schemas/ServerInstanceConfiguration_networkProfiles_inner'
          type: array
        emptyEdit:
          description: Number of empty edits
          type: integer
        deployType:
          description: Server Instance deploy type
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          description: Server Instance deploy status
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        dnsSubdomainChangeId:
          description: Id of the DNS subdomain for the Server Instance.
          type: integer
        infrastructureDeployId:
          description: Id of the deployment for the Server Instance.
          type: integer
      required:
      - deployStatus
      - deployType
      - groupId
      - label
      - revision
      - updatedTimestamp
      type: object
    ServerInstance:
      example:
        serverTypeId: 5
        osInstallImageBuildInfo: osInstallImageBuildInfo
        osInstallError: osInstallError
        variablesOsAssetsTemplateTypeAdvanced: "{}"
        raidProfile: ""
        groupId: 6
        preferredServerIds:
        - preferredServerIds
        - preferredServerIds
        templateId: 1
        updatedTimestamp: updatedTimestamp
        serverId: 2
        osInstallImageUrl: osInstallImageUrl
        customVariables: "{}"
        dnsSubdomainPermanentId: 5
        iscsiInitiatorIqn: iscsiInitiatorIqn
        serviceStatus: ordered
        operatingSystemInfo: "{}"
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 1
        enableAutoPortChannel: true
        dnsSubdomainId: 5
        createdTimestamp: createdTimestamp
        iscsiInitiatorPasswordEncrypted: iscsiInitiatorPasswordEncrypted
        controlPanelUrl: controlPanelUrl
        networkProfiles:
        - networkId: 1
          networkProfileId: 1
        - networkId: 1
          networkProfileId: 1
        driveIdBootable: 1
        label: instance-123
        subdomainPermanent: subdomainPermanent
        secretsOsAssetsTemplateTypeAdvanced: "{}"
        revision: 1
        isVmInstance: 9.301444243932576
        tags:
        - tags
        - tags
        clusterCustomInfo: "{}"
        vmInstanceId: 3.616076749251911
        osReinstallRequired: osReinstallRequired
        iscsiInitiatorUsername: iscsiInitiatorUsername
        infrastructureId: 0
        meta: ""
        subdomain: subdomain
        variablesMaterializedForOSAssets: "{}"
        osInstallImageBuildError: osInstallImageBuildError
        instanceWanMlagId: 7
        secretsMaterializedForOSAssets: "{}"
        config:
          serverTypeId: 5
          emptyEdit: 1
          raidProfile: ""
          groupId: 2
          iscsiInitiatorPasswordEncrypted: iscsiInitiatorPasswordEncrypted
          controlPanelUrl: controlPanelUrl
          networkProfiles:
          - networkId: 1
            networkProfileId: 1
          - networkId: 1
            networkProfileId: 1
          driveIdBootable: 4
          label: instance-123
          templateId: 1
          updatedTimestamp: updatedTimestamp
          serverId: 7
          customVariables: "{}"
          deployType: create
          revision: 1
          iscsiInitiatorUsername: iscsiInitiatorUsername
          iscsiInitiatorIqn: iscsiInitiatorIqn
          dnsSubdomainChangeId: 1
          subdomain: subdomain
          infrastructureDeployId: 6
          instanceWanMlagId: 1
          enableAutoPortChannel: true
          deployStatus: not_started
      properties:
        id:
          description: The server instance ID.
          example: 1
          type: integer
        revision:
          description: Revision number
          example: 1
          type: number
        label:
          description: The server instance label.
          example: instance-123
          type: string
        createdTimestamp:
          description: Timestamp of the Server Instance creation.
          type: string
        updatedTimestamp:
          description: Timestamp of the latest update for the Server Instance.
          type: string
        infrastructureId:
          type: integer
        groupId:
          type: integer
        driveIdBootable:
          type: integer
        subdomain:
          description: Subdomain of the Server Group.
          type: string
        subdomainPermanent:
          description: Subdomain permanent of the Server Group.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the Server Group.
          type: integer
        dnsSubdomainPermanentId:
          description: Id of the permanent DNS subdomain for the Server Group.
          type: integer
        serverTypeId:
          description: The server type ID.
          example: 5
          type: integer
        serverId:
          description: The ID of the server assigned to the instance.
          type: integer
        templateId:
          description: 'The template id of the operating system to deploy on the server.
            Can be null in which case no OS will be deployed but all operations will
            continue as normal. '
          example: 1
          type: integer
        instanceWanMlagId:
          type: integer
        customVariables:
          type: object
        preferredServerIds:
          items:
            type: string
          type: array
        raidProfile:
          allOf:
          - $ref: '#/components/schemas/ServerInstanceStorageProfile'
          description: RAID profile for the Instance Interface.
        meta:
          allOf:
          - $ref: '#/components/schemas/GenericGUISettings'
          description: GUI settings in JSON format.
        serviceStatus:
          description: Current status of the server instance.
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          example: ordered
          type: string
        isVmInstance:
          description: Flag to indicate if this is a VM instance
          type: number
        vmInstanceId:
          description: The id of the linked VM instance
          type: number
        tags:
          items:
            type: string
          type: array
        enableAutoPortChannel:
          default: true
          description: If enabled will enable port channel to be automatically created.
          example: true
          type: boolean
        operatingSystemInfo:
          description: Operating system information of the Instance.
          type: object
        variablesOsAssetsTemplateTypeAdvanced:
          description: Advanced variables used when building the OS image.
          type: object
        secretsOsAssetsTemplateTypeAdvanced:
          description: Advanced secrets used when building the OS image.
          type: object
        variablesMaterializedForOSAssets:
          description: Variables used when building the OS image.
          type: object
        secretsMaterializedForOSAssets:
          description: Secrets used when building the OS image.
          type: object
        clusterCustomInfo:
          type: object
        osInstallError:
          description: Last error message during OS install.
          type: string
        osInstallImageUrl:
          description: URL where the OS image is available.
          type: string
        osInstallImageBuildError:
          description: Last error message during OS image build.
          type: string
        osInstallImageBuildInfo:
          description: Build info regarding the OS image.
          type: string
        osReinstallRequired:
          description: OS reinstall is required.
          type: string
        iscsiInitiatorIqn:
          description: iSCSI Initiator IQN for the Instance Interface.
          type: string
        iscsiInitiatorUsername:
          description: iSCSI Initiator Username for the Instance Interface.
          type: string
        iscsiInitiatorPasswordEncrypted:
          description: iSCSI Initiator Password for the Instance Interface.
          type: string
        controlPanelUrl:
          description: Control panel url for the Instance Interface.
          type: string
        networkProfiles:
          description: Network profiles mapping for each network in this infrastructure.
          items:
            $ref: '#/components/schemas/ServerInstanceConfiguration_networkProfiles_inner'
          type: array
        config:
          $ref: '#/components/schemas/ServerInstanceConfiguration'
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - createdTimestamp
      - groupId
      - id
      - infrastructureId
      - isVmInstance
      - label
      - revision
      - serviceStatus
      - updatedTimestamp
      type: object
    ServerInstancePaginatedList:
      example:
        data:
        - serverTypeId: 5
          osInstallImageBuildInfo: osInstallImageBuildInfo
          osInstallError: osInstallError
          variablesOsAssetsTemplateTypeAdvanced: "{}"
          raidProfile: ""
          groupId: 6
          preferredServerIds:
          - preferredServerIds
          - preferredServerIds
          templateId: 1
          updatedTimestamp: updatedTimestamp
          serverId: 2
          osInstallImageUrl: osInstallImageUrl
          customVariables: "{}"
          dnsSubdomainPermanentId: 5
          iscsiInitiatorIqn: iscsiInitiatorIqn
          serviceStatus: ordered
          operatingSystemInfo: "{}"
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          enableAutoPortChannel: true
          dnsSubdomainId: 5
          createdTimestamp: createdTimestamp
          iscsiInitiatorPasswordEncrypted: iscsiInitiatorPasswordEncrypted
          controlPanelUrl: controlPanelUrl
          networkProfiles:
          - networkId: 1
            networkProfileId: 1
          - networkId: 1
            networkProfileId: 1
          driveIdBootable: 1
          label: instance-123
          subdomainPermanent: subdomainPermanent
          secretsOsAssetsTemplateTypeAdvanced: "{}"
          revision: 1
          isVmInstance: 9.301444243932576
          tags:
          - tags
          - tags
          clusterCustomInfo: "{}"
          vmInstanceId: 3.616076749251911
          osReinstallRequired: osReinstallRequired
          iscsiInitiatorUsername: iscsiInitiatorUsername
          infrastructureId: 0
          meta: ""
          subdomain: subdomain
          variablesMaterializedForOSAssets: "{}"
          osInstallImageBuildError: osInstallImageBuildError
          instanceWanMlagId: 7
          secretsMaterializedForOSAssets: "{}"
          config:
            serverTypeId: 5
            emptyEdit: 1
            raidProfile: ""
            groupId: 2
            iscsiInitiatorPasswordEncrypted: iscsiInitiatorPasswordEncrypted
            controlPanelUrl: controlPanelUrl
            networkProfiles:
            - networkId: 1
              networkProfileId: 1
            - networkId: 1
              networkProfileId: 1
            driveIdBootable: 4
            label: instance-123
            templateId: 1
            updatedTimestamp: updatedTimestamp
            serverId: 7
            customVariables: "{}"
            deployType: create
            revision: 1
            iscsiInitiatorUsername: iscsiInitiatorUsername
            iscsiInitiatorIqn: iscsiInitiatorIqn
            dnsSubdomainChangeId: 1
            subdomain: subdomain
            infrastructureDeployId: 6
            instanceWanMlagId: 1
            enableAutoPortChannel: true
            deployStatus: not_started
        - serverTypeId: 5
          osInstallImageBuildInfo: osInstallImageBuildInfo
          osInstallError: osInstallError
          variablesOsAssetsTemplateTypeAdvanced: "{}"
          raidProfile: ""
          groupId: 6
          preferredServerIds:
          - preferredServerIds
          - preferredServerIds
          templateId: 1
          updatedTimestamp: updatedTimestamp
          serverId: 2
          osInstallImageUrl: osInstallImageUrl
          customVariables: "{}"
          dnsSubdomainPermanentId: 5
          iscsiInitiatorIqn: iscsiInitiatorIqn
          serviceStatus: ordered
          operatingSystemInfo: "{}"
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          enableAutoPortChannel: true
          dnsSubdomainId: 5
          createdTimestamp: createdTimestamp
          iscsiInitiatorPasswordEncrypted: iscsiInitiatorPasswordEncrypted
          controlPanelUrl: controlPanelUrl
          networkProfiles:
          - networkId: 1
            networkProfileId: 1
          - networkId: 1
            networkProfileId: 1
          driveIdBootable: 1
          label: instance-123
          subdomainPermanent: subdomainPermanent
          secretsOsAssetsTemplateTypeAdvanced: "{}"
          revision: 1
          isVmInstance: 9.301444243932576
          tags:
          - tags
          - tags
          clusterCustomInfo: "{}"
          vmInstanceId: 3.616076749251911
          osReinstallRequired: osReinstallRequired
          iscsiInitiatorUsername: iscsiInitiatorUsername
          infrastructureId: 0
          meta: ""
          subdomain: subdomain
          variablesMaterializedForOSAssets: "{}"
          osInstallImageBuildError: osInstallImageBuildError
          instanceWanMlagId: 7
          secretsMaterializedForOSAssets: "{}"
          config:
            serverTypeId: 5
            emptyEdit: 1
            raidProfile: ""
            groupId: 2
            iscsiInitiatorPasswordEncrypted: iscsiInitiatorPasswordEncrypted
            controlPanelUrl: controlPanelUrl
            networkProfiles:
            - networkId: 1
              networkProfileId: 1
            - networkId: 1
              networkProfileId: 1
            driveIdBootable: 4
            label: instance-123
            templateId: 1
            updatedTimestamp: updatedTimestamp
            serverId: 7
            customVariables: "{}"
            deployType: create
            revision: 1
            iscsiInitiatorUsername: iscsiInitiatorUsername
            iscsiInitiatorIqn: iscsiInitiatorIqn
            dnsSubdomainChangeId: 1
            subdomain: subdomain
            infrastructureDeployId: 6
            instanceWanMlagId: 1
            enableAutoPortChannel: true
            deployStatus: not_started
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServerInstance'
          title: List of server instance's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    ServerInstanceCreate:
      example:
        serverTypeId: 5
        groupId: 0
        networkProfiles:
        - networkId: 1
          networkProfileId: 1
        - networkId: 1
          networkProfileId: 1
        label: instance-123
        templateId: 1
        tags:
        - tags
        - tags
        enableAutoPortChannel: true
      properties:
        groupId:
          type: integer
        serverTypeId:
          description: The server type ID.
          example: 5
          type: integer
        templateId:
          description: 'The template id of the operating system to deploy on the server.
            Can be null in which case no OS will be deployed but all operations will
            continue as normal. '
          example: 1
          type: integer
        tags:
          items:
            type: string
          type: array
        enableAutoPortChannel:
          default: true
          description: If enabled will enable port channel to be automatically created.
          example: true
          type: boolean
        networkProfiles:
          description: Network profiles mapping for each network in this infrastructure.
          items:
            $ref: '#/components/schemas/ServerInstanceConfiguration_networkProfiles_inner'
          type: array
        label:
          description: The server instance label. Will be automatically generated
            if not provided.
          example: instance-123
          type: string
      type: object
    InstancesPowerState:
      properties: {}
      type: object
    InstancesSetPowerState:
      example:
        instances:
        - instances
        - instances
        powerCommand: "on"
      properties:
        instances:
          description: The list of instances to set the power state.
          items:
            type: string
          type: array
        powerCommand:
          description: The power state to set.
          enum:
          - "on"
          - reset
          - soft
          - "off"
          type: string
      required:
      - instances
      - powerCommand
      type: object
    Job:
      example:
        exception: "{}"
        jobIdBlockedBy: 2
        jobGroupId: 4
        callCount: 7
        vmPoolId: 5
        type: asynchronous
        serverId: 5
        retryMinSeconds: 1
        updatedTimestamp: updatedTimestamp
        retryMax: 1
        durationMilliseconds: 6
        instanceId: 1
        links: "{}"
        storageId: 2
        uniqueIdentifier: uniqueIdentifier
        functionName: functionName
        retryCount: 1
        createdTimestamp: createdTimestamp
        jobIdBlocked: 3
        params: "{}"
        markForDeath: kill
        jobId: 0
        infrastructureId: 9
        networkDeviceId: 7
        response: "{}"
        siteId: 6
        startTimestamp: startTimestamp
        status: running
        extraInfo: "{}"
      properties:
        jobId:
          description: Job Id
          type: integer
        siteId:
          description: Site Id
          type: integer
        instanceId:
          description: Instance Id
          type: integer
        serverId:
          description: Server Id
          type: integer
        vmPoolId:
          description: VM Pool Id
          type: integer
        storageId:
          description: Storage Pool Id
          type: integer
        networkDeviceId:
          description: Network Equipment Id
          type: integer
        infrastructureId:
          description: Infrastructure Id
          type: integer
        jobIdBlocked:
          description: The id of the next job that should be executed after this job
          type: integer
        jobIdBlockedBy:
          description: The id of the job that is blocking this job from executing
          type: integer
        jobGroupId:
          description: The id of the group that this job belongs to
          type: integer
        type:
          description: The type of the job
          enum:
          - asynchronous
          - debug_normal
          - debug_rpc_server
          type: string
        status:
          description: The status of the job
          enum:
          - running
          - returned_success
          - thrown_error_retrying
          - thrown_error
          - thrown_error_silenced
          - not_called
          - skipped
          type: string
        functionName:
          description: The name of the function that should be executed
          type: string
        params:
          description: The parameters that should be passed to the function
          type: object
        response:
          description: The response of the function
          type: object
        callCount:
          description: The number of times the job has been called
          type: integer
        retryMax:
          description: The maximum number of times the job should be retried
          type: integer
        retryCount:
          description: The number of times the job has been retried
          type: integer
        retryMinSeconds:
          description: The minimum number of seconds that should pass before the job
            is retried
          type: integer
        exception:
          description: The exception that was thrown by the function
          type: object
        extraInfo:
          description: Extra information about the job
          type: object
        durationMilliseconds:
          description: The time in milliseconds that the job took to execute
          type: integer
        createdTimestamp:
          description: The timestamp when the job was created
          type: string
        updatedTimestamp:
          description: The timestamp when the job was last updated
          type: string
        startTimestamp:
          description: The timestamp when the job was started
          type: string
        markForDeath:
          description: Mark the job for death
          enum:
          - kill
          - stop_retrying
          - kill_and_stop_retrying
          - keep_alive
          type: string
        uniqueIdentifier:
          description: The unique identifier of the job
          type: string
        links:
          description: Links to other resources
          type: object
      required:
      - callCount
      - createdTimestamp
      - functionName
      - jobId
      - links
      - retryCount
      - retryMax
      - retryMinSeconds
      - status
      - type
      - updatedTimestamp
      type: object
    JobPaginatedList:
      example:
        data:
        - exception: "{}"
          jobIdBlockedBy: 2
          jobGroupId: 4
          callCount: 7
          vmPoolId: 5
          type: asynchronous
          serverId: 5
          retryMinSeconds: 1
          updatedTimestamp: updatedTimestamp
          retryMax: 1
          durationMilliseconds: 6
          instanceId: 1
          links: "{}"
          storageId: 2
          uniqueIdentifier: uniqueIdentifier
          functionName: functionName
          retryCount: 1
          createdTimestamp: createdTimestamp
          jobIdBlocked: 3
          params: "{}"
          markForDeath: kill
          jobId: 0
          infrastructureId: 9
          networkDeviceId: 7
          response: "{}"
          siteId: 6
          startTimestamp: startTimestamp
          status: running
          extraInfo: "{}"
        - exception: "{}"
          jobIdBlockedBy: 2
          jobGroupId: 4
          callCount: 7
          vmPoolId: 5
          type: asynchronous
          serverId: 5
          retryMinSeconds: 1
          updatedTimestamp: updatedTimestamp
          retryMax: 1
          durationMilliseconds: 6
          instanceId: 1
          links: "{}"
          storageId: 2
          uniqueIdentifier: uniqueIdentifier
          functionName: functionName
          retryCount: 1
          createdTimestamp: createdTimestamp
          jobIdBlocked: 3
          params: "{}"
          markForDeath: kill
          jobId: 0
          infrastructureId: 9
          networkDeviceId: 7
          response: "{}"
          siteId: 6
          startTimestamp: startTimestamp
          status: running
          extraInfo: "{}"
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/Job'
          title: List of job's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    JobArchive:
      example:
        exception: "{}"
        jobIdBlockedBy: 2
        jobGroupId: 4
        callCount: 7
        vmPoolId: 5
        type: asynchronous
        serverId: 5
        retryMinSeconds: 1
        updatedTimestamp: updatedTimestamp
        retryMax: 1
        durationMilliseconds: 6
        instanceId: 1
        links: "{}"
        storageId: 2
        functionName: functionName
        retryCount: 1
        createdTimestamp: createdTimestamp
        jobIdBlocked: 3
        params: "{}"
        markForDeath: kill
        jobId: 0
        infrastructureId: 9
        networkDeviceId: 7
        response: "{}"
        siteId: 6
        startTimestamp: startTimestamp
        status: running
        extraInfo: "{}"
      properties:
        jobId:
          description: Job Id
          type: integer
        siteId:
          description: Site Id
          type: integer
        instanceId:
          description: Instance Id
          type: integer
        serverId:
          description: Server Id
          type: integer
        vmPoolId:
          description: VM Pool Id
          type: integer
        storageId:
          description: Storage Pool Id
          type: integer
        networkDeviceId:
          description: Network Equipment Id
          type: integer
        infrastructureId:
          description: Infrastructure Id
          type: integer
        jobIdBlocked:
          description: The id of the next job that should be executed after this job
          type: integer
        jobIdBlockedBy:
          description: The id of the job that is blocking this job from executing
          type: integer
        jobGroupId:
          description: The id of the group that this job belongs to
          type: integer
        type:
          description: The type of the job
          enum:
          - asynchronous
          - debug_normal
          - debug_rpc_server
          type: string
        status:
          description: The status of the job
          enum:
          - running
          - returned_success
          - thrown_error_retrying
          - thrown_error
          - thrown_error_silenced
          - not_called
          - skipped
          type: string
        functionName:
          description: The name of the function that should be executed
          type: string
        params:
          description: The parameters that should be passed to the function
          type: object
        response:
          description: The response of the function
          type: object
        callCount:
          description: The number of times the job has been called
          type: integer
        retryMax:
          description: The maximum number of times the job should be retried
          type: integer
        retryCount:
          description: The number of times the job has been retried
          type: integer
        retryMinSeconds:
          description: The minimum number of seconds that should pass before the job
            is retried
          type: integer
        exception:
          description: The exception that was thrown by the function
          type: object
        extraInfo:
          description: Extra information about the job
          type: object
        durationMilliseconds:
          description: The time in milliseconds that the job took to execute
          type: integer
        createdTimestamp:
          description: The timestamp when the job was created
          type: string
        updatedTimestamp:
          description: The timestamp when the job was last updated
          type: string
        startTimestamp:
          description: The timestamp when the job was started
          type: string
        markForDeath:
          description: Mark the job for death
          enum:
          - kill
          - stop_retrying
          - kill_and_stop_retrying
          - keep_alive
          type: string
        links:
          description: Links to other resources
          type: object
      required:
      - callCount
      - createdTimestamp
      - functionName
      - jobId
      - links
      - retryCount
      - retryMax
      - retryMinSeconds
      - status
      - type
      - updatedTimestamp
      type: object
    JobArchivePaginatedList:
      example:
        data:
        - exception: "{}"
          jobIdBlockedBy: 2
          jobGroupId: 4
          callCount: 7
          vmPoolId: 5
          type: asynchronous
          serverId: 5
          retryMinSeconds: 1
          updatedTimestamp: updatedTimestamp
          retryMax: 1
          durationMilliseconds: 6
          instanceId: 1
          links: "{}"
          storageId: 2
          functionName: functionName
          retryCount: 1
          createdTimestamp: createdTimestamp
          jobIdBlocked: 3
          params: "{}"
          markForDeath: kill
          jobId: 0
          infrastructureId: 9
          networkDeviceId: 7
          response: "{}"
          siteId: 6
          startTimestamp: startTimestamp
          status: running
          extraInfo: "{}"
        - exception: "{}"
          jobIdBlockedBy: 2
          jobGroupId: 4
          callCount: 7
          vmPoolId: 5
          type: asynchronous
          serverId: 5
          retryMinSeconds: 1
          updatedTimestamp: updatedTimestamp
          retryMax: 1
          durationMilliseconds: 6
          instanceId: 1
          links: "{}"
          storageId: 2
          functionName: functionName
          retryCount: 1
          createdTimestamp: createdTimestamp
          jobIdBlocked: 3
          params: "{}"
          markForDeath: kill
          jobId: 0
          infrastructureId: 9
          networkDeviceId: 7
          response: "{}"
          siteId: 6
          startTimestamp: startTimestamp
          status: running
          extraInfo: "{}"
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/JobArchive'
          title: List of job archive's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    JobRetryInfo:
      example:
        retryEvenIfSuccessful: false
      properties:
        retryEvenIfSuccessful:
          default: false
          description: Retry even if the job was successful
          example: false
          type: boolean
      type: object
    JobCommandInfo:
      example:
        command: kill
        executeImmediately: false
      properties:
        command:
          description: Mark the job for death
          enum:
          - kill
          - stop_retrying
          - kill_and_stop_retrying
          - keep_alive
          example: kill
          type: string
        executeImmediately:
          default: false
          description: Execute the command immediately
          example: false
          type: boolean
      type: object
    JobException:
      example:
        exception: "{}"
        jobId: 1
        exceptionId: 0
        createdTimestamp: createdTimestamp
        links: "{}"
        archiveId: 6
      properties:
        exceptionId:
          description: Job exception Id
          type: integer
        archiveId:
          description: Job archive Id
          type: integer
        jobId:
          description: Job Id
          type: integer
        exception:
          description: The exception that was thrown by the function
          type: object
        createdTimestamp:
          description: The timestamp when the exception was created
          type: string
        links:
          description: Links to other resources
          type: object
      required:
      - createdTimestamp
      - exceptionId
      - links
      type: object
    JobExceptionPaginatedList:
      example:
        data:
        - exception: "{}"
          jobId: 1
          exceptionId: 0
          createdTimestamp: createdTimestamp
          links: "{}"
          archiveId: 6
        - exception: "{}"
          jobId: 1
          exceptionId: 0
          createdTimestamp: createdTimestamp
          links: "{}"
          archiveId: 6
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/JobException'
          title: List of job exception's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    JobStatistics:
      example:
        statusToCount: "{}"
        archivedCount: 0
      properties:
        statusToCount:
          description: The number of jobs for each status
          type: object
        archivedCount:
          description: The total number of jobs in the archive
          type: integer
      required:
      - archivedCount
      - statusToCount
      type: object
    JobGroup:
      example:
        createdTimestamp: createdTimestamp
        description: description
        finishedTimestamp: finishedTimestamp
        vmPoolId: 7
        type: server_register
        params: "{}"
        serverId: 5
        archived: 0
        driveId: 5
        infrastructureId: 1
        networkDeviceId: 2
        context: "{}"
        links: "{}"
        id: 0
        storageId: 9
      properties:
        id:
          description: Group Id
          type: integer
        type:
          description: Group type
          example: server_register
          type: string
        context:
          description: Group context parameters
          type: object
        description:
          description: Group description
          type: string
        createdTimestamp:
          description: Group created timestamp
          type: string
        finishedTimestamp:
          description: Group finished timestamp
          type: string
        params:
          description: Group parameters
          type: object
        archived:
          description: Group archived status
          maximum: 1
          minimum: 0
          type: integer
        infrastructureId:
          description: Infrastructure Id
          type: integer
        driveId:
          description: Drive Id
          type: integer
        serverId:
          description: Server Id
          type: integer
        networkDeviceId:
          description: Network device Id
          type: integer
        vmPoolId:
          description: VM Pool Id
          type: integer
        storageId:
          description: Storage Pool Id
          type: integer
        links:
          description: Links to other resources
          type: object
      required:
      - createdTimestamp
      - description
      - id
      - links
      - type
      type: object
    JobGroupPaginatedList:
      example:
        data:
        - createdTimestamp: createdTimestamp
          description: description
          finishedTimestamp: finishedTimestamp
          vmPoolId: 7
          type: server_register
          params: "{}"
          serverId: 5
          archived: 0
          driveId: 5
          infrastructureId: 1
          networkDeviceId: 2
          context: "{}"
          links: "{}"
          id: 0
          storageId: 9
        - createdTimestamp: createdTimestamp
          description: description
          finishedTimestamp: finishedTimestamp
          vmPoolId: 7
          type: server_register
          params: "{}"
          serverId: 5
          archived: 0
          driveId: 5
          infrastructureId: 1
          networkDeviceId: 2
          context: "{}"
          links: "{}"
          id: 0
          storageId: 9
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/JobGroup'
          title: List of job group's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    JobGroupStatistics:
      example:
        jobsCompleted: 1
        jobsTotal: 1
        groupCompletedTimestamp: 2022-01-01T00:00:00Z
        groupId: 1
        jobsThrownError: 1
        groupCreatedTimestamp: 2022-01-01T00:00:00Z
      properties:
        groupId:
          description: Group Id
          example: 1
          minimum: 1
          type: integer
        groupCreatedTimestamp:
          description: Group created timestamp
          example: 2022-01-01T00:00:00Z
          type: string
        groupCompletedTimestamp:
          description: Group completed timestamp
          example: 2022-01-01T00:00:00Z
          type: string
        jobsThrownError:
          description: Total count of jobs with errors
          example: 1
          minimum: 0
          type: integer
        jobsCompleted:
          description: Total count of completed jobs
          example: 1
          minimum: 0
          type: integer
        jobsTotal:
          description: Total count of jobs
          example: 1
          minimum: 0
          type: integer
      required:
      - groupCompletedTimestamp
      - groupCreatedTimestamp
      - groupId
      - jobsCompleted
      - jobsThrownError
      - jobsTotal
      type: object
    LogicalNetworkDto:
      properties: {}
      type: object
    Paginated:
      properties: {}
      type: object
    CreateLogicalNetworkDto:
      properties: {}
      type: object
    PatchLogicalNetworkDto:
      properties: {}
      type: object
    LogicalNetworkProfileDto:
      properties: {}
      type: object
    CreateLogicalNetworkProfileDto:
      properties: {}
      type: object
    PatchLogicalNetworkProfileDto:
      properties: {}
      type: object
    Network:
      example:
        infrastructureId: 6.027456183070403
        serviceStatus: ordered
        createdTimestamp: createdTimestamp
        subdomain: subdomain
        networkId: 0.8008281904610115
        label: label
        subdomainPermanent: subdomainPermanent
        networkType: lan
        updatedTimestamp: updatedTimestamp
      properties:
        networkId:
          description: Id of the Network.
          type: number
        networkType:
          description: Type of the Network.
          enum:
          - lan
          - wan
          - san
          type: string
        infrastructureId:
          description: Id of the Infrastructure.
          type: number
        serviceStatus:
          description: Network Service status.
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          type: string
        label:
          description: Name of the Network.
          type: string
        subdomain:
          description: Subdomain of the Network.
          type: string
        subdomainPermanent:
          description: Permanent subdomain of the Network.
          type: string
        createdTimestamp:
          description: Timestamp of the Network creation.
          type: string
        updatedTimestamp:
          description: Timestamp of the Network update.
          type: string
      required:
      - createdTimestamp
      - infrastructureId
      - label
      - networkId
      - networkType
      - serviceStatus
      - subdomain
      - subdomainPermanent
      - updatedTimestamp
      type: object
    CreateNetwork:
      example:
        label: label
      properties:
        label:
          description: Name of the Network.
          type: string
      required:
      - label
      type: object
    NetworkDeviceDriver:
      enum:
      - cisco_aci51
      - nexus9000
      - cumulus42
      - dell_s4048
      - hp5800
      - hp5900
      - hp5950
      - dummy
      - junos
      - os_10
      - sonic_enterprise
      type: string
    SwitchPosition:
      enum:
      - tor
      - north
      - spine
      - leaf
      - other
      type: string
    NetworkDevice:
      example:
        bootstrapReadinessCheckInProgress: 9.301444243932576
        country: country
        mlagDomainId: 1.2315135367772556
        datacenterName: datacenterName
        switchId: 0.8008281904610115
        quarantineSubnetGateway: quarantineSubnetGateway
        datacenterMeta: datacenterMeta
        vtepAddressIpv6: vtepAddressIpv6
        managementMacAddress: managementMacAddress
        isGateway: 7.457744773683766
        identifierString: identifierString
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        bootstrapReadinessCheckResult: "{}"
        bootstrapExpectedPartnerHostname: bootstrapExpectedPartnerHostname
        serialNumber: serialNumber
        loopbackAddressIpv6: loopbackAddressIpv6
        managementAddressGateway: managementAddressGateway
        revision: 1
        tags: tags
        requiresOsInstall: true
        driver: sonic_enterprise
        provisionerType: provisionerType
        mlagSystemMac: mlagSystemMac
        rackPositionLowerUnit: 5.962133916683182
        position: leaf
        secretsMaterializedForOSAssets: "{}"
        status: active
        quarantineVlan: 1.4894159098541704
        city: city
        datacenterRack: datacenterRack
        description: description
        datacenterRoom: datacenterRoom
        vtepAddress: vtepAddress
        quarantineSubnetPrefixSize: 1.0246457001441578
        rackPositionUpperUnit: 1.4658129805029452
        bootstrapSkipInitialConfiguration: 4.145608029883936
        defaultMtu: 6.84685269835264
        managementAddress: managementAddress
        loopbackAddress: loopbackAddress
        quarantineSubnetEnd: quarantineSubnetEnd
        subnetOobIndex: 2.027123023002322
        managementAddressMask: managementAddressMask
        chassisIdentifier: chassisIdentifier
        readyForInitialConfiguration: 7.061401241503109
        syslogEnabled: true
        managementPort: 5.637376656633329
        managementPassword: password
        subnetOobId: 3.616076749251911
        managementProtocol: managementProtocol
        siteId: 6.027456183070403
        orderIndex: 2.3021358869347655
        variablesMaterializedForOSAssets: "{}"
        networkTypesAllowed:
        - networkTypesAllowed
        - networkTypesAllowed
        quarantineSubnetStart: quarantineSubnetStart
        asn: 7.386281948385884
        username: username
      properties:
        switchId:
          description: Unique identifier for the switch.
          type: number
        revision:
          description: Revision number
          example: 1
          type: number
        status:
          description: Current status of the network device
          enum:
          - active
          - failed
          - decommissioned
          - registering
          - installing_os
          - ztp
          example: active
          type: string
        datacenterName:
          description: Datacenter name where the network device is located
          type: string
        siteId:
          description: Site ID
          type: number
        identifierString:
          description: Identifier string of the network device
          type: string
        description:
          description: Description of the network device
          type: string
        chassisIdentifier:
          description: Chassis identifier of the network device
          type: string
        country:
          description: Country of the network device
          type: string
        city:
          description: City of the network device
          type: string
        datacenterMeta:
          description: Datacenter metadata
          type: string
        datacenterRoom:
          description: Room in the datacenter where the network device is located
          type: string
        datacenterRack:
          description: Rack in the datacenter where the network device is located
          type: string
        rackPositionUpperUnit:
          description: Upper rack position in the datacenter
          type: number
        rackPositionLowerUnit:
          description: Lower rack position in the datacenter
          type: number
        managementAddress:
          description: Management address of the network device
          type: string
        managementAddressMask:
          description: Management address mask
          type: string
        managementAddressGateway:
          description: Management gateway address
          type: string
        managementPort:
          description: Management port of the network device
          type: number
        syslogEnabled:
          description: Is the network device syslog enabled
          type: boolean
        username:
          description: Username used to connect to the network device
          type: string
        managementPassword:
          description: Password used to connect to the network device
          example: password
          type: string
        managementProtocol:
          description: Management protocol used by the network device
          type: string
        managementMacAddress:
          description: MAC address of the management interface
          type: string
        serialNumber:
          description: Serial number of the network device
          type: string
        driver:
          allOf:
          - $ref: '#/components/schemas/NetworkDeviceDriver'
          description: Driver software used to communicate with the network device
          example: sonic_enterprise
        position:
          allOf:
          - $ref: '#/components/schemas/SwitchPosition'
          description: The physical or logical position of the network device in the
            network topology.
          example: leaf
        provisionerType:
          description: Provisioner type of the network device
          type: string
        networkTypesAllowed:
          description: Allowed network types for the network device
          items:
            type: string
          type: array
        orderIndex:
          description: Order index of the network device
          type: number
        tags:
          description: Tags associated with the network device
          type: string
        readyForInitialConfiguration:
          description: Whether the device is ready for initial configuration
          type: number
        bootstrapReadinessCheckInProgress:
          description: Whether bootstrap readiness check is in progress
          type: number
        subnetOobId:
          description: Subnet ID for OOB management
          type: number
        subnetOobIndex:
          description: Subnet OOB index
          type: number
        requiresOsInstall:
          description: Whether the device requires OS installation
          type: boolean
        bootstrapSkipInitialConfiguration:
          description: Whether to skip initial configuration during bootstrap
          type: number
        bootstrapExpectedPartnerHostname:
          description: Expected partner hostname during bootstrap
          type: string
        loopbackAddress:
          description: Loopback IPv4 address
          type: string
        loopbackAddressIpv6:
          description: Loopback IPv6 address
          type: string
        asn:
          description: ASN of the network device
          type: number
        vtepAddress:
          description: VTEP IPv4 address
          type: string
        vtepAddressIpv6:
          description: VTEP IPv6 address
          type: string
        mlagSystemMac:
          description: MLAG system MAC address
          type: string
        mlagDomainId:
          description: MLAG domain ID
          type: number
        quarantineSubnetStart:
          description: Quarantine subnet start address
          type: string
        quarantineSubnetEnd:
          description: Quarantine subnet end address
          type: string
        quarantineSubnetPrefixSize:
          description: Quarantine subnet prefix size
          type: number
        quarantineSubnetGateway:
          description: Quarantine subnet gateway address
          type: string
        quarantineVlan:
          description: Quarantine VLAN ID
          type: number
        defaultMtu:
          description: Default MTU
          type: number
        variablesMaterializedForOSAssets:
          description: Variables materialized for OS assets
          type: object
        secretsMaterializedForOSAssets:
          description: Secrets materialized for OS assets
          type: object
        bootstrapReadinessCheckResult:
          description: Bootstrap readiness check result
          type: object
        isGateway:
          description: Whether the network device is a gateway
          type: number
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - driver
      - position
      - revision
      - switchId
      type: object
    NetworkDevicePaginatedList:
      example:
        data:
        - bootstrapReadinessCheckInProgress: 9.301444243932576
          country: country
          mlagDomainId: 1.2315135367772556
          datacenterName: datacenterName
          switchId: 0.8008281904610115
          quarantineSubnetGateway: quarantineSubnetGateway
          datacenterMeta: datacenterMeta
          vtepAddressIpv6: vtepAddressIpv6
          managementMacAddress: managementMacAddress
          isGateway: 7.457744773683766
          identifierString: identifierString
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          bootstrapReadinessCheckResult: "{}"
          bootstrapExpectedPartnerHostname: bootstrapExpectedPartnerHostname
          serialNumber: serialNumber
          loopbackAddressIpv6: loopbackAddressIpv6
          managementAddressGateway: managementAddressGateway
          revision: 1
          tags: tags
          requiresOsInstall: true
          driver: sonic_enterprise
          provisionerType: provisionerType
          mlagSystemMac: mlagSystemMac
          rackPositionLowerUnit: 5.962133916683182
          position: leaf
          secretsMaterializedForOSAssets: "{}"
          status: active
          quarantineVlan: 1.4894159098541704
          city: city
          datacenterRack: datacenterRack
          description: description
          datacenterRoom: datacenterRoom
          vtepAddress: vtepAddress
          quarantineSubnetPrefixSize: 1.0246457001441578
          rackPositionUpperUnit: 1.4658129805029452
          bootstrapSkipInitialConfiguration: 4.145608029883936
          defaultMtu: 6.84685269835264
          managementAddress: managementAddress
          loopbackAddress: loopbackAddress
          quarantineSubnetEnd: quarantineSubnetEnd
          subnetOobIndex: 2.027123023002322
          managementAddressMask: managementAddressMask
          chassisIdentifier: chassisIdentifier
          readyForInitialConfiguration: 7.061401241503109
          syslogEnabled: true
          managementPort: 5.637376656633329
          managementPassword: password
          subnetOobId: 3.616076749251911
          managementProtocol: managementProtocol
          siteId: 6.027456183070403
          orderIndex: 2.3021358869347655
          variablesMaterializedForOSAssets: "{}"
          networkTypesAllowed:
          - networkTypesAllowed
          - networkTypesAllowed
          quarantineSubnetStart: quarantineSubnetStart
          asn: 7.386281948385884
          username: username
        - bootstrapReadinessCheckInProgress: 9.301444243932576
          country: country
          mlagDomainId: 1.2315135367772556
          datacenterName: datacenterName
          switchId: 0.8008281904610115
          quarantineSubnetGateway: quarantineSubnetGateway
          datacenterMeta: datacenterMeta
          vtepAddressIpv6: vtepAddressIpv6
          managementMacAddress: managementMacAddress
          isGateway: 7.457744773683766
          identifierString: identifierString
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          bootstrapReadinessCheckResult: "{}"
          bootstrapExpectedPartnerHostname: bootstrapExpectedPartnerHostname
          serialNumber: serialNumber
          loopbackAddressIpv6: loopbackAddressIpv6
          managementAddressGateway: managementAddressGateway
          revision: 1
          tags: tags
          requiresOsInstall: true
          driver: sonic_enterprise
          provisionerType: provisionerType
          mlagSystemMac: mlagSystemMac
          rackPositionLowerUnit: 5.962133916683182
          position: leaf
          secretsMaterializedForOSAssets: "{}"
          status: active
          quarantineVlan: 1.4894159098541704
          city: city
          datacenterRack: datacenterRack
          description: description
          datacenterRoom: datacenterRoom
          vtepAddress: vtepAddress
          quarantineSubnetPrefixSize: 1.0246457001441578
          rackPositionUpperUnit: 1.4658129805029452
          bootstrapSkipInitialConfiguration: 4.145608029883936
          defaultMtu: 6.84685269835264
          managementAddress: managementAddress
          loopbackAddress: loopbackAddress
          quarantineSubnetEnd: quarantineSubnetEnd
          subnetOobIndex: 2.027123023002322
          managementAddressMask: managementAddressMask
          chassisIdentifier: chassisIdentifier
          readyForInitialConfiguration: 7.061401241503109
          syslogEnabled: true
          managementPort: 5.637376656633329
          managementPassword: password
          subnetOobId: 3.616076749251911
          managementProtocol: managementProtocol
          siteId: 6.027456183070403
          orderIndex: 2.3021358869347655
          variablesMaterializedForOSAssets: "{}"
          networkTypesAllowed:
          - networkTypesAllowed
          - networkTypesAllowed
          quarantineSubnetStart: quarantineSubnetStart
          asn: 7.386281948385884
          username: username
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/NetworkDevice'
          title: List of network device's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    ProvisionerType:
      enum:
      - vpls
      - vxlan
      - vlan
      - sdn
      - lan
      - evpnvxlanl2
      type: string
    CreateNetworkDevice:
      example:
        country: United States
        datacenterName: DC-North
        city: San Francisco
        datacenterRack: Rack-01
        quarantineSubnetGateway: 192.168.100.1
        torLinkedId: 42
        description: Primary datacenter core switch
        isBorderDevice: false
        datacenterMeta: dc-west-1
        datacenterRoom: Room A
        vtepAddress: 10.0.0.2
        isGateway: true
        overwriteWithHostnameFromFetchedSwitch: false
        quarantineSubnetPrefixSize: 24
        identifierString: switch-dc1-rack3-01
        rackPositionUpperUnit: 42
        defaultMtu: 1500
        oobMgmtIpv4Address: 192.168.1.0
        managementAddress: 192.168.1.10
        loopbackAddress: 10.0.0.1
        quarantineSubnetEnd: 192.168.100.254
        serialNumber: FDO2046A12C
        managementAddressMask: 255.255.255.0
        chassisIdentifier: CHASSIS-XYZ123
        chassisRackId: 42
        managementAddressGateway: 192.168.1.1
        tags:
        - core
        - production
        requiresOsInstall: false
        isStorageSwitch: false
        syslogEnabled: true
        provisionerType: evpnvxlanl2
        driver: sonic_enterprise
        managementPort: 22
        managementPassword: managementPassword
        managementProtocol: SSH
        siteId: 1
        orderIndex: 100
        managementMAC: 00:11:22:33:44:55
        networkTypesAllowed:
        - networkTypesAllowed
        - networkTypesAllowed
        position: leaf
        quarantineSubnetStart: 192.168.100.1
        rackPositionLowerUnit: 40
        asn: 65001
        quarantineVlan: 100
        username: admin
      properties:
        siteId:
          description: Site identifier
          example: 1
          type: integer
        datacenterName:
          description: Name of the datacenter
          example: DC-North
          type: string
        identifierString:
          description: Unique identifier string for the network device
          example: switch-dc1-rack3-01
          type: string
        chassisRackId:
          description: ID of the rack where the network device chassis is installed
          example: 42
          type: integer
        chassisIdentifier:
          description: Unique identifier for the network device chassis
          example: CHASSIS-XYZ123
          nullable: true
          type: string
        provisionerType:
          allOf:
          - $ref: '#/components/schemas/ProvisionerType'
          description: Type of provisioner used for this network device
          example: evpnvxlanl2
        driver:
          allOf:
          - $ref: '#/components/schemas/NetworkDeviceDriver'
          description: Driver software used to communicate with the network device
          example: sonic_enterprise
        position:
          description: The physical or logical position of the network device in the
            network topology.
          enum:
          - tor
          - north
          - spine
          - leaf
          - other
          example: leaf
          type: string
        torLinkedId:
          description: ID of the Top-of-Rack (TOR) switch that this network device
            is linked to. Used for establishing hierarchical relationships between
            network devices.
          example: 42
          nullable: true
          type: number
        isGateway:
          description: Indicates if this network device acts as a gateway for external
            network traffic
          example: true
          type: boolean
        syslogEnabled:
          description: Indicates if syslog logging is enabled for this network device
          example: true
          nullable: true
          type: boolean
        isStorageSwitch:
          description: Indicates if this network device is dedicated to storage traffic
          example: false
          type: boolean
        isBorderDevice:
          description: Indicates if this network device functions as a border device
            connecting to external networks
          example: false
          type: boolean
        quarantineSubnetStart:
          description: The starting IP address of the quarantine subnet range
          example: 192.168.100.1
          nullable: true
          type: string
        quarantineSubnetEnd:
          description: The ending IP address of the quarantine subnet range
          example: 192.168.100.254
          nullable: true
          type: string
        quarantineSubnetPrefixSize:
          description: The prefix size for the quarantine subnet
          example: 24
          nullable: true
          type: integer
        quarantineSubnetGateway:
          description: The gateway IP address for the quarantine subnet
          example: 192.168.100.1
          nullable: true
          type: string
        quarantineVlan:
          description: The VLAN ID for the quarantine network
          example: 100
          type: integer
        managementProtocol:
          description: "The protocol used to manage the network device (e.g., SSH,\
            \ HTTPS)"
          example: SSH
          nullable: true
          type: string
        managementAddress:
          description: The IP address used to manage the network device
          example: 192.168.1.10
          nullable: true
          type: string
        managementPort:
          description: The port number used for management connections
          example: 22
          nullable: true
          type: integer
        username:
          description: The username used for management authentication
          example: admin
          nullable: true
          type: string
        managementPassword:
          description: The password used for management authentication
          nullable: true
          type: string
        managementAddressGateway:
          description: The gateway IP address for the management network
          example: 192.168.1.1
          nullable: true
          type: string
        managementAddressMask:
          description: The subnet mask for the management network
          example: 255.255.255.0
          nullable: true
          type: string
        managementMAC:
          description: The MAC address of the management interface
          example: 00:11:22:33:44:55
          nullable: true
          type: string
        loopbackAddress:
          description: The loopback IP address assigned to the network device
          example: 10.0.0.1
          nullable: true
          type: string
        vtepAddress:
          description: The VTEP (VXLAN Tunnel Endpoint) IP address for overlay networking
          example: 10.0.0.2
          nullable: true
          type: string
        asn:
          description: The Autonomous System Number for BGP routing
          example: 65001
          nullable: true
          type: number
        networkTypesAllowed:
          description: Network types allowed
          items:
            type: string
          type: array
        description:
          description: Additional description or notes about the network device
          example: Primary datacenter core switch
          nullable: true
          type: string
        country:
          description: The country where the network device is located
          example: United States
          nullable: true
          type: string
        city:
          description: The city where the network device is located
          example: San Francisco
          nullable: true
          type: string
        datacenterMeta:
          description: Metadata about the datacenter where the device is located
          example: dc-west-1
          nullable: true
          type: string
        datacenterRoom:
          description: The room within the datacenter where the device is located
          example: Room A
          nullable: true
          type: string
        datacenterRack:
          description: The rack identifier within the datacenter where the device
            is mounted
          example: Rack-01
          nullable: true
          type: string
        rackPositionUpperUnit:
          description: The upper rack unit position where the device is mounted
          example: 42
          nullable: true
          type: integer
        rackPositionLowerUnit:
          description: The lower rack unit position where the device is mounted
          example: 40
          nullable: true
          type: integer
        serialNumber:
          description: The serial number of the network device
          example: FDO2046A12C
          type: string
        orderIndex:
          description: The order index for sorting network devices
          example: 100
          type: number
        defaultMtu:
          description: The default Maximum Transmission Unit (MTU) for interfaces
            on this device
          example: 1500
          nullable: true
          type: number
        tags:
          description: Tags for categorizing and filtering network devices
          example:
          - core
          - production
          items:
            type: string
          nullable: true
          type: array
        requiresOsInstall:
          description: Indicates if the device requires OS installation before provisioning
          example: false
          type: boolean
        oobMgmtIpv4Address:
          description: The IPv4 address for out-of-band management
          example: 192.168.1.0
          nullable: true
          type: string
        overwriteWithHostnameFromFetchedSwitch:
          description: Whether to overwrite the hostname with the one fetched from
            the device
          example: false
          nullable: true
          type: boolean
      required:
      - driver
      - position
      type: object
    UpdateNetworkDevice:
      example:
        country: United States
        datacenterName: DC-North
        city: San Francisco
        datacenterRack: Rack-01
        quarantineSubnetGateway: 192.168.100.1
        torLinkedId: 42
        description: Primary datacenter core switch
        isBorderDevice: false
        datacenterMeta: dc-west-1
        datacenterRoom: Room A
        vtepAddress: 10.0.0.2
        isGateway: true
        overwriteWithHostnameFromFetchedSwitch: false
        quarantineSubnetPrefixSize: 24
        identifierString: switch-dc1-rack3-01
        rackPositionUpperUnit: 42
        defaultMtu: 1500
        managementAddress: 192.168.1.10
        loopbackAddress: 10.0.0.1
        quarantineSubnetEnd: 192.168.100.254
        serialNumber: FDO2046A12C
        managementAddressMask: 255.255.255.0
        chassisIdentifier: CHASSIS-XYZ123
        chassisRackId: 42
        managementAddressGateway: 192.168.1.1
        tags:
        - core
        - production
        requiresOsInstall: false
        isStorageSwitch: false
        syslogEnabled: true
        provisionerType: evpnvxlanl2
        driver: sonic_enterprise
        managementPort: 22
        managementPassword: managementPassword
        managementProtocol: SSH
        siteId: 1
        orderIndex: 100
        managementMAC: 00:11:22:33:44:55
        networkTypesAllowed:
        - networkTypesAllowed
        - networkTypesAllowed
        position: leaf
        quarantineSubnetStart: 192.168.100.1
        rackPositionLowerUnit: 40
        asn: 65001
        quarantineVlan: 100
        username: admin
      properties:
        siteId:
          description: Site identifier
          example: 1
          type: integer
        datacenterName:
          description: Name of the datacenter
          example: DC-North
          type: string
        identifierString:
          description: Unique identifier string for the network device
          example: switch-dc1-rack3-01
          type: string
        chassisRackId:
          description: ID of the rack where the network device chassis is installed
          example: 42
          type: integer
        chassisIdentifier:
          description: Unique identifier for the network device chassis
          example: CHASSIS-XYZ123
          nullable: true
          type: string
        provisionerType:
          allOf:
          - $ref: '#/components/schemas/ProvisionerType'
          description: Type of provisioner used for this network device
          example: evpnvxlanl2
        driver:
          allOf:
          - $ref: '#/components/schemas/NetworkDeviceDriver'
          description: Driver software used to communicate with the network device
          example: sonic_enterprise
        position:
          description: The physical or logical position of the network device in the
            network topology.
          enum:
          - tor
          - north
          - spine
          - leaf
          - other
          example: leaf
          type: string
        torLinkedId:
          description: ID of the Top-of-Rack (TOR) switch that this network device
            is linked to. Used for establishing hierarchical relationships between
            network devices.
          example: 42
          nullable: true
          type: number
        isGateway:
          description: Indicates if this network device acts as a gateway for external
            network traffic
          example: true
          type: boolean
        syslogEnabled:
          description: Indicates if syslog logging is enabled for this network device
          example: true
          nullable: true
          type: boolean
        isStorageSwitch:
          description: Is storage network device
          example: false
          type: boolean
        isBorderDevice:
          description: Is border device
          example: false
          type: boolean
        quarantineSubnetStart:
          description: The starting IP address of the quarantine subnet range
          example: 192.168.100.1
          nullable: true
          type: string
        quarantineSubnetEnd:
          description: The ending IP address of the quarantine subnet range
          example: 192.168.100.254
          nullable: true
          type: string
        quarantineSubnetPrefixSize:
          description: The prefix size for the quarantine subnet
          example: 24
          nullable: true
          type: integer
        quarantineSubnetGateway:
          description: The gateway IP address for the quarantine subnet
          example: 192.168.100.1
          nullable: true
          type: string
        quarantineVlan:
          description: The VLAN ID for the quarantine network
          example: 100
          type: integer
        managementProtocol:
          description: "The protocol used to manage the network device (e.g., SSH,\
            \ HTTPS)"
          example: SSH
          nullable: true
          type: string
        managementAddress:
          description: Management Address
          example: 192.168.1.10
          nullable: true
          type: string
        managementPort:
          description: Management Port
          example: 22
          nullable: true
          type: integer
        username:
          description: The username used for management authentication
          example: admin
          nullable: true
          type: string
        managementPassword:
          description: The password used for management authentication
          nullable: true
          type: string
        managementAddressGateway:
          description: The gateway IP address for the management network
          example: 192.168.1.1
          nullable: true
          type: string
        managementAddressMask:
          description: The subnet mask for the management network
          example: 255.255.255.0
          nullable: true
          type: string
        managementMAC:
          description: The MAC address of the management interface
          example: 00:11:22:33:44:55
          nullable: true
          type: string
        loopbackAddress:
          description: Loopback Address
          example: 10.0.0.1
          nullable: true
          type: string
        vtepAddress:
          description: VTEP Address
          example: 10.0.0.2
          nullable: true
          type: string
        asn:
          description: The Autonomous System Number for BGP routing
          example: 65001
          nullable: true
          type: number
        networkTypesAllowed:
          description: Network types allowed
          items:
            type: string
          type: array
        description:
          description: Additional description or notes about the network device
          example: Primary datacenter core switch
          nullable: true
          type: string
        country:
          description: The country where the network device is located
          example: United States
          nullable: true
          type: string
        city:
          description: The city where the network device is located
          example: San Francisco
          nullable: true
          type: string
        datacenterMeta:
          description: Metadata about the datacenter where the device is located
          example: dc-west-1
          nullable: true
          type: string
        datacenterRoom:
          description: The room within the datacenter where the device is located
          example: Room A
          nullable: true
          type: string
        datacenterRack:
          description: The rack identifier within the datacenter where the device
            is mounted
          example: Rack-01
          nullable: true
          type: string
        rackPositionUpperUnit:
          description: The upper rack unit position where the device is mounted
          example: 42
          nullable: true
          type: integer
        rackPositionLowerUnit:
          description: The lower rack unit position where the device is mounted
          example: 40
          nullable: true
          type: integer
        serialNumber:
          description: The serial number of the network device
          example: FDO2046A12C
          type: string
        orderIndex:
          description: Order index
          example: 100
          type: number
        defaultMtu:
          description: Default MTU
          example: 1500
          nullable: true
          type: number
        tags:
          description: Tags for categorizing and filtering network devices
          example:
          - core
          - production
          items:
            type: string
          nullable: true
          type: array
        requiresOsInstall:
          description: Indicates if the device requires OS installation before provisioning
          example: false
          type: boolean
        overwriteWithHostnameFromFetchedSwitch:
          description: Whether to overwrite the hostname with the one fetched from
            the device
          example: false
          nullable: true
          type: boolean
      type: object
    NetworkEquipmentReprovision:
      properties: {}
      type: object
    NetworkDeviceDefaults:
      example: {}
      properties: {}
      type: object
    CreateNetworkDeviceDefaults:
      example:
        serialNumber: serialNumber
        mlagDomainId: 100
        mlagPartnerVlanId: 300
        datacenterName: datacenterName
        isPartOfMlagPair: 1
        skipInitialConfiguration: 6.027456183070403
        vtepAddressIpv4: 10.10.10.1
        loopbackAddressIpv6: 2001:db8::1
        vtepAddressIpv6: fd00::1
        managementMacAddress: 00:1A:2B:3C:4D:5E
        customVariables:
          vlan10: 10.1.1.1
          vlan20: 10.2.2.2
        mlagPeerLinkPortChannelId: 200
        volumeTemplateId: 42
        identifierString: device_123
        loopbackAddressIpv4: 192.168.1.1
        mlagSystemMac: AA:BB:CC:DD:EE:FF
        orderIndex: 5
        position: position
        mlagPartnerHostname: mlag-host1
        asn: 0.8008281904610115
        defaultMtu: 1500
      properties:
        datacenterName:
          description: Name of the datacenter
          type: string
        serialNumber:
          description: Serial number of the network device
          type: string
        managementMacAddress:
          description: MAC address of the network device. Must be in the format XX:XX:XX:XX:XX:XX.
          example: 00:1A:2B:3C:4D:5E
          type: string
        position:
          description: Position of the network device
          type: string
        identifierString:
          description: "Identifier string of the network device. Can contain letters,\
            \ numbers, dots, underscores, and hyphens (1-63 characters)."
          example: device_123
          type: string
        asn:
          description: ASN of the network device
          type: number
        skipInitialConfiguration:
          description: Skip initial configuration
          type: number
        customVariables:
          description: "Custom variables associated with the network device, stored\
            \ as key-value pairs."
          example:
            vlan10: 10.1.1.1
            vlan20: 10.2.2.2
          type: object
        mlagDomainId:
          description: "MLAG domain ID, must be between 1 and 4096."
          example: 100
          maximum: 4096
          minimum: 1
          type: number
        loopbackAddressIpv4:
          description: IPv4 address assigned to the loopback interface.
          example: 192.168.1.1
          type: string
        loopbackAddressIpv6:
          description: IPv6 address assigned to the loopback interface.
          example: 2001:db8::1
          type: string
        vtepAddressIpv4:
          description: VTEP (VXLAN Tunnel Endpoint) IPv4 address.
          example: 10.10.10.1
          type: string
        vtepAddressIpv6:
          description: VTEP (VXLAN Tunnel Endpoint) IPv6 address.
          example: fd00::1
          type: string
        orderIndex:
          description: Order index used for sorting or prioritization.
          example: 5
          type: number
        defaultMtu:
          description: "Default MTU size, must be between 68 and 10000."
          example: 1500
          maximum: 10000
          minimum: 68
          type: number
        volumeTemplateId:
          description: ID of the volume template associated with the network device.
          example: 42
          type: number
        mlagPartnerHostname:
          description: "MLAG partner hostname. Can contain letters, numbers, dots,\
            \ underscores, and hyphens (1-63 characters)."
          example: mlag-host1
          type: string
        isPartOfMlagPair:
          description: "Indicates whether the device is part of an MLAG pair (0 =\
            \ No, 1 = Yes)."
          example: 1
          maximum: 1
          minimum: 0
          type: number
        mlagSystemMac:
          description: MLAG system MAC address in the format XX:XX:XX:XX:XX:XX.
          example: AA:BB:CC:DD:EE:FF
          type: string
        mlagPeerLinkPortChannelId:
          description: "MLAG peer link Port-Channel ID, must be between 1 and 4096."
          example: 200
          maximum: 4096
          minimum: 1
          type: number
        mlagPartnerVlanId:
          description: "MLAG partner VLAN ID, must be between 1 and 4096."
          example: 300
          maximum: 4096
          minimum: 1
          type: number
      required:
      - datacenterName
      - managementMacAddress
      type: object
    NetworkDevicePortStatus:
      example:
        ports:
        - Eth0/0
        - Eth0/1
        status: true
      properties:
        ports:
          description: The ports of the network device that will have their status
            changed
          example:
          - Eth0/0
          - Eth0/1
          items:
            type: string
          type: array
        status:
          description: The new status of the ports
          example: true
          type: boolean
      required:
      - ports
      - status
      type: object
    NetworkDeviceStatus:
      example:
        status: active
      properties:
        status:
          description: The new network device status
          example: active
          type: string
      required:
      - status
      type: object
    DiscoveryQuery:
      properties: {}
      type: object
    BaseFabricDto:
      properties:
        fabricType:
          description: The type of network fabric
          enum:
          - ethernet
          - fibre_channel
          example: ethernet
          type: string
        defaultNetworkProfileId:
          description: "Unique identifier for the default network profile. Must be\
            \ a positive integer (minimum: 1) corresponding to an existing profile."
          example: 101
          minimum: 1
          type: integer
        gnmiMonitoringEnabled:
          description: Enables gNMI monitoring for telemetry data collection using
            the gNMI protocol.
          example: false
          type: boolean
        syslogMonitoringEnabled:
          description: Enables syslog monitoring for capturing system logs for diagnostics
            and troubleshooting.
          example: true
          type: boolean
        zeroTouchEnabled:
          description: Enables zero-touch provisioning for automatic device configuration.
          example: false
          type: boolean
      required:
      - fabricType
      type: object
    EthernetFabric:
      example:
        vrfVlanRanges:
        - 400-450
        - 460-470
        lagRanges:
        - 100-200
        - 300-400
        preventCleanupFromUplinks: true
        gnmiMonitoringEnabled: false
        asnRanges:
        - 65000-65010
        vlanRanges:
        - 3000-3100
        - 2000-2100
        syslogMonitoringEnabled: true
        zeroTouchEnabled: false
        fabricType: ethernet
        numberOfSpinesNextToLeafSwitches: 2
        extraInternalIPsPerSubnet: 2
        leafSwitchesHaveMlagPairs: false
        defaultVlan: 10
        mlagRanges:
        - 30-40
        - 50-60
        preventVlanCleanup:
        - 1000-1100
        vniPrefix: 5000
        reservedVlans:
        - 2000-2100
        - 2200-2300
        allocateDefaultVlan: true
        defaultNetworkProfileId: 101
      properties:
        fabricType:
          description: The type of network fabric
          enum:
          - ethernet
          example: ethernet
          type: string
        defaultNetworkProfileId:
          description: "Unique identifier for the default network profile. Must be\
            \ a positive integer (minimum: 1) corresponding to an existing profile."
          example: 101
          minimum: 1
          type: integer
        gnmiMonitoringEnabled:
          description: Enables gNMI monitoring for telemetry data collection using
            the gNMI protocol.
          example: false
          type: boolean
        syslogMonitoringEnabled:
          description: Enables syslog monitoring for capturing system logs for diagnostics
            and troubleshooting.
          example: true
          type: boolean
        zeroTouchEnabled:
          description: Enables zero-touch provisioning for automatic device configuration.
          example: false
          type: boolean
        allocateDefaultVlan:
          description: Indicates whether to automatically allocate a default VLAN.
          example: true
          type: boolean
        asnRanges:
          description: "ASN ranges in the format \"start-end\", where each range is\
            \ an ordered pair with values between 1 and 4294967295."
          example:
          - 65000-65010
          items:
            type: string
          type: array
        defaultVlan:
          description: Default VLAN ID. Must be a number between 1 and 4096.
          example: 10
          maximum: 4096
          minimum: 1
          type: integer
        extraInternalIPsPerSubnet:
          description: Extra internal IPs allocated per subnet; valid range is between
            1 and 1000.
          example: 2
          maximum: 1000
          minimum: 1
          type: integer
        lagRanges:
          description: Link Aggregation (LAG) ranges in the format "start-end"; each
            range must be within the bounds of 1 to 4096.
          example:
          - 100-200
          - 300-400
          items:
            type: string
          type: array
        leafSwitchesHaveMlagPairs:
          description: Indicates if leaf switches have MLAG pairs.
          example: false
          type: boolean
        mlagRanges:
          description: MLAG ID ranges. Each range must be provided in "start-end"
            format with values between 1 and 4096.
          example:
          - 30-40
          - 50-60
          items:
            type: string
          type: array
        numberOfSpinesNextToLeafSwitches:
          description: Number of spines adjacent to leaf switches. Must be a positive
            number.
          example: 2
          maximum: 1000
          minimum: 1
          type: integer
        preventVlanCleanup:
          description: VLAN ranges that should be prevented from automatic cleanup.
            Format must be "start-end".
          example:
          - 1000-1100
          items:
            type: string
          type: array
        preventCleanupFromUplinks:
          description: Flag indicating whether cleanup from uplink interfaces should
            be prevented.
          example: true
          type: boolean
        reservedVlans:
          description: Reserved VLAN ranges that are excluded from general allocation.
            Must follow the "start-end" format.
          example:
          - 2000-2100
          - 2200-2300
          items:
            type: string
          type: array
        vlanRanges:
          description: Array of VLAN range strings in "start-end" format to be used
            in configuration.
          example:
          - 3000-3100
          - 2000-2100
          items:
            type: string
          type: array
        vniPrefix:
          description: The VNI prefix for the EVPN VXLAN fabric.
          example: 5000
          type: integer
        vrfVlanRanges:
          description: VLAN ranges to be associated with VRF instances. Each value
            must be an ordered pair specified in the "start-end" format.
          example:
          - 400-450
          - 460-470
          items:
            type: string
          type: array
      required:
      - fabricType
      type: object
    FibreChannelFabric:
      properties:
        fabricType:
          description: The type of network fabric
          enum:
          - fibre_channel
          example: fibre_channel
          type: string
        defaultNetworkProfileId:
          description: "Unique identifier for the default network profile. Must be\
            \ a positive integer (minimum: 1) corresponding to an existing profile."
          example: 101
          minimum: 1
          type: integer
        gnmiMonitoringEnabled:
          description: Enables gNMI monitoring for telemetry data collection using
            the gNMI protocol.
          example: false
          type: boolean
        syslogMonitoringEnabled:
          description: Enables syslog monitoring for capturing system logs for diagnostics
            and troubleshooting.
          example: true
          type: boolean
        zeroTouchEnabled:
          description: Enables zero-touch provisioning for automatic device configuration.
          example: false
          type: boolean
        vsanId:
          description: VSAN ID for the Fibre Channel fabric
          example: 100
          maximum: 4094
          minimum: 1
          type: integer
        topologyType:
          description: Fabric topology type
          enum:
          - director
          - core-edge
          - mesh
          example: core-edge
          type: string
        mtu:
          description: Maximum transmission unit (MTU) size in bytes
          example: 2112
          maximum: 2112
          minimum: 512
          type: number
        zoningConfiguration:
          additionalProperties: false
          description: Zoning configuration for the fabric
          type: object
        interopMode:
          description: Interoperability mode for multi-vendor environments
          enum:
          - standard
          - interop1
          - interop2
          - interop3
          example: standard
          type: string
        qosConfiguration:
          additionalProperties: false
          description: Quality of Service (QoS) configuration
          type: object
        trunkingConfiguration:
          additionalProperties: false
          description: Trunking configuration for ISLs (Inter-Switch Links)
          type: object
        portChannelConfiguration:
          additionalProperties: false
          description: Port channel configuration for ISLs
          type: object
      required:
      - fabricType
      type: object
    NetworkFabric:
      example:
        networkEquipment:
        - bootstrapReadinessCheckInProgress: 9.301444243932576
          country: country
          mlagDomainId: 1.2315135367772556
          datacenterName: datacenterName
          switchId: 0.8008281904610115
          quarantineSubnetGateway: quarantineSubnetGateway
          datacenterMeta: datacenterMeta
          vtepAddressIpv6: vtepAddressIpv6
          managementMacAddress: managementMacAddress
          isGateway: 7.457744773683766
          identifierString: identifierString
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          bootstrapReadinessCheckResult: "{}"
          bootstrapExpectedPartnerHostname: bootstrapExpectedPartnerHostname
          serialNumber: serialNumber
          loopbackAddressIpv6: loopbackAddressIpv6
          managementAddressGateway: managementAddressGateway
          revision: 1
          tags: tags
          requiresOsInstall: true
          driver: sonic_enterprise
          provisionerType: provisionerType
          mlagSystemMac: mlagSystemMac
          rackPositionLowerUnit: 5.962133916683182
          position: leaf
          secretsMaterializedForOSAssets: "{}"
          status: active
          quarantineVlan: 1.4894159098541704
          city: city
          datacenterRack: datacenterRack
          description: description
          datacenterRoom: datacenterRoom
          vtepAddress: vtepAddress
          quarantineSubnetPrefixSize: 1.0246457001441578
          rackPositionUpperUnit: 1.4658129805029452
          bootstrapSkipInitialConfiguration: 4.145608029883936
          defaultMtu: 6.84685269835264
          managementAddress: managementAddress
          loopbackAddress: loopbackAddress
          quarantineSubnetEnd: quarantineSubnetEnd
          subnetOobIndex: 2.027123023002322
          managementAddressMask: managementAddressMask
          chassisIdentifier: chassisIdentifier
          readyForInitialConfiguration: 7.061401241503109
          syslogEnabled: true
          managementPort: 5.637376656633329
          managementPassword: password
          subnetOobId: 3.616076749251911
          managementProtocol: managementProtocol
          siteId: 6.027456183070403
          orderIndex: 2.3021358869347655
          variablesMaterializedForOSAssets: "{}"
          networkTypesAllowed:
          - networkTypesAllowed
          - networkTypesAllowed
          quarantineSubnetStart: quarantineSubnetStart
          asn: 7.386281948385884
          username: username
        - bootstrapReadinessCheckInProgress: 9.301444243932576
          country: country
          mlagDomainId: 1.2315135367772556
          datacenterName: datacenterName
          switchId: 0.8008281904610115
          quarantineSubnetGateway: quarantineSubnetGateway
          datacenterMeta: datacenterMeta
          vtepAddressIpv6: vtepAddressIpv6
          managementMacAddress: managementMacAddress
          isGateway: 7.457744773683766
          identifierString: identifierString
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          bootstrapReadinessCheckResult: "{}"
          bootstrapExpectedPartnerHostname: bootstrapExpectedPartnerHostname
          serialNumber: serialNumber
          loopbackAddressIpv6: loopbackAddressIpv6
          managementAddressGateway: managementAddressGateway
          revision: 1
          tags: tags
          requiresOsInstall: true
          driver: sonic_enterprise
          provisionerType: provisionerType
          mlagSystemMac: mlagSystemMac
          rackPositionLowerUnit: 5.962133916683182
          position: leaf
          secretsMaterializedForOSAssets: "{}"
          status: active
          quarantineVlan: 1.4894159098541704
          city: city
          datacenterRack: datacenterRack
          description: description
          datacenterRoom: datacenterRoom
          vtepAddress: vtepAddress
          quarantineSubnetPrefixSize: 1.0246457001441578
          rackPositionUpperUnit: 1.4658129805029452
          bootstrapSkipInitialConfiguration: 4.145608029883936
          defaultMtu: 6.84685269835264
          managementAddress: managementAddress
          loopbackAddress: loopbackAddress
          quarantineSubnetEnd: quarantineSubnetEnd
          subnetOobIndex: 2.027123023002322
          managementAddressMask: managementAddressMask
          chassisIdentifier: chassisIdentifier
          readyForInitialConfiguration: 7.061401241503109
          syslogEnabled: true
          managementPort: 5.637376656633329
          managementPassword: password
          subnetOobId: 3.616076749251911
          managementProtocol: managementProtocol
          siteId: 6.027456183070403
          orderIndex: 2.3021358869347655
          variablesMaterializedForOSAssets: "{}"
          networkTypesAllowed:
          - networkTypesAllowed
          - networkTypesAllowed
          quarantineSubnetStart: quarantineSubnetStart
          asn: 7.386281948385884
          username: username
        createdTimestamp: 2025-03-13T15:59:33.442Z
        name: My Network Fabric
        siteId: 0.8008281904610115
        description: This network fabric is used for corporate office connectivity.
        fabricConfiguration:
          vrfVlanRanges:
          - 400-450
          - 460-470
          lagRanges:
          - 100-200
          - 300-400
          preventCleanupFromUplinks: true
          gnmiMonitoringEnabled: false
          asnRanges:
          - 65000-65010
          vlanRanges:
          - 3000-3100
          - 2000-2100
          syslogMonitoringEnabled: true
          zeroTouchEnabled: false
          fabricType: ethernet
          numberOfSpinesNextToLeafSwitches: 2
          extraInternalIPsPerSubnet: 2
          leafSwitchesHaveMlagPairs: false
          defaultVlan: 10
          mlagRanges:
          - 30-40
          - 50-60
          preventVlanCleanup:
          - 1000-1100
          vniPrefix: 5000
          reservedVlans:
          - 2000-2100
          - 2200-2300
          allocateDefaultVlan: true
          defaultNetworkProfileId: 101
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: "1"
        updatedTimestamp: 2025-03-13T15:59:33.443Z
        revision: "1"
      properties:
        siteId:
          description: The ID of the site where the entity is located.
          format: integer
          type: number
        name:
          description: The network fabric name
          example: My Network Fabric
          maxLength: 100
          minLength: 1
          type: string
        description:
          description: Network fabric description
          example: This network fabric is used for corporate office connectivity.
          maxLength: 255
          minLength: 1
          type: string
        fabricConfiguration:
          $ref: '#/components/schemas/NetworkFabric_fabricConfiguration'
        revision:
          description: Revision number of the entity
          example: "1"
          type: string
        createdTimestamp:
          description: Entity creation timestamp
          example: 2025-03-13T15:59:33.442Z
          format: date-time
          type: string
        updatedTimestamp:
          description: Entity last update timestamp
          example: 2025-03-13T15:59:33.443Z
          format: date-time
          type: string
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
        id:
          description: The network fabric ID.
          example: "1"
          type: string
        networkEquipment:
          description: The network equipments in the fabric
          items:
            $ref: '#/components/schemas/NetworkDevice'
          type: array
      required:
      - createdTimestamp
      - fabricConfiguration
      - id
      - name
      - revision
      - updatedTimestamp
      type: object
    NetworkFabricPaginatedList:
      example:
        data:
        - networkEquipment:
          - bootstrapReadinessCheckInProgress: 9.301444243932576
            country: country
            mlagDomainId: 1.2315135367772556
            datacenterName: datacenterName
            switchId: 0.8008281904610115
            quarantineSubnetGateway: quarantineSubnetGateway
            datacenterMeta: datacenterMeta
            vtepAddressIpv6: vtepAddressIpv6
            managementMacAddress: managementMacAddress
            isGateway: 7.457744773683766
            identifierString: identifierString
            links:
            - rel: self
              href: /api/v2/path/to/resource
            - rel: self
              href: /api/v2/path/to/resource
            bootstrapReadinessCheckResult: "{}"
            bootstrapExpectedPartnerHostname: bootstrapExpectedPartnerHostname
            serialNumber: serialNumber
            loopbackAddressIpv6: loopbackAddressIpv6
            managementAddressGateway: managementAddressGateway
            revision: 1
            tags: tags
            requiresOsInstall: true
            driver: sonic_enterprise
            provisionerType: provisionerType
            mlagSystemMac: mlagSystemMac
            rackPositionLowerUnit: 5.962133916683182
            position: leaf
            secretsMaterializedForOSAssets: "{}"
            status: active
            quarantineVlan: 1.4894159098541704
            city: city
            datacenterRack: datacenterRack
            description: description
            datacenterRoom: datacenterRoom
            vtepAddress: vtepAddress
            quarantineSubnetPrefixSize: 1.0246457001441578
            rackPositionUpperUnit: 1.4658129805029452
            bootstrapSkipInitialConfiguration: 4.145608029883936
            defaultMtu: 6.84685269835264
            managementAddress: managementAddress
            loopbackAddress: loopbackAddress
            quarantineSubnetEnd: quarantineSubnetEnd
            subnetOobIndex: 2.027123023002322
            managementAddressMask: managementAddressMask
            chassisIdentifier: chassisIdentifier
            readyForInitialConfiguration: 7.061401241503109
            syslogEnabled: true
            managementPort: 5.637376656633329
            managementPassword: password
            subnetOobId: 3.616076749251911
            managementProtocol: managementProtocol
            siteId: 6.027456183070403
            orderIndex: 2.3021358869347655
            variablesMaterializedForOSAssets: "{}"
            networkTypesAllowed:
            - networkTypesAllowed
            - networkTypesAllowed
            quarantineSubnetStart: quarantineSubnetStart
            asn: 7.386281948385884
            username: username
          - bootstrapReadinessCheckInProgress: 9.301444243932576
            country: country
            mlagDomainId: 1.2315135367772556
            datacenterName: datacenterName
            switchId: 0.8008281904610115
            quarantineSubnetGateway: quarantineSubnetGateway
            datacenterMeta: datacenterMeta
            vtepAddressIpv6: vtepAddressIpv6
            managementMacAddress: managementMacAddress
            isGateway: 7.457744773683766
            identifierString: identifierString
            links:
            - rel: self
              href: /api/v2/path/to/resource
            - rel: self
              href: /api/v2/path/to/resource
            bootstrapReadinessCheckResult: "{}"
            bootstrapExpectedPartnerHostname: bootstrapExpectedPartnerHostname
            serialNumber: serialNumber
            loopbackAddressIpv6: loopbackAddressIpv6
            managementAddressGateway: managementAddressGateway
            revision: 1
            tags: tags
            requiresOsInstall: true
            driver: sonic_enterprise
            provisionerType: provisionerType
            mlagSystemMac: mlagSystemMac
            rackPositionLowerUnit: 5.962133916683182
            position: leaf
            secretsMaterializedForOSAssets: "{}"
            status: active
            quarantineVlan: 1.4894159098541704
            city: city
            datacenterRack: datacenterRack
            description: description
            datacenterRoom: datacenterRoom
            vtepAddress: vtepAddress
            quarantineSubnetPrefixSize: 1.0246457001441578
            rackPositionUpperUnit: 1.4658129805029452
            bootstrapSkipInitialConfiguration: 4.145608029883936
            defaultMtu: 6.84685269835264
            managementAddress: managementAddress
            loopbackAddress: loopbackAddress
            quarantineSubnetEnd: quarantineSubnetEnd
            subnetOobIndex: 2.027123023002322
            managementAddressMask: managementAddressMask
            chassisIdentifier: chassisIdentifier
            readyForInitialConfiguration: 7.061401241503109
            syslogEnabled: true
            managementPort: 5.637376656633329
            managementPassword: password
            subnetOobId: 3.616076749251911
            managementProtocol: managementProtocol
            siteId: 6.027456183070403
            orderIndex: 2.3021358869347655
            variablesMaterializedForOSAssets: "{}"
            networkTypesAllowed:
            - networkTypesAllowed
            - networkTypesAllowed
            quarantineSubnetStart: quarantineSubnetStart
            asn: 7.386281948385884
            username: username
          createdTimestamp: 2025-03-13T15:59:33.442Z
          name: My Network Fabric
          siteId: 0.8008281904610115
          description: This network fabric is used for corporate office connectivity.
          fabricConfiguration:
            vrfVlanRanges:
            - 400-450
            - 460-470
            lagRanges:
            - 100-200
            - 300-400
            preventCleanupFromUplinks: true
            gnmiMonitoringEnabled: false
            asnRanges:
            - 65000-65010
            vlanRanges:
            - 3000-3100
            - 2000-2100
            syslogMonitoringEnabled: true
            zeroTouchEnabled: false
            fabricType: ethernet
            numberOfSpinesNextToLeafSwitches: 2
            extraInternalIPsPerSubnet: 2
            leafSwitchesHaveMlagPairs: false
            defaultVlan: 10
            mlagRanges:
            - 30-40
            - 50-60
            preventVlanCleanup:
            - 1000-1100
            vniPrefix: 5000
            reservedVlans:
            - 2000-2100
            - 2200-2300
            allocateDefaultVlan: true
            defaultNetworkProfileId: 101
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: "1"
          updatedTimestamp: 2025-03-13T15:59:33.443Z
          revision: "1"
        - networkEquipment:
          - bootstrapReadinessCheckInProgress: 9.301444243932576
            country: country
            mlagDomainId: 1.2315135367772556
            datacenterName: datacenterName
            switchId: 0.8008281904610115
            quarantineSubnetGateway: quarantineSubnetGateway
            datacenterMeta: datacenterMeta
            vtepAddressIpv6: vtepAddressIpv6
            managementMacAddress: managementMacAddress
            isGateway: 7.457744773683766
            identifierString: identifierString
            links:
            - rel: self
              href: /api/v2/path/to/resource
            - rel: self
              href: /api/v2/path/to/resource
            bootstrapReadinessCheckResult: "{}"
            bootstrapExpectedPartnerHostname: bootstrapExpectedPartnerHostname
            serialNumber: serialNumber
            loopbackAddressIpv6: loopbackAddressIpv6
            managementAddressGateway: managementAddressGateway
            revision: 1
            tags: tags
            requiresOsInstall: true
            driver: sonic_enterprise
            provisionerType: provisionerType
            mlagSystemMac: mlagSystemMac
            rackPositionLowerUnit: 5.962133916683182
            position: leaf
            secretsMaterializedForOSAssets: "{}"
            status: active
            quarantineVlan: 1.4894159098541704
            city: city
            datacenterRack: datacenterRack
            description: description
            datacenterRoom: datacenterRoom
            vtepAddress: vtepAddress
            quarantineSubnetPrefixSize: 1.0246457001441578
            rackPositionUpperUnit: 1.4658129805029452
            bootstrapSkipInitialConfiguration: 4.145608029883936
            defaultMtu: 6.84685269835264
            managementAddress: managementAddress
            loopbackAddress: loopbackAddress
            quarantineSubnetEnd: quarantineSubnetEnd
            subnetOobIndex: 2.027123023002322
            managementAddressMask: managementAddressMask
            chassisIdentifier: chassisIdentifier
            readyForInitialConfiguration: 7.061401241503109
            syslogEnabled: true
            managementPort: 5.637376656633329
            managementPassword: password
            subnetOobId: 3.616076749251911
            managementProtocol: managementProtocol
            siteId: 6.027456183070403
            orderIndex: 2.3021358869347655
            variablesMaterializedForOSAssets: "{}"
            networkTypesAllowed:
            - networkTypesAllowed
            - networkTypesAllowed
            quarantineSubnetStart: quarantineSubnetStart
            asn: 7.386281948385884
            username: username
          - bootstrapReadinessCheckInProgress: 9.301444243932576
            country: country
            mlagDomainId: 1.2315135367772556
            datacenterName: datacenterName
            switchId: 0.8008281904610115
            quarantineSubnetGateway: quarantineSubnetGateway
            datacenterMeta: datacenterMeta
            vtepAddressIpv6: vtepAddressIpv6
            managementMacAddress: managementMacAddress
            isGateway: 7.457744773683766
            identifierString: identifierString
            links:
            - rel: self
              href: /api/v2/path/to/resource
            - rel: self
              href: /api/v2/path/to/resource
            bootstrapReadinessCheckResult: "{}"
            bootstrapExpectedPartnerHostname: bootstrapExpectedPartnerHostname
            serialNumber: serialNumber
            loopbackAddressIpv6: loopbackAddressIpv6
            managementAddressGateway: managementAddressGateway
            revision: 1
            tags: tags
            requiresOsInstall: true
            driver: sonic_enterprise
            provisionerType: provisionerType
            mlagSystemMac: mlagSystemMac
            rackPositionLowerUnit: 5.962133916683182
            position: leaf
            secretsMaterializedForOSAssets: "{}"
            status: active
            quarantineVlan: 1.4894159098541704
            city: city
            datacenterRack: datacenterRack
            description: description
            datacenterRoom: datacenterRoom
            vtepAddress: vtepAddress
            quarantineSubnetPrefixSize: 1.0246457001441578
            rackPositionUpperUnit: 1.4658129805029452
            bootstrapSkipInitialConfiguration: 4.145608029883936
            defaultMtu: 6.84685269835264
            managementAddress: managementAddress
            loopbackAddress: loopbackAddress
            quarantineSubnetEnd: quarantineSubnetEnd
            subnetOobIndex: 2.027123023002322
            managementAddressMask: managementAddressMask
            chassisIdentifier: chassisIdentifier
            readyForInitialConfiguration: 7.061401241503109
            syslogEnabled: true
            managementPort: 5.637376656633329
            managementPassword: password
            subnetOobId: 3.616076749251911
            managementProtocol: managementProtocol
            siteId: 6.027456183070403
            orderIndex: 2.3021358869347655
            variablesMaterializedForOSAssets: "{}"
            networkTypesAllowed:
            - networkTypesAllowed
            - networkTypesAllowed
            quarantineSubnetStart: quarantineSubnetStart
            asn: 7.386281948385884
            username: username
          createdTimestamp: 2025-03-13T15:59:33.442Z
          name: My Network Fabric
          siteId: 0.8008281904610115
          description: This network fabric is used for corporate office connectivity.
          fabricConfiguration:
            vrfVlanRanges:
            - 400-450
            - 460-470
            lagRanges:
            - 100-200
            - 300-400
            preventCleanupFromUplinks: true
            gnmiMonitoringEnabled: false
            asnRanges:
            - 65000-65010
            vlanRanges:
            - 3000-3100
            - 2000-2100
            syslogMonitoringEnabled: true
            zeroTouchEnabled: false
            fabricType: ethernet
            numberOfSpinesNextToLeafSwitches: 2
            extraInternalIPsPerSubnet: 2
            leafSwitchesHaveMlagPairs: false
            defaultVlan: 10
            mlagRanges:
            - 30-40
            - 50-60
            preventVlanCleanup:
            - 1000-1100
            vniPrefix: 5000
            reservedVlans:
            - 2000-2100
            - 2200-2300
            allocateDefaultVlan: true
            defaultNetworkProfileId: 101
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: "1"
          updatedTimestamp: 2025-03-13T15:59:33.443Z
          revision: "1"
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/NetworkFabric'
          title: List of network fabric's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateNetworkFabric:
      example:
        name: My Network Fabric
        siteId: 0.8008281904610115
        description: This network fabric is used for corporate office connectivity.
        fabricConfiguration:
          vrfVlanRanges:
          - 400-450
          - 460-470
          lagRanges:
          - 100-200
          - 300-400
          preventCleanupFromUplinks: true
          gnmiMonitoringEnabled: false
          asnRanges:
          - 65000-65010
          vlanRanges:
          - 3000-3100
          - 2000-2100
          syslogMonitoringEnabled: true
          zeroTouchEnabled: false
          fabricType: ethernet
          numberOfSpinesNextToLeafSwitches: 2
          extraInternalIPsPerSubnet: 2
          leafSwitchesHaveMlagPairs: false
          defaultVlan: 10
          mlagRanges:
          - 30-40
          - 50-60
          preventVlanCleanup:
          - 1000-1100
          vniPrefix: 5000
          reservedVlans:
          - 2000-2100
          - 2200-2300
          allocateDefaultVlan: true
          defaultNetworkProfileId: 101
      properties:
        siteId:
          description: The ID of the site where the entity is located.
          format: integer
          type: number
        name:
          description: The network fabric name
          example: My Network Fabric
          maxLength: 100
          minLength: 1
          type: string
        description:
          description: Network fabric description
          example: This network fabric is used for corporate office connectivity.
          maxLength: 255
          minLength: 1
          type: string
        fabricConfiguration:
          $ref: '#/components/schemas/NetworkFabric_fabricConfiguration'
      required:
      - fabricConfiguration
      - name
      type: object
    UpdateNetworkFabric:
      example:
        name: My Network Fabric
        siteId: 0.8008281904610115
        description: This network fabric is used for corporate office connectivity.
        fabricConfiguration:
          vrfVlanRanges:
          - 400-450
          - 460-470
          lagRanges:
          - 100-200
          - 300-400
          preventCleanupFromUplinks: true
          gnmiMonitoringEnabled: false
          asnRanges:
          - 65000-65010
          vlanRanges:
          - 3000-3100
          - 2000-2100
          syslogMonitoringEnabled: true
          zeroTouchEnabled: false
          fabricType: ethernet
          numberOfSpinesNextToLeafSwitches: 2
          extraInternalIPsPerSubnet: 2
          leafSwitchesHaveMlagPairs: false
          defaultVlan: 10
          mlagRanges:
          - 30-40
          - 50-60
          preventVlanCleanup:
          - 1000-1100
          vniPrefix: 5000
          reservedVlans:
          - 2000-2100
          - 2200-2300
          allocateDefaultVlan: true
          defaultNetworkProfileId: 101
      properties:
        siteId:
          description: The ID of the site where the entity is located.
          format: integer
          type: number
        name:
          description: The network fabric name
          example: My Network Fabric
          maxLength: 100
          minLength: 1
          type: string
        description:
          description: Network fabric description
          example: This network fabric is used for corporate office connectivity.
          maxLength: 255
          minLength: 1
          type: string
        fabricConfiguration:
          $ref: '#/components/schemas/NetworkFabric_fabricConfiguration'
      required:
      - fabricConfiguration
      type: object
    NetworkEquipmentToFabric:
      example:
        networkEquipmentIds:
        - 0.8008281904610115
        - 0.8008281904610115
      properties:
        networkEquipmentIds:
          description: The network equipment IDs to add to the fabric
          items:
            type: number
          type: array
      required:
      - networkEquipmentIds
      type: object
    OSTemplateDevice:
      example:
        type: server
        bootMode: uefi
        architecture: x86_64
      properties:
        type:
          description: The OS template device type
          enum:
          - server
          - network_device
          - vm
          example: server
          type: string
        bootMode:
          description: The hardware boot mode supported by the OS template
          enum:
          - bios
          - uefi
          - hybrid
          example: uefi
          type: string
        architecture:
          description: The hardware architecture supported by the OS template
          enum:
          - x86
          - x86_64
          - arm
          - aarch64
          - ppc64le
          - ' powerpc'
          - s390x
          example: x86_64
          type: string
      required:
      - architecture
      - bootMode
      - type
      type: object
    OSTemplateInstall:
      example:
        method: oob
        readyMethod: wait_for_power_off
        driveType: local_drive
        onieStrings: x86_64-dell_z9664f-r0
      properties:
        method:
          description: |-
            The OS template installation method
                                OOB - Out of Band (virtual media)
                                ONIE - Open Network Install Environment
                                DS_LXD - Cloud-init with datasource LXD
          enum:
          - oob
          - onie
          - ds_lxd
          example: oob
          type: string
        driveType:
          description: The OS template installation drive type
          enum:
          - local_drive
          example: local_drive
          type: string
        readyMethod:
          description: |-
            The OS template installation ready method,
                                The "ready method" is used to determine when the OS installation is complete.
          enum:
          - wait_for_power_off
          - wait_for_signal_from_os
          - wait_for_ssh
          example: wait_for_power_off
          type: string
        onieStrings:
          description: Used for selecting the OS template during network device ZTP
          example: x86_64-dell_z9664f-r0
          items:
            maxLength: 255
            type: string
          type: array
      required:
      - driveType
      - method
      - readyMethod
      type: object
    OSTemplateImageBuild:
      example:
        provider: xorriso
        required: true
      properties:
        required:
          default: true
          description: Indicates whether the OS template requires an image build
          example: true
          type: boolean
        provider:
          description: The OS template image build provider
          enum:
          - xorriso
          example: xorriso
          type: string
      required:
      - required
      type: object
    OSTemplateOsCredential:
      example:
        password: MyP@ssword123 | $6$rounds=656000$saltsaltsalt$hashedpasswordexample
        passwordType: plain
        username: root
      properties:
        username:
          description: The default username for the operating system
          example: root
          maxLength: 255
          type: string
        passwordType:
          description: |-
            The default username password type.
                                PLAIN means that the password is provided by the user in plain text.
                                GENERATED means that the password is generated by the system.
                                HASHED means that the password is provided by the user in hashed format.
                                NONE means that the password is not needed
          enum:
          - plain
          - generated
          - hashed
          - none
          example: plain
          type: string
        password:
          description: |-
            The default username password.
                                Required if the password type is PLAIN or HASHED
          example: MyP@ssword123 | $6$rounds=656000$saltsaltsalt$hashedpasswordexample
          maxLength: 255
          type: string
      required:
      - passwordType
      - username
      type: object
    OSTemplateOs:
      example:
        sshPort: 22
        credential:
          password: MyP@ssword123 | $6$rounds=656000$saltsaltsalt$hashedpasswordexample
          passwordType: plain
          username: root
        name: Ubuntu | CentOS | Suse | Windows | ESXi | ...
        version: 22.04 | 8 | 15 | 2019 | ...
      properties:
        name:
          description: The name of the operating system that this template will install
          example: Ubuntu | CentOS | Suse | Windows | ESXi | ...
          maxLength: 255
          type: string
        version:
          description: The version of the operating system that this template will
            install
          example: 22.04 | 8 | 15 | 2019 | ...
          maxLength: 255
          type: string
        credential:
          $ref: '#/components/schemas/OSTemplateOsCredential'
        sshPort:
          description: The initial operating system SSH port.
          example: 22
          type: integer
      required:
      - credential
      - name
      - version
      type: object
    OSTemplate:
      example:
        os:
          sshPort: 22
          credential:
            password: MyP@ssword123 | $6$rounds=656000$saltsaltsalt$hashedpasswordexample
            passwordType: plain
            username: root
          name: Ubuntu | CentOS | Suse | Windows | ESXi | ...
          version: 22.04 | 8 | 15 | 2019 | ...
        visibility: public
        templateAssetIDs:
        - 1
        - 2
        - 3
        modifiedAt: 2024-01-01T00:00:00Z
        description: EKS Anywhere - Admin Machine
        label: eksa
        tags: "[\"cp\",\"linux\",\"Ubuntu\"]"
        revision: 1
        createdAt: 2024-01-01T00:00:00Z
        install:
          method: oob
          readyMethod: wait_for_power_off
          driveType: local_drive
          onieStrings: x86_64-dell_z9664f-r0
        createdBy: 6
        name: Ubuntu 24.04 LTS
        modifiedBy: 10
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 10
        imageBuild:
          provider: xorriso
          required: true
        device:
          type: server
          bootMode: uefi
          architecture: x86_64
        status: ready
      properties:
        id:
          description: The OS template ID
          example: 10
          readOnly: true
          type: integer
        name:
          description: The OS template name
          example: Ubuntu 24.04 LTS
          maxLength: 255
          type: string
        description:
          description: The OS template description
          example: EKS Anywhere - Admin Machine
          type: string
        label:
          description: The OS template label. It must be unique
          example: eksa
          maxLength: 255
          type: string
          uniqueItems: true
        device:
          $ref: '#/components/schemas/OSTemplateDevice'
        install:
          $ref: '#/components/schemas/OSTemplateInstall'
        imageBuild:
          $ref: '#/components/schemas/OSTemplateImageBuild'
        os:
          $ref: '#/components/schemas/OSTemplateOs'
        visibility:
          default: private
          description: |-
            The visibility of the OS template.
                                If the visibility is PUBLIC any user can use the OS template in deployments
                                If the visibility is PRIVATE the OS template can be used in deployments only
                                by the user who created and/or updated the template
          enum:
          - public
          - private
          example: public
          type: string
        status:
          default: ready
          description: |-
            The status, let the user to decide with templates to delete and when,
                                and how much to keep them in the history (archived status). Also, it allows the user to
                                resurrect the archived templates if needed.
                                Status: READY
                                    - is the initial status of the template
                                    - the OS template is ready for deployment
                                    - the OS template can be deleted, use in deployments and updated
                                Status: ACTIVE
                                    - the OS template is part of at least one ongoing deployment
                                    - can't be deleted (the template service will have validation for this)
                                    - the status can't be changed to ARCHIVED (the template service will have validation for this)
                                Status: USED
                                    - the OS Template is part of at least one finished deployment, that is not deleted
                                    - can't be deleted (the template service will have validation for this)
                                    - can be updated, deploy or ARCHIVED
                                Status: ARCHIVED
                                    - the OS Template is kept in the system for historical reasons
                                    - can't be deleted (the template service will have validation for this)
                                    - can't be updated or deployed
                                    - the status can be changed to READY or USED, if it needs to be used again or deleted
          enum:
          - ready
          - active
          - used
          - archived
          example: ready
          type: string
        templateAssetIDs:
          description: The template asset IDs associated with the OS template
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
          type: array
        tags:
          description: The tags associated with the OS template
          example: "[\"cp\",\"linux\",\"Ubuntu\"]"
          items:
            maxLength: 255
            type: string
          type: array
        revision:
          description: The revision number of the OS template
          example: 1
          readOnly: true
          type: integer
        createdBy:
          description: The user ID of the user who created the OS template
          example: 6
          type: integer
        modifiedBy:
          description: The user ID of the user who last modified the OS template
          example: 10
          type: integer
        createdAt:
          description: The date and time the OS template was created
          example: 2024-01-01T00:00:00Z
          format: date-time
          readOnly: true
          type: string
        modifiedAt:
          description: The date and time the OS template was last modified
          example: 2024-01-01T00:00:00Z
          format: date-time
          readOnly: true
          type: string
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - createdAt
      - createdBy
      - device
      - id
      - imageBuild
      - install
      - name
      - os
      - revision
      - status
      - visibility
      type: object
    OSTemplatePaginatedList:
      example:
        data:
        - os:
            sshPort: 22
            credential:
              password: MyP@ssword123 | $6$rounds=656000$saltsaltsalt$hashedpasswordexample
              passwordType: plain
              username: root
            name: Ubuntu | CentOS | Suse | Windows | ESXi | ...
            version: 22.04 | 8 | 15 | 2019 | ...
          visibility: public
          templateAssetIDs:
          - 1
          - 2
          - 3
          modifiedAt: 2024-01-01T00:00:00Z
          description: EKS Anywhere - Admin Machine
          label: eksa
          tags: "[\"cp\",\"linux\",\"Ubuntu\"]"
          revision: 1
          createdAt: 2024-01-01T00:00:00Z
          install:
            method: oob
            readyMethod: wait_for_power_off
            driveType: local_drive
            onieStrings: x86_64-dell_z9664f-r0
          createdBy: 6
          name: Ubuntu 24.04 LTS
          modifiedBy: 10
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 10
          imageBuild:
            provider: xorriso
            required: true
          device:
            type: server
            bootMode: uefi
            architecture: x86_64
          status: ready
        - os:
            sshPort: 22
            credential:
              password: MyP@ssword123 | $6$rounds=656000$saltsaltsalt$hashedpasswordexample
              passwordType: plain
              username: root
            name: Ubuntu | CentOS | Suse | Windows | ESXi | ...
            version: 22.04 | 8 | 15 | 2019 | ...
          visibility: public
          templateAssetIDs:
          - 1
          - 2
          - 3
          modifiedAt: 2024-01-01T00:00:00Z
          description: EKS Anywhere - Admin Machine
          label: eksa
          tags: "[\"cp\",\"linux\",\"Ubuntu\"]"
          revision: 1
          createdAt: 2024-01-01T00:00:00Z
          install:
            method: oob
            readyMethod: wait_for_power_off
            driveType: local_drive
            onieStrings: x86_64-dell_z9664f-r0
          createdBy: 6
          name: Ubuntu 24.04 LTS
          modifiedBy: 10
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 10
          imageBuild:
            provider: xorriso
            required: true
          device:
            type: server
            bootMode: uefi
            architecture: x86_64
          status: ready
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/OSTemplate'
          title: List of os template's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    OSTemplateCreate:
      example:
        os:
          sshPort: 22
          credential:
            password: MyP@ssword123 | $6$rounds=656000$saltsaltsalt$hashedpasswordexample
            passwordType: plain
            username: root
          name: Ubuntu | CentOS | Suse | Windows | ESXi | ...
          version: 22.04 | 8 | 15 | 2019 | ...
        visibility: public
        install:
          method: oob
          readyMethod: wait_for_power_off
          driveType: local_drive
          onieStrings: x86_64-dell_z9664f-r0
        name: Ubuntu 24.04 LTS
        description: EKS Anywhere - Admin Machine
        label: eksa
        imageBuild:
          provider: xorriso
          required: true
        device:
          type: server
          bootMode: uefi
          architecture: x86_64
        tags: "[\"cp\",\"linux\",\"Ubuntu\"]"
      properties:
        name:
          description: The OS template name
          example: Ubuntu 24.04 LTS
          maxLength: 255
          type: string
        description:
          description: The OS template description
          example: EKS Anywhere - Admin Machine
          type: string
        label:
          description: The OS template label. It must be unique
          example: eksa
          maxLength: 255
          type: string
          uniqueItems: true
        device:
          $ref: '#/components/schemas/OSTemplateDevice'
        install:
          $ref: '#/components/schemas/OSTemplateInstall'
        imageBuild:
          $ref: '#/components/schemas/OSTemplateImageBuild'
        os:
          $ref: '#/components/schemas/OSTemplateOs'
        visibility:
          default: private
          description: |-
            The visibility of the OS template.
                                If the visibility is PUBLIC any user can use the OS template in deployments
                                If the visibility is PRIVATE the OS template can be used in deployments only
                                by the user who created and/or updated the template
          enum:
          - public
          - private
          example: public
          type: string
        tags:
          description: The tags associated with the OS template
          example: "[\"cp\",\"linux\",\"Ubuntu\"]"
          items:
            maxLength: 255
            type: string
          type: array
      required:
      - device
      - imageBuild
      - install
      - name
      - os
      type: object
    OSTemplateUpdate:
      example:
        os:
          sshPort: 22
          credential:
            password: MyP@ssword123 | $6$rounds=656000$saltsaltsalt$hashedpasswordexample
            passwordType: plain
            username: root
          name: Ubuntu | CentOS | Suse | Windows | ESXi | ...
          version: 22.04 | 8 | 15 | 2019 | ...
        visibility: public
        install:
          method: oob
          readyMethod: wait_for_power_off
          driveType: local_drive
          onieStrings: x86_64-dell_z9664f-r0
        name: Ubuntu 24.04 LTS
        description: EKS Anywhere - Admin Machine
        label: eksa
        imageBuild:
          provider: xorriso
          required: true
        device:
          type: server
          bootMode: uefi
          architecture: x86_64
        status: ready
        tags: "[\"cp\",\"linux\",\"Ubuntu\"]"
      properties:
        name:
          description: The OS template name
          example: Ubuntu 24.04 LTS
          maxLength: 255
          type: string
        description:
          description: The OS template description
          example: EKS Anywhere - Admin Machine
          type: string
        label:
          description: The OS template label. It must be unique
          example: eksa
          maxLength: 255
          type: string
          uniqueItems: true
        device:
          $ref: '#/components/schemas/OSTemplateDevice'
        install:
          $ref: '#/components/schemas/OSTemplateInstall'
        imageBuild:
          $ref: '#/components/schemas/OSTemplateImageBuild'
        os:
          $ref: '#/components/schemas/OSTemplateOs'
        visibility:
          description: |-
            The visibility of the OS template.
                                If the visibility is PUBLIC any user can use the OS template in deployments
                                If the visibility is PRIVATE the OS template can be used in deployments only
                                by the user who created and/or updated the template
          enum:
          - public
          - private
          example: public
          type: string
        status:
          description: |-
            The status, let the user to decide with templates to delete and when,
                                and how much to keep them in the history (archived status). Also, it allows the user to
                                resurrect the archived templates if needed.
                                Status: READY
                                    - is the initial status of the template
                                    - the OS template is ready for deployment
                                    - the OS template can be deleted, use in deployments and updated
                                Status: ACTIVE
                                    - the OS template is part of at least one ongoing deployment
                                    - can't be deleted (the template service will have validation for this)
                                    - the status can't be changed to ARCHIVED (the template service will have validation for this)
                                Status: USED
                                    - the OS Template is part of at least one finished deployment, that is not deleted
                                    - can't be deleted (the template service will have validation for this)
                                    - can be updated, deploy or ARCHIVED
                                Status: ARCHIVED
                                    - the OS Template is kept in the system for historical reasons
                                    - can't be deleted (the template service will have validation for this)
                                    - can't be updated or deployed
                                    - the status can be changed to READY or USED, if it needs to be used again or deleted
          enum:
          - ready
          - active
          - used
          - archived
          example: ready
          type: string
        tags:
          description: The tags associated with the OS template
          example: "[\"cp\",\"linux\",\"Ubuntu\"]"
          items:
            maxLength: 255
            type: string
          type: array
      required:
      - device
      - imageBuild
      - install
      - name
      - os
      type: object
    ResourcePoolStatistics:
      example:
        servers: 1.4658129805029452
        subnetPools: 5.962133916683182
        users: 6.027456183070403
      properties:
        users:
          description: Number of users in the Resource Pool
          type: number
        servers:
          description: Number of servers in the Resource Pool
          type: number
        subnetPools:
          description: Number of subnet pools in the Resource Pool
          type: number
      required:
      - servers
      - subnetPools
      - users
      type: object
    ResourcePoolWithStats:
      example:
        resourcePoolCreatedTimestamp: resourcePoolCreatedTimestamp
        resourcePoolUpdatedTimestamp: resourcePoolUpdatedTimestamp
        resourcePoolId: 0.8008281904610115
        resourcePoolDescription: resourcePoolDescription
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        resourcePoolLabel: resourcePoolLabel
        statistics:
          servers: 1.4658129805029452
          subnetPools: 5.962133916683182
          users: 6.027456183070403
      properties:
        resourcePoolId:
          description: Resource Pool ID
          type: number
        resourcePoolLabel:
          description: Label of the Resource Pool
          type: string
        resourcePoolDescription:
          description: Description of the Resource Pool
          type: string
        resourcePoolCreatedTimestamp:
          description: Resource Pool Created Timestamp
          type: string
        resourcePoolUpdatedTimestamp:
          description: Resource Pool Updated Timestamp
          type: string
        statistics:
          $ref: '#/components/schemas/ResourcePoolStatistics'
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - resourcePoolCreatedTimestamp
      - resourcePoolDescription
      - resourcePoolId
      - resourcePoolLabel
      - resourcePoolUpdatedTimestamp
      - statistics
      type: object
    ResourcePoolPaginatedList:
      example:
        data:
        - resourcePoolCreatedTimestamp: resourcePoolCreatedTimestamp
          resourcePoolUpdatedTimestamp: resourcePoolUpdatedTimestamp
          resourcePoolId: 0.8008281904610115
          resourcePoolDescription: resourcePoolDescription
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          resourcePoolLabel: resourcePoolLabel
          statistics:
            servers: 1.4658129805029452
            subnetPools: 5.962133916683182
            users: 6.027456183070403
        - resourcePoolCreatedTimestamp: resourcePoolCreatedTimestamp
          resourcePoolUpdatedTimestamp: resourcePoolUpdatedTimestamp
          resourcePoolId: 0.8008281904610115
          resourcePoolDescription: resourcePoolDescription
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          resourcePoolLabel: resourcePoolLabel
          statistics:
            servers: 1.4658129805029452
            subnetPools: 5.962133916683182
            users: 6.027456183070403
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/ResourcePoolWithStats'
          title: List of resource pool with stats
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    ResourcePool:
      example:
        resourcePoolId: 0.8008281904610115
        resourcePoolDescription: resourcePoolDescription
        resourcePoolLabel: resourcePoolLabel
      properties:
        resourcePoolId:
          description: Resource Pool ID
          type: number
        resourcePoolLabel:
          description: Label of the Resource Pool
          type: string
        resourcePoolDescription:
          description: Description of the Resource Pool
          type: string
      required:
      - resourcePoolDescription
      - resourcePoolId
      - resourcePoolLabel
      type: object
    CreateResourcePool:
      example:
        resourcePoolDescription: resourcePoolDescription
        resourcePoolLabel: resourcePoolLabel
      properties:
        resourcePoolLabel:
          description: Label of the Resource Pool
          type: string
        resourcePoolDescription:
          description: Description of the Resource Pool
          type: string
      required:
      - resourcePoolDescription
      - resourcePoolLabel
      type: object
    UpdateResourcePool:
      example:
        resourcePoolDescription: resourcePoolDescription
        resourcePoolLabel: resourcePoolLabel
      properties:
        resourcePoolLabel:
          description: Label of the Resource Pool
          type: string
        resourcePoolDescription:
          description: Description of the Resource Pool
          type: string
      type: object
    AuthenticationProvider:
      example:
        name: ldap
        domains:
        - domains
        - domains
        enabled: true
      properties:
        name:
          description: Authentication provider name
          example: ldap
          type: string
        enabled:
          description: True if the provider is enabled
          type: boolean
        domains:
          description: Permitted domains
          items:
            type: string
          type: array
      required:
      - domains
      - enabled
      - name
      type: object
    AuthenticationProviderUpdate:
      example:
        domains:
        - domains
        - domains
        enabled: true
      properties:
        enabled:
          description: True if the provider is enabled
          type: boolean
        domains:
          description: Permitted domains
          items:
            type: string
          type: array
      required:
      - domains
      - enabled
      type: object
    ServerCleanupPolicy:
      example:
        disableEmbeddedNics: 1
        raidOddNumberMoreThanOneDrive: raid10
        createdTimestamp: 2024-07-15T07:00:00.000Z
        recreateRaid: 1
        label: label
        updatedTimestamp: 2024-07-15T07:00:00.000Z
        raidTwoDrives: raid1
        raidEvenNumberMoreThanTwoDrives: raid5
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 1
        raidOneDrive: raid0
        skipRaidActions:
        - provisioning
        - cleanup
        cleanupDrivesForOobEnabledServer: 1
      properties:
        id:
          description: Server cleanup policy id
          example: 1
          type: number
        label:
          description: Server cleanup policy label
          type: string
        cleanupDrivesForOobEnabledServer:
          description: Cleanup drives for oob enabled server
          example: 1
          type: number
        recreateRaid:
          description: Recreate raid
          example: 1
          type: number
        disableEmbeddedNics:
          description: Disable embedded nics
          example: 1
          type: number
        raidOneDrive:
          description: Raid one drive
          enum:
          - raid0
          - raid1
          - raid5
          - raid10
          example: raid0
          type: string
        raidTwoDrives:
          description: Raid two drives
          enum:
          - raid0
          - raid1
          - raid5
          - raid10
          example: raid1
          type: string
        raidEvenNumberMoreThanTwoDrives:
          description: Raid even number more than two drives
          enum:
          - raid0
          - raid1
          - raid5
          - raid10
          example: raid5
          type: string
        raidOddNumberMoreThanOneDrive:
          description: Raid odd number more than one drive
          enum:
          - raid0
          - raid1
          - raid5
          - raid10
          example: raid10
          type: string
        createdTimestamp:
          description: Created timestamp
          example: 2024-07-15T07:00:00.000Z
          type: string
        updatedTimestamp:
          description: Updated timestamp
          example: 2024-07-15T07:00:00.000Z
          type: string
        skipRaidActions:
          description: Skip raid actions
          example:
          - provisioning
          - cleanup
          items:
            enum:
            - provisioning
            - cleanup
            - registration
            type: string
          type: array
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - cleanupDrivesForOobEnabledServer
      - createdTimestamp
      - disableEmbeddedNics
      - id
      - label
      - raidEvenNumberMoreThanTwoDrives
      - raidOddNumberMoreThanOneDrive
      - raidOneDrive
      - raidTwoDrives
      - recreateRaid
      - skipRaidActions
      - updatedTimestamp
      type: object
    ServerCleanupPolicyPaginatedList:
      example:
        data:
        - disableEmbeddedNics: 1
          raidOddNumberMoreThanOneDrive: raid10
          createdTimestamp: 2024-07-15T07:00:00.000Z
          recreateRaid: 1
          label: label
          updatedTimestamp: 2024-07-15T07:00:00.000Z
          raidTwoDrives: raid1
          raidEvenNumberMoreThanTwoDrives: raid5
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          raidOneDrive: raid0
          skipRaidActions:
          - provisioning
          - cleanup
          cleanupDrivesForOobEnabledServer: 1
        - disableEmbeddedNics: 1
          raidOddNumberMoreThanOneDrive: raid10
          createdTimestamp: 2024-07-15T07:00:00.000Z
          recreateRaid: 1
          label: label
          updatedTimestamp: 2024-07-15T07:00:00.000Z
          raidTwoDrives: raid1
          raidEvenNumberMoreThanTwoDrives: raid5
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          raidOneDrive: raid0
          skipRaidActions:
          - provisioning
          - cleanup
          cleanupDrivesForOobEnabledServer: 1
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServerCleanupPolicy'
          title: List of server cleanup policy's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateServerCleanupPolicy:
      example:
        raidTwoDrives: raid1
        raidEvenNumberMoreThanTwoDrives: raid5
        disableEmbeddedNics: 1
        raidOddNumberMoreThanOneDrive: raid10
        recreateRaid: 1
        label: label
        raidOneDrive: raid0
        skipRaidActions:
        - provisioning
        - cleanup
        cleanupDrivesForOobEnabledServer: 1
      properties:
        label:
          description: Server cleanup policy label
          type: string
        cleanupDrivesForOobEnabledServer:
          description: Cleanup drives for oob enabled server
          example: 1
          type: number
        recreateRaid:
          description: Recreate raid
          example: 1
          type: number
        disableEmbeddedNics:
          description: Disable embedded nics
          example: 1
          type: number
        raidOneDrive:
          description: Raid one drive
          enum:
          - raid0
          - raid1
          - raid5
          - raid10
          example: raid0
          type: string
        raidTwoDrives:
          description: Raid two drives
          enum:
          - raid0
          - raid1
          - raid5
          - raid10
          example: raid1
          type: string
        raidEvenNumberMoreThanTwoDrives:
          description: Raid even number more than two drives
          enum:
          - raid0
          - raid1
          - raid5
          - raid10
          example: raid5
          type: string
        raidOddNumberMoreThanOneDrive:
          description: Raid odd number more than one drive
          enum:
          - raid0
          - raid1
          - raid5
          - raid10
          example: raid10
          type: string
        skipRaidActions:
          description: Skip raid actions
          example:
          - provisioning
          - cleanup
          items:
            enum:
            - provisioning
            - cleanup
            - registration
            type: string
          type: array
      required:
      - cleanupDrivesForOobEnabledServer
      - disableEmbeddedNics
      - label
      - raidEvenNumberMoreThanTwoDrives
      - raidOddNumberMoreThanOneDrive
      - raidOneDrive
      - raidTwoDrives
      - recreateRaid
      - skipRaidActions
      type: object
    UpdateServerCleanupPolicy:
      example:
        raidTwoDrives: raid1
        raidEvenNumberMoreThanTwoDrives: raid5
        disableEmbeddedNics: 1
        raidOddNumberMoreThanOneDrive: raid10
        recreateRaid: 1
        label: label
        raidOneDrive: raid0
        skipRaidActions:
        - provisioning
        - cleanup
        cleanupDrivesForOobEnabledServer: 1
      properties:
        label:
          description: Server cleanup policy label
          type: string
        cleanupDrivesForOobEnabledServer:
          description: Cleanup drives for oob enabled server
          example: 1
          type: number
        recreateRaid:
          description: Recreate raid
          example: 1
          type: number
        disableEmbeddedNics:
          description: Disable embedded nics
          example: 1
          type: number
        raidOneDrive:
          description: Raid one drive
          enum:
          - raid0
          - raid1
          - raid5
          - raid10
          example: raid0
          type: string
        raidTwoDrives:
          description: Raid two drives
          enum:
          - raid0
          - raid1
          - raid5
          - raid10
          example: raid1
          type: string
        raidEvenNumberMoreThanTwoDrives:
          description: Raid even number more than two drives
          enum:
          - raid0
          - raid1
          - raid5
          - raid10
          example: raid5
          type: string
        raidOddNumberMoreThanOneDrive:
          description: Raid odd number more than one drive
          enum:
          - raid0
          - raid1
          - raid5
          - raid10
          example: raid10
          type: string
        skipRaidActions:
          description: Skip raid actions
          example:
          - provisioning
          - cleanup
          items:
            enum:
            - provisioning
            - cleanup
            - registration
            type: string
          type: array
      type: object
    ServerDefaultCredentials:
      example:
        defaultRackName: defaultRackName
        defaultRackPositionUpperUnit: defaultRackPositionUpperUnit
        defaultUsername: defaultUsername
        defaultRackPositionLowerUnit: defaultRackPositionLowerUnit
        serverSerialNumber: serverSerialNumber
        defaultInventoryId: defaultInventoryId
        siteId: 6.027456183070403
        defaultUuid: defaultUuid
        defaultPasswordEncrypted: defaultPasswordEncrypted
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 0.8008281904610115
        serverMacAddress: serverMacAddress
      properties:
        id:
          description: The ID of the server default credentials
          type: number
        siteId:
          description: The site ID of the server default credentials
          type: number
        serverSerialNumber:
          description: The serial number of the server
          type: string
        serverMacAddress:
          description: The MAC address of the server
          type: string
        defaultUsername:
          description: The default username of the server
          type: string
        defaultPasswordEncrypted:
          description: The encrypted default password of the server
          type: string
        defaultRackName:
          description: The default rack name of the server
          type: string
        defaultRackPositionLowerUnit:
          description: The default rack position upper unit of the server
          type: string
        defaultRackPositionUpperUnit:
          description: The default rack position upper unit of the server
          type: string
        defaultInventoryId:
          description: The default inventory ID of the server
          type: string
        defaultUuid:
          description: The default UUID of the server
          type: string
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - defaultPasswordEncrypted
      - defaultUsername
      - id
      - serverMacAddress
      - serverSerialNumber
      - siteId
      type: object
    ServerDefaultCredentialsPaginatedList:
      example:
        data:
        - defaultRackName: defaultRackName
          defaultRackPositionUpperUnit: defaultRackPositionUpperUnit
          defaultUsername: defaultUsername
          defaultRackPositionLowerUnit: defaultRackPositionLowerUnit
          serverSerialNumber: serverSerialNumber
          defaultInventoryId: defaultInventoryId
          siteId: 6.027456183070403
          defaultUuid: defaultUuid
          defaultPasswordEncrypted: defaultPasswordEncrypted
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 0.8008281904610115
          serverMacAddress: serverMacAddress
        - defaultRackName: defaultRackName
          defaultRackPositionUpperUnit: defaultRackPositionUpperUnit
          defaultUsername: defaultUsername
          defaultRackPositionLowerUnit: defaultRackPositionLowerUnit
          serverSerialNumber: serverSerialNumber
          defaultInventoryId: defaultInventoryId
          siteId: 6.027456183070403
          defaultUuid: defaultUuid
          defaultPasswordEncrypted: defaultPasswordEncrypted
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 0.8008281904610115
          serverMacAddress: serverMacAddress
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServerDefaultCredentials'
          title: List of server default credentials
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateServerDefaultCredentials:
      example:
        defaultRackName: defaultRackName
        defaultRackPositionUpperUnit: defaultRackPositionUpperUnit
        defaultUsername: defaultUsername
        defaultRackPositionLowerUnit: defaultRackPositionLowerUnit
        serverSerialNumber: serverSerialNumber
        defaultInventoryId: defaultInventoryId
        siteId: 0.8008281904610115
        defaultUuid: defaultUuid
        defaultPassword: defaultPassword
        serverMacAddress: serverMacAddress
      properties:
        siteId:
          description: The site ID of the server default credentials
          type: number
        serverSerialNumber:
          description: The serial number of the server
          type: string
        serverMacAddress:
          description: The MAC address of the server
          type: string
        defaultUsername:
          description: The default username of the server
          type: string
        defaultRackName:
          description: The default rack name of the server
          type: string
        defaultRackPositionLowerUnit:
          description: The default rack position upper unit of the server
          type: string
        defaultRackPositionUpperUnit:
          description: The default rack position upper unit of the server
          type: string
        defaultInventoryId:
          description: The default inventory ID of the server
          type: string
        defaultUuid:
          description: The default UUID of the server
          type: string
        defaultPassword:
          description: The default password of the server
          type: string
      required:
      - defaultPassword
      - defaultUsername
      - serverMacAddress
      - serverSerialNumber
      - siteId
      type: object
    UpdateServerDefaultCredentials:
      example:
        defaultRackName: defaultRackName
        defaultRackPositionUpperUnit: defaultRackPositionUpperUnit
        defaultRackPositionLowerUnit: defaultRackPositionLowerUnit
        defaultUsername: defaultUsername
        defaultInventoryId: defaultInventoryId
        defaultUuid: defaultUuid
        defaultPassword: defaultPassword
      properties:
        defaultRackName:
          description: The default rack name of the server
          type: string
        defaultRackPositionLowerUnit:
          description: The default rack position upper unit of the server
          type: string
        defaultRackPositionUpperUnit:
          description: The default rack position upper unit of the server
          type: string
        defaultInventoryId:
          description: The default inventory ID of the server
          type: string
        defaultUuid:
          description: The default UUID of the server
          type: string
        defaultUsername:
          description: The default username of the server
          type: string
        defaultPassword:
          description: The default password of the server
          type: string
      type: object
    ServerDefaultCredentialsCredentials:
      example:
        defaultUsername: defaultUsername
        defaultPassword: defaultPassword
      properties:
        defaultUsername:
          description: The default username of the server
          type: string
        defaultPassword:
          description: The default password of the server
          type: string
      required:
      - defaultPassword
      - defaultUsername
      type: object
    ServerComponent:
      example:
        firmwareTargetVersion: 7.0.0
        firmwareInfo: "{}"
        firmwareScheduledTimestamp: 2021-01-01T00:00:00Z
        externalId: server-component-1
        firmwareUpdateable: 1
        type: BIOS
        serverId: 1
        firmwareUpdateRequiredFixes: "{}"
        firmwareUpdateTimestamp: 2021-01-01T00:00:00Z
        name: Server component 1
        firmwareStatus: available
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 1
        firmwareUpdateAvailableVersions: "{\"7.0.0\": {\"imageURI\": \"http://example.com/image\"\
          , \"rebootRequired\": true}}"
        firmwareVersion: 7.0.0
        firmwareUpgradeNeedsConfirmation: 1
      properties:
        id:
          description: The unique identifier of the server component.
          example: 1
          type: number
        externalId:
          description: The external identifier of the server component.
          example: server-component-1
          type: string
        serverId:
          description: The unique identifier of the server.
          example: 1
          type: number
        name:
          description: The name of the server component.
          example: Server component 1
          type: string
        firmwareTargetVersion:
          description: The target firmware version of the server component.
          example: 7.0.0
          type: string
        firmwareUpdateAvailableVersions:
          description: The available firmware versions of the server component.
          example: "{\"7.0.0\": {\"imageURI\": \"http://example.com/image\", \"rebootRequired\"\
            : true}}"
          type: object
        firmwareUpdateRequiredFixes:
          description: The required fixes for the firmware upgrade of the server component.
          type: object
        firmwareUpdateable:
          description: The flag indicating if the server component has updateable
            firmware.
          example: 1
          type: number
        firmwareVersion:
          description: The current firmware version of the server component.
          example: 7.0.0
          type: string
        firmwareInfo:
          description: The firmware information of the server component.
          type: object
        firmwareUpgradeNeedsConfirmation:
          description: The flag indicating if the firmware upgrade of the server component
            requires confirmation.
          example: 1
          type: number
        firmwareUpdateTimestamp:
          description: The timestamp of the last firmware upgrade of the server component.
          example: 2021-01-01T00:00:00Z
          type: string
        firmwareScheduledTimestamp:
          description: The timestamp of the scheduled firmware upgrade of the server
            component.
          example: 2021-01-01T00:00:00Z
          type: string
        firmwareStatus:
          description: The status of the firmware upgrade of the server component.
          enum:
          - updating
          - available
          - failed_upgrade
          example: available
          type: string
        type:
          description: The type of the server component.
          example: BIOS
          type: string
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - firmwareStatus
      - firmwareUpdateable
      - firmwareUpgradeNeedsConfirmation
      - id
      type: object
    ServerComponentPaginatedList:
      example:
        data:
        - firmwareTargetVersion: 7.0.0
          firmwareInfo: "{}"
          firmwareScheduledTimestamp: 2021-01-01T00:00:00Z
          externalId: server-component-1
          firmwareUpdateable: 1
          type: BIOS
          serverId: 1
          firmwareUpdateRequiredFixes: "{}"
          firmwareUpdateTimestamp: 2021-01-01T00:00:00Z
          name: Server component 1
          firmwareStatus: available
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          firmwareUpdateAvailableVersions: "{\"7.0.0\": {\"imageURI\": \"http://example.com/image\"\
            , \"rebootRequired\": true}}"
          firmwareVersion: 7.0.0
          firmwareUpgradeNeedsConfirmation: 1
        - firmwareTargetVersion: 7.0.0
          firmwareInfo: "{}"
          firmwareScheduledTimestamp: 2021-01-01T00:00:00Z
          externalId: server-component-1
          firmwareUpdateable: 1
          type: BIOS
          serverId: 1
          firmwareUpdateRequiredFixes: "{}"
          firmwareUpdateTimestamp: 2021-01-01T00:00:00Z
          name: Server component 1
          firmwareStatus: available
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          firmwareUpdateAvailableVersions: "{\"7.0.0\": {\"imageURI\": \"http://example.com/image\"\
            , \"rebootRequired\": true}}"
          firmwareVersion: 7.0.0
          firmwareUpgradeNeedsConfirmation: 1
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServerComponent'
          title: List of server component's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    UpdateServerComponent:
      example:
        firmwareTargetVersion: 7.0.0
        firmwareUpgradeNeedsConfirmation: 1
      properties:
        firmwareTargetVersion:
          description: The target firmware version of the server component.
          example: 7.0.0
          type: string
        firmwareUpgradeNeedsConfirmation:
          description: The flag indicating if the firmware upgrade of the server component
            requires confirmation.
          example: 1
          type: number
      type: object
    GenerateFirmwareUpgradeAudit:
      example:
        osTemplateLabel: osTemplateLabel
        siteId: 1.4658129805029452
        serverTypeName: serverTypeName
        serverIds:
        - 0.8008281904610115
        - 0.8008281904610115
        baselineId: 6.027456183070403
      properties:
        serverIds:
          description: The list of server ids for which firmware upgrade audit should
            be generated.
          items:
            type: number
          type: array
        baselineId:
          description: Filter the available firmware upgrades using the specified
            baseline id.
          type: number
        osTemplateLabel:
          description: Filter the available firmware upgrades using the specified
            os template label.
          type: string
        serverTypeName:
          description: Filter the available firmware upgrades using the specified
            server type name.
          type: string
        siteId:
          description: Filter the available firmware upgrades using the specified
            site id.
          type: number
      required:
      - serverIds
      type: object
    ScheduleFirmwareUpgrade:
      example:
        scheduleUpdateTimestamp: 2025-01-01T00:00:00Z
        confirmationRequired: true
      properties:
        scheduleUpdateTimestamp:
          description: The time when the firmware update is scheduled to run.
          example: 2025-01-01T00:00:00Z
          type: string
        confirmationRequired:
          description: Flag to indicate if the firmware update requires confirmation.
          type: boolean
      type: object
    FirmwareUpgrade:
      example:
        componentFirmwareNewVersion: 1.0.0
        firmwareBinaryUrl: firmwareBinaryUrl
        rebootRequired: false
        applyOnReboot: false
      properties:
        componentFirmwareNewVersion:
          description: "The desired firmware version. If not specified, the target\
            \ version will be used."
          example: 1.0.0
          type: string
        firmwareBinaryUrl:
          description: "The URL where the firmware file is located. If not specified,\
            \ the firmware will be downloaded from the stored firmware information"
          type: string
        applyOnReboot:
          default: false
          description: Flag to indicate if the firmware upgrade should be performed
            at reboot.
          type: boolean
        rebootRequired:
          default: false
          description: Flag to indicate if the firmware upgrade requires a reboot.
            Only taken into account if firmwareBinaryUrl is provided.
          type: boolean
      type: object
    BatchServerFirmwareUpgrade:
      example:
        serverIds:
        - 0.8008281904610115
        - 0.8008281904610115
      properties:
        serverIds:
          description: The list of server ids to upgrade.
          items:
            type: number
          type: array
      required:
      - serverIds
      type: object
    BatchServerFirmwareUpgradeResponse:
      example:
        failed: "{}"
        successful:
          key:
            jobId: 0.8008281904610115
            jobGroupId: 6.027456183070403
      properties:
        successful:
          additionalProperties:
            $ref: '#/components/schemas/JobInfo'
          description: The job information for the successful firmware upgrade of
            a server.
          type: object
        failed:
          description: The error message for the failed firmware upgrade of a server.
          type: object
      required:
      - failed
      - successful
      type: object
    ServerInstanceGroupUpdate:
      example:
        defaultServerProfileID: 1
        serverGroupName: server-instance-123
        ipv4SubnetCreateAuto: 1
        driveArrayIdBoot: 5
        overrideIpv4WanVlanId: 1
        processorCount: 2
        ipAllocateAuto: 6
        label: server-instance-123
        diskCount: 2
        customVariables: "{}"
        diskTypes:
        - diskTypes
        - diskTypes
        additionalWanIpv4Json: "{}"
        networkEquipmentForceSubnetPoolIpv4WanId: 1
        processorCoreMhz: 9
        diskSizeMbytes: 4
        volumeTemplateId: 5
        instanceCount: 0
        processorCoreCount: 7
        ramGbytes: 3
        virtualInterfacesEnabled: 7
      properties:
        serverGroupName:
          example: server-instance-123
          maxLength: 255
          type: string
        instanceCount:
          default: 1
          description: The number of instances to be created on the InstanceArray.
          type: integer
        ipAllocateAuto:
          default: 1
          description: Automatically allocate IP addresses to child Instance`s InstanceInterface
            elements.
          type: integer
        ipv4SubnetCreateAuto:
          default: 1
          description: Automatically create or expand Subnet elements until the necessary
            IPv4 addresses are allocated.
          type: integer
        volumeTemplateId:
          description: The volume template ID (or name) to use if the servers in the
            InstanceArray have local disks.
          type: integer
        driveArrayIdBoot:
          description: Id of the bootable drive for the Server Instance Group.
          type: integer
        customVariables:
          description: Object containing custom variables and variable overrides.
          type: object
        processorCount:
          default: 1
          description: The CPU count on each instance.
          type: integer
        processorCoreCount:
          default: 1
          description: The minimum cores of a CPU.
          type: integer
        processorCoreMhz:
          default: 1000
          description: The minimum clock speed of a CPU.
          type: integer
        ramGbytes:
          default: 1
          description: The minimum RAM capacity of each instance.
          type: integer
        diskCount:
          default: 0
          description: The minimum number of physical disks.
          type: integer
        diskSizeMbytes:
          default: 0
          description: The minimum size of a single disk.
          type: integer
        diskTypes:
          default: []
          description: The types of physical disks.
          items:
            type: string
          type: array
        virtualInterfacesEnabled:
          default: 0
          description: Enable virtual interfaces
          type: integer
        additionalWanIpv4Json:
          description: Contains info about additional ips to be assigned to the WAN
            interfaces.
          type: object
        overrideIpv4WanVlanId:
          description: The ipv4 vlan that should override the default from the WAN
            Network for the primary ip.
          type: integer
        networkEquipmentForceSubnetPoolIpv4WanId:
          description: ID of a ipv4 WAN subnet-pool from which to force the subnet
            allocation for the InstanceInterfaces associated with this InstanceArray.
          type: integer
        defaultServerProfileID:
          description: "The group's default server profile. Useful when creating a\
            \ server instance with a group id set, the profile will be automatically\
            \ applied."
          example: 1
          type: integer
        label:
          description: The server instance group label.
          example: server-instance-123
          maxLength: 63
          type: string
      type: object
    DriveGroupList:
      example:
        data:
        - dnsSubdomainId: 5.637376656633329
          createdTimestamp: createdTimestamp
          extensionInstanceId: 1
          containerArrayId: 1
          label: label
          ioLimitPolicy: ioLimitPolicy
          subdomainPermanent: subdomainPermanent
          templateId: 1
          allocationAffinity: same_storage
          filesystemInfo: "{}"
          updatedTimestamp: updatedTimestamp
          revision: 5.962133916683182
          expandWithServerInstanceGroup: 1
          containerClusterId: 1
          dnsSubdomainPermanentId: 2.3021358869347655
          infrastructureId: 0.8008281904610115
          serviceStatus: ordered
          meta: ""
          storageType: iscsi_ssd
          subdomain: subdomain
          serverInstanceGroupId: 1
          id: 1.4658129805029452
          driveSizeMbDefault: 6.027456183070403
          config: ""
        - dnsSubdomainId: 5.637376656633329
          createdTimestamp: createdTimestamp
          extensionInstanceId: 1
          containerArrayId: 1
          label: label
          ioLimitPolicy: ioLimitPolicy
          subdomainPermanent: subdomainPermanent
          templateId: 1
          allocationAffinity: same_storage
          filesystemInfo: "{}"
          updatedTimestamp: updatedTimestamp
          revision: 5.962133916683182
          expandWithServerInstanceGroup: 1
          containerClusterId: 1
          dnsSubdomainPermanentId: 2.3021358869347655
          infrastructureId: 0.8008281904610115
          serviceStatus: ordered
          meta: ""
          storageType: iscsi_ssd
          subdomain: subdomain
          serverInstanceGroupId: 1
          id: 1.4658129805029452
          driveSizeMbDefault: 6.027456183070403
          config: ""
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
      properties:
        data:
          items:
            $ref: '#/components/schemas/DriveGroup'
          title: List of drive groups
          type: array
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - data
      type: object
    ServerInstanceGroupInterfaceConfiguration:
      example:
        emptyEdit: 2
        dnsSubdomainChangeId: 7
        groupId: 5
        subdomain: subdomain
        index: 1
        infrastructureDeployId: 9
        networkId: 10
        label: if3
        updatedTimestamp: updatedTimestamp
        deployType: create
        revision: 1
        deployStatus: not_started
      properties:
        revision:
          description: Revision number
          example: 1
          type: number
        label:
          description: The server instance group interface label.
          example: if3
          type: string
        subdomain:
          description: Subdomain of the Server Group.
          type: string
        updatedTimestamp:
          description: Timestamp of the latest update for the server instance group
            interface.
          type: string
        groupId:
          type: integer
        index:
          description: The index of the interface (0-based) on this server.
          example: 1
          type: integer
        networkId:
          description: The ID of the network to which this interface is to be attached
            to.
          example: 10
          type: integer
        emptyEdit:
          description: Number of empty edits
          type: integer
        deployType:
          description: Server instance group Interface deploy type
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          description: Server instance group Interface deploy status
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        dnsSubdomainChangeId:
          description: Id of the DNS subdomain for the server instance group Interface.
          type: integer
        infrastructureDeployId:
          description: Id of the deployment for the server instance group Interface.
          type: integer
      required:
      - deployStatus
      - deployType
      - groupId
      - index
      - label
      - revision
      - updatedTimestamp
      type: object
    ServerInstanceGroupInterface:
      example:
        dnsSubdomainId: 0
        createdTimestamp: createdTimestamp
        groupId: 5
        index: 1
        label: if3
        subdomainPermanent: subdomainPermanent
        updatedTimestamp: updatedTimestamp
        revision: 1
        dnsSubdomainPermanentId: 6
        infrastructureId: 1
        meta: ""
        serviceStatus: ordered
        subdomain: subdomain
        networkId: 10
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 1
        config:
          emptyEdit: 2
          dnsSubdomainChangeId: 7
          groupId: 5
          subdomain: subdomain
          index: 1
          infrastructureDeployId: 9
          networkId: 10
          label: if3
          updatedTimestamp: updatedTimestamp
          deployType: create
          revision: 1
          deployStatus: not_started
      properties:
        id:
          description: The server instance group interface ID.
          example: 1
          type: integer
        revision:
          description: Revision number
          example: 1
          type: number
        label:
          description: The server instance group interface label.
          example: if3
          type: string
        subdomain:
          description: Subdomain of the Server Group.
          type: string
        subdomainPermanent:
          description: Subdomain permanent of the Server Group.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the Server Group.
          type: integer
        dnsSubdomainPermanentId:
          description: Id of the permanent DNS subdomain for the Server Group.
          type: integer
        createdTimestamp:
          description: Timestamp of the server instance group interface creation.
          type: string
        updatedTimestamp:
          description: Timestamp of the latest update for the server instance group
            interface.
          type: string
        meta:
          allOf:
          - $ref: '#/components/schemas/GenericGUISettings'
          description: GUI settings in JSON format.
        infrastructureId:
          type: integer
        groupId:
          type: integer
        index:
          description: The index of the interface (0-based) on this server.
          example: 1
          type: integer
        networkId:
          description: The ID of the network to which this interface is to be attached
            to.
          example: 10
          type: integer
        serviceStatus:
          description: Current status of the server instance group interface.
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          example: ordered
          type: string
        config:
          $ref: '#/components/schemas/ServerInstanceGroupInterfaceConfiguration'
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - createdTimestamp
      - groupId
      - index
      - infrastructureId
      - label
      - revision
      - serviceStatus
      - updatedTimestamp
      type: object
    ServerInstanceGroupInterfacePaginatedList:
      example:
        data:
        - dnsSubdomainId: 0
          createdTimestamp: createdTimestamp
          groupId: 5
          index: 1
          label: if3
          subdomainPermanent: subdomainPermanent
          updatedTimestamp: updatedTimestamp
          revision: 1
          dnsSubdomainPermanentId: 6
          infrastructureId: 1
          meta: ""
          serviceStatus: ordered
          subdomain: subdomain
          networkId: 10
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          config:
            emptyEdit: 2
            dnsSubdomainChangeId: 7
            groupId: 5
            subdomain: subdomain
            index: 1
            infrastructureDeployId: 9
            networkId: 10
            label: if3
            updatedTimestamp: updatedTimestamp
            deployType: create
            revision: 1
            deployStatus: not_started
        - dnsSubdomainId: 0
          createdTimestamp: createdTimestamp
          groupId: 5
          index: 1
          label: if3
          subdomainPermanent: subdomainPermanent
          updatedTimestamp: updatedTimestamp
          revision: 1
          dnsSubdomainPermanentId: 6
          infrastructureId: 1
          meta: ""
          serviceStatus: ordered
          subdomain: subdomain
          networkId: 10
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          config:
            emptyEdit: 2
            dnsSubdomainChangeId: 7
            groupId: 5
            subdomain: subdomain
            index: 1
            infrastructureDeployId: 9
            networkId: 10
            label: if3
            updatedTimestamp: updatedTimestamp
            deployType: create
            revision: 1
            deployStatus: not_started
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServerInstanceGroupInterface'
          title: List of server instance group interface's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    ServerInstanceProfile:
      example:
        networkInterfaces:
          index: 0
          config:
            serverInterfaceId: 5
            emptyEdit: 5
            index: 1
            label: if3
            updatedTimestamp: updatedTimestamp
            deployType: create
            revision: 1
            instanceId: 6
            dnsSubdomainChangeId: 2
            subdomain: subdomain
            infrastructureDeployId: 7
            networkId: 10
            capacityMbps: 1
            deployStatus: not_started
        networkProfiles:
        - networkId: 1
          networkProfileId: 1
        - networkId: 1
          networkProfileId: 1
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 1
        label: server-profile-123
        ownerId: 1
        templateId: 1
        revision: 1
      properties:
        id:
          description: The Server profile ID.
          example: 1
          type: integer
        revision:
          description: Revision number
          example: 1
          type: number
        ownerId:
          description: The Server profile owner ID. Can be null if the profile is
            public. Will be set to the currently logged user.
          example: 1
          type: integer
        label:
          description: The Server profile label. Will be automatically generated if
            not provided.
          example: server-profile-123
          type: string
        networkProfiles:
          description: Network profiles mapping for each network in this infrastructure.
            Changes to this configuration will be duplicated on each vm-instance of
            this group.
          items:
            $ref: '#/components/schemas/ServerInstanceConfiguration_networkProfiles_inner'
          type: array
        networkInterfaces:
          $ref: '#/components/schemas/ServerInstanceProfile_networkInterfaces'
        templateId:
          description: The template id of the operating system to deploy on the Server.
            Can be null in which case no OS will be deployed but all operations will
            continue as normal.
          example: 1
          type: integer
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - id
      - revision
      type: object
    ServerInstanceProfilePaginatedList:
      example:
        data:
        - networkInterfaces:
            index: 0
            config:
              serverInterfaceId: 5
              emptyEdit: 5
              index: 1
              label: if3
              updatedTimestamp: updatedTimestamp
              deployType: create
              revision: 1
              instanceId: 6
              dnsSubdomainChangeId: 2
              subdomain: subdomain
              infrastructureDeployId: 7
              networkId: 10
              capacityMbps: 1
              deployStatus: not_started
          networkProfiles:
          - networkId: 1
            networkProfileId: 1
          - networkId: 1
            networkProfileId: 1
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          label: server-profile-123
          ownerId: 1
          templateId: 1
          revision: 1
        - networkInterfaces:
            index: 0
            config:
              serverInterfaceId: 5
              emptyEdit: 5
              index: 1
              label: if3
              updatedTimestamp: updatedTimestamp
              deployType: create
              revision: 1
              instanceId: 6
              dnsSubdomainChangeId: 2
              subdomain: subdomain
              infrastructureDeployId: 7
              networkId: 10
              capacityMbps: 1
              deployStatus: not_started
          networkProfiles:
          - networkId: 1
            networkProfileId: 1
          - networkId: 1
            networkProfileId: 1
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          label: server-profile-123
          ownerId: 1
          templateId: 1
          revision: 1
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServerInstanceProfile'
          title: List of server instance profile's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    ServerInstanceProfileCreate:
      example:
        networkInterfaces:
          index: 0
          config:
            serverInterfaceId: 5
            emptyEdit: 5
            index: 1
            label: if3
            updatedTimestamp: updatedTimestamp
            deployType: create
            revision: 1
            instanceId: 6
            dnsSubdomainChangeId: 2
            subdomain: subdomain
            infrastructureDeployId: 7
            networkId: 10
            capacityMbps: 1
            deployStatus: not_started
        networkProfiles:
        - networkId: 1
          networkProfileId: 1
        - networkId: 1
          networkProfileId: 1
        label: server-profile-123
      properties:
        label:
          description: The Server profile label. Will be automatically generated if
            not provided.
          example: server-profile-123
          type: string
        networkProfiles:
          description: Network profiles mapping for each network in this infrastructure.
            Changes to this configuration will be duplicated on each vm-instance of
            this group.
          items:
            $ref: '#/components/schemas/ServerInstanceConfiguration_networkProfiles_inner'
          type: array
        networkInterfaces:
          $ref: '#/components/schemas/ServerInstanceProfile_networkInterfaces'
      type: object
    ServerInstanceProfileUpdate:
      example:
        networkInterfaces:
          index: 0
          config:
            serverInterfaceId: 5
            emptyEdit: 5
            index: 1
            label: if3
            updatedTimestamp: updatedTimestamp
            deployType: create
            revision: 1
            instanceId: 6
            dnsSubdomainChangeId: 2
            subdomain: subdomain
            infrastructureDeployId: 7
            networkId: 10
            capacityMbps: 1
            deployStatus: not_started
        networkProfiles:
        - networkId: 1
          networkProfileId: 1
        - networkId: 1
          networkProfileId: 1
        label: server-profile-123
      properties:
        label:
          description: The Server profile label. Will be automatically generated if
            not provided.
          example: server-profile-123
          type: string
        networkProfiles:
          description: Network profiles mapping for each network in this infrastructure.
            Changes to this configuration will be duplicated on each vm-instance of
            this group.
          items:
            $ref: '#/components/schemas/ServerInstanceConfiguration_networkProfiles_inner'
          type: array
        networkInterfaces:
          $ref: '#/components/schemas/ServerInstanceProfile_networkInterfaces'
      type: object
    ServerInstanceUpdate:
      example:
        serverTypeId: 5
        groupId: 0
        networkProfiles:
        - networkId: 1
          networkProfileId: 1
        - networkId: 1
          networkProfileId: 1
        label: instance-123
        templateId: 1
        tags:
        - tags
        - tags
        enableAutoPortChannel: true
      properties:
        groupId:
          type: integer
        serverTypeId:
          description: The server type ID.
          example: 5
          type: integer
        templateId:
          description: 'The template id of the operating system to deploy on the server.
            Can be null in which case no OS will be deployed but all operations will
            continue as normal. '
          example: 1
          type: integer
        tags:
          items:
            type: string
          type: array
        enableAutoPortChannel:
          default: true
          description: If enabled will enable port channel to be automatically created.
          example: true
          type: boolean
        networkProfiles:
          description: Network profiles mapping for each network in this infrastructure.
          items:
            $ref: '#/components/schemas/ServerInstanceConfiguration_networkProfiles_inner'
          type: array
        label:
          description: The server instance label. Will be automatically generated
            if not provided.
          example: instance-123
          type: string
      type: object
    ServerInstanceStatistics:
      example:
        serverStatus: "{}"
        site: "{}"
      properties:
        serverStatus:
          description: An object containing server status as key and count as value
          type: object
        site:
          description: An object containing server site name as key and count as value
          type: object
      required:
      - serverStatus
      - site
      type: object
    DriveList:
      example:
        data:
        - iscsiIndexHex: iscsiIndexHex
          groupId: 1
          sizeMb: 6.027456183070403
          templateId: 1
          updatedTimestamp: updatedTimestamp
          targets: "{}"
          sshKeyPairInternalEncrypted: "{}"
          storageVirtualSizeCachedMb: 3.616076749251911
          wwn: wwn
          storageImageName: storageImageName
          storageUpdatedTimestamp: storageUpdatedTimestamp
          instanceId: 1
          dnsSubdomainPermanentId: 4.145608029883936
          osAdminPasswordEncrypted: osAdminPasswordEncrypted
          serviceStatus: ordered
          osAdminUsername: osAdminUsername
          networkVlanId: 7.386281948385884
          operatingSystemInfo: "{}"
          storagePoolId: 0.8008281904610115
          id: 5.962133916683182
          containerId: 1
          storageRealSizeCachedMb: 7.061401241503109
          sshPort: 1.4658129805029452
          provisioningProtocol: iSCSI
          storageRealSizeWithSnapshotsCachedMb: 9.301444243932576
          dnsSubdomainId: 2.027123023002322
          createdTimestamp: createdTimestamp
          label: label
          subdomainPermanent: subdomainPermanent
          filesystemInfo: "{}"
          revision: 5.637376656633329
          clusterCustomInfo: "{}"
          infrastructureId: 2.3021358869347655
          meta: ""
          storageType: iscsi_ssd
          subdomain: subdomain
          config: ""
        - iscsiIndexHex: iscsiIndexHex
          groupId: 1
          sizeMb: 6.027456183070403
          templateId: 1
          updatedTimestamp: updatedTimestamp
          targets: "{}"
          sshKeyPairInternalEncrypted: "{}"
          storageVirtualSizeCachedMb: 3.616076749251911
          wwn: wwn
          storageImageName: storageImageName
          storageUpdatedTimestamp: storageUpdatedTimestamp
          instanceId: 1
          dnsSubdomainPermanentId: 4.145608029883936
          osAdminPasswordEncrypted: osAdminPasswordEncrypted
          serviceStatus: ordered
          osAdminUsername: osAdminUsername
          networkVlanId: 7.386281948385884
          operatingSystemInfo: "{}"
          storagePoolId: 0.8008281904610115
          id: 5.962133916683182
          containerId: 1
          storageRealSizeCachedMb: 7.061401241503109
          sshPort: 1.4658129805029452
          provisioningProtocol: iSCSI
          storageRealSizeWithSnapshotsCachedMb: 9.301444243932576
          dnsSubdomainId: 2.027123023002322
          createdTimestamp: createdTimestamp
          label: label
          subdomainPermanent: subdomainPermanent
          filesystemInfo: "{}"
          revision: 5.637376656633329
          clusterCustomInfo: "{}"
          infrastructureId: 2.3021358869347655
          meta: ""
          storageType: iscsi_ssd
          subdomain: subdomain
          config: ""
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
      properties:
        data:
          items:
            $ref: '#/components/schemas/Drive'
          title: List of drives
          type: array
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - data
      type: object
    ServerInstanceInterfaceConfiguration:
      example:
        serverInterfaceId: 5
        emptyEdit: 5
        index: 1
        label: if3
        updatedTimestamp: updatedTimestamp
        deployType: create
        revision: 1
        instanceId: 6
        dnsSubdomainChangeId: 2
        subdomain: subdomain
        infrastructureDeployId: 7
        networkId: 10
        capacityMbps: 1
        deployStatus: not_started
      properties:
        revision:
          description: Revision number
          example: 1
          type: number
        label:
          description: The server instance interface label.
          example: if3
          type: string
        subdomain:
          description: Subdomain of the Server Group.
          type: string
        updatedTimestamp:
          description: Timestamp of the latest update for the Server Instance.
          type: string
        instanceId:
          type: integer
        index:
          description: The index of the interface (0-based) on this server.
          example: 1
          type: integer
        capacityMbps:
          type: integer
        networkId:
          description: The ID of the network to which this interface is to be attached
            to.
          example: 10
          type: integer
        serverInterfaceId:
          type: integer
        emptyEdit:
          description: Number of empty edits
          type: integer
        deployType:
          description: Server Instance Interface deploy type
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          description: Server Instance Interface deploy status
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        dnsSubdomainChangeId:
          description: Id of the DNS subdomain for the Server Instance Interface.
          type: integer
        infrastructureDeployId:
          description: Id of the deployment for the Server Instance Interface.
          type: integer
      required:
      - capacityMbps
      - deployStatus
      - deployType
      - index
      - instanceId
      - label
      - revision
      - updatedTimestamp
      type: object
    ServerInstanceInterface:
      example:
        serverInterfaceId: 2
        dnsSubdomainId: 0
        createdTimestamp: createdTimestamp
        index: 1
        label: if3
        subdomainPermanent: subdomainPermanent
        updatedTimestamp: updatedTimestamp
        revision: 1
        networkEquipmentSubnetPoolSanId: 3
        dnsSubdomainPermanentId: 6
        instanceId: 5
        subnetPoolSanIndex: 2
        infrastructureId: 1
        meta: ""
        serviceStatus: ordered
        subdomain: subdomain
        networkId: 10
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 1
        vlanIdentifier: 7
        aclIdentifier: 9
        dirtyBit: true
        config:
          serverInterfaceId: 5
          emptyEdit: 5
          index: 1
          label: if3
          updatedTimestamp: updatedTimestamp
          deployType: create
          revision: 1
          instanceId: 6
          dnsSubdomainChangeId: 2
          subdomain: subdomain
          infrastructureDeployId: 7
          networkId: 10
          capacityMbps: 1
          deployStatus: not_started
        capacityMbps: 5
      properties:
        id:
          description: The server instance interface ID.
          example: 1
          type: integer
        revision:
          description: Revision number
          example: 1
          type: number
        label:
          description: The server instance interface label.
          example: if3
          type: string
        subdomain:
          description: Subdomain of the Server Group.
          type: string
        subdomainPermanent:
          description: Subdomain permanent of the Server Group.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the Server Group.
          type: integer
        dnsSubdomainPermanentId:
          description: Id of the permanent DNS subdomain for the Server Group.
          type: integer
        createdTimestamp:
          description: Timestamp of the Server Instance creation.
          type: string
        updatedTimestamp:
          description: Timestamp of the latest update for the Server Instance.
          type: string
        meta:
          allOf:
          - $ref: '#/components/schemas/GenericGUISettings'
          description: GUI settings in JSON format.
        infrastructureId:
          type: integer
        instanceId:
          type: integer
        index:
          description: The index of the interface (0-based) on this server.
          example: 1
          type: integer
        capacityMbps:
          type: integer
        networkId:
          description: The ID of the network to which this interface is to be attached
            to.
          example: 10
          type: integer
        subnetPoolSanIndex:
          type: integer
        vlanIdentifier:
          type: integer
        aclIdentifier:
          type: integer
        networkEquipmentSubnetPoolSanId:
          type: integer
        serverInterfaceId:
          type: integer
        dirtyBit:
          type: boolean
        serviceStatus:
          description: Current status of the server instance interface.
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          example: ordered
          type: string
        config:
          $ref: '#/components/schemas/ServerInstanceInterfaceConfiguration'
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - capacityMbps
      - createdTimestamp
      - dirtyBit
      - index
      - infrastructureId
      - instanceId
      - label
      - revision
      - serviceStatus
      - updatedTimestamp
      type: object
    ServerInstanceInterfacePaginatedList:
      example:
        data:
        - serverInterfaceId: 2
          dnsSubdomainId: 0
          createdTimestamp: createdTimestamp
          index: 1
          label: if3
          subdomainPermanent: subdomainPermanent
          updatedTimestamp: updatedTimestamp
          revision: 1
          networkEquipmentSubnetPoolSanId: 3
          dnsSubdomainPermanentId: 6
          instanceId: 5
          subnetPoolSanIndex: 2
          infrastructureId: 1
          meta: ""
          serviceStatus: ordered
          subdomain: subdomain
          networkId: 10
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          vlanIdentifier: 7
          aclIdentifier: 9
          dirtyBit: true
          config:
            serverInterfaceId: 5
            emptyEdit: 5
            index: 1
            label: if3
            updatedTimestamp: updatedTimestamp
            deployType: create
            revision: 1
            instanceId: 6
            dnsSubdomainChangeId: 2
            subdomain: subdomain
            infrastructureDeployId: 7
            networkId: 10
            capacityMbps: 1
            deployStatus: not_started
          capacityMbps: 5
        - serverInterfaceId: 2
          dnsSubdomainId: 0
          createdTimestamp: createdTimestamp
          index: 1
          label: if3
          subdomainPermanent: subdomainPermanent
          updatedTimestamp: updatedTimestamp
          revision: 1
          networkEquipmentSubnetPoolSanId: 3
          dnsSubdomainPermanentId: 6
          instanceId: 5
          subnetPoolSanIndex: 2
          infrastructureId: 1
          meta: ""
          serviceStatus: ordered
          subdomain: subdomain
          networkId: 10
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          vlanIdentifier: 7
          aclIdentifier: 9
          dirtyBit: true
          config:
            serverInterfaceId: 5
            emptyEdit: 5
            index: 1
            label: if3
            updatedTimestamp: updatedTimestamp
            deployType: create
            revision: 1
            instanceId: 6
            dnsSubdomainChangeId: 2
            subdomain: subdomain
            infrastructureDeployId: 7
            networkId: 10
            capacityMbps: 1
            deployStatus: not_started
          capacityMbps: 5
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServerInstanceInterface'
          title: List of server instance interface's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    ServerInstanceInterfaceUpdate:
      example:
        networkId: 10
        label: if3
        capacityMbps: 0
      properties:
        capacityMbps:
          type: integer
        networkId:
          description: The ID of the network to which this interface is to be attached
            to.
          example: 10
          type: integer
        label:
          description: The server instance interface label.
          example: if3
          type: string
      type: object
    ServerInstanceProfileReference:
      example:
        id: 1
      properties:
        id:
          description: The Server profile ID.
          example: 1
          type: integer
      required:
      - id
      type: object
    ServerInstancePowerSet:
      example:
        powerCommand: "on"
      properties:
        powerCommand:
          description: Power command.
          enum:
          - "on"
          - reset
          - soft
          - "off"
          type: string
      required:
      - powerCommand
      type: object
    ServerInstanceReinstallOS:
      example:
        reinstallOS: true
        performAtNextDeploy: true
      properties:
        performAtNextDeploy:
          description: Whether to perform the reinstall at next deploy. (always true
            at the moment)
          type: boolean
        reinstallOS:
          description: Whether to reinstall the OS.
          type: boolean
      required:
      - performAtNextDeploy
      - reinstallOS
      type: object
    ServerGpuInfo:
      example:
        vendor: vendor
        model: model
      properties:
        model:
          description: The model of the GPU
          maxLength: 255
          type: string
        vendor:
          description: The vendor of the GPU
          maxLength: 255
          type: string
      required:
      - model
      - vendor
      type: object
    RegisterServer:
      example:
        managementAddress: managementAddress
        password: password
        serialNumber: serialNumber
        serverUUID: serverUUID
        vendor: Unknown
        siteId: 0.8008281904610115
        model: model
        bmcMacAddress: bmcMacAddress
        username: username
      properties:
        siteId:
          description: The site id where the server is located.
          type: number
        serverUUID:
          description: The UUID of the server.
          type: string
        serialNumber:
          description: The Serial Number of the server.
          type: string
        managementAddress:
          description: The Management Address of the server.
          type: string
        username:
          description: The username to use.
          type: string
        bmcMacAddress:
          description: The MAC address of the server.
          type: string
        vendor:
          description: The vendor of the server.
          enum:
          - Unknown
          - Dell
          - Lenovo
          - HP
          - HPE
          type: string
        model:
          description: The model of the server.
          type: string
        password:
          description: The password to use.
          type: string
      required:
      - siteId
      type: object
    RegisterServerResponse:
      example:
        serialNumber: serialNumber
        serverUUID: serverUUID
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        serverId: 0.8008281904610115
        jobInfo:
          jobId: 0.8008281904610115
          jobGroupId: 6.027456183070403
        revision: 1
      properties:
        serverId:
          description: The id of the server.
          type: number
        revision:
          description: Revision number
          example: 1
          type: number
        serverUUID:
          description: The UUID of the server.
          type: string
        serialNumber:
          description: The Serial Number of the server.
          type: string
        jobInfo:
          $ref: '#/components/schemas/JobInfo'
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - revision
      - serverId
      type: object
    ReRegisterServerResponse:
      example:
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        serverId: 0.8008281904610115
        jobInfo:
          jobId: 0.8008281904610115
          jobGroupId: 6.027456183070403
        revision: 1
      properties:
        serverId:
          description: The id of the server.
          type: number
        revision:
          description: Revision number
          example: 1
          type: number
        jobInfo:
          $ref: '#/components/schemas/JobInfo'
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - revision
      - serverId
      type: object
    ServerInterface:
      example:
        serverInterfaceId: 6.778324963048013
        networkDevice: "{}"
        aliasIndex: 7.143538047012306
        networkDeviceInterface: "{}"
        index: 5.944895607614016
        description: description
        serverId: 6.878052220127876
        addOnType: hba
        switchHostname: switchHostname
        pxeEnabled: 3.353193347011243
        macAddress: macAddress
        fibreChannelWwpn: fibreChannelWwpn
        addOnInfo: "{}"
        addOnMac: addOnMac
        capacityMbps: 6.704019297950036
        switchPortId: switchPortId
        supportsIscsiBoot: 3.0937452626664474
      properties:
        serverInterfaceId:
          description: The id of the server interface.
          type: number
        serverId:
          description: The id of the server.
          type: number
        macAddress:
          description: The MAC address of the server interface.
          type: string
        index:
          description: The index of the server interface.
          type: number
        switchPortId:
          description: The switch port id of the server interface.
          type: string
        switchHostname:
          description: The switch hostname of the server interface.
          type: string
        capacityMbps:
          description: The capacity in Mbps of the server interface.
          type: number
        addOnMac:
          description: The add-on MAC address of the server interface.
          type: string
        addOnType:
          description: The add-on type of the server interface.
          enum:
          - hba
          - offload
          type: string
        addOnInfo:
          description: The add-on info of the server interface.
          type: object
        pxeEnabled:
          description: Flag to indicate if PXE is enabled.
          type: number
        supportsIscsiBoot:
          description: Flag to indicate if the server interface supports iSCSI boot
          type: number
        fibreChannelWwpn:
          description: The WWPN of the fibre channel.
          type: string
        description:
          description: The description of the server interface.
          type: string
        aliasIndex:
          description: The alias index of the server interface.
          type: number
        networkDevice:
          description: The network device linked to the server.
          type: object
        networkDeviceInterface:
          description: The network device interface linked to the server.
          type: object
      required:
      - index
      - macAddress
      - serverId
      - serverInterfaceId
      type: object
    ServerDisk:
      example:
        serial: serial
        vendor: vendor
        serverStorageControllerId: 0.10263654006109402
        model: model
        id: 0.8851374739011653
        type: none
        serverId: 7.058770351582356
        diskSizeGb: 6.519180951018382
        status: installed
      properties:
        id:
          description: The id of the disk.
          type: number
        serverId:
          description: The id of the server.
          type: number
        model:
          description: The model of the disk
          type: string
        diskSizeGb:
          description: The size of the disk in GB
          type: number
        serial:
          description: The serial of the disk
          type: string
        vendor:
          description: The vendor of the disk
          type: string
        status:
          description: The status of the disk
          enum:
          - installed
          - spare
          type: string
        type:
          description: The type of the disk
          enum:
          - none
          - HDD
          - SSD
          - NVME
          type: string
        serverStorageControllerId:
          description: The id of the storage controller
          type: number
      required:
      - diskSizeGb
      - id
      - model
      - serial
      - serverId
      - status
      - type
      - vendor
      type: object
    ServerStorageController:
      example:
        mode: HBA
        name: name
        options: "{}"
        description: description
        id: 4.652396432933246
        label: label
        serverId: 8.969578798196912
      properties:
        id:
          description: The id of the storage controller.
          type: number
        serverId:
          description: The id of the server.
          type: number
        name:
          description: The name of the storage controller.
          type: string
        label:
          description: The label of the storage controller.
          type: string
        description:
          description: The description of the storage controller.
          type: string
        options:
          description: The options of the storage controller.
          type: object
        mode:
          description: The mode of the storage controller.
          enum:
          - HBA
          - eHBA
          - RAID
          type: string
      required:
      - description
      - id
      - label
      - mode
      - name
      - options
      - serverId
      type: object
    ServerAllocationInfo:
      properties:
        instanceId:
          description: The id of the instance.
          type: number
        extensionInstanceId:
          description: The id of the extension instance.
          type: number
        infrastructure:
          description: The infrastructure of the instance.
          type: object
        osTemplateId:
          description: The id of the os template used by the instance.
          type: number
      required:
      - infrastructure
      - instanceId
      type: object
    Server:
      example:
        datacenterName: datacenterName
        bootingCustomIsoInProgress: 6.683562403749608
        mgmtSnmpPasswordEncrypted: mgmtSnmpPasswordEncrypted
        serverSupportsOobProvisioning: 9.369310271410669
        passwordEncrypted: passwordEncrypted
        customInfo: "{}"
        diskCount: 2.027123023002322
        serverId: 0.8008281904610115
        processorCoreMhz: 2.3021358869347655
        powerStatus: unknown
        serverCreatedTimestamp: serverCreatedTimestamp
        serverDhcpStatus: quarantine
        model: model
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        bmcMacAddress: bmcMacAddress
        bootLastUpdateTimestamp: bootLastUpdateTimestamp
        gpuCount: 3.5571952270680973
        serverSupportsSol: 5.025004791520295
        vncPasswordEncrypted: vncPasswordEncrypted
        vncPort: 6.84685269835264
        serialNumber: serialNumber
        submodel: submodel
        registeredTimestamp: registeredTimestamp
        isBasicCampusEndpoint: 7.457744773683766
        gpuInfo:
        - vendor: vendor
          model: model
        - vendor: vendor
          model: model
        revision: 1
        processorThreads: 3.616076749251911
        tags:
        - tags
        - tags
        serverCleanupPolicyId: 1.1730742509559433
        serverDiskWipe: 9.018348186070783
        resourcePoolId: 7.740351818741173
        processorCpuMark: 9.301444243932576
        ramGbytes: 5.962133916683182
        instanceCustomInfo: "{}"
        biosInfo:
          key: biosInfo
        rackPositionLowerUnit: rackPositionLowerUnit
        serverTypeId: 6.027456183070403
        requiresReRegister: 4.965218492984954
        serverStatus: registering
        serverDiskCount: 6.438423552598547
        disks:
        - serial: serial
          vendor: vendor
          serverStorageControllerId: 0.10263654006109402
          model: model
          id: 0.8851374739011653
          type: none
          serverId: 7.058770351582356
          diskSizeGb: 6.519180951018382
          status: installed
        - serial: serial
          vendor: vendor
          serverStorageControllerId: 0.10263654006109402
          model: model
          id: 0.8851374739011653
          type: none
          serverId: 7.058770351582356
          diskSizeGb: 6.519180951018382
          status: installed
        vendorInfo:
          key: vendorInfo
        bdkDebug: 7.386281948385884
        jobInfo:
          jobId: 0.8008281904610115
          jobGroupId: 6.027456183070403
        ipmiVersion: ipmiVersion
        serverClass: unknown
        vendorSkuId: vendorSkuId
        serverUUID: serverUUID
        serverMetricsMetadata:
          key:
          - UpperThresholdFatal: 1.0246457001441578
            Number: 1.2315135367772556
            Oem: "{}"
            Label: Label
            UpperThresholdCritical: 1.4894159098541704
            Units: Units
            Name: Name
            PhysicalContext: PhysicalContext
          - UpperThresholdFatal: 1.0246457001441578
            Number: 1.2315135367772556
            Oem: "{}"
            Label: Label
            UpperThresholdCritical: 1.4894159098541704
            Units: Units
            Name: Name
            PhysicalContext: PhysicalContext
        processorCoreCount: 7.061401241503109
        vendor: Unknown
        serverSupportsVirtualMedia: 9.965781217890562
        supportsFcProvisioning: 6.965117697638846
        storageControllers:
        - mode: HBA
          name: name
          options: "{}"
          description: description
          id: 4.652396432933246
          label: label
          serverId: 8.969578798196912
        - mode: HBA
          name: name
          options: "{}"
          description: description
          id: 4.652396432933246
          label: label
          serverId: 8.969578798196912
        processorName: processorName
        rackPositionUpperUnit: rackPositionUpperUnit
        managementAddress: managementAddress
        ipmiCredentialsNeedUpdate: 2.8841621266687802
        interfaces:
        - serverInterfaceId: 6.778324963048013
          networkDevice: "{}"
          aliasIndex: 7.143538047012306
          networkDeviceInterface: "{}"
          index: 5.944895607614016
          description: description
          serverId: 6.878052220127876
          addOnType: hba
          switchHostname: switchHostname
          pxeEnabled: 3.353193347011243
          macAddress: macAddress
          fibreChannelWwpn: fibreChannelWwpn
          addOnInfo: "{}"
          addOnMac: addOnMac
          capacityMbps: 6.704019297950036
          switchPortId: switchPortId
          supportsIscsiBoot: 3.0937452626664474
        - serverInterfaceId: 6.778324963048013
          networkDevice: "{}"
          aliasIndex: 7.143538047012306
          networkDeviceInterface: "{}"
          index: 5.944895607614016
          description: description
          serverId: 6.878052220127876
          addOnType: hba
          switchHostname: switchHostname
          pxeEnabled: 3.353193347011243
          macAddress: macAddress
          fibreChannelWwpn: fibreChannelWwpn
          addOnInfo: "{}"
          addOnMac: addOnMac
          capacityMbps: 6.704019297950036
          switchPortId: switchPortId
          supportsIscsiBoot: 3.0937452626664474
        serverCapacityMbps: 8.762042012749001
        processorCount: 5.637376656633329
        serverComments: serverComments
        serverAllocationTimestamp: serverAllocationTimestamp
        chassisRackId: 1.284659006116532
        mgmtSnmpPort: 4.145608029883936
        powerStatusLastUpdateTimestamp: powerStatusLastUpdateTimestamp
        administrationState: managed
        rackName: rackName
        inventoryId: inventoryId
        siteId: 1.4658129805029452
        username: username
        allocationInfo: ""
      properties:
        serverId:
          description: The id of the server.
          type: number
        revision:
          description: Revision number
          example: 1
          type: number
        serverTypeId:
          description: The id of the server type.
          type: number
        siteId:
          description: The site id where the server is located.
          type: number
        datacenterName:
          description: The name of the datacenter where the server is located.
          type: string
        serverUUID:
          description: The UUID of the server.
          type: string
        serialNumber:
          description: The Serial Number of the server.
          type: string
        managementAddress:
          description: The Management Address of the server.
          type: string
        username:
          description: The username to use.
          type: string
        passwordEncrypted:
          description: The encrypted password.
          type: string
        ipmiVersion:
          description: The ipmi version of the server.
          type: string
        ramGbytes:
          description: The RAM GB of the server.
          type: number
        processorCount:
          description: The processor count of the server.
          type: number
        processorCoreMhz:
          description: The processor core Mhz of the server.
          type: number
        processorCoreCount:
          description: The processor core count of the server.
          type: number
        processorName:
          description: The processor name of the server.
          type: string
        processorCpuMark:
          description: The processor cpu mark of the server.
          type: number
        processorThreads:
          description: The processor threads of the server.
          type: number
        diskCount:
          description: The disk count of the server.
          type: number
        mgmtSnmpPort:
          description: The management snmp port of the server.
          type: number
        mgmtSnmpPasswordEncrypted:
          description: The management snmp password encrypted of the server.
          type: string
        bmcMacAddress:
          description: The MAC address of the server.
          type: string
        bdkDebug:
          description: The BDK debug flag.
          type: number
        serverMetricsMetadata:
          additionalProperties:
            items:
              $ref: '#/components/schemas/ServerMetricsInfo'
            type: array
          description: The metrics metadata of the server.
          type: object
        instanceCustomInfo:
          description: The instance custom info of the server.
          type: object
        customInfo:
          description: The custom info of the server.
          type: object
        vendor:
          description: The vendor of the server.
          enum:
          - Unknown
          - Dell
          - Lenovo
          - HP
          - HPE
          type: string
        vendorSkuId:
          description: The vendor sku id of the server.
          type: string
        model:
          description: The model of the server.
          type: string
        vncPort:
          description: The VNC port of the server.
          type: number
        vncPasswordEncrypted:
          description: The VNC password encrypted of the server.
          type: string
        isBasicCampusEndpoint:
          description: Flag to indicate if the server is basic campus endpoint.
          type: number
        serverCleanupPolicyId:
          description: The cleanup policy id of the server.
          type: number
        requiresReRegister:
          description: Flag to indicate if the server required re-registration.
          type: number
        serverSupportsSol:
          description: Flag to indicate if the supports SOL.
          type: number
        serverSupportsVirtualMedia:
          description: Flag to indicate if the supports Virtual Media.
          type: number
        serverSupportsOobProvisioning:
          description: Flag to indicate if the supports OOB provisioning.
          type: number
        bootingCustomIsoInProgress:
          description: Flag to indicate if the server is booting a custom iso.
          type: number
        biosInfo:
          additionalProperties:
            type: string
          description: The bios info of the server.
          type: object
        vendorInfo:
          additionalProperties:
            type: string
          description: The vendor info of the server.
          type: object
        serverClass:
          description: The class of the server.
          enum:
          - unknown
          - bigdata
          - hdfs
          type: string
        serverStatus:
          description: The status of the server.
          enum:
          - registering
          - available
          - cleaning_required
          - cleaning
          - used
          - used_registering
          - defective
          - removed_from_rack
          - decommissioned
          - updating_firmware
          - used_diagnostics
          - pending_registration
          - unavailable
          type: string
        serverComments:
          description: The comments of the server.
          type: string
        serverCapacityMbps:
          description: The capacity mbps of the server.
          type: number
        serverDiskWipe:
          description: Flag to indicate if the disks need to be wiped during BDK boot.
          type: number
        serverDiskCount:
          description: The number of disks of the server.
          type: number
        administrationState:
          description: The administration state of the server.
          enum:
          - managed
          - unmanaged
          - generic_endpoint
          type: string
        serverDhcpStatus:
          description: The DHCP status of the server.
          enum:
          - quarantine
          - deny_requests
          - allow_requests
          - ansible_provision
          type: string
        gpuCount:
          description: The GPU count of the server.
          type: number
        gpuInfo:
          description: The GPU info of the server.
          items:
            $ref: '#/components/schemas/ServerGpuInfo'
          type: array
        submodel:
          description: The submodel of the server.
          type: string
        supportsFcProvisioning:
          description: Flag to indicate if the server supports FC provisioning.
          type: number
        bootLastUpdateTimestamp:
          description: The last boot update timestamp of the server.
          type: string
        registeredTimestamp:
          description: The registration timestamp of the server.
          type: string
        serverCreatedTimestamp:
          description: The creation timestamp of the server.
          type: string
        powerStatus:
          description: The power status of the server.
          enum:
          - unknown
          - "on"
          - "off"
          type: string
        powerStatusLastUpdateTimestamp:
          description: The last power update timestamp of the server.
          type: string
        serverAllocationTimestamp:
          description: The timestamp when the server was allocated.
          type: string
        jobInfo:
          $ref: '#/components/schemas/JobInfo'
        chassisRackId:
          description: The chassis rack id of the server.
          type: number
        rackName:
          description: The chassis rack name of the server.
          type: string
        rackPositionUpperUnit:
          description: The chassis rack upper unit position of the server.
          type: string
        rackPositionLowerUnit:
          description: The chassis rack lower unit position of the server.
          type: string
        inventoryId:
          description: The inventory id of the server.
          type: string
        ipmiCredentialsNeedUpdate:
          description: Flag to indicate if the server needs an update of the IPMI
            credentials.
          type: number
        interfaces:
          description: The interfaces of the server.
          items:
            $ref: '#/components/schemas/ServerInterface'
          type: array
        disks:
          description: The disks of the server.
          items:
            $ref: '#/components/schemas/ServerDisk'
          type: array
        storageControllers:
          description: The storage controllers of the server.
          items:
            $ref: '#/components/schemas/ServerStorageController'
          type: array
        tags:
          description: Tags for the Server.
          items:
            type: string
          type: array
        resourcePoolId:
          description: Resource Pool ID
          type: number
        allocationInfo:
          allOf:
          - $ref: '#/components/schemas/ServerAllocationInfo'
          description: The server instance.
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - administrationState
      - bdkDebug
      - datacenterName
      - passwordEncrypted
      - powerStatus
      - powerStatusLastUpdateTimestamp
      - requiresReRegister
      - revision
      - serverClass
      - serverCreatedTimestamp
      - serverDhcpStatus
      - serverId
      - serverStatus
      - siteId
      - supportsFcProvisioning
      type: object
    ServerPaginatedList:
      example:
        data:
        - datacenterName: datacenterName
          bootingCustomIsoInProgress: 6.683562403749608
          mgmtSnmpPasswordEncrypted: mgmtSnmpPasswordEncrypted
          serverSupportsOobProvisioning: 9.369310271410669
          passwordEncrypted: passwordEncrypted
          customInfo: "{}"
          diskCount: 2.027123023002322
          serverId: 0.8008281904610115
          processorCoreMhz: 2.3021358869347655
          powerStatus: unknown
          serverCreatedTimestamp: serverCreatedTimestamp
          serverDhcpStatus: quarantine
          model: model
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          bmcMacAddress: bmcMacAddress
          bootLastUpdateTimestamp: bootLastUpdateTimestamp
          gpuCount: 3.5571952270680973
          serverSupportsSol: 5.025004791520295
          vncPasswordEncrypted: vncPasswordEncrypted
          vncPort: 6.84685269835264
          serialNumber: serialNumber
          submodel: submodel
          registeredTimestamp: registeredTimestamp
          isBasicCampusEndpoint: 7.457744773683766
          gpuInfo:
          - vendor: vendor
            model: model
          - vendor: vendor
            model: model
          revision: 1
          processorThreads: 3.616076749251911
          tags:
          - tags
          - tags
          serverCleanupPolicyId: 1.1730742509559433
          serverDiskWipe: 9.018348186070783
          resourcePoolId: 7.740351818741173
          processorCpuMark: 9.301444243932576
          ramGbytes: 5.962133916683182
          instanceCustomInfo: "{}"
          biosInfo:
            key: biosInfo
          rackPositionLowerUnit: rackPositionLowerUnit
          serverTypeId: 6.027456183070403
          requiresReRegister: 4.965218492984954
          serverStatus: registering
          serverDiskCount: 6.438423552598547
          disks:
          - serial: serial
            vendor: vendor
            serverStorageControllerId: 0.10263654006109402
            model: model
            id: 0.8851374739011653
            type: none
            serverId: 7.058770351582356
            diskSizeGb: 6.519180951018382
            status: installed
          - serial: serial
            vendor: vendor
            serverStorageControllerId: 0.10263654006109402
            model: model
            id: 0.8851374739011653
            type: none
            serverId: 7.058770351582356
            diskSizeGb: 6.519180951018382
            status: installed
          vendorInfo:
            key: vendorInfo
          bdkDebug: 7.386281948385884
          jobInfo:
            jobId: 0.8008281904610115
            jobGroupId: 6.027456183070403
          ipmiVersion: ipmiVersion
          serverClass: unknown
          vendorSkuId: vendorSkuId
          serverUUID: serverUUID
          serverMetricsMetadata:
            key:
            - UpperThresholdFatal: 1.0246457001441578
              Number: 1.2315135367772556
              Oem: "{}"
              Label: Label
              UpperThresholdCritical: 1.4894159098541704
              Units: Units
              Name: Name
              PhysicalContext: PhysicalContext
            - UpperThresholdFatal: 1.0246457001441578
              Number: 1.2315135367772556
              Oem: "{}"
              Label: Label
              UpperThresholdCritical: 1.4894159098541704
              Units: Units
              Name: Name
              PhysicalContext: PhysicalContext
          processorCoreCount: 7.061401241503109
          vendor: Unknown
          serverSupportsVirtualMedia: 9.965781217890562
          supportsFcProvisioning: 6.965117697638846
          storageControllers:
          - mode: HBA
            name: name
            options: "{}"
            description: description
            id: 4.652396432933246
            label: label
            serverId: 8.969578798196912
          - mode: HBA
            name: name
            options: "{}"
            description: description
            id: 4.652396432933246
            label: label
            serverId: 8.969578798196912
          processorName: processorName
          rackPositionUpperUnit: rackPositionUpperUnit
          managementAddress: managementAddress
          ipmiCredentialsNeedUpdate: 2.8841621266687802
          interfaces:
          - serverInterfaceId: 6.778324963048013
            networkDevice: "{}"
            aliasIndex: 7.143538047012306
            networkDeviceInterface: "{}"
            index: 5.944895607614016
            description: description
            serverId: 6.878052220127876
            addOnType: hba
            switchHostname: switchHostname
            pxeEnabled: 3.353193347011243
            macAddress: macAddress
            fibreChannelWwpn: fibreChannelWwpn
            addOnInfo: "{}"
            addOnMac: addOnMac
            capacityMbps: 6.704019297950036
            switchPortId: switchPortId
            supportsIscsiBoot: 3.0937452626664474
          - serverInterfaceId: 6.778324963048013
            networkDevice: "{}"
            aliasIndex: 7.143538047012306
            networkDeviceInterface: "{}"
            index: 5.944895607614016
            description: description
            serverId: 6.878052220127876
            addOnType: hba
            switchHostname: switchHostname
            pxeEnabled: 3.353193347011243
            macAddress: macAddress
            fibreChannelWwpn: fibreChannelWwpn
            addOnInfo: "{}"
            addOnMac: addOnMac
            capacityMbps: 6.704019297950036
            switchPortId: switchPortId
            supportsIscsiBoot: 3.0937452626664474
          serverCapacityMbps: 8.762042012749001
          processorCount: 5.637376656633329
          serverComments: serverComments
          serverAllocationTimestamp: serverAllocationTimestamp
          chassisRackId: 1.284659006116532
          mgmtSnmpPort: 4.145608029883936
          powerStatusLastUpdateTimestamp: powerStatusLastUpdateTimestamp
          administrationState: managed
          rackName: rackName
          inventoryId: inventoryId
          siteId: 1.4658129805029452
          username: username
          allocationInfo: ""
        - datacenterName: datacenterName
          bootingCustomIsoInProgress: 6.683562403749608
          mgmtSnmpPasswordEncrypted: mgmtSnmpPasswordEncrypted
          serverSupportsOobProvisioning: 9.369310271410669
          passwordEncrypted: passwordEncrypted
          customInfo: "{}"
          diskCount: 2.027123023002322
          serverId: 0.8008281904610115
          processorCoreMhz: 2.3021358869347655
          powerStatus: unknown
          serverCreatedTimestamp: serverCreatedTimestamp
          serverDhcpStatus: quarantine
          model: model
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          bmcMacAddress: bmcMacAddress
          bootLastUpdateTimestamp: bootLastUpdateTimestamp
          gpuCount: 3.5571952270680973
          serverSupportsSol: 5.025004791520295
          vncPasswordEncrypted: vncPasswordEncrypted
          vncPort: 6.84685269835264
          serialNumber: serialNumber
          submodel: submodel
          registeredTimestamp: registeredTimestamp
          isBasicCampusEndpoint: 7.457744773683766
          gpuInfo:
          - vendor: vendor
            model: model
          - vendor: vendor
            model: model
          revision: 1
          processorThreads: 3.616076749251911
          tags:
          - tags
          - tags
          serverCleanupPolicyId: 1.1730742509559433
          serverDiskWipe: 9.018348186070783
          resourcePoolId: 7.740351818741173
          processorCpuMark: 9.301444243932576
          ramGbytes: 5.962133916683182
          instanceCustomInfo: "{}"
          biosInfo:
            key: biosInfo
          rackPositionLowerUnit: rackPositionLowerUnit
          serverTypeId: 6.027456183070403
          requiresReRegister: 4.965218492984954
          serverStatus: registering
          serverDiskCount: 6.438423552598547
          disks:
          - serial: serial
            vendor: vendor
            serverStorageControllerId: 0.10263654006109402
            model: model
            id: 0.8851374739011653
            type: none
            serverId: 7.058770351582356
            diskSizeGb: 6.519180951018382
            status: installed
          - serial: serial
            vendor: vendor
            serverStorageControllerId: 0.10263654006109402
            model: model
            id: 0.8851374739011653
            type: none
            serverId: 7.058770351582356
            diskSizeGb: 6.519180951018382
            status: installed
          vendorInfo:
            key: vendorInfo
          bdkDebug: 7.386281948385884
          jobInfo:
            jobId: 0.8008281904610115
            jobGroupId: 6.027456183070403
          ipmiVersion: ipmiVersion
          serverClass: unknown
          vendorSkuId: vendorSkuId
          serverUUID: serverUUID
          serverMetricsMetadata:
            key:
            - UpperThresholdFatal: 1.0246457001441578
              Number: 1.2315135367772556
              Oem: "{}"
              Label: Label
              UpperThresholdCritical: 1.4894159098541704
              Units: Units
              Name: Name
              PhysicalContext: PhysicalContext
            - UpperThresholdFatal: 1.0246457001441578
              Number: 1.2315135367772556
              Oem: "{}"
              Label: Label
              UpperThresholdCritical: 1.4894159098541704
              Units: Units
              Name: Name
              PhysicalContext: PhysicalContext
          processorCoreCount: 7.061401241503109
          vendor: Unknown
          serverSupportsVirtualMedia: 9.965781217890562
          supportsFcProvisioning: 6.965117697638846
          storageControllers:
          - mode: HBA
            name: name
            options: "{}"
            description: description
            id: 4.652396432933246
            label: label
            serverId: 8.969578798196912
          - mode: HBA
            name: name
            options: "{}"
            description: description
            id: 4.652396432933246
            label: label
            serverId: 8.969578798196912
          processorName: processorName
          rackPositionUpperUnit: rackPositionUpperUnit
          managementAddress: managementAddress
          ipmiCredentialsNeedUpdate: 2.8841621266687802
          interfaces:
          - serverInterfaceId: 6.778324963048013
            networkDevice: "{}"
            aliasIndex: 7.143538047012306
            networkDeviceInterface: "{}"
            index: 5.944895607614016
            description: description
            serverId: 6.878052220127876
            addOnType: hba
            switchHostname: switchHostname
            pxeEnabled: 3.353193347011243
            macAddress: macAddress
            fibreChannelWwpn: fibreChannelWwpn
            addOnInfo: "{}"
            addOnMac: addOnMac
            capacityMbps: 6.704019297950036
            switchPortId: switchPortId
            supportsIscsiBoot: 3.0937452626664474
          - serverInterfaceId: 6.778324963048013
            networkDevice: "{}"
            aliasIndex: 7.143538047012306
            networkDeviceInterface: "{}"
            index: 5.944895607614016
            description: description
            serverId: 6.878052220127876
            addOnType: hba
            switchHostname: switchHostname
            pxeEnabled: 3.353193347011243
            macAddress: macAddress
            fibreChannelWwpn: fibreChannelWwpn
            addOnInfo: "{}"
            addOnMac: addOnMac
            capacityMbps: 6.704019297950036
            switchPortId: switchPortId
            supportsIscsiBoot: 3.0937452626664474
          serverCapacityMbps: 8.762042012749001
          processorCount: 5.637376656633329
          serverComments: serverComments
          serverAllocationTimestamp: serverAllocationTimestamp
          chassisRackId: 1.284659006116532
          mgmtSnmpPort: 4.145608029883936
          powerStatusLastUpdateTimestamp: powerStatusLastUpdateTimestamp
          administrationState: managed
          rackName: rackName
          inventoryId: inventoryId
          siteId: 1.4658129805029452
          username: username
          allocationInfo: ""
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/Server'
          title: List of server's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    ServerMetricsInfo:
      example:
        UpperThresholdFatal: 1.0246457001441578
        Number: 1.2315135367772556
        Oem: "{}"
        Label: Label
        UpperThresholdCritical: 1.4894159098541704
        Units: Units
        Name: Name
        PhysicalContext: PhysicalContext
      properties:
        Oem:
          description: The metrics OEM info.
          type: object
        Name:
          description: The metrics name.
          type: string
        Label:
          description: The custom info of the server.
          type: string
        Units:
          description: The metrics units.
          type: string
        Number:
          description: The metrics value.
          type: number
        PhysicalContext:
          description: The metrics physical context.
          type: string
        UpperThresholdFatal:
          description: The metrics fatal threshold.
          type: number
        UpperThresholdCritical:
          description: The metrics critical threshold.
          type: number
      type: object
    UpdateServer:
      example:
        managementAddress: managementAddress
        serverTypeId: 0.8008281904610115
        serverStatus: registering
        serverComments: serverComments
        chassisRackId: 1.4658129805029452
        tags:
        - tags
        - tags
        serverClass: unknown
        serverCleanupPolicyId: 6.027456183070403
        resourcePoolId: 5.962133916683182
        rackName: rackName
        inventoryId: inventoryId
        rackPositionUpperUnit: rackPositionUpperUnit
        rackPositionLowerUnit: rackPositionLowerUnit
        username: username
      properties:
        serverTypeId:
          description: The id of the server type.
          type: number
        managementAddress:
          description: The Management Address of the server.
          type: string
        username:
          description: The username to use.
          type: string
        serverCleanupPolicyId:
          description: The cleanup policy id of the server.
          type: number
        serverComments:
          description: The comments of the server.
          type: string
        chassisRackId:
          description: The chassis rack id of the server.
          type: number
        rackName:
          description: The chassis rack name of the server.
          type: string
        rackPositionUpperUnit:
          description: The chassis rack upper unit position of the server.
          type: string
        rackPositionLowerUnit:
          description: The chassis rack lower unit position of the server.
          type: string
        inventoryId:
          description: The inventory id of the server.
          type: string
        tags:
          description: Tags for the Server.
          items:
            type: string
          type: array
        resourcePoolId:
          description: Resource Pool ID
          type: number
        serverStatus:
          description: The status of the server.
          enum:
          - registering
          - available
          - cleaning_required
          - cleaning
          - used
          - used_registering
          - defective
          - removed_from_rack
          - decommissioned
          - updating_firmware
          - used_diagnostics
          - pending_registration
          - unavailable
          type: string
        serverClass:
          description: The server class.
          enum:
          - unknown
          - bigdata
          - hdfs
          type: string
      type: object
    ServerStatistics:
      example:
        serverStatus: "{}"
        site: "{}"
      properties:
        serverStatus:
          description: An object containing server status as key and count as value
          type: object
        site:
          description: An object containing server site id as key and count as value
          type: object
      required:
      - serverStatus
      - site
      type: object
    ServerCapabilities:
      example:
        firmwareUpgradeSupported: true
        vncEnabled: true
        firmwareUpgradeApplyOnRebootSupported: true
      properties:
        firmwareUpgradeSupported:
          description: Server supports firmware upgrades
          example: true
          type: boolean
        firmwareUpgradeApplyOnRebootSupported:
          description: Server supports firmware upgrades on reboot
          example: true
          type: boolean
        vncEnabled:
          description: Server has VNC enabled
          example: true
          type: boolean
      required:
      - firmwareUpgradeApplyOnRebootSupported
      - firmwareUpgradeSupported
      - vncEnabled
      type: object
    ServerCredentials:
      example:
        vncPort: 0.8008281904610115
        password: password
        vncPassword: vncPassword
        snmpPassword: snmpPassword
        vendor: vendor
        host: host
        datacenter: datacenter
        model: model
        username: username
      properties:
        datacenter:
          description: The site where the server is located.
          type: string
        host:
          description: The host of the server.
          type: string
        username:
          description: The username of the server.
          type: string
        password:
          description: The password of the server.
          type: string
        vendor:
          description: The vendor of the server.
          type: string
        model:
          description: The model of the server.
          type: string
        vncPassword:
          description: The VNC password of the server.
          nullable: true
          type: string
        vncPort:
          description: The VNC port of the server.
          nullable: true
          type: number
        snmpPassword:
          description: The SNMP password of the server.
          nullable: true
          type: string
      required:
      - datacenter
      - host
      - password
      - username
      type: object
    UpdateServerIpmiCredentials:
      example:
        password: password
        host: host
        username: username
        updateOnServer: true
      properties:
        host:
          description: The host of the server.
          type: string
        username:
          description: The username of the server.
          type: string
        password:
          description: The password of the server.
          type: string
        updateOnServer:
          description: Flag to indicate if the credentials should be updated on the
            server as well.
          type: boolean
      required:
      - host
      - password
      - updateOnServer
      - username
      type: object
    ServerVNCInfo:
      example:
        maxSessions: 2
        port: 5900
        activeSessions: 1
        enable: Enabled
        timeout: 0
      properties:
        activeSessions:
          description: Active VNC sessions
          example: 1
          type: number
        maxSessions:
          description: Max active VNC sessions
          example: 2
          type: number
        port:
          description: VNC port
          example: 5900
          type: number
        timeout:
          description: VNC timeout
          example: 0
          type: number
        enable:
          description: VNC enabled
          example: Enabled
          type: string
      required:
      - activeSessions
      - enable
      - maxSessions
      - port
      - timeout
      type: object
    RemoteConsoleInfo:
      example:
        activeConnections: 1
      properties:
        activeConnections:
          description: Active Remote Console connections
          example: 1
          type: number
      required:
      - activeConnections
      type: object
    ServerPowerSet:
      example:
        powerCommand: "on"
      properties:
        powerCommand:
          description: The power state of the server
          enum:
          - "on"
          - reset
          - soft
          - "off"
          type: string
      required:
      - powerCommand
      type: object
    Map:
      properties: {}
      type: object
    ServerTypeDiskGroup:
      example:
        storageControllers: ""
      properties:
        storageControllers:
          allOf:
          - $ref: '#/components/schemas/Map'
          description: The storage controllers for the server type. Key is the controller
            name and value is the controller information.
      required:
      - storageControllers
      type: object
    ServerType:
      example:
        allowedVendorSkuIds:
        - allowedVendorSkuIds
        - allowedVendorSkuIds
        displayName: displayName
        diskCount: 3.616076749251911
        serverClass: unknown
        processorCoreMhz: 5.962133916683182
        processorCoreCount: 5.637376656633329
        diskGroups:
          storageControllers: ""
        forUnmanagedServersOnly: 4.145608029883936
        processorNames:
        - processorNames
        - processorNames
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 0.8008281904610115
        networkInterfaceCount: 7.061401241503109
        gpuCount: 1.0246457001441578
        networkInterfaceSpeeds:
        - 9.301444243932576
        - 9.301444243932576
        processorCount: 1.4658129805029452
        supportsOobProvisioning: 1.2315135367772556
        label: label
        networkTotalCapacityMbps: 2.3021358869347655
        gpuInfo:
        - vendor: vendor
          model: model
        - vendor: vendor
          model: model
        tags:
        - tags
        - tags
        isExperimental: 2.027123023002322
        bootType: legacy_only
        name: name
        ramGbytes: 6.027456183070403
        forGenericEndpointsOnly: 7.386281948385884
      properties:
        id:
          description: The id of the server type.
          type: number
        ramGbytes:
          description: The RAM GB of the server type.
          type: number
        processorCount:
          description: The processor count of the server type.
          type: number
        processorCoreMhz:
          description: The processor core Mhz of the server type.
          type: number
        processorCoreCount:
          description: The processor core count of the server type.
          type: number
        name:
          description: The display name of the server type.
          type: string
        displayName:
          description: The display name of the server type.
          type: string
        label:
          description: The label of the server type.
          type: string
        networkTotalCapacityMbps:
          description: The total network capacity of the server type.
          type: number
        networkInterfaceCount:
          description: The number of interfaces of the server type.
          type: number
        networkInterfaceSpeeds:
          description: The network speeds of each interface of the server type.
          items:
            type: number
          type: array
        processorNames:
          description: The name of each processor of the server type.
          items:
            type: string
          type: array
        allowedVendorSkuIds:
          description: The list of allowed SKU ids for the server type.
          items:
            type: string
          type: array
        diskCount:
          description: The number of disks of the server type.
          type: number
        isExperimental:
          default: 0
          description: Flag specifying if the server type is experimental.
          type: number
        forUnmanagedServersOnly:
          default: 0
          description: Flag specifying if the server type is only for unmanaged servers.
          type: number
        forGenericEndpointsOnly:
          default: 0
          description: Flag specifying if the server type is only for generic endpoints.
          type: number
        supportsOobProvisioning:
          default: 0
          description: Flag specifying if the server type supports OOB provisioning.
          type: number
        serverClass:
          description: The class of servers allowed for the server type.
          enum:
          - unknown
          - bigdata
          - hdfs
          type: string
        bootType:
          description: The server boot type allowed for the server type.
          enum:
          - legacy_only
          - uefi_only
          - hybrid_default_legacy
          - hybrid_default_uefi
          type: string
        tags:
          description: The tags for the server type.
          items:
            type: string
          type: array
        gpuCount:
          default: 0
          description: The number of GPUs for the server type.
          type: number
        gpuInfo:
          description: The information for each GPU of the server type.
          items:
            $ref: '#/components/schemas/ServerGpuInfo'
          type: array
        diskGroups:
          $ref: '#/components/schemas/ServerTypeDiskGroup'
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - diskCount
      - id
      - name
      - networkInterfaceCount
      - networkInterfaceSpeeds
      - networkTotalCapacityMbps
      - processorCoreCount
      - processorCoreMhz
      - processorCount
      - processorNames
      - ramGbytes
      - serverClass
      type: object
    ServerTypePaginatedList:
      example:
        data:
        - allowedVendorSkuIds:
          - allowedVendorSkuIds
          - allowedVendorSkuIds
          displayName: displayName
          diskCount: 3.616076749251911
          serverClass: unknown
          processorCoreMhz: 5.962133916683182
          processorCoreCount: 5.637376656633329
          diskGroups:
            storageControllers: ""
          forUnmanagedServersOnly: 4.145608029883936
          processorNames:
          - processorNames
          - processorNames
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 0.8008281904610115
          networkInterfaceCount: 7.061401241503109
          gpuCount: 1.0246457001441578
          networkInterfaceSpeeds:
          - 9.301444243932576
          - 9.301444243932576
          processorCount: 1.4658129805029452
          supportsOobProvisioning: 1.2315135367772556
          label: label
          networkTotalCapacityMbps: 2.3021358869347655
          gpuInfo:
          - vendor: vendor
            model: model
          - vendor: vendor
            model: model
          tags:
          - tags
          - tags
          isExperimental: 2.027123023002322
          bootType: legacy_only
          name: name
          ramGbytes: 6.027456183070403
          forGenericEndpointsOnly: 7.386281948385884
        - allowedVendorSkuIds:
          - allowedVendorSkuIds
          - allowedVendorSkuIds
          displayName: displayName
          diskCount: 3.616076749251911
          serverClass: unknown
          processorCoreMhz: 5.962133916683182
          processorCoreCount: 5.637376656633329
          diskGroups:
            storageControllers: ""
          forUnmanagedServersOnly: 4.145608029883936
          processorNames:
          - processorNames
          - processorNames
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 0.8008281904610115
          networkInterfaceCount: 7.061401241503109
          gpuCount: 1.0246457001441578
          networkInterfaceSpeeds:
          - 9.301444243932576
          - 9.301444243932576
          processorCount: 1.4658129805029452
          supportsOobProvisioning: 1.2315135367772556
          label: label
          networkTotalCapacityMbps: 2.3021358869347655
          gpuInfo:
          - vendor: vendor
            model: model
          - vendor: vendor
            model: model
          tags:
          - tags
          - tags
          isExperimental: 2.027123023002322
          bootType: legacy_only
          name: name
          ramGbytes: 6.027456183070403
          forGenericEndpointsOnly: 7.386281948385884
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/ServerType'
          title: List of server type's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateServerType:
      example:
        networkInterfaceSpeeds:
        - 5.637376656633329
        - 5.637376656633329
        allowedVendorSkuIds:
        - allowedVendorSkuIds
        - allowedVendorSkuIds
        processorCount: 6.027456183070403
        displayName: displayName
        supportsOobProvisioning: 2.027123023002322
        label: label
        diskCount: 2.3021358869347655
        gpuInfo:
        - vendor: vendor
          model: model
        - vendor: vendor
          model: model
        serverClass: unknown
        tags:
        - tags
        - tags
        processorCoreMhz: 1.4658129805029452
        isExperimental: 7.061401241503109
        processorCoreCount: 5.962133916683182
        bootType: legacy_only
        diskGroups:
          storageControllers: ""
        name: name
        forUnmanagedServersOnly: 9.301444243932576
        ramGbytes: 0.8008281904610115
        processorNames:
        - processorNames
        - processorNames
        forGenericEndpointsOnly: 3.616076749251911
        gpuCount: 4.145608029883936
      properties:
        ramGbytes:
          description: The RAM GB of the server type.
          type: number
        processorCount:
          description: The processor count of the server type.
          type: number
        processorCoreMhz:
          description: The processor core Mhz of the server type.
          type: number
        processorCoreCount:
          description: The processor core count of the server type.
          type: number
        name:
          description: The display name of the server type.
          type: string
        displayName:
          description: The display name of the server type.
          type: string
        label:
          description: The label of the server type.
          type: string
        networkInterfaceSpeeds:
          description: The network speeds of each interface of the server type.
          items:
            type: number
          type: array
        processorNames:
          description: The name of each processor of the server type.
          items:
            type: string
          type: array
        allowedVendorSkuIds:
          description: The list of allowed SKU ids for the server type.
          items:
            type: string
          type: array
        diskCount:
          description: The number of disks of the server type.
          type: number
        isExperimental:
          default: 0
          description: Flag specifying if the server type is experimental.
          type: number
        forUnmanagedServersOnly:
          default: 0
          description: Flag specifying if the server type is only for unmanaged servers.
          type: number
        forGenericEndpointsOnly:
          default: 0
          description: Flag specifying if the server type is only for generic endpoints.
          type: number
        supportsOobProvisioning:
          default: 0
          description: Flag specifying if the server type supports OOB provisioning.
          type: number
        serverClass:
          description: The class of servers allowed for the server type.
          enum:
          - unknown
          - bigdata
          - hdfs
          type: string
        bootType:
          description: The server boot type allowed for the server type.
          enum:
          - legacy_only
          - uefi_only
          - hybrid_default_legacy
          - hybrid_default_uefi
          type: string
        tags:
          description: The tags for the server type.
          items:
            type: string
          type: array
        gpuCount:
          default: 0
          description: The number of GPUs for the server type.
          type: number
        gpuInfo:
          description: The information for each GPU of the server type.
          items:
            $ref: '#/components/schemas/ServerGpuInfo'
          type: array
        diskGroups:
          $ref: '#/components/schemas/ServerTypeDiskGroup'
      required:
      - diskCount
      - name
      - networkInterfaceSpeeds
      - processorCoreCount
      - processorCoreMhz
      - processorCount
      - processorNames
      - ramGbytes
      - serverClass
      type: object
    UpdateServerType:
      example:
        allowedVendorSkuIds:
        - allowedVendorSkuIds
        - allowedVendorSkuIds
        isExperimental: 0.8008281904610115
        displayName: displayName
        label: label
        tags:
        - tags
        - tags
      properties:
        label:
          description: The label of the server type.
          type: string
        allowedVendorSkuIds:
          description: The list of allowed SKU ids for the server type.
          items:
            type: string
          type: array
        isExperimental:
          default: 0
          description: Flag specifying if the server type is experimental.
          type: number
        tags:
          description: The tags for the server type.
          items:
            type: string
          type: array
        displayName:
          description: The display name of the server type.
          type: string
      type: object
    ServerTypeStatisticsBatchOptions:
      example:
        serverTypeIds:
        - 5.962133916683182
        - 5.962133916683182
        instanceArrayId: 5.637376656633329
        userIdOwner: 0.8008281904610115
        siteId: 6.027456183070403
        maximumResultsPerServerType: 1.4658129805029452
      properties:
        userIdOwner:
          description: The id of user owning the resources. Used for filtering
          type: number
        siteId:
          description: The id of the site where the resources are located. Used for
            filtering
          type: number
        maximumResultsPerServerType:
          description: The maximum returned results per server type.
          type: number
        serverTypeIds:
          description: The id of the server types to get statistics for.
          items:
            type: number
          type: array
        instanceArrayId:
          description: "If specified, treats only the active Instances of the Instance\
            \ Array as available, instead of all active instances of userIdOwner."
          type: number
      required:
      - siteId
      type: object
    ServerTypeUtilizationReportGrouped:
      properties:
        registering:
          description: Ids of the servers having status registering.
          items:
            type: string
          type: array
        available:
          description: Ids of the servers having status available.
          items:
            type: string
          type: array
        cleaning_required:
          description: Ids of the servers having status cleaning_required.
          items:
            type: string
          type: array
        cleaning:
          description: Ids of the servers having status cleaning.
          items:
            type: string
          type: array
        used:
          description: Ids of the servers having status used.
          items:
            type: string
          type: array
        used_registering:
          description: Ids of the servers having status used_registering.
          items:
            type: string
          type: array
        defective:
          description: Ids of the servers having status defective.
          items:
            type: string
          type: array
        removed_from_rack:
          description: Ids of the servers having status removed_from_rack.
          items:
            type: string
          type: array
        decommissioned:
          description: Ids of the servers having status decommissioned.
          items:
            type: string
          type: array
        updating_firmware:
          description: Ids of the servers having status updating_firmware.
          items:
            type: string
          type: array
        used_diagnostics:
          description: Ids of the servers having status used_diagnostics.
          items:
            type: string
          type: array
        pending_registration:
          description: Ids of the servers having status pending_registration.
          items:
            type: string
          type: array
        unavailable:
          description: Ids of the servers having status unavailable.
          items:
            type: string
          type: array
      required:
      - available
      - cleaning
      - cleaning_required
      - decommissioned
      - defective
      - pending_registration
      - registering
      - removed_from_rack
      - unavailable
      - updating_firmware
      - used
      - used_diagnostics
      - used_registering
      type: object
    ServerTypeUtilizationReport:
      properties:
        groupByServerRamGb:
          additionalProperties:
            $ref: '#/components/schemas/ServerTypeUtilizationReportGrouped'
          description: The utilization report for the server types grouped by server
            ram gb.
          type: object
        groupByServerTypeName:
          additionalProperties:
            $ref: '#/components/schemas/ServerTypeUtilizationReportGrouped'
          description: The utilization report for the server types grouped by server
            type name.
          type: object
        groupByServerProductName:
          additionalProperties:
            $ref: '#/components/schemas/ServerTypeUtilizationReportGrouped'
          description: The utilization report for the server types grouped by server
            product name.
          type: object
        groupByUserId:
          additionalProperties:
            $ref: '#/components/schemas/ServerTypeUtilizationReportGrouped'
          description: The utilization report for the server types grouped by user
            id.
          type: object
      required:
      - groupByServerProductName
      - groupByServerRamGb
      - groupByServerTypeName
      - groupByUserId
      type: object
    ServerTypeStatisticsBatch:
      example:
        utilizationReport: ""
        serverTypeIdToServerCount: "{}"
        serverTypeIdToServerInformation: "{}"
      properties:
        serverTypeIdToServerCount:
          description: An object having server type id as key and server count as
            value.
          type: object
        serverTypeIdToServerInformation:
          description: An object having server type id as key and server information
            as value.
          type: object
        utilizationReport:
          allOf:
          - $ref: '#/components/schemas/ServerTypeUtilizationReport'
          description: The utilization report for the server types.
      required:
      - serverTypeIdToServerCount
      - serverTypeIdToServerInformation
      - utilizationReport
      type: object
    SharedDriveConfiguration:
      example:
        label: label
        sizeMb: 1.4658129805029452
        ioLimitPolicy: ioLimitPolicy
        updatedTimestamp: updatedTimestamp
        deployType: create
        revision: 0.8008281904610115
        storageImageName: storageImageName
        dnsSubdomainChangeId: 5.962133916683182
        storageType: iscsi_ssd
        subdomain: subdomain
        infrastructureDeployId: 5.637376656633329
        storagePoolId: 6.027456183070403
        deployStatus: not_started
      properties:
        revision:
          description: Revision of the Shared Drive Configuration
          type: number
        label:
          description: Label of the Shared Drive.
          type: string
        storagePoolId:
          description: Id of the storage pool the Shared Drive is assigned to
          type: number
        sizeMb:
          description: Disk size in MB for Shared Drive
          type: number
        storageImageName:
          description: The name of the storage image used by the Shared Drive.
          type: string
        storageType:
          default: iscsi_ssd
          description: Service status of the Shared Drive
          enum:
          - iscsi_ssd
          - iscsi_hdd
          type: string
        ioLimitPolicy:
          description: The IO limit policy of the Shared Drive.
          type: string
        subdomain:
          description: Subdomain of the Shared Drive.
          type: string
        dnsSubdomainChangeId:
          description: Id of the DNS subdomain for the Shared Drive.
          type: number
        deployType:
          default: create
          description: Deploy type of the Shared Drive
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          default: not_started
          description: Deploy status of the Shared Drive
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        infrastructureDeployId:
          description: Id of the deployment for the Shared Drive.
          type: number
        updatedTimestamp:
          description: Timestamp of the Shared Drive last update.
          type: string
      required:
      - deployStatus
      - deployType
      - label
      - revision
      - sizeMb
      - storageType
      - updatedTimestamp
      type: object
    SharedDriveMeta:
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
      type: object
    SharedDrive:
      example:
        sizeMb: 6.027456183070403
        updatedTimestamp: updatedTimestamp
        targets: "{}"
        storageVirtualSizeCachedMb: 9.301444243932576
        wwn: wwn
        storageImageName: storageImageName
        storageUpdatedTimestamp: storageUpdatedTimestamp
        dnsSubdomainPermanentId: 2.027123023002322
        serviceStatus: ordered
        networkVlanId: 4.145608029883936
        storagePoolId: 0.8008281904610115
        id: 1.4658129805029452
        storageRealSizeCachedMb: 2.3021358869347655
        provisioningProtocol: iSCSI
        storageRealSizeWithSnapshotsCachedMb: 7.061401241503109
        dnsSubdomainId: 3.616076749251911
        createdTimestamp: createdTimestamp
        label: label
        ioLimitPolicy: ioLimitPolicy
        subdomainPermanent: subdomainPermanent
        allocationAffinity: same_storage
        revision: 5.962133916683182
        infrastructureId: 5.637376656633329
        meta: ""
        storageType: iscsi_ssd
        subdomain: subdomain
        config: ""
      properties:
        label:
          description: Label of the Shared Drive.
          type: string
        storagePoolId:
          description: Id of the storage pool the Shared Drive is assigned to
          type: number
        sizeMb:
          description: Disk size in MB for Shared Drive
          type: number
        storageImageName:
          description: The name of the storage image used by the Shared Drive.
          type: string
        storageType:
          default: iscsi_ssd
          description: Service status of the Shared Drive
          enum:
          - iscsi_ssd
          - iscsi_hdd
          type: string
        ioLimitPolicy:
          description: The IO limit policy of the Shared Drive.
          type: string
        subdomain:
          description: Subdomain of the Shared Drive.
          type: string
        updatedTimestamp:
          description: Timestamp of the Shared Drive last update.
          type: string
        id:
          description: Id of the Shared Drive
          type: number
        revision:
          description: Revision of the Shared Drive State
          type: number
        infrastructureId:
          description: Infrastructure id of the Shared Drive
          type: number
        serviceStatus:
          description: Service status of the Shared Drive
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          type: string
        storageRealSizeCachedMb:
          description: Cached information of the real size of the storage in MB.
          type: number
        storageRealSizeWithSnapshotsCachedMb:
          description: Cached information of the real size of the storage (including
            snapshots) in MB.
          type: number
        storageVirtualSizeCachedMb:
          description: Cached information of the virtual size of the storage in MB.
          type: number
        storageUpdatedTimestamp:
          description: Timestamp of the latest update of cached information for the
            Shared Drive.
          type: string
        targets:
          description: Targets of the Shared Drive.
          type: object
        wwn:
          type: string
        allocationAffinity:
          description: Allocation affinity of the Shared Drive
          enum:
          - same_storage
          - different_storage
          type: string
        provisioningProtocol:
          description: Provisioning protocol of the Shared Drive
          enum:
          - iSCSI
          - SCSI_FC
          type: string
        subdomainPermanent:
          description: Subdomain permanent of the Shared Drive.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the Shared Drive.
          type: number
        dnsSubdomainPermanentId:
          description: Id of the permanent DNS subdomain for the Shared Drive.
          type: number
        networkVlanId:
          description: Id of the VLAN for the Shared Drive.
          type: number
        config:
          allOf:
          - $ref: '#/components/schemas/SharedDriveConfiguration'
          description: The current changes to be deployed for the Shared Drive.
        createdTimestamp:
          description: Timestamp of the Shared Drive creation.
          type: string
        meta:
          allOf:
          - $ref: '#/components/schemas/SharedDriveMeta'
          description: Meta information of the Shared Drive.
      required:
      - allocationAffinity
      - config
      - createdTimestamp
      - id
      - infrastructureId
      - label
      - meta
      - provisioningProtocol
      - revision
      - serviceStatus
      - sizeMb
      - storageType
      - storageUpdatedTimestamp
      - updatedTimestamp
      type: object
    SharedDrivePaginatedList:
      example:
        data:
        - sizeMb: 6.027456183070403
          updatedTimestamp: updatedTimestamp
          targets: "{}"
          storageVirtualSizeCachedMb: 9.301444243932576
          wwn: wwn
          storageImageName: storageImageName
          storageUpdatedTimestamp: storageUpdatedTimestamp
          dnsSubdomainPermanentId: 2.027123023002322
          serviceStatus: ordered
          networkVlanId: 4.145608029883936
          storagePoolId: 0.8008281904610115
          id: 1.4658129805029452
          storageRealSizeCachedMb: 2.3021358869347655
          provisioningProtocol: iSCSI
          storageRealSizeWithSnapshotsCachedMb: 7.061401241503109
          dnsSubdomainId: 3.616076749251911
          createdTimestamp: createdTimestamp
          label: label
          ioLimitPolicy: ioLimitPolicy
          subdomainPermanent: subdomainPermanent
          allocationAffinity: same_storage
          revision: 5.962133916683182
          infrastructureId: 5.637376656633329
          meta: ""
          storageType: iscsi_ssd
          subdomain: subdomain
          config: ""
        - sizeMb: 6.027456183070403
          updatedTimestamp: updatedTimestamp
          targets: "{}"
          storageVirtualSizeCachedMb: 9.301444243932576
          wwn: wwn
          storageImageName: storageImageName
          storageUpdatedTimestamp: storageUpdatedTimestamp
          dnsSubdomainPermanentId: 2.027123023002322
          serviceStatus: ordered
          networkVlanId: 4.145608029883936
          storagePoolId: 0.8008281904610115
          id: 1.4658129805029452
          storageRealSizeCachedMb: 2.3021358869347655
          provisioningProtocol: iSCSI
          storageRealSizeWithSnapshotsCachedMb: 7.061401241503109
          dnsSubdomainId: 3.616076749251911
          createdTimestamp: createdTimestamp
          label: label
          ioLimitPolicy: ioLimitPolicy
          subdomainPermanent: subdomainPermanent
          allocationAffinity: same_storage
          revision: 5.962133916683182
          infrastructureId: 5.637376656633329
          meta: ""
          storageType: iscsi_ssd
          subdomain: subdomain
          config: ""
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/SharedDrive'
          title: List of shared drive's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateSharedDrive:
      example:
        sizeMb: 0.8008281904610115
        label: label
      properties:
        sizeMb:
          description: Disk size in MB for Shared Drive
          type: number
        label:
          description: Display name of the File Share.
          type: string
      required:
      - sizeMb
      type: object
    UpdateSharedDrive:
      example:
        label: label
        sizeMb: 0.8008281904610115
        ioLimitPolicy: ioLimitPolicy
      properties:
        label:
          description: Label of the Shared Drive.
          type: string
        sizeMb:
          description: Disk size in MB for Shared Drive
          type: number
        ioLimitPolicy:
          description: The IO limit policy of the Shared Drive.
          type: string
      type: object
    UpdateSharedDriveMeta:
      example:
        guiSettings:
          rowIndex: 6.027456183070403
          columnIndex: 1.4658129805029452
          userAgent: userAgent
          randomInstanceID: randomInstanceID
          showWidgetChildren: true
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
      type: object
    SharedDriveHosts:
      example:
        instanceGroup: "{}"
      properties:
        instanceGroup:
          description: File Share Hosts.
          type: object
      required:
      - instanceGroup
      type: object
    SharedDriveHostBulkOperation:
      example:
        instanceArrayId: 0.8008281904610115
        operationType: add
      properties:
        instanceArrayId:
          description: Id of the Instance Array Host that will be modified
          type: number
        operationType:
          description: Operation type for the Instance Array Host
          enum:
          - add
          - remove
          type: string
      required:
      - instanceArrayId
      - operationType
      type: object
    SharedDriveHostsModifyBulk:
      example:
        sharedDriveHostBulkOperations:
        - instanceArrayId: 0.8008281904610115
          operationType: add
        - instanceArrayId: 0.8008281904610115
          operationType: add
      properties:
        sharedDriveHostBulkOperations:
          description: List of operations to be performed on the File Share Hosts
          items:
            $ref: '#/components/schemas/SharedDriveHostBulkOperation'
          type: array
      required:
      - sharedDriveHostBulkOperations
      type: object
    Location:
      properties:
        address:
          description: Address of the site
          type: string
        latitude:
          description: Latitude of the site
          example: 41.882089
          type: number
        longitude:
          description: Longitude of the site
          example: -87.627831
          type: number
      required:
      - address
      - latitude
      - longitude
      type: object
    Site:
      example:
        name: "Reading, UK"
        location: ""
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 1
        ownerId: 10
        slug: reading-uk
        isInMaintenance: true
        revision: 1
        isHidden: true
      properties:
        id:
          description: The site ID
          example: 1
          type: integer
        revision:
          description: Revision number
          example: 1
          type: number
        slug:
          description: The site unique slug
          example: reading-uk
          type: string
        name:
          description: The site name
          example: "Reading, UK"
          type: string
        location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: Location details
        isHidden:
          description: True if the site is hidden
          type: boolean
        isInMaintenance:
          description: True if the site is in maintenance mode
          type: boolean
        ownerId:
          description: ID of the site owner
          example: 10
          type: integer
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - id
      - name
      - revision
      type: object
    SitePaginatedList:
      example:
        data:
        - name: "Reading, UK"
          location: ""
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          ownerId: 10
          slug: reading-uk
          isInMaintenance: true
          revision: 1
          isHidden: true
        - name: "Reading, UK"
          location: ""
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          ownerId: 10
          slug: reading-uk
          isInMaintenance: true
          revision: 1
          isHidden: true
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/Site'
          title: List of site's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    SiteCreate:
      example:
        name: "Reading, UK"
        location: ""
        slug: reading-uk
        isInMaintenance: true
        isHidden: true
      properties:
        slug:
          description: The site unique slug
          example: reading-uk
          type: string
        name:
          description: The site name
          example: "Reading, UK"
          type: string
        location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: Location details
        isHidden:
          description: True if the site is hidden
          type: boolean
        isInMaintenance:
          description: True if the site is in maintenance mode
          type: boolean
      required:
      - name
      type: object
    SiteUpdate:
      example:
        name: "Reading, UK"
        location: ""
        slug: reading-uk
        isInMaintenance: true
        isHidden: true
      properties:
        slug:
          description: The site unique slug
          example: reading-uk
          type: string
        name:
          description: The site name
          example: "Reading, UK"
          type: string
        location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: Location details
        isHidden:
          description: True if the site is hidden
          type: boolean
        isInMaintenance:
          description: True if the site is in maintenance mode
          type: boolean
      type: object
    Repo:
      properties:
        rootUrl:
          description: Root URL of the repository
          type: string
      required:
      - rootUrl
      type: object
    NetworkDevicePolicy:
      properties:
        zeroTouchRegistrationEnabled:
          description: Whether zero-touch registration is enabled
          type: boolean
        gNMISubscriptionEnabled:
          description: Whether gNMI subscription is enabled
          type: boolean
        syslogMonitoringEnabled:
          description: Whether syslog monitoring is enabled
          type: boolean
        leafSwitchesHaveMlagPairs:
          description: Whether leaf switches have MLAG pairs
          type: boolean
        minimumNumberOfSpinesNeededToBootstrapLeafs:
          description: Minimum number of spines needed to bootstrap leafs
          example: 0
          type: number
      required:
      - gNMISubscriptionEnabled
      - leafSwitchesHaveMlagPairs
      - minimumNumberOfSpinesNeededToBootstrapLeafs
      - syslogMonitoringEnabled
      - zeroTouchRegistrationEnabled
      type: object
    ServerPolicy:
      properties:
        registerCredentials:
          description: Server registration type
          enum:
          - random
          - user
          type: string
        minimumNumberOfConnectedInterfaces:
          description: Minimum number of switch-connected interfaces required
          example: 1
          type: number
        dhcpOption82ToIPMapping:
          description: Option82 to IP mapping
          type: object
        dhcpBmcMacAddressWhitelistEnabled:
          description: Whether to enable DHCP BMC MAC address whitelist
          type: boolean
        dhcpBmcMacAddressWhitelist:
          description: List of DHCP BMC MAC address whitelist
          items:
            type: string
          type: array
        raidConfigurationEnabled:
          description: Whether RAID configuration is enabled
          type: boolean
        disableTpmAfterRegistration:
          description: Whether to disable TPM after registration
          type: boolean
        syslogMonitoringEnabled:
          description: Whether syslog monitoring is enabled
          type: boolean
        defaultServerCleanupPolicyID:
          description: Default server cleanup policy ID
          example: 0
          type: number
        automaticallyAllocateServerTypes:
          description: Automatically allocate server types
          example: 0
          type: number
        automaticallySetServersAsAvailable:
          description: Automatically set servers as available
          example: 0
          type: number
        serverRegistrationBiosProfile:
          description: Server registration BIOS profile
          type: object
      required:
      - automaticallyAllocateServerTypes
      - automaticallySetServersAsAvailable
      - defaultServerCleanupPolicyID
      - dhcpBmcMacAddressWhitelist
      - dhcpBmcMacAddressWhitelistEnabled
      - dhcpOption82ToIPMapping
      - disableTpmAfterRegistration
      - minimumNumberOfConnectedInterfaces
      - raidConfigurationEnabled
      - registerCredentials
      - serverRegistrationBiosProfile
      - syslogMonitoringEnabled
      type: object
    ControllerPolicy:
      properties:
        subnetAllocation:
          description: List of subnets allocated to this datacenter
          example:
          - 192.168.1.0/24
          - 10.0.0.0/16
          items:
            type: string
          type: array
      required:
      - subnetAllocation
      type: object
    SiteConfig:
      example:
        networkDevicePolicy: ""
        serverPolicy: ""
        repo: ""
        controllerPolicy: ""
        NTPServers:
        - NTPServers
        - NTPServers
        location: ""
        DNSServers:
        - DNSServers
        - DNSServers
      properties:
        location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: Location details
        repo:
          allOf:
          - $ref: '#/components/schemas/Repo'
          description: Repository details
        DNSServers:
          description: List of DNS Servers
          items:
            type: string
          type: array
        NTPServers:
          description: List of NTP Servers
          items:
            type: string
          type: array
        networkDevicePolicy:
          allOf:
          - $ref: '#/components/schemas/NetworkDevicePolicy'
          description: Network device policies
        serverPolicy:
          allOf:
          - $ref: '#/components/schemas/ServerPolicy'
          description: Server policies
        controllerPolicy:
          allOf:
          - $ref: '#/components/schemas/ControllerPolicy'
          description: Controller policies
      required:
      - DNSServers
      - NTPServers
      - controllerPolicy
      - location
      - networkDevicePolicy
      - repo
      - serverPolicy
      type: object
    SiteConfigUpdate:
      example:
        networkDevicePolicy: ""
        serverPolicy: ""
        repo: ""
        controllerPolicy: ""
        NTPServers:
        - NTPServers
        - NTPServers
        location: ""
        DNSServers:
        - DNSServers
        - DNSServers
      properties:
        location:
          allOf:
          - $ref: '#/components/schemas/Location'
          description: Location details
        repo:
          allOf:
          - $ref: '#/components/schemas/Repo'
          description: Repository details
        DNSServers:
          description: List of DNS Servers
          items:
            type: string
          type: array
        NTPServers:
          description: List of NTP Servers
          items:
            type: string
          type: array
        networkDevicePolicy:
          allOf:
          - $ref: '#/components/schemas/NetworkDevicePolicy'
          description: Network device policies
        serverPolicy:
          allOf:
          - $ref: '#/components/schemas/ServerPolicy'
          description: Server policies
        controllerPolicy:
          allOf:
          - $ref: '#/components/schemas/ControllerPolicy'
          description: Controller policies
      required:
      - DNSServers
      - NTPServers
      - controllerPolicy
      - location
      - networkDevicePolicy
      - repo
      - serverPolicy
      type: object
    SiteControllerSeenAliveStatus:
      example:
        storagesCount: 0
        serversCount: 0
        infrastructuresCount: 0
        id: 1
        networksCount: 0
      properties:
        id:
          description: The site ID
          example: 1
          type: integer
        serversCount:
          description: Number servers
          example: 0
          type: number
        networksCount:
          description: Number network equipment
          example: 0
          type: number
        storagesCount:
          description: Number of storage pools
          example: 0
          type: number
        infrastructuresCount:
          description: Number of infrastructures
          example: 0
          type: number
      required:
      - id
      - infrastructuresCount
      - networksCount
      - serversCount
      - storagesCount
      type: object
    SiteStatistics:
      example:
        sitesResourceCount:
        - storagesCount: 0
          serversCount: 0
          infrastructuresCount: 0
          id: 1
          networksCount: 0
        - storagesCount: 0
          serversCount: 0
          infrastructuresCount: 0
          id: 1
          networksCount: 0
        sitesTotalCount: 5
        sitesActiveCount: 3
        siteControllerSeenAliveStatus: ""
      properties:
        siteControllerSeenAliveStatus:
          allOf:
          - $ref: '#/components/schemas/SiteControllerSeenAliveStatus'
          description: Status of site controllers categorized by their alive status
        sitesTotalCount:
          description: Total count of sites
          example: 5
          type: number
        sitesActiveCount:
          description: Count of active sites
          example: 3
          type: number
        sitesResourceCount:
          description: List of resources counts for sites
          items:
            $ref: '#/components/schemas/SiteControllerSeenAliveStatus'
          type: array
      required:
      - siteControllerSeenAliveStatus
      - sitesActiveCount
      - sitesResourceCount
      - sitesTotalCount
      type: object
    AgentCapabilities:
      properties:
        httpProxyEnabled:
          description: HTTP proxy capability status
          example: false
          type: boolean
        inbandHttpProxyEnabled:
          description: Inband HTTP proxy capability status
          example: false
          type: boolean
        fileTransferEnabled:
          description: File transfer capability status
          example: false
          type: boolean
        inbandFileTransferEnabled:
          description: Inband file transfer capability status
          example: false
          type: boolean
        switchSubscriptionEnabled:
          description: Switch subscription capability status
          example: false
          type: boolean
        commandExecutionEnabled:
          description: Command execution capability status
          example: true
          type: boolean
        vncEnabled:
          description: VNC capability status
          example: false
          type: boolean
        spiceEnabled:
          description: SPICE capability status
          example: false
          type: boolean
        syslogEnabled:
          description: Syslog capability status
          example: false
          type: boolean
        dhcpOobEnabled:
          description: DHCP OOB capability status
          example: false
          type: boolean
        netconfEnabled:
          description: NETCONF capability status
          example: false
          type: boolean
        ansibleRunnerEnabled:
          description: Ansible runner capability status
          example: false
          type: boolean
      required:
      - ansibleRunnerEnabled
      - commandExecutionEnabled
      - dhcpOobEnabled
      - fileTransferEnabled
      - httpProxyEnabled
      - inbandFileTransferEnabled
      - inbandHttpProxyEnabled
      - netconfEnabled
      - spiceEnabled
      - switchSubscriptionEnabled
      - syslogEnabled
      - vncEnabled
      type: object
    AgentIpInfo:
      properties:
        siteControllerIp:
          description: Site controller IP address
          example: 172.1.1.1
          type: string
        siteControllerSyslogServerIp:
          description: Site controller syslog server IP address
          example: 172.3.3.3
          type: string
        siteControllerSyslogSwitchIp:
          description: Site controller syslog switch IP address
          example: 172.4.4.4
          type: string
        siteControllerRepoIp:
          description: Site controller repository IP address
          example: 172.5.5.5
          type: string
      required:
      - siteControllerIp
      - siteControllerRepoIp
      - siteControllerSyslogServerIp
      - siteControllerSyslogSwitchIp
      type: object
    AgentConnectedInfo:
      properties:
        agentId:
          description: Agent identifier
          example: agent1
          type: string
        hostname:
          description: Host name
          example: metal
          type: string
        applicationName:
          description: Application name
          example: ms-agent
          type: string
        timestamp:
          description: Connection timestamp
          example: 2025-01-30T09:37:12Z
          type: string
        capabilities:
          allOf:
          - $ref: '#/components/schemas/AgentCapabilities'
          description: Agent capabilities
        ipInfo:
          allOf:
          - $ref: '#/components/schemas/AgentIpInfo'
          description: IP information
      required:
      - agentId
      - applicationName
      - capabilities
      - hostname
      - ipInfo
      - timestamp
      type: object
    AgentInfo:
      example:
        agentCreationTimestamp: 2025-01-29T20:22:01Z
        agentType: ms-agent
        siteName: dc03-qa
        agentSeenIpAddress: 127.0.0.1:56356
        agentVersion: v6.0.0
        agentConnectedInfo: ""
        agentUpdatedTimestamp: 2025-01-29T20:22:01Z
        agentSeenTimestamp: 2025-01-30T09:36:43Z
      properties:
        siteName:
          description: Site name
          example: dc03-qa
          type: string
        agentSeenIpAddress:
          description: Agent seen IP address with port
          example: 127.0.0.1:56356
          type: string
        agentType:
          description: Agent type
          example: ms-agent
          type: string
        agentVersion:
          description: Agent version
          example: v6.0.0
          type: string
        agentCreationTimestamp:
          description: Agent creation timestamp
          example: 2025-01-29T20:22:01Z
          type: string
        agentUpdatedTimestamp:
          description: Agent update timestamp
          example: 2025-01-29T20:22:01Z
          type: string
        agentSeenTimestamp:
          description: Agent last seen timestamp
          example: 2025-01-30T09:36:43Z
          type: string
        agentConnectedInfo:
          allOf:
          - $ref: '#/components/schemas/AgentConnectedInfo'
          description: Agent connection information
      required:
      - agentConnectedInfo
      - agentCreationTimestamp
      - agentSeenIpAddress
      - agentSeenTimestamp
      - agentType
      - agentUpdatedTimestamp
      - agentVersion
      - siteName
      type: object
    Storage:
      example:
        inMaintenance: 5.637376656633329
        storageTechnology: block
        managementHost: managementHost
        passwordEncrypted: passwordEncrypted
        jobInfo:
          jobId: 0.8008281904610115
          jobGroupId: 6.027456183070403
        storageDriver: dummy_driver
        targetIQN: targetIQN
        options: "{}"
        drivePriority: 7.061401241503109
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        iscsiPort: 5.962133916683182
        portGroupPhysicalPorts: "{}"
        storageId: 0.8008281904610115
        alternateSanIPs:
        - alternateSanIPs
        - alternateSanIPs
        portGroupAllocationOrder: "{}"
        directorId: directorId
        s3Hostname: s3Hostname
        userId: 6.027456183070403
        arrayId: arrayId
        sharedDrivePriority: 9.301444243932576
        tags:
        - tags
        - tags
        defaultIoLimitPolicy: defaultIoLimitPolicy
        isExperimental: 2.3021358869347655
        s3Port: s3Port
        name: name
        siteId: 1.4658129805029452
        storageType: iscsi_ssd
        subnetType: ipv4
        iscsiHost: iscsiHost
        username: username
      properties:
        storageId:
          description: Id of the Storage
          type: number
        userId:
          description: Id of the owner
          type: number
        siteId:
          description: Id of the site
          type: number
        storageDriver:
          description: Storage driver
          enum:
          - dummy_driver
          - nexenta3
          - nexenta4
          - bigstep_storage
          - hp_msa_1040
          - unity_storage
          - power_max
          - power_flex
          - power_scale
          - ecs
          type: string
        storageTechnology:
          description: Storage technology
          enum:
          - block
          - file
          - object
          type: string
        storageType:
          description: Storage type
          enum:
          - iscsi_ssd
          - iscsi_hdd
          - dummy
          type: string
        name:
          description: Name of the storage
          type: string
        iscsiHost:
          description: ISCSI host
          type: string
        iscsiPort:
          description: ISCSI port
          type: number
        managementHost:
          description: Management host
          type: string
        username:
          description: Username
          type: string
        passwordEncrypted:
          description: Password encrypted
          type: string
        options:
          description: Options for the storage
          type: object
        inMaintenance:
          description: Specifies if the storage is in maintenance
          type: number
        targetIQN:
          description: Target IQN
          type: string
        isExperimental:
          description: Specifies if the storage is experimental
          type: number
        drivePriority:
          description: Specifies the drive priority
          type: number
        sharedDrivePriority:
          description: Specifies the shared drive priority
          type: number
        alternateSanIPs:
          description: Alternate SAN IPs
          items:
            type: string
          type: array
        tags:
          description: Tags
          items:
            type: string
          type: array
        portGroupAllocationOrder:
          description: Port group allocation order
          type: object
        portGroupPhysicalPorts:
          description: Port group physical ports
          type: object
        defaultIoLimitPolicy:
          description: Default IO limit policy
          type: string
        subnetType:
          description: Subnet type
          enum:
          - ipv4
          - ipv6
          type: string
        arrayId:
          description: Array id
          type: string
        directorId:
          description: Director id
          type: string
        s3Hostname:
          description: S3 hostname
          type: string
        s3Port:
          description: S3 port
          type: string
        jobInfo:
          $ref: '#/components/schemas/JobInfo'
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - drivePriority
      - inMaintenance
      - managementHost
      - name
      - passwordEncrypted
      - sharedDrivePriority
      - siteId
      - storageDriver
      - storageId
      - storageTechnology
      - storageType
      - subnetType
      - username
      type: object
    StoragePaginatedList:
      example:
        data:
        - inMaintenance: 5.637376656633329
          storageTechnology: block
          managementHost: managementHost
          passwordEncrypted: passwordEncrypted
          jobInfo:
            jobId: 0.8008281904610115
            jobGroupId: 6.027456183070403
          storageDriver: dummy_driver
          targetIQN: targetIQN
          options: "{}"
          drivePriority: 7.061401241503109
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          iscsiPort: 5.962133916683182
          portGroupPhysicalPorts: "{}"
          storageId: 0.8008281904610115
          alternateSanIPs:
          - alternateSanIPs
          - alternateSanIPs
          portGroupAllocationOrder: "{}"
          directorId: directorId
          s3Hostname: s3Hostname
          userId: 6.027456183070403
          arrayId: arrayId
          sharedDrivePriority: 9.301444243932576
          tags:
          - tags
          - tags
          defaultIoLimitPolicy: defaultIoLimitPolicy
          isExperimental: 2.3021358869347655
          s3Port: s3Port
          name: name
          siteId: 1.4658129805029452
          storageType: iscsi_ssd
          subnetType: ipv4
          iscsiHost: iscsiHost
          username: username
        - inMaintenance: 5.637376656633329
          storageTechnology: block
          managementHost: managementHost
          passwordEncrypted: passwordEncrypted
          jobInfo:
            jobId: 0.8008281904610115
            jobGroupId: 6.027456183070403
          storageDriver: dummy_driver
          targetIQN: targetIQN
          options: "{}"
          drivePriority: 7.061401241503109
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          iscsiPort: 5.962133916683182
          portGroupPhysicalPorts: "{}"
          storageId: 0.8008281904610115
          alternateSanIPs:
          - alternateSanIPs
          - alternateSanIPs
          portGroupAllocationOrder: "{}"
          directorId: directorId
          s3Hostname: s3Hostname
          userId: 6.027456183070403
          arrayId: arrayId
          sharedDrivePriority: 9.301444243932576
          tags:
          - tags
          - tags
          defaultIoLimitPolicy: defaultIoLimitPolicy
          isExperimental: 2.3021358869347655
          s3Port: s3Port
          name: name
          siteId: 1.4658129805029452
          storageType: iscsi_ssd
          subnetType: ipv4
          iscsiHost: iscsiHost
          username: username
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/Storage'
          title: List of storage's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    StorageStatistics:
      properties: {}
      type: object
    CreateStorage:
      example:
        inMaintenance: 5.962133916683182
        storageTechnology: block
        managementHost: managementHost
        passwordEncrypted: passwordEncrypted
        jobInfo:
          jobId: 0.8008281904610115
          jobGroupId: 6.027456183070403
        password: password
        storageDriver: dummy_driver
        targetIQN: targetIQN
        options: "{}"
        drivePriority: 2.3021358869347655
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        iscsiPort: 1.4658129805029452
        portGroupPhysicalPorts: "{}"
        alternateSanIPs:
        - alternateSanIPs
        - alternateSanIPs
        portGroupAllocationOrder: "{}"
        directorId: directorId
        s3Hostname: s3Hostname
        userId: 0.8008281904610115
        arrayId: arrayId
        sharedDrivePriority: 7.061401241503109
        tags:
        - tags
        - tags
        defaultIoLimitPolicy: defaultIoLimitPolicy
        isExperimental: 5.637376656633329
        s3Port: s3Port
        name: name
        siteId: 6.027456183070403
        storageType: iscsi_ssd
        subnetType: ipv4
        iscsiHost: iscsiHost
        username: username
      properties:
        userId:
          description: Id of the owner
          type: number
        siteId:
          description: Id of the site
          type: number
        storageDriver:
          description: Storage driver
          enum:
          - dummy_driver
          - nexenta3
          - nexenta4
          - bigstep_storage
          - hp_msa_1040
          - unity_storage
          - power_max
          - power_flex
          - power_scale
          - ecs
          type: string
        storageTechnology:
          description: Storage technology
          enum:
          - block
          - file
          - object
          type: string
        storageType:
          description: Storage type
          enum:
          - iscsi_ssd
          - iscsi_hdd
          - dummy
          type: string
        name:
          description: Name of the storage
          type: string
        iscsiHost:
          description: ISCSI host
          type: string
        iscsiPort:
          description: ISCSI port
          type: number
        managementHost:
          description: Management host
          type: string
        username:
          description: Username
          type: string
        passwordEncrypted:
          description: Password encrypted
          type: string
        options:
          description: Options for the storage
          type: object
        inMaintenance:
          description: Specifies if the storage is in maintenance
          type: number
        targetIQN:
          description: Target IQN
          type: string
        isExperimental:
          description: Specifies if the storage is experimental
          type: number
        drivePriority:
          description: Specifies the drive priority
          type: number
        sharedDrivePriority:
          description: Specifies the shared drive priority
          type: number
        alternateSanIPs:
          description: Alternate SAN IPs
          items:
            type: string
          type: array
        tags:
          description: Tags
          items:
            type: string
          type: array
        portGroupAllocationOrder:
          description: Port group allocation order
          type: object
        portGroupPhysicalPorts:
          description: Port group physical ports
          type: object
        defaultIoLimitPolicy:
          description: Default IO limit policy
          type: string
        subnetType:
          description: Subnet type
          enum:
          - ipv4
          - ipv6
          type: string
        arrayId:
          description: Array id
          type: string
        directorId:
          description: Director id
          type: string
        s3Hostname:
          description: S3 hostname
          type: string
        s3Port:
          description: S3 port
          type: string
        jobInfo:
          $ref: '#/components/schemas/JobInfo'
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
        password:
          description: The password to use.
          type: string
      required:
      - drivePriority
      - inMaintenance
      - managementHost
      - name
      - password
      - passwordEncrypted
      - sharedDrivePriority
      - siteId
      - storageDriver
      - storageTechnology
      - storageType
      - subnetType
      - username
      type: object
    RegisterStorageResponse:
      example:
        jobInfo:
          jobId: 0.8008281904610115
          jobGroupId: 6.027456183070403
        storageId: 0.8008281904610115
      properties:
        storageId:
          description: Id of the Storage
          type: number
        jobInfo:
          $ref: '#/components/schemas/JobInfo'
      required:
      - storageId
      type: object
    UpdateStorage:
      example:
        portGroupAllocationOrder: "{}"
        directorId: directorId
        inMaintenance: 0.8008281904610115
        s3Hostname: s3Hostname
        arrayId: arrayId
        jobInfo:
          jobId: 0.8008281904610115
          jobGroupId: 6.027456183070403
        sharedDrivePriority: 5.962133916683182
        tags:
        - tags
        - tags
        defaultIoLimitPolicy: defaultIoLimitPolicy
        password: password
        isExperimental: 6.027456183070403
        s3Port: s3Port
        options: "{}"
        drivePriority: 1.4658129805029452
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        portGroupPhysicalPorts: "{}"
        username: username
      properties:
        options:
          description: Options for the storage
          type: object
        inMaintenance:
          description: Specifies if the storage is in maintenance
          type: number
        isExperimental:
          description: Specifies if the storage is experimental
          type: number
        drivePriority:
          description: Specifies the drive priority
          type: number
        sharedDrivePriority:
          description: Specifies the shared drive priority
          type: number
        tags:
          description: Tags
          items:
            type: string
          type: array
        portGroupAllocationOrder:
          description: Port group allocation order
          type: object
        portGroupPhysicalPorts:
          description: Port group physical ports
          type: object
        defaultIoLimitPolicy:
          description: Default IO limit policy
          type: string
        arrayId:
          description: Array id
          type: string
        directorId:
          description: Director id
          type: string
        s3Hostname:
          description: S3 hostname
          type: string
        s3Port:
          description: S3 port
          type: string
        jobInfo:
          $ref: '#/components/schemas/JobInfo'
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
        username:
          description: Username
          type: string
        password:
          description: The password to use.
          type: string
      type: object
    IscsiBootServerInfo:
      example:
        instanceSubdomain: instanceSubdomain
        instanceId: 6.027456183070403
        infrastructureId: 1.4658129805029452
        serverDiskCount: 5.637376656633329
        instanceSubdomainPermanent: instanceSubdomainPermanent
        infrastructureLabel: infrastructureLabel
        userDisplayName: userDisplayName
        userEmail: userEmail
        serverPowerStatus: unknown
        serverId: 0.8008281904610115
        userId: 5.962133916683182
      properties:
        serverId:
          description: Id of the Server
          type: number
        instanceId:
          description: Id of the Instance
          type: number
        instanceSubdomain:
          description: Instance subdomain
          type: string
        instanceSubdomainPermanent:
          description: Instance permanent subdomain
          type: string
        infrastructureLabel:
          description: Infrastructure label
          type: string
        infrastructureId:
          description: Id of the Infrastructure
          type: number
        userId:
          description: Id of the User
          type: number
        userEmail:
          description: User email
          type: string
        userDisplayName:
          description: User display name
          type: string
        serverDiskCount:
          description: Server disk count
          type: number
        serverPowerStatus:
          description: Server power status
          enum:
          - unknown
          - "on"
          - "off"
          type: string
      required:
      - infrastructureId
      - infrastructureLabel
      - instanceId
      - instanceSubdomain
      - instanceSubdomainPermanent
      - serverDiskCount
      - serverId
      - serverPowerStatus
      - userDisplayName
      - userEmail
      - userId
      type: object
    StorageNetworkDeviceConfiguration:
      example:
        storagePhysicalInterfaceIdentifier: storagePhysicalInterfaceIdentifier
        networkEquipmentIdentifier: networkEquipmentIdentifier
        networkEquipmentInterfaceVlans:
        - 5.962133916683182
        - 5.962133916683182
        networkEquipmentId: 1.4658129805029452
        id: 0.8008281904610115
        networkEquipmentInterfaceIdentifier: networkEquipmentInterfaceIdentifier
        storageId: 6.027456183070403
      properties:
        id:
          description: Id of the storage network device configuration
          type: number
        storageId:
          description: Id of the storage
          type: number
        networkEquipmentId:
          description: Id of the network equipment
          type: number
        storagePhysicalInterfaceIdentifier:
          description: Identifier of the storage physical interface
          type: string
        networkEquipmentIdentifier:
          description: Identifier of the network equipment
          type: string
        networkEquipmentInterfaceIdentifier:
          description: Identifier of the network equipment interface
          type: string
        networkEquipmentInterfaceVlans:
          description: Array of VLANS for the network equipment interface
          items:
            type: number
          type: array
      required:
      - id
      - networkEquipmentId
      - networkEquipmentIdentifier
      - networkEquipmentInterfaceIdentifier
      - networkEquipmentInterfaceVlans
      - storageId
      - storagePhysicalInterfaceIdentifier
      type: object
    CreateStorageNetworkDeviceConfiguration:
      example:
        storagePhysicalInterfaceIdentifier: storagePhysicalInterfaceIdentifier
        networkEquipmentInterfaceVlans:
        - 6.027456183070403
        - 6.027456183070403
        networkEquipmentId: 0.8008281904610115
        networkEquipmentInterfaceIdentifier: networkEquipmentInterfaceIdentifier
      properties:
        networkEquipmentId:
          description: Id of the network equipment
          type: number
        storagePhysicalInterfaceIdentifier:
          description: Identifier of the storage physical interface
          type: string
        networkEquipmentInterfaceIdentifier:
          description: Identifier of the network equipment interface
          type: string
        networkEquipmentInterfaceVlans:
          description: Array of VLANS for the network equipment interface
          items:
            type: number
          type: array
      required:
      - networkEquipmentId
      - networkEquipmentInterfaceIdentifier
      - networkEquipmentInterfaceVlans
      - storagePhysicalInterfaceIdentifier
      type: object
    UpdateStorageNetworkDeviceConfiguration:
      example:
        storagePhysicalInterfaceIdentifier: storagePhysicalInterfaceIdentifier
        networkEquipmentInterfaceVlans:
        - 0.8008281904610115
        - 0.8008281904610115
        networkEquipmentInterfaceIdentifier: networkEquipmentInterfaceIdentifier
      properties:
        storagePhysicalInterfaceIdentifier:
          description: Identifier of the storage physical interface
          type: string
        networkEquipmentInterfaceIdentifier:
          description: Identifier of the network equipment interface
          type: string
        networkEquipmentInterfaceVlans:
          description: Array of VLANS for the network equipment interface
          items:
            type: number
          type: array
      type: object
    Version:
      example:
        versionBuild: versionBuild
        version: 1.0.0
        versionDate: 2000-01-23T04:56:07.000+00:00
      properties:
        version:
          description: The version of the installed MetalSoft software
          example: 1.0.0
          type: string
        versionDate:
          description: The release date of the version
          format: date-time
          type: string
        versionBuild:
          description: The build number of the version
          type: string
      required:
      - version
      type: object
    TemplateAssetFile:
      example:
        path: /boot/grub/grub.cfg
        templatingEngine: true
        contentBase64: dXNlci1kYXRhCg==
        name: user-data
        checksum: sha256:a4acfda10b18da50e2ec50ccaf860d7f20b389df8765611142305c0e911d16fd
        mimeType: text/plain
        url: https://example.com/ubuntu-20.04-lts.iso
      properties:
        name:
          description: File name of the template asset file
          example: user-data
          maxLength: 255
          type: string
        mimeType:
          description: The MIME type of the template asset file
          enum:
          - text/plain
          - application/octet-stream
          example: text/plain
          type: string
        checksum:
          description: The checksums of the template asset file (sha1 or sha256)
          example: sha256:a4acfda10b18da50e2ec50ccaf860d7f20b389df8765611142305c0e911d16fd
          maxLength: 255
          type: string
        contentBase64:
          description: |-
            The base64 encoded contents of the template asset file.
                                Required if the URL is not provided
          example: dXNlci1kYXRhCg==
          type: string
        templatingEngine:
          description: If the template asset file needs to be processed by a templating
            engine (Nunjucks)
          type: boolean
        url:
          description: The URL from where to fetch the template asset file
          example: https://example.com/ubuntu-20.04-lts.iso
          maxLength: 255
          type: string
        path:
          description: "The path is unique for the same OS template ID.\n        -\
            \ If the template asset usage is 'build_source_image', the path is ignored\
            \ and 'url' is required.\n        - If the template asset usage is 'build_component',\
            \ the relative ISO location path where the template asset will be copied\
            \ to.\n        "
          example: /boot/grub/grub.cfg
          maxLength: 255
          type: string
      required:
      - mimeType
      - name
      - path
      - templatingEngine
      type: object
    TemplateAsset:
      example:
        createdAt: 2024-01-01T00:00:00Z
        file:
          path: /boot/grub/grub.cfg
          templatingEngine: true
          contentBase64: dXNlci1kYXRhCg==
          name: user-data
          checksum: sha256:a4acfda10b18da50e2ec50ccaf860d7f20b389df8765611142305c0e911d16fd
          mimeType: text/plain
          url: https://example.com/ubuntu-20.04-lts.iso
        createdBy: 6
        modifiedAt: 2024-01-01T00:00:00Z
        usage: build_source_image
        modifiedBy: 10
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 10
        templateId: 4
        tags: "[\"bootloader-config\",\"grub\",\"uefi\"]"
        revision: 1
      properties:
        id:
          description: The template asset ID
          example: 10
          readOnly: true
          type: integer
        templateId:
          description: The ID of the OS template that this template asset belongs
            to
          example: 4
          type: integer
        usage:
          description: The template asset usage
          enum:
          - build_source_image
          - build_component
          - switch_ztp_config
          example: build_source_image
          type: string
        file:
          $ref: '#/components/schemas/TemplateAssetFile'
        tags:
          description: The tags associated with the template asset
          example: "[\"bootloader-config\",\"grub\",\"uefi\"]"
          items:
            maxLength: 255
            type: string
          type: array
        revision:
          description: The revision number of the template asset
          example: 1
          readOnly: true
          type: integer
        createdBy:
          description: The user ID of the user who created the template asset
          example: 6
          type: integer
        modifiedBy:
          description: The user ID of the user who last modified the template asset
          example: 10
          type: integer
        createdAt:
          description: The date and time the template asset was created
          example: 2024-01-01T00:00:00Z
          format: date-time
          readOnly: true
          type: string
        modifiedAt:
          description: The date and time the template asset was last modified
          example: 2024-01-01T00:00:00Z
          format: date-time
          readOnly: true
          type: string
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - createdAt
      - createdBy
      - file
      - id
      - revision
      - templateId
      - usage
      type: object
    TemplateAssetPaginatedList:
      example:
        data:
        - createdAt: 2024-01-01T00:00:00Z
          file:
            path: /boot/grub/grub.cfg
            templatingEngine: true
            contentBase64: dXNlci1kYXRhCg==
            name: user-data
            checksum: sha256:a4acfda10b18da50e2ec50ccaf860d7f20b389df8765611142305c0e911d16fd
            mimeType: text/plain
            url: https://example.com/ubuntu-20.04-lts.iso
          createdBy: 6
          modifiedAt: 2024-01-01T00:00:00Z
          usage: build_source_image
          modifiedBy: 10
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 10
          templateId: 4
          tags: "[\"bootloader-config\",\"grub\",\"uefi\"]"
          revision: 1
        - createdAt: 2024-01-01T00:00:00Z
          file:
            path: /boot/grub/grub.cfg
            templatingEngine: true
            contentBase64: dXNlci1kYXRhCg==
            name: user-data
            checksum: sha256:a4acfda10b18da50e2ec50ccaf860d7f20b389df8765611142305c0e911d16fd
            mimeType: text/plain
            url: https://example.com/ubuntu-20.04-lts.iso
          createdBy: 6
          modifiedAt: 2024-01-01T00:00:00Z
          usage: build_source_image
          modifiedBy: 10
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 10
          templateId: 4
          tags: "[\"bootloader-config\",\"grub\",\"uefi\"]"
          revision: 1
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/TemplateAsset'
          title: List of template asset's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    TemplateAssetCreate:
      example:
        file:
          path: /boot/grub/grub.cfg
          templatingEngine: true
          contentBase64: dXNlci1kYXRhCg==
          name: user-data
          checksum: sha256:a4acfda10b18da50e2ec50ccaf860d7f20b389df8765611142305c0e911d16fd
          mimeType: text/plain
          url: https://example.com/ubuntu-20.04-lts.iso
        usage: build_source_image
        templateId: 4
        tags: "[\"bootloader-config\",\"grub\",\"uefi\"]"
      properties:
        templateId:
          description: The ID of the OS template that this template asset belongs
            to
          example: 4
          type: integer
        usage:
          description: The template asset usage
          enum:
          - build_source_image
          - build_component
          - switch_ztp_config
          example: build_source_image
          type: string
        file:
          $ref: '#/components/schemas/TemplateAssetFile'
        tags:
          description: The tags associated with the template asset
          example: "[\"bootloader-config\",\"grub\",\"uefi\"]"
          items:
            maxLength: 255
            type: string
          type: array
      required:
      - file
      - templateId
      - usage
      type: object
    Event:
      example:
        severity: success
        visibility: private
        userIdAuthenticated: 6.027456183070403
        userEmailAuthenticated: userEmailAuthenticated
        type: 1.4658129805029452
        title: title
        message: message
        httpUserAgent: httpUserAgent
        userId: 5.637376656633329
        serverId: 2.3021358869347655
        occurredTimestamp: occurredTimestamp
        jobId: jobId
        infrastructureId: 5.962133916683182
        context: "{}"
        siteId: 7.061401241503109
        id: 0.8008281904610115
        remoteIpAddress: remoteIpAddress
      properties:
        id:
          description: The id of the event
          type: number
        userIdAuthenticated:
          description: The id of the user who triggered the event
          type: number
        type:
          description: The type of the event
          enum:
          - 370
          - 374
          - 400
          - 371
          - 457
          - 481
          - 372
          - 375
          - 373
          - 251
          - 252
          - 384
          - 396
          - 397
          - 398
          - 399
          - 276
          - 395
          - 294
          - 528
          - 529
          - 530
          - 531
          - 532
          - 533
          - 534
          - 535
          - 536
          - 537
          - 538
          - 197
          - 196
          - 264
          - 153
          - 156
          - 158
          - 157
          - 154
          - 263
          - 249
          - 171
          - 155
          - 206
          - 239
          - 240
          - 195
          - 194
          - 215
          - 220
          - 221
          - 222
          - 223
          - 216
          - 227
          - 231
          - 232
          - 217
          - 228
          - 229
          - 230
          - 250
          - 224
          - 225
          - 226
          - 265
          - 254
          - 255
          - 256
          - 257
          - 258
          - 266
          - 259
          - 260
          - 261
          - 277
          - 278
          - 279
          - 280
          - 281
          - 282
          - 283
          - 284
          - 285
          - 286
          - 287
          - 288
          - 289
          - 207
          - 208
          - 209
          - 210
          - 211
          - 212
          - 213
          - 214
          - 290
          - 291
          - 292
          - 293
          - 463
          - 465
          - 466
          - 464
          - 186
          - 187
          - 188
          - 189
          - 190
          - 299
          - 191
          - 192
          - 376
          - 298
          - 382
          - 418
          - 429
          - 438
          - 434
          - 437
          - 431
          - 430
          - 440
          - 433
          - 435
          - 445
          - 442
          - 439
          - 441
          - 432
          - 436
          - 493
          - 495
          - 496
          - 383
          - 494
          - 385
          - 386
          - 387
          - 389
          - 390
          - 388
          - 56
          - 54
          - 121
          - 123
          - 129
          - 124
          - 150
          - 118
          - 119
          - 120
          - 328
          - 90
          - 73
          - 75
          - 130
          - 32
          - 329
          - 94
          - 97
          - 147
          - 316
          - 317
          - 185
          - 115
          - 114
          - 270
          - 271
          - 272
          - 541
          - 542
          - 539
          - 540
          - 446
          - 447
          - 448
          - 519
          - 520
          - 521
          - 514
          - 515
          - 522
          - 516
          - 517
          - 518
          - 523
          - 524
          - 422
          - 424
          - 426
          - 425
          - 423
          - 428
          - 427
          - 238
          - 503
          - 76
          - 152
          - 323
          - 253
          - 127
          - 39
          - 262
          - 273
          - 159
          - 296
          - 297
          - 369
          - 295
          - 234
          - 233
          - 77
          - 80
          - 79
          - 61
          - 64
          - 125
          - 12
          - 65
          - 49
          - 68
          - 103
          - 126
          - 16
          - 88
          - 173
          - 160
          - 205
          - 57
          - 99
          - 98
          - 198
          - 201
          - 63
          - 66
          - 132
          - 8
          - 67
          - 70
          - 116
          - 133
          - 20
          - 71
          - 175
          - 102
          - 204
          - 243
          - 244
          - 241
          - 242
          - 248
          - 245
          - 246
          - 247
          - 236
          - 47
          - 268
          - 267
          - 325
          - 269
          - 172
          - 101
          - 199
          - 202
          - 237
          - 168
          - 169
          - 176
          - 177
          - 193
          - 235
          - 170
          - 81
          - 83
          - 131
          - 24
          - 82
          - 473
          - 500
          - 104
          - 453
          - 451
          - 455
          - 454
          - 452
          - 95
          - 135
          - 134
          - 107
          - 106
          - 200
          - 203
          - 391
          - 78
          - 274
          - 326
          - 331
          - 330
          - 332
          - 364
          - 117
          - 327
          - 321
          - 309
          - 508
          - 458
          - 310
          - 275
          - 420
          - 300
          - 513
          - 312
          - 320
          - 304
          - 394
          - 406
          - 302
          - 311
          - 303
          - 408
          - 411
          - 409
          - 410
          - 417
          - 416
          - 412
          - 413
          - 414
          - 415
          - 407
          - 477
          - 470
          - 322
          - 443
          - 392
          - 393
          - 136
          - 507
          - 381
          - 307
          - 525
          - 497
          - 306
          - 444
          - 151
          - 480
          - 461
          - 365
          - 367
          - 366
          - 313
          - 314
          - 460
          - 509
          - 361
          - 179
          - 161
          - 162
          - 166
          - 163
          - 362
          - 181
          - 164
          - 165
          - 167
          - 359
          - 178
          - 360
          - 180
          - 183
          - 184
          - 527
          - 333
          - 334
          - 335
          - 336
          - 337
          - 456
          - 96
          - 105
          - 85
          - 86
          - 128
          - 28
          - 84
          - 149
          - 379
          - 380
          - 462
          - 377
          - 378
          - 174
          - 100
          - 419
          - 471
          - 472
          - 341
          - 501
          - 511
          - 512
          - 510
          - 421
          - 340
          - 339
          - 354
          - 338
          - 343
          - 355
          - 502
          - 344
          - 349
          - 347
          - 345
          - 348
          - 346
          - 506
          - 498
          - 504
          - 505
          - 401
          - 405
          - 402
          - 404
          - 403
          - 368
          - 110
          - 478
          - 109
          - 459
          - 93
          - 499
          - 91
          - 92
          - 475
          - 474
          - 182
          - 108
          - 111
          - 318
          - 319
          - 59
          - 89
          - 218
          - 479
          - 219
          - 490
          - 492
          - 485
          - 482
          - 526
          - 486
          - 484
          - 483
          - 487
          - 489
          - 488
          - 491
          - 350
          - 363
          - 351
          - 358
          - 352
          - 353
          - 356
          - 357
          - 467
          - 469
          - 468
          - 543
          type: number
        severity:
          description: The severity of the event
          enum:
          - success
          - info
          - warning
          - important
          - debug
          - trigger
          - security
          type: string
        visibility:
          description: The visibility of the event
          enum:
          - private
          - public
          type: string
        infrastructureId:
          description: The id of the infrastructure linked to the event
          type: number
        userId:
          description: The id of the user linked to the event
          type: number
        serverId:
          description: The id of the server linked to the event
          type: number
        jobId:
          description: The id of the job linked to the event
          type: string
        siteId:
          description: The id of the site linked to the event
          type: number
        title:
          description: The title of the event
          type: string
        message:
          description: The message of the event
          type: string
        userEmailAuthenticated:
          description: The email of the user who triggered the event
          type: string
        context:
          description: The context of the event
          type: object
        occurredTimestamp:
          description: The timestamp the event occurred
          type: string
        httpUserAgent:
          description: The http user agent linked to the event
          type: string
        remoteIpAddress:
          description: The remote ip address of the user who triggered the event
          type: string
      required:
      - id
      - message
      - occurredTimestamp
      - severity
      - title
      - type
      - visibility
      type: object
    EventPaginatedList:
      example:
        data:
        - severity: success
          visibility: private
          userIdAuthenticated: 6.027456183070403
          userEmailAuthenticated: userEmailAuthenticated
          type: 1.4658129805029452
          title: title
          message: message
          httpUserAgent: httpUserAgent
          userId: 5.637376656633329
          serverId: 2.3021358869347655
          occurredTimestamp: occurredTimestamp
          jobId: jobId
          infrastructureId: 5.962133916683182
          context: "{}"
          siteId: 7.061401241503109
          id: 0.8008281904610115
          remoteIpAddress: remoteIpAddress
        - severity: success
          visibility: private
          userIdAuthenticated: 6.027456183070403
          userEmailAuthenticated: userEmailAuthenticated
          type: 1.4658129805029452
          title: title
          message: message
          httpUserAgent: httpUserAgent
          userId: 5.637376656633329
          serverId: 2.3021358869347655
          occurredTimestamp: occurredTimestamp
          jobId: jobId
          infrastructureId: 5.962133916683182
          context: "{}"
          siteId: 7.061401241503109
          id: 0.8008281904610115
          remoteIpAddress: remoteIpAddress
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/Event'
          title: List of event's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateUser:
      example:
        emailVerified: false
        accountId: 0.8008281904610115
        password: password
        redirectUrl: redirectUrl
        accessLevel: accessLevel
        displayName: displayName
        email: email
        createWithAccount: false
      properties:
        displayName:
          description: The display name of the user
          type: string
        email:
          description: The email address of the user
          type: string
        accessLevel:
          description: The access level of the user
          type: string
        password:
          description: The password of the user
          type: string
        redirectUrl:
          description: The redirect URL for the user
          type: string
        emailVerified:
          default: false
          description: Whether the user has verified their email address
          type: boolean
        createWithAccount:
          default: false
          description: Whether an account should be created with the user
          type: boolean
        accountId:
          description: The account ID of the user
          type: number
      required:
      - displayName
      - email
      type: object
    UserDelegate:
      example:
        removeDelegate: false
        email: email
        createIfNotExists: false
      properties:
        email:
          description: The user delegate e-mail
          type: string
        createIfNotExists:
          default: false
          description: Whether to create the delegate if it does not exist. Can only
            be used when creating a new delegate.
          type: boolean
        removeDelegate:
          default: false
          description: Whether to remove the delegate. Cannot be used when creating
            a new delegate.
          type: boolean
      type: object
    UserSuspend:
      example:
        suspendReasonPrivateComment: suspendReasonPrivateComment
        suspendReason: unpaid
        suspendReasonPublicComment: suspendReasonPublicComment
        removeSuspension: false
      properties:
        suspendReason:
          description: The suspend reason of the user
          enum:
          - unpaid
          - custom
          type: string
        suspendReasonPublicComment:
          description: The public comment for the suspension
          type: string
        suspendReasonPrivateComment:
          description: The private comment for the suspension
          type: string
        removeSuspension:
          default: false
          description: Whether to remove the suspension
          type: boolean
      type: object
    UserPromotion:
      example:
        removePromotion: false
        promotion: promotion
      properties:
        promotion:
          description: The promotion for the user
          type: string
        removePromotion:
          default: false
          description: Whether to remove the promotion
          type: boolean
      type: object
    UserExperimentalTag:
      example:
        removeExperimentalTag: false
        experimentalTag: storage_pools
      properties:
        experimentalTag:
          description: The experimental tag for the user
          enum:
          - storage_pools
          - vm_pools
          - servers
          - volume_template
          type: string
        removeExperimentalTag:
          default: false
          description: Whether to remove the experimental tag
          type: boolean
      type: object
    UserPasswordRevealPermission:
      example:
        enablePermission: true
        passwordRevealPermission: chassis_rack
      properties:
        passwordRevealPermission:
          description: The password reveal permission for the user
          enum:
          - chassis_rack
          - cluster
          - container
          - datacenter
          - drive
          - hdfs
          - instance
          - server
          - storage_pool
          - switch
          - workflow
          type: string
        enablePermission:
          description: Whether to enable the permission
          type: boolean
      required:
      - passwordRevealPermission
      type: object
    UserSpecialPermission:
      example:
        enablePermission: true
        specialPermission: create_verified_user
      properties:
        specialPermission:
          description: The resource permission for the user
          enum:
          - create_verified_user
          type: string
        enablePermission:
          description: Whether to enable the permission
          type: boolean
      required:
      - specialPermission
      type: object
    UserResourcePermissions:
      example:
        specialPermissions:
        - enablePermission: true
          specialPermission: create_verified_user
        - enablePermission: true
          specialPermission: create_verified_user
        passwordRevealPermissions:
        - enablePermission: true
          passwordRevealPermission: chassis_rack
        - enablePermission: true
          passwordRevealPermission: chassis_rack
      properties:
        passwordRevealPermissions:
          description: The new password reveal permissions of the user.
          items:
            $ref: '#/components/schemas/UserPasswordRevealPermission'
          type: array
        specialPermissions:
          description: The new special permissions of the user.
          items:
            $ref: '#/components/schemas/UserSpecialPermission'
          type: array
      type: object
    UpdateUser:
      example:
        experimentalTags:
        - removeExperimentalTag: false
          experimentalTag: storage_pools
        - removeExperimentalTag: false
          experimentalTag: storage_pools
        redirectUrl: redirectUrl
        accessLevel: accessLevel
        displayName: displayName
        isBlocked: true
        language: en
        infrastructureIdDefault: 0.8008281904610115
        delegates:
        - removeDelegate: false
          email: email
          createIfNotExists: false
        - removeDelegate: false
          email: email
          createIfNotExists: false
        isBillable: true
        isTestAccount: true
        emailStatus: not_verified
        promotions:
        - removePromotion: false
          promotion: promotion
        - removePromotion: false
          promotion: promotion
        permissions:
          specialPermissions:
          - enablePermission: true
            specialPermission: create_verified_user
          - enablePermission: true
            specialPermission: create_verified_user
          passwordRevealPermissions:
          - enablePermission: true
            passwordRevealPermission: chassis_rack
          - enablePermission: true
            passwordRevealPermission: chassis_rack
        isBrandManager: true
        brand: brand
        email: email
        suspension:
          suspendReasonPrivateComment: suspendReasonPrivateComment
          suspendReason: unpaid
          suspendReasonPublicComment: suspendReasonPublicComment
          removeSuspension: false
      properties:
        redirectUrl:
          description: The redirect URL for the user
          type: string
        displayName:
          description: The new display name of the user
          type: string
        email:
          description: The new login e-mail of the user
          type: string
        emailStatus:
          description: The new e-mail status of the user
          enum:
          - not_verified
          - verified
          type: string
        language:
          description: The new language of the user
          enum:
          - en
          - ro
          type: string
        brand:
          description: The new brand of the user
          type: string
        isBrandManager:
          description: The new brand manager status of the user
          type: boolean
        delegates:
          description: The new user delegates of the user.
          items:
            $ref: '#/components/schemas/UserDelegate'
          type: array
        isBlocked:
          description: The new blocked status of the user
          type: boolean
        suspension:
          $ref: '#/components/schemas/UserSuspend'
        accessLevel:
          description: The new access level of the user
          type: string
        promotions:
          description: The new promotions of the user.
          items:
            $ref: '#/components/schemas/UserPromotion'
          type: array
        experimentalTags:
          description: The new experimental tags of the user.
          items:
            $ref: '#/components/schemas/UserExperimentalTag'
          type: array
        permissions:
          $ref: '#/components/schemas/UserResourcePermissions'
        isTestAccount:
          description: Whether the user account is a test one.
          type: boolean
        isBillable:
          description: Whether the user account is billable.
          type: boolean
        infrastructureIdDefault:
          description: The default infrastructure ID of the user
          type: number
      type: object
    ChangeUserAccount:
      example:
        newAccountId: 0.8008281904610115
      properties:
        newAccountId:
          description: The ID of the parent account
          type: number
      required:
      - newAccountId
      type: object
    VMDisk:
      example:
        sizeGB: 100
        vmId: 1
        datastore: local
        id: 1
      properties:
        id:
          description: VM ID
          example: 1
          type: number
        vmId:
          description: VM ID
          example: 1
          type: number
        datastore:
          description: Name of the VM Disk datastore
          example: local
          type: string
        sizeGB:
          description: Size of the VM Disk in GB
          example: 100
          type: number
      required:
      - datastore
      - id
      - sizeGB
      - vmId
      type: object
    VM:
      example:
        allocationTimestamp: allocationTimestamp
        datacenterName: datacenterName
        disks:
        - sizeGB: 100
          vmId: 1
          datastore: local
          id: 1
        - sizeGB: 100
          vmId: 1
          datastore: local
          id: 1
        ramGB: 2
        powerStateLastUpdatedTimestamp: powerStateLastUpdatedTimestamp
        instanceId: 5.962133916683182
        powerState: "on"
        host: host
        userEmail: userEmail
        links:
        - rel: self
          href: /api/v2/path/to/resource
        - rel: self
          href: /api/v2/path/to/resource
        id: 1
        diskSizeGB: 2
        vncPort: 5900
        comments: 5.637376656633329
        hosts:
        - hosts
        - hosts
        createdTimestamp: createdTimestamp
        userId: 1.4658129805029452
        tags:
        - tags
        - tags
        vmInstanceId: 1
        vncPassword: vncPassword
        infrastructureId: 6.027456183070403
        cpuCores: 2
        administrationState: managed
        name: name
        poolId: 1
        siteId: 0.8008281904610115
        typeId: 1
      properties:
        id:
          description: VM ID
          example: 1
          type: number
        name:
          description: Name of the VM
          type: string
        siteId:
          description: Id of the site for the VM
          type: number
        datacenterName:
          description: Datacenter of the VM
          type: string
        infrastructureId:
          description: ID of the infrastructure where this VM is deployed
          type: number
        userId:
          description: ID of the user that owns this VM
          type: number
        userEmail:
          description: Email of the user that owns this VM
          type: string
        instanceId:
          description: ID of the instance where this VM is deployed
          type: number
        vmInstanceId:
          description: The id of the VM Instance. This is a number.
          example: 1
          type: number
        host:
          description: Name of the host
          type: string
        hosts:
          description: List of hosts
          items:
            type: string
          type: array
        cpuCores:
          description: Number of CPU cores for the VM
          example: 2
          type: number
        ramGB:
          description: RAM in GB for the VM
          example: 2
          type: number
        diskSizeGB:
          description: Disk size in GB for the VM
          example: 2
          type: number
        typeId:
          description: The id of the VM Type. This is a number.
          example: 1
          type: number
        poolId:
          description: The id of the VM Pool. This is a number.
          example: 1
          type: number
        administrationState:
          description: The administration state of the VM.
          enum:
          - managed
          - unmanaged
          - generic_endpoint
          type: string
        comments:
          description: VM comments.
          type: number
        powerState:
          description: The power state of the VM.
          enum:
          - "on"
          - "off"
          - unknown
          type: string
        powerStateLastUpdatedTimestamp:
          description: Timestamp when the VM power state was last updated.
          type: string
        createdTimestamp:
          description: Timestamp when the VM was created
          type: string
        allocationTimestamp:
          description: Timestamp when the VM was allocated
          type: string
        tags:
          description: Tags for the VM. This is a JSON object.
          items:
            type: string
          type: array
        vncPort:
          description: The port number for the VNC server.
          example: 5900
          type: number
        vncPassword:
          description: The password for the VNC server.
          type: string
        disks:
          description: The disks of the VM.
          items:
            $ref: '#/components/schemas/VMDisk'
          type: array
        links:
          description: Reference links
          items:
            $ref: '#/components/schemas/Link'
          type: array
      required:
      - administrationState
      - allocationTimestamp
      - cpuCores
      - createdTimestamp
      - datacenterName
      - diskSizeGB
      - disks
      - host
      - hosts
      - id
      - infrastructureId
      - instanceId
      - name
      - poolId
      - powerState
      - powerStateLastUpdatedTimestamp
      - ramGB
      - siteId
      - typeId
      - userEmail
      - userId
      - vmInstanceId
      - vncPassword
      type: object
    UpdateVM:
      example:
        comments: 0.8008281904610115
        tags:
        - tags
        - tags
      properties:
        comments:
          description: VM comments.
          type: number
        tags:
          description: Tags for the VM. This is a JSON object.
          items:
            type: string
          type: array
      type: object
    VMInstanceGroupConfiguration:
      example:
        dnsSubdomainChangeId: 6.027456183070403
        instanceCount: 1.4658129805029452
        subdomain: subdomain
        infrastructureDeployId: 5.962133916683182
        label: label
        updatedTimestamp: updatedTimestamp
        deployType: create
        customVariables: "{}"
        revision: 0.8008281904610115
        deployStatus: not_started
      properties:
        revision:
          description: Revision of the VM Instance Group Configuration
          type: number
        label:
          description: Name of the VM Instance Group.
          type: string
        subdomain:
          description: Subdomain of the VM Instance Group.
          type: string
        dnsSubdomainChangeId:
          description: Id of the DNS subdomain for the VM Instance Group.
          type: number
        instanceCount:
          default: 1
          type: number
        deployType:
          default: create
          description: Deploy type of the VM Instance Group
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          default: not_started
          description: Deploy status of the VM Instance Group
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        infrastructureDeployId:
          description: Id of the deployment for the VM Instance Group.
          type: number
        customVariables:
          description: Custom variables for the VM Instance Group.
          type: object
        updatedTimestamp:
          description: Timestamp of the VM Instance Group last update.
          type: string
      required:
      - deployStatus
      - deployType
      - label
      - revision
      - updatedTimestamp
      type: object
    VMInstanceGroupMeta:
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
        tags:
          description: Tags for the VM Instance Group.
          items:
            type: string
          type: array
      type: object
    VMInstanceGroup:
      example:
        dnsSubdomainId: 2.3021358869347655
        createdTimestamp: createdTimestamp
        label: label
        subdomainPermanent: subdomainPermanent
        updatedTimestamp: updatedTimestamp
        customVariables: "{}"
        revision: 1.4658129805029452
        dnsSubdomainPermanentId: 7.061401241503109
        infrastructureId: 5.962133916683182
        instanceCount: 0.8008281904610115
        serviceStatus: ordered
        meta: ""
        subdomain: subdomain
        links: "{}"
        id: 6.027456183070403
        config: ""
        diskSizeGB: 5.637376656633329
      properties:
        label:
          description: Name of the VM Instance Group.
          type: string
        subdomain:
          description: Subdomain of the VM Instance Group.
          type: string
        instanceCount:
          default: 1
          type: number
        customVariables:
          description: Custom variables for the VM Instance Group.
          type: object
        updatedTimestamp:
          description: Timestamp of the VM Instance Group last update.
          type: string
        id:
          description: Id of the VM Instance Group.
          type: number
        revision:
          description: Revision of the VM Instance Group State
          type: number
        infrastructureId:
          description: Id of the Infrastructure.
          type: number
        serviceStatus:
          description: Status of the VM Instance Group.
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          type: string
        diskSizeGB:
          description: Disk size in GB for each VM Instance in the VM Instance Group.
          type: number
        subdomainPermanent:
          description: Subdomain permanent of the VM Instance Group.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the VM Instance Group.
          type: number
        dnsSubdomainPermanentId:
          description: Id of the permanent DNS subdomain for the VM Instance Group.
          type: number
        createdTimestamp:
          description: Timestamp of the VM Instance Group creation.
          type: string
        config:
          allOf:
          - $ref: '#/components/schemas/VMInstanceGroupConfiguration'
          description: The current changes to be deployed for the VM Instance Group.
        meta:
          allOf:
          - $ref: '#/components/schemas/VMInstanceGroupMeta'
          description: Meta information of the VM Instance Group.
        links:
          description: Links to other resources
          type: object
      required:
      - config
      - createdTimestamp
      - diskSizeGB
      - id
      - infrastructureId
      - label
      - links
      - meta
      - revision
      - serviceStatus
      - updatedTimestamp
      type: object
    VMInstanceGroupPaginatedList:
      example:
        data:
        - dnsSubdomainId: 2.3021358869347655
          createdTimestamp: createdTimestamp
          label: label
          subdomainPermanent: subdomainPermanent
          updatedTimestamp: updatedTimestamp
          customVariables: "{}"
          revision: 1.4658129805029452
          dnsSubdomainPermanentId: 7.061401241503109
          infrastructureId: 5.962133916683182
          instanceCount: 0.8008281904610115
          serviceStatus: ordered
          meta: ""
          subdomain: subdomain
          links: "{}"
          id: 6.027456183070403
          config: ""
          diskSizeGB: 5.637376656633329
        - dnsSubdomainId: 2.3021358869347655
          createdTimestamp: createdTimestamp
          label: label
          subdomainPermanent: subdomainPermanent
          updatedTimestamp: updatedTimestamp
          customVariables: "{}"
          revision: 1.4658129805029452
          dnsSubdomainPermanentId: 7.061401241503109
          infrastructureId: 5.962133916683182
          instanceCount: 0.8008281904610115
          serviceStatus: ordered
          meta: ""
          subdomain: subdomain
          links: "{}"
          id: 6.027456183070403
          config: ""
          diskSizeGB: 5.637376656633329
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/VMInstanceGroup'
          title: List of vm instance group's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    VMInstanceConfiguration:
      example:
        vmId: 6.027456183070403
        label: label
        vmPoolId: 2.3021358869347655
        templateId: 2.027123023002322
        ramGB: 9.301444243932576
        updatedTimestamp: updatedTimestamp
        deployType: create
        customVariables: "{}"
        revision: 0.8008281904610115
        dnsSubdomainChangeId: 5.962133916683182
        cpuCores: 3.616076749251911
        subdomain: subdomain
        infrastructureDeployId: 5.637376656633329
        typeId: 1.4658129805029452
        deployStatus: not_started
        diskSizeGB: 7.061401241503109
      properties:
        revision:
          description: Revision of the VM Instance Configuration
          type: number
        label:
          description: Name of the VM Instance.
          type: string
        vmId:
          description: Id of the VM.
          type: number
        typeId:
          description: Id of the VM Type.
          type: number
        subdomain:
          description: Subdomain of the VM Instance.
          type: string
        dnsSubdomainChangeId:
          description: Id of the DNS subdomain for the VM Instance.
          type: number
        deployType:
          default: create
          description: Deploy type of the VM Instance
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          default: not_started
          description: Deploy status of the VM Instance
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        infrastructureDeployId:
          description: Id of the deployment for the VM Instance.
          type: number
        vmPoolId:
          description: Id of the VM Pool.
          type: number
        diskSizeGB:
          description: Disk size in GB of the VM Instance.
          type: number
        ramGB:
          description: RAM size in GB of the VM Instance.
          type: number
        cpuCores:
          description: Number of CPU cores for the VM Instance.
          type: number
        templateId:
          description: Id of the template used by the VM Instance.
          type: number
        customVariables:
          description: Custom variables for the VM Instance.
          type: object
        updatedTimestamp:
          description: Timestamp of the VM Instance last update.
          type: string
      required:
      - cpuCores
      - deployStatus
      - deployType
      - diskSizeGB
      - label
      - ramGB
      - revision
      - typeId
      - updatedTimestamp
      type: object
    VMInstanceMeta:
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
        tags:
          description: Tags for the VM Instance.
          items:
            type: string
          type: array
      type: object
    VMInstance:
      example:
        vmId: 0.8008281904610115
        groupId: 2.027123023002322
        vmPoolId: 1.4658129805029452
        templateId: 7.061401241503109
        ramGB: 5.637376656633329
        updatedTimestamp: updatedTimestamp
        customVariables: "{}"
        dnsSubdomainPermanentId: 1.2315135367772556
        variablesRenderedTemplateAssets: "{}"
        uniqueIndex: 1.0246457001441578
        serviceStatus: ordered
        links: "{}"
        id: 9.301444243932576
        diskSizeGB: 5.962133916683182
        dnsSubdomainId: 7.386281948385884
        createdTimestamp: createdTimestamp
        label: label
        subdomainPermanent: subdomainPermanent
        revision: 3.616076749251911
        infrastructureId: 4.145608029883936
        cpuCores: 2.3021358869347655
        meta: ""
        subdomain: subdomain
        typeId: 6.027456183070403
        config: ""
      properties:
        label:
          description: Name of the VM Instance.
          type: string
        vmId:
          description: Id of the VM.
          type: number
        typeId:
          description: Id of the VM Type.
          type: number
        subdomain:
          description: Subdomain of the VM Instance.
          type: string
        vmPoolId:
          description: Id of the VM Pool.
          type: number
        diskSizeGB:
          description: Disk size in GB of the VM Instance.
          type: number
        ramGB:
          description: RAM size in GB of the VM Instance.
          type: number
        cpuCores:
          description: Number of CPU cores for the VM Instance.
          type: number
        templateId:
          description: Id of the template used by the VM Instance.
          type: number
        customVariables:
          description: Custom variables for the VM Instance.
          type: object
        updatedTimestamp:
          description: Timestamp of the VM Instance last update.
          type: string
        id:
          description: VM Instance ID
          type: number
        revision:
          description: Revision of the VM Instance
          type: number
        groupId:
          description: Id of the VM Instance Group.
          type: number
        infrastructureId:
          description: Id of the Infrastructure.
          type: number
        serviceStatus:
          description: Service status of the VM Instance.
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          type: string
        subdomainPermanent:
          description: Subdomain permanent of the VM Instance.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the VM Instance.
          type: number
        dnsSubdomainPermanentId:
          description: Id of the permanent DNS subdomain for the VM Instance.
          type: number
        variablesRenderedTemplateAssets:
          description: Variables object used when building the OS image.
          type: object
        uniqueIndex:
          description: Unique index of the VM Instance.
          type: number
        createdTimestamp:
          description: Timestamp of the VM Instance creation.
          type: string
        config:
          allOf:
          - $ref: '#/components/schemas/VMInstanceConfiguration'
          description: The current changes to be deployed for the VM Instance.
        meta:
          allOf:
          - $ref: '#/components/schemas/VMInstanceMeta'
          description: Meta information of the VM Instance.
        links:
          description: Links to other resources
          type: object
      required:
      - config
      - cpuCores
      - createdTimestamp
      - diskSizeGB
      - groupId
      - id
      - infrastructureId
      - label
      - links
      - meta
      - ramGB
      - revision
      - serviceStatus
      - typeId
      - updatedTimestamp
      type: object
    VMInstancePaginatedList:
      example:
        data:
        - vmId: 0.8008281904610115
          groupId: 2.027123023002322
          vmPoolId: 1.4658129805029452
          templateId: 7.061401241503109
          ramGB: 5.637376656633329
          updatedTimestamp: updatedTimestamp
          customVariables: "{}"
          dnsSubdomainPermanentId: 1.2315135367772556
          variablesRenderedTemplateAssets: "{}"
          uniqueIndex: 1.0246457001441578
          serviceStatus: ordered
          links: "{}"
          id: 9.301444243932576
          diskSizeGB: 5.962133916683182
          dnsSubdomainId: 7.386281948385884
          createdTimestamp: createdTimestamp
          label: label
          subdomainPermanent: subdomainPermanent
          revision: 3.616076749251911
          infrastructureId: 4.145608029883936
          cpuCores: 2.3021358869347655
          meta: ""
          subdomain: subdomain
          typeId: 6.027456183070403
          config: ""
        - vmId: 0.8008281904610115
          groupId: 2.027123023002322
          vmPoolId: 1.4658129805029452
          templateId: 7.061401241503109
          ramGB: 5.637376656633329
          updatedTimestamp: updatedTimestamp
          customVariables: "{}"
          dnsSubdomainPermanentId: 1.2315135367772556
          variablesRenderedTemplateAssets: "{}"
          uniqueIndex: 1.0246457001441578
          serviceStatus: ordered
          links: "{}"
          id: 9.301444243932576
          diskSizeGB: 5.962133916683182
          dnsSubdomainId: 7.386281948385884
          createdTimestamp: createdTimestamp
          label: label
          subdomainPermanent: subdomainPermanent
          revision: 3.616076749251911
          infrastructureId: 4.145608029883936
          cpuCores: 2.3021358869347655
          meta: ""
          subdomain: subdomain
          typeId: 6.027456183070403
          config: ""
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/VMInstance'
          title: List of vm instance's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateVMInstance:
      example:
        groupId: 6.027456183070403
        typeId: 0.8008281904610115
        diskSizeGB: 1.4658129805029452
        tags:
        - tags
        - tags
      properties:
        typeId:
          description: Id of the VM Type.
          type: number
        groupId:
          description: Id of the VM Instance Group.
          type: number
        diskSizeGB:
          description: "Disk size in GB of the VM Instance. If not passed, the default\
            \ disk size from the group will be used"
          type: number
        tags:
          description: Tags for the VM Instance.
          items:
            type: string
          type: array
      required:
      - groupId
      - typeId
      type: object
    UpdateVMInstance:
      example:
        label: label
        customVariables: "{}"
        diskSizeGB: 0.8008281904610115
      properties:
        label:
          description: Label for the VM Instance Group.
          type: string
        diskSizeGB:
          description: Disk size in GB for the VM Instance.
          type: number
        customVariables:
          description: Custom variables for the VM Instance.
          type: object
      type: object
    UpdateVMInstanceMeta:
      example:
        guiSettings:
          rowIndex: 6.027456183070403
          columnIndex: 1.4658129805029452
          userAgent: userAgent
          randomInstanceID: randomInstanceID
          showWidgetChildren: true
        tags:
        - tags
        - tags
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
        tags:
          description: Tags for the VM Instance.
          items:
            type: string
          type: array
      type: object
    CreateVMInstanceGroup:
      example:
        volumeTemplateId: 5.962133916683182
        instanceCount: 0.8008281904610115
        typeId: 1.4658129805029452
        diskSizeGB: 6.027456183070403
        tags:
        - tags
        - tags
      properties:
        instanceCount:
          default: 1
          type: number
        diskSizeGB:
          description: Disk size in GB for each VM Instance in the VM Instance Group.
          type: number
        typeId:
          description: Id of the VM Type.
          type: number
        volumeTemplateId:
          description: Id of the template used by the VM Instance Group.
          type: number
        tags:
          description: Tags for the VM Instance Group.
          items:
            type: string
          type: array
      required:
      - diskSizeGB
      - typeId
      type: object
    UpdateVMInstanceGroup:
      example:
        label: label
        customVariables: "{}"
      properties:
        label:
          description: Label for the VM Instance Group.
          type: string
        customVariables:
          description: Custom variables for the VM Instance.
          type: object
      type: object
    UpdateVMInstanceGroupMeta:
      example:
        guiSettings:
          rowIndex: 6.027456183070403
          columnIndex: 1.4658129805029452
          userAgent: userAgent
          randomInstanceID: randomInstanceID
          showWidgetChildren: true
        tags:
        - tags
        - tags
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
        tags:
          description: Tags for the VM Instance Group.
          items:
            type: string
          type: array
      type: object
    VMInstanceGroupInterfaceConfiguration:
      properties:
        revision:
          description: Revision of the VM Instance Group Interface Configuration
          type: number
        label:
          description: Name of the VM Instance Group Interface.
          type: string
        index:
          description: Interface index
          type: number
        networkId:
          description: Network ID
          type: number
        subdomain:
          description: Subdomain of the VM Instance Group Interface.
          type: string
        dnsSubdomainChangeId:
          description: Id of the DNS subdomain for the VM Instance Group Interface.
          type: number
        deployType:
          default: create
          description: Deploy type of the VM Instance Group Interface
          enum:
          - create
          - delete
          - edit
          - start
          - stop
          - suspend
          type: string
        deployStatus:
          default: not_started
          description: Deploy status of the VM Instance Group Interface
          enum:
          - not_started
          - ongoing
          - finished
          type: string
        infrastructureDeployId:
          description: Id of the deployment for the VM Instance Group Interface.
          type: number
        updatedTimestamp:
          description: Timestamp of the VM Instance Group Interface update.
          type: string
      required:
      - deployStatus
      - deployType
      - index
      - label
      - revision
      - updatedTimestamp
      type: object
    VMInstanceGroupInterfaceMeta:
      properties:
        guiSettings:
          $ref: '#/components/schemas/GenericGUISettings'
      type: object
    VMInstanceGroupInterface:
      example:
        dnsSubdomainId: 7.061401241503109
        groupId: 5.637376656633329
        createdTimestamp: createdTimestamp
        index: 0.8008281904610115
        label: label
        subdomainPermanent: subdomainPermanent
        updatedTimestamp: updatedTimestamp
        revision: 5.962133916683182
        dnsSubdomainPermanentId: 9.301444243932576
        infrastructureId: 2.3021358869347655
        serviceStatus: ordered
        meta: ""
        subdomain: subdomain
        networkId: 6.027456183070403
        links: "{}"
        id: 1.4658129805029452
        config: ""
      properties:
        label:
          description: Name of the VM Instance Group Interface.
          type: string
        index:
          description: Interface index
          type: number
        networkId:
          description: Network ID
          type: number
        subdomain:
          description: Subdomain of the VM Instance Group Interface.
          type: string
        updatedTimestamp:
          description: Timestamp of the VM Instance Group Interface update.
          type: string
        id:
          description: Interface ID
          type: number
        revision:
          description: Revision of the VM Instance Group Interface Configuration
          type: number
        serviceStatus:
          description: Service status of the VM Instance Group Interface.
          enum:
          - ordered
          - active
          - deleted
          - stopped
          - suspended
          type: string
        groupId:
          description: VM Instance Group ID
          type: number
        infrastructureId:
          description: Infrastructure ID
          type: number
        subdomainPermanent:
          description: Subdomain permanent of the VM Instance Group Interface.
          type: string
        dnsSubdomainId:
          description: Id of the DNS subdomain for the VM Instance Group Interface.
          type: number
        dnsSubdomainPermanentId:
          description: Id of the permanent DNS subdomain for the VM Instance Group
            Interface.
          type: number
        config:
          allOf:
          - $ref: '#/components/schemas/VMInstanceGroupInterfaceConfiguration'
          description: The current changes to be deployed for the VM Instance Group
            Interface.
        meta:
          allOf:
          - $ref: '#/components/schemas/VMInstanceGroupInterfaceMeta'
          description: Meta information of the VM Instance Group Interface.
        createdTimestamp:
          description: Timestamp of the VM Instance Group Interface creation.
          type: string
        links:
          description: Links to other resources
          type: object
      required:
      - config
      - createdTimestamp
      - groupId
      - id
      - index
      - infrastructureId
      - label
      - links
      - meta
      - revision
      - serviceStatus
      - updatedTimestamp
      type: object
    CreateVMInstanceGroupInterface:
      example:
        networkId: 0.8008281904610115
      properties:
        networkId:
          description: Network ID for the interface. Can be null if the interface
            is not connected to any network
          type: number
      type: object
    VMPool:
      example:
        totalRamGB: 1.4658129805029452
        datacenterName: datacenterName
        usedRamGB: 5.962133916683182
        inMaintenance: 1
        managementHost: managementHost
        usedSpaceGB: 7.061401241503109
        freeSpaceGB: 9.301444243932576
        freeRamGB: 5.637376656633329
        createdTimestamp: createdTimestamp
        certificate: certificate
        description: description
        type: incus
        updatedTimestamp: updatedTimestamp
        tags:
        - tags
        - tags
        isExperimental: 1
        managementPort: 6.027456183070403
        privateKeyEncrypted: privateKeyEncrypted
        name: name
        siteId: 0.8008281904610115
        externalIdentifier: externalIdentifier
        links: "{}"
        id: 1
        totalSpaceGB: 2.3021358869347655
        status: active
      properties:
        id:
          description: VM Pool ID
          example: 1
          type: number
        siteId:
          description: Id of the site for the VM
          type: number
        datacenterName:
          description: Datacenter of the VM
          type: string
        managementHost:
          description: Host of the VM Pool
          type: string
        managementPort:
          description: Port of the VM Pool
          type: number
        name:
          description: Name of the VM Pool
          type: string
        description:
          description: Description of the VM Pool
          type: string
        type:
          description: Type of the VM Pool
          enum:
          - incus
          type: string
        certificate:
          description: Certificate of the VM Pool
          type: string
        privateKeyEncrypted:
          description: Private key of the VM Pool
          type: string
        status:
          description: Status of the VM Pool
          enum:
          - active
          - deleted
          - registering
          type: string
        externalIdentifier:
          description: External identifier of the VM Pool
          type: string
        totalRamGB:
          description: Number of total RAM GB in the VM Pool
          type: number
        usedRamGB:
          description: Number of used RAM GB in the VM Pool
          type: number
        freeRamGB:
          description: Number of free RAM GB in the VM Pool
          type: number
        totalSpaceGB:
          description: Number of total disk space GB in the VM Pool
          type: number
        usedSpaceGB:
          description: Number of used disk space GB in the VM Pool
          type: number
        freeSpaceGB:
          description: Number of free disk space GB in the VM Pool
          type: number
        inMaintenance:
          description: "Flag to indicate if the VM Pool is in maintenance mode. 1\
            \ for true, 0 for false. Default is 0."
          example: 1
          type: number
        isExperimental:
          description: "Flag to indicate if the VM Pool is experimental. 1 for true,\
            \ 0 for false. Default is 0."
          example: 1
          type: number
        createdTimestamp:
          description: Timestamp when the VM Pool was created
          type: string
        updatedTimestamp:
          description: Timestamp when the VM Pool was updated
          type: string
        tags:
          description: Tags for the VM Pool.
          items:
            type: string
          type: array
        links:
          description: Links to other resources
          type: object
      required:
      - certificate
      - createdTimestamp
      - datacenterName
      - freeRamGB
      - freeSpaceGB
      - id
      - links
      - managementHost
      - managementPort
      - name
      - privateKeyEncrypted
      - siteId
      - status
      - totalRamGB
      - totalSpaceGB
      - type
      - updatedTimestamp
      - usedRamGB
      - usedSpaceGB
      type: object
    VMPoolPaginatedList:
      example:
        data:
        - totalRamGB: 1.4658129805029452
          datacenterName: datacenterName
          usedRamGB: 5.962133916683182
          inMaintenance: 1
          managementHost: managementHost
          usedSpaceGB: 7.061401241503109
          freeSpaceGB: 9.301444243932576
          freeRamGB: 5.637376656633329
          createdTimestamp: createdTimestamp
          certificate: certificate
          description: description
          type: incus
          updatedTimestamp: updatedTimestamp
          tags:
          - tags
          - tags
          isExperimental: 1
          managementPort: 6.027456183070403
          privateKeyEncrypted: privateKeyEncrypted
          name: name
          siteId: 0.8008281904610115
          externalIdentifier: externalIdentifier
          links: "{}"
          id: 1
          totalSpaceGB: 2.3021358869347655
          status: active
        - totalRamGB: 1.4658129805029452
          datacenterName: datacenterName
          usedRamGB: 5.962133916683182
          inMaintenance: 1
          managementHost: managementHost
          usedSpaceGB: 7.061401241503109
          freeSpaceGB: 9.301444243932576
          freeRamGB: 5.637376656633329
          createdTimestamp: createdTimestamp
          certificate: certificate
          description: description
          type: incus
          updatedTimestamp: updatedTimestamp
          tags:
          - tags
          - tags
          isExperimental: 1
          managementPort: 6.027456183070403
          privateKeyEncrypted: privateKeyEncrypted
          name: name
          siteId: 0.8008281904610115
          externalIdentifier: externalIdentifier
          links: "{}"
          id: 1
          totalSpaceGB: 2.3021358869347655
          status: active
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/VMPool'
          title: List of vm pool's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateVMPool:
      example:
        privateKey: privateKey
        isExperimental: 1
        managementPort: 6.027456183070403
        inMaintenance: 1
        managementHost: managementHost
        name: name
        certificate: certificate
        siteId: 0.8008281904610115
        description: description
        type: incus
        tags:
        - tags
        - tags
      properties:
        siteId:
          description: Id of the site for the VM
          type: number
        managementHost:
          description: Host of the VM Pool
          type: string
        managementPort:
          description: Port of the VM Pool
          type: number
        name:
          description: Name of the VM Pool
          type: string
        description:
          description: Description of the VM Pool
          type: string
        type:
          description: Type of the VM Pool
          enum:
          - incus
          type: string
        certificate:
          description: Certificate of the VM Pool
          type: string
        inMaintenance:
          description: "Flag to indicate if the VM Pool is in maintenance mode. 1\
            \ for true, 0 for false. Default is 0."
          example: 1
          type: number
        isExperimental:
          description: "Flag to indicate if the VM Pool is experimental. 1 for true,\
            \ 0 for false. Default is 0."
          example: 1
          type: number
        tags:
          description: Tags for the VM Pool.
          items:
            type: string
          type: array
        privateKey:
          description: Private key of the VM Pool
          type: string
      required:
      - certificate
      - managementHost
      - managementPort
      - name
      - privateKey
      - siteId
      - type
      type: object
    UpdateVMPool:
      example:
        privateKey: privateKey
        isExperimental: 1
        managementPort: 0.8008281904610115
        inMaintenance: 1
        managementHost: managementHost
        certificate: certificate
        description: description
        tags:
        - tags
        - tags
      properties:
        description:
          description: Description of the VM Pool
          type: string
        inMaintenance:
          description: "Flag to indicate if the VM Pool is in maintenance mode. 1\
            \ for true, 0 for false. Default is 0."
          example: 1
          type: number
        isExperimental:
          description: "Flag to indicate if the VM Pool is experimental. 1 for true,\
            \ 0 for false. Default is 0."
          example: 1
          type: number
        tags:
          description: Tags for the VM Pool.
          items:
            type: string
          type: array
        managementHost:
          description: Host of the VM Pool
          type: string
        managementPort:
          description: Port of the VM Pool
          type: number
        certificate:
          description: Certificate of the VM Pool
          type: string
        privateKey:
          description: Private key of the VM Pool
          type: string
      type: object
    VMPaginatedList:
      example:
        data:
        - allocationTimestamp: allocationTimestamp
          datacenterName: datacenterName
          disks:
          - sizeGB: 100
            vmId: 1
            datastore: local
            id: 1
          - sizeGB: 100
            vmId: 1
            datastore: local
            id: 1
          ramGB: 2
          powerStateLastUpdatedTimestamp: powerStateLastUpdatedTimestamp
          instanceId: 5.962133916683182
          powerState: "on"
          host: host
          userEmail: userEmail
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          diskSizeGB: 2
          vncPort: 5900
          comments: 5.637376656633329
          hosts:
          - hosts
          - hosts
          createdTimestamp: createdTimestamp
          userId: 1.4658129805029452
          tags:
          - tags
          - tags
          vmInstanceId: 1
          vncPassword: vncPassword
          infrastructureId: 6.027456183070403
          cpuCores: 2
          administrationState: managed
          name: name
          poolId: 1
          siteId: 0.8008281904610115
          typeId: 1
        - allocationTimestamp: allocationTimestamp
          datacenterName: datacenterName
          disks:
          - sizeGB: 100
            vmId: 1
            datastore: local
            id: 1
          - sizeGB: 100
            vmId: 1
            datastore: local
            id: 1
          ramGB: 2
          powerStateLastUpdatedTimestamp: powerStateLastUpdatedTimestamp
          instanceId: 5.962133916683182
          powerState: "on"
          host: host
          userEmail: userEmail
          links:
          - rel: self
            href: /api/v2/path/to/resource
          - rel: self
            href: /api/v2/path/to/resource
          id: 1
          diskSizeGB: 2
          vncPort: 5900
          comments: 5.637376656633329
          hosts:
          - hosts
          - hosts
          createdTimestamp: createdTimestamp
          userId: 1.4658129805029452
          tags:
          - tags
          - tags
          vmInstanceId: 1
          vncPassword: vncPassword
          infrastructureId: 6.027456183070403
          cpuCores: 2
          administrationState: managed
          name: name
          poolId: 1
          siteId: 0.8008281904610115
          typeId: 1
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/VM'
          title: List of vm's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    VMPoolHosts:
      example:
        totalRamGB: 6.027456183070403
        address: address
        usedRamGB: 5.962133916683182
        failureDomain: failureDomain
        usedSpaceGB: 2.3021358869347655
        freeSpaceGB: 7.061401241503109
        roles:
        - roles
        - roles
        freeRamGB: 1.4658129805029452
        description: description
        updatedTimestamp: updatedTimestamp
        database: 0.8008281904610115
        port: 1
        name: name
        poolId: 1
        links: "{}"
        id: 1
        totalSpaceGB: 5.637376656633329
        architecture: architecture
        status: status
      properties:
        id:
          description: VM Pool Host ID
          example: 1
          type: number
        name:
          description: Name of the VM Pool Host
          type: string
        address:
          description: Address of the VM Pool Host
          type: string
        port:
          description: Port of the VM Pool Host
          example: 1
          type: number
        poolId:
          description: VM Pool ID
          example: 1
          type: number
        roles:
          description: Roles of the VM Pool Host
          items:
            type: string
          type: array
        failureDomain:
          description: Failure domain of the VM Pool Host
          type: string
        architecture:
          description: Architecture of the VM Pool Host
          type: string
        database:
          description: Flag specifying if the VM Pool Host is database
          type: number
        status:
          description: Status of the VM Pool Host
          type: string
        description:
          description: Description of the VM Pool Host
          type: string
        totalRamGB:
          description: Total RAM GB of the VM Pool Host
          type: number
        freeRamGB:
          description: Free RAM GB of the VM Pool Host
          type: number
        usedRamGB:
          description: Used RAM GB of the VM Pool Host
          type: number
        totalSpaceGB:
          description: Total Space GB of the VM Pool Host
          type: number
        usedSpaceGB:
          description: Used Space GB of the VM Pool Host
          type: number
        freeSpaceGB:
          description: Free Space GB of the VM Pool Host
          type: number
        updatedTimestamp:
          description: Timestamp when the VM Pool Host was updated
          type: string
        links:
          description: Links to other resources
          type: object
      required:
      - address
      - architecture
      - database
      - failureDomain
      - freeRamGB
      - freeSpaceGB
      - id
      - links
      - name
      - poolId
      - port
      - roles
      - status
      - totalRamGB
      - totalSpaceGB
      - updatedTimestamp
      - usedRamGB
      - usedSpaceGB
      type: object
    VMPoolHostsPaginatedList:
      example:
        data:
        - totalRamGB: 6.027456183070403
          address: address
          usedRamGB: 5.962133916683182
          failureDomain: failureDomain
          usedSpaceGB: 2.3021358869347655
          freeSpaceGB: 7.061401241503109
          roles:
          - roles
          - roles
          freeRamGB: 1.4658129805029452
          description: description
          updatedTimestamp: updatedTimestamp
          database: 0.8008281904610115
          port: 1
          name: name
          poolId: 1
          links: "{}"
          id: 1
          totalSpaceGB: 5.637376656633329
          architecture: architecture
          status: status
        - totalRamGB: 6.027456183070403
          address: address
          usedRamGB: 5.962133916683182
          failureDomain: failureDomain
          usedSpaceGB: 2.3021358869347655
          freeSpaceGB: 7.061401241503109
          roles:
          - roles
          - roles
          freeRamGB: 1.4658129805029452
          description: description
          updatedTimestamp: updatedTimestamp
          database: 0.8008281904610115
          port: 1
          name: name
          poolId: 1
          links: "{}"
          id: 1
          totalSpaceGB: 5.637376656633329
          architecture: architecture
          status: status
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/VMPoolHosts'
          title: List of vm pool hosts
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    VMPoolHostInterfaces:
      example:
        macAddress: macAddress
        fabric: lan
        name: name
        hostId: 1
        links: "{}"
        id: 1
      properties:
        id:
          description: VM Pool Host Interface ID
          example: 1
          type: number
        hostId:
          description: VM Pool Host ID
          example: 1
          type: number
        name:
          description: Name of the VM Pool Host Interface
          type: string
        macAddress:
          description: MAC Address of the VM Pool Host Interface
          type: string
        fabric:
          description: Fabric of the VM Pool Host Interface
          enum:
          - lan
          - wan
          - san
          type: string
        links:
          description: Links to other resources
          type: object
      required:
      - fabric
      - hostId
      - id
      - links
      - macAddress
      - name
      type: object
    UpdateVMPoolHostInterface:
      example:
        switchInterfaceName: 6.027456183070403
        switchId: 0.8008281904610115
        fabric: fabric
      properties:
        fabric:
          description: Fabric of the switch interface
          type: string
        switchId:
          description: Id of the switch
          type: number
        switchInterfaceName:
          description: Name of the switch interface
          type: number
      type: object
    VMType:
      example:
        forUnmanagedVMsOnly: 0
        isExperimental: 1
        cpuCores: 2
        displayName: displayName
        name: name
        links: "{}"
        id: 1
        label: label
        ramGB: 2
        tags:
        - tags
        - tags
      properties:
        id:
          description: VM Type ID
          example: 1
          type: number
        name:
          description: Name of the VM Pool type
          type: string
        displayName:
          description: Display name of the VM Pool type
          type: string
        label:
          description: Label of the VM Pool type
          type: string
        cpuCores:
          description: Number of CPU cores for the VM Pool type
          example: 2
          type: number
        ramGB:
          description: RAM in GB for the VM Pool type
          example: 2
          type: number
        isExperimental:
          description: "Flag to indicate if the VM Pool is experimental. 1 for true,\
            \ 0 for false. Default is 0."
          example: 1
          type: number
        tags:
          description: Tags for the VM Type.
          items:
            type: string
          type: array
        forUnmanagedVMsOnly:
          description: "Flag to indicate if the VM Pool is for unmanaged VMs only.\
            \ 1 for true, 0 for false. Default is 0."
          example: 0
          type: number
        links:
          description: Links to other resources
          type: object
      required:
      - cpuCores
      - id
      - links
      - name
      - ramGB
      type: object
    VMTypePaginatedList:
      example:
        data:
        - forUnmanagedVMsOnly: 0
          isExperimental: 1
          cpuCores: 2
          displayName: displayName
          name: name
          links: "{}"
          id: 1
          label: label
          ramGB: 2
          tags:
          - tags
          - tags
        - forUnmanagedVMsOnly: 0
          isExperimental: 1
          cpuCores: 2
          displayName: displayName
          name: name
          links: "{}"
          id: 1
          label: label
          ramGB: 2
          tags:
          - tags
          - tags
        meta: ""
        links: ""
      properties:
        data:
          items:
            $ref: '#/components/schemas/VMType'
          title: List of vm type's
          type: array
        meta:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseMeta'
          description: Metadata about the pagination of the response
          title: Pagination metadata
        links:
          allOf:
          - $ref: '#/components/schemas/PaginatedResponseLinks'
          description: Links to navigate through the paginated results
          title: Pagination links
      required:
      - data
      - links
      - meta
      type: object
    CreateVMType:
      example:
        forUnmanagedVMsOnly: 0
        isExperimental: 1
        cpuCores: 2
        displayName: displayName
        name: name
        label: label
        ramGB: 2
        tags:
        - tags
        - tags
      properties:
        name:
          description: Name of the VM Pool type
          type: string
        displayName:
          description: Display name of the VM Pool type
          type: string
        label:
          description: Label of the VM Pool type
          type: string
        cpuCores:
          description: Number of CPU cores for the VM Pool type
          example: 2
          type: number
        ramGB:
          description: RAM in GB for the VM Pool type
          example: 2
          type: number
        isExperimental:
          description: "Flag to indicate if the VM Pool is experimental. 1 for true,\
            \ 0 for false. Default is 0."
          example: 1
          type: number
        tags:
          description: Tags for the VM Type.
          items:
            type: string
          type: array
        forUnmanagedVMsOnly:
          description: "Flag to indicate if the VM Pool is for unmanaged VMs only.\
            \ 1 for true, 0 for false. Default is 0."
          example: 0
          type: number
      required:
      - cpuCores
      - name
      - ramGB
      type: object
    UpdateVMType:
      example:
        forUnmanagedVMsOnly: 0
        isExperimental: 1
        displayName: displayName
        label: label
        tags:
        - tags
        - tags
      properties:
        displayName:
          description: Display name of the VM Pool type
          type: string
        label:
          description: Label of the VM Pool type
          type: string
        isExperimental:
          description: "Flag to indicate if the VM Pool is experimental. 1 for true,\
            \ 0 for false. Default is 0."
          example: 1
          type: number
        tags:
          description: Tags for the VM Type.
          items:
            type: string
          type: array
        forUnmanagedVMsOnly:
          description: "Flag to indicate if the VM Pool is for unmanaged VMs only.\
            \ 1 for true, 0 for false. Default is 0."
          example: 0
          type: number
      type: object
    NetworkDeviceController_updateTagsForNetworkDevice_request:
      properties:
        tags:
          items:
            type: string
          type: array
      type: object
    AuthenticationRequest_properties:
      description: Input options.
      oneOf:
      - $ref: '#/components/schemas/AuthenticationRequestPropertiesMySql'
      - $ref: '#/components/schemas/AuthenticationRequestPropertiesSaml'
      - $ref: '#/components/schemas/AuthenticationRequestPropertiesLdap'
    ExtensionInput_options:
      description: Input options.
      oneOf:
      - $ref: '#/components/schemas/ExtensionInputString'
      - $ref: '#/components/schemas/ExtensionInputInteger'
      - $ref: '#/components/schemas/ExtensionInputBoolean'
      - $ref: '#/components/schemas/ExtensionInputServerType'
      - $ref: '#/components/schemas/ExtensionInputOsTemplate'
    ExtensionTask_options:
      description: Task options.
      oneOf:
      - $ref: '#/components/schemas/ExtensionTaskAnsible'
      - $ref: '#/components/schemas/ExtensionTaskWebhook'
    ServerInstanceConfiguration_networkProfiles_inner:
      example:
        networkId: 1
        networkProfileId: 1
      properties:
        networkId:
          example: 1
          type: integer
        networkProfileId:
          example: 1
          type: integer
      type: object
    NetworkFabric_fabricConfiguration:
      description: Network fabric configuration with type-specific properties based
        on the fabricType discriminator
      discriminator:
        mapping:
          ethernet: '#/components/schemas/EthernetFabric'
          fibre_channel: '#/components/schemas/FibreChannelFabric'
        propertyName: fabricType
      oneOf:
      - $ref: '#/components/schemas/EthernetFabric'
      - $ref: '#/components/schemas/FibreChannelFabric'
    ServerInstanceProfile_networkInterfaces_config:
      oneOf:
      - $ref: '#/components/schemas/ServerInstanceInterfaceConfiguration'
    ServerInstanceProfile_networkInterfaces:
      description: Instance interface configuration
      example:
        index: 0
        config:
          serverInterfaceId: 5
          emptyEdit: 5
          index: 1
          label: if3
          updatedTimestamp: updatedTimestamp
          deployType: create
          revision: 1
          instanceId: 6
          dnsSubdomainChangeId: 2
          subdomain: subdomain
          infrastructureDeployId: 7
          networkId: 10
          capacityMbps: 1
          deployStatus: not_started
      properties:
        index:
          type: integer
        config:
          $ref: '#/components/schemas/ServerInstanceProfile_networkInterfaces_config'
      type: object
  securitySchemes:
    apiKey:
      bearerFormat: ApiKey
      description: API Key Authorization
      scheme: bearer
      type: http
    JWT:
      bearerFormat: JWT
      description: JWT Authorization
      scheme: bearer
      type: http
