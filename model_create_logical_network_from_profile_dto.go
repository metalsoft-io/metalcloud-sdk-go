/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateLogicalNetworkFromProfileDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateLogicalNetworkFromProfileDto{}

// CreateLogicalNetworkFromProfileDto struct for CreateLogicalNetworkFromProfileDto
type CreateLogicalNetworkFromProfileDto struct {
	Label *string `json:"label,omitempty"`
	Name *string `json:"name,omitempty"`
	Annotations *map[string]string `json:"annotations,omitempty"`
	LogicalNetworkProfileId int32 `json:"logicalNetworkProfileId"`
	InfrastructureId NullableInt32 `json:"infrastructureId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateLogicalNetworkFromProfileDto CreateLogicalNetworkFromProfileDto

// NewCreateLogicalNetworkFromProfileDto instantiates a new CreateLogicalNetworkFromProfileDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateLogicalNetworkFromProfileDto(logicalNetworkProfileId int32) *CreateLogicalNetworkFromProfileDto {
	this := CreateLogicalNetworkFromProfileDto{}
	this.LogicalNetworkProfileId = logicalNetworkProfileId
	return &this
}

// NewCreateLogicalNetworkFromProfileDtoWithDefaults instantiates a new CreateLogicalNetworkFromProfileDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateLogicalNetworkFromProfileDtoWithDefaults() *CreateLogicalNetworkFromProfileDto {
	this := CreateLogicalNetworkFromProfileDto{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CreateLogicalNetworkFromProfileDto) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLogicalNetworkFromProfileDto) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CreateLogicalNetworkFromProfileDto) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *CreateLogicalNetworkFromProfileDto) SetLabel(v string) {
	o.Label = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateLogicalNetworkFromProfileDto) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLogicalNetworkFromProfileDto) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateLogicalNetworkFromProfileDto) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateLogicalNetworkFromProfileDto) SetName(v string) {
	o.Name = &v
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *CreateLogicalNetworkFromProfileDto) GetAnnotations() map[string]string {
	if o == nil || IsNil(o.Annotations) {
		var ret map[string]string
		return ret
	}
	return *o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateLogicalNetworkFromProfileDto) GetAnnotationsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Annotations) {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *CreateLogicalNetworkFromProfileDto) HasAnnotations() bool {
	if o != nil && !IsNil(o.Annotations) {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given map[string]string and assigns it to the Annotations field.
func (o *CreateLogicalNetworkFromProfileDto) SetAnnotations(v map[string]string) {
	o.Annotations = &v
}

// GetLogicalNetworkProfileId returns the LogicalNetworkProfileId field value
func (o *CreateLogicalNetworkFromProfileDto) GetLogicalNetworkProfileId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.LogicalNetworkProfileId
}

// GetLogicalNetworkProfileIdOk returns a tuple with the LogicalNetworkProfileId field value
// and a boolean to check if the value has been set.
func (o *CreateLogicalNetworkFromProfileDto) GetLogicalNetworkProfileIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LogicalNetworkProfileId, true
}

// SetLogicalNetworkProfileId sets field value
func (o *CreateLogicalNetworkFromProfileDto) SetLogicalNetworkProfileId(v int32) {
	o.LogicalNetworkProfileId = v
}

// GetInfrastructureId returns the InfrastructureId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateLogicalNetworkFromProfileDto) GetInfrastructureId() int32 {
	if o == nil || IsNil(o.InfrastructureId.Get()) {
		var ret int32
		return ret
	}
	return *o.InfrastructureId.Get()
}

// GetInfrastructureIdOk returns a tuple with the InfrastructureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateLogicalNetworkFromProfileDto) GetInfrastructureIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.InfrastructureId.Get(), o.InfrastructureId.IsSet()
}

// HasInfrastructureId returns a boolean if a field has been set.
func (o *CreateLogicalNetworkFromProfileDto) HasInfrastructureId() bool {
	if o != nil && o.InfrastructureId.IsSet() {
		return true
	}

	return false
}

// SetInfrastructureId gets a reference to the given NullableInt32 and assigns it to the InfrastructureId field.
func (o *CreateLogicalNetworkFromProfileDto) SetInfrastructureId(v int32) {
	o.InfrastructureId.Set(&v)
}
// SetInfrastructureIdNil sets the value for InfrastructureId to be an explicit nil
func (o *CreateLogicalNetworkFromProfileDto) SetInfrastructureIdNil() {
	o.InfrastructureId.Set(nil)
}

// UnsetInfrastructureId ensures that no value is present for InfrastructureId, not even an explicit nil
func (o *CreateLogicalNetworkFromProfileDto) UnsetInfrastructureId() {
	o.InfrastructureId.Unset()
}

func (o CreateLogicalNetworkFromProfileDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateLogicalNetworkFromProfileDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Annotations) {
		toSerialize["annotations"] = o.Annotations
	}
	toSerialize["logicalNetworkProfileId"] = o.LogicalNetworkProfileId
	if o.InfrastructureId.IsSet() {
		toSerialize["infrastructureId"] = o.InfrastructureId.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateLogicalNetworkFromProfileDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"logicalNetworkProfileId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateLogicalNetworkFromProfileDto := _CreateLogicalNetworkFromProfileDto{}

	err = json.Unmarshal(data, &varCreateLogicalNetworkFromProfileDto)

	if err != nil {
		return err
	}

	*o = CreateLogicalNetworkFromProfileDto(varCreateLogicalNetworkFromProfileDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "label")
		delete(additionalProperties, "name")
		delete(additionalProperties, "annotations")
		delete(additionalProperties, "logicalNetworkProfileId")
		delete(additionalProperties, "infrastructureId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateLogicalNetworkFromProfileDto struct {
	value *CreateLogicalNetworkFromProfileDto
	isSet bool
}

func (v NullableCreateLogicalNetworkFromProfileDto) Get() *CreateLogicalNetworkFromProfileDto {
	return v.value
}

func (v *NullableCreateLogicalNetworkFromProfileDto) Set(val *CreateLogicalNetworkFromProfileDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateLogicalNetworkFromProfileDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateLogicalNetworkFromProfileDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateLogicalNetworkFromProfileDto(val *CreateLogicalNetworkFromProfileDto) *NullableCreateLogicalNetworkFromProfileDto {
	return &NullableCreateLogicalNetworkFromProfileDto{value: val, isSet: true}
}

func (v NullableCreateLogicalNetworkFromProfileDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateLogicalNetworkFromProfileDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


