/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ExtensionInputOptionServerType type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensionInputOptionServerType{}

// ExtensionInputOptionServerType struct for ExtensionInputOptionServerType
type ExtensionInputOptionServerType struct {
	// Minimum CPU cores.
	MinCpu *int32 `json:"minCpu,omitempty"`
	// Minimum RAM GBs.
	MinRamGb *int32 `json:"minRamGb,omitempty"`
	// Server vendor.
	Vendor *string `json:"vendor,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExtensionInputOptionServerType ExtensionInputOptionServerType

// NewExtensionInputOptionServerType instantiates a new ExtensionInputOptionServerType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensionInputOptionServerType() *ExtensionInputOptionServerType {
	this := ExtensionInputOptionServerType{}
	return &this
}

// NewExtensionInputOptionServerTypeWithDefaults instantiates a new ExtensionInputOptionServerType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionInputOptionServerTypeWithDefaults() *ExtensionInputOptionServerType {
	this := ExtensionInputOptionServerType{}
	return &this
}

// GetMinCpu returns the MinCpu field value if set, zero value otherwise.
func (o *ExtensionInputOptionServerType) GetMinCpu() int32 {
	if o == nil || IsNil(o.MinCpu) {
		var ret int32
		return ret
	}
	return *o.MinCpu
}

// GetMinCpuOk returns a tuple with the MinCpu field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionInputOptionServerType) GetMinCpuOk() (*int32, bool) {
	if o == nil || IsNil(o.MinCpu) {
		return nil, false
	}
	return o.MinCpu, true
}

// HasMinCpu returns a boolean if a field has been set.
func (o *ExtensionInputOptionServerType) HasMinCpu() bool {
	if o != nil && !IsNil(o.MinCpu) {
		return true
	}

	return false
}

// SetMinCpu gets a reference to the given int32 and assigns it to the MinCpu field.
func (o *ExtensionInputOptionServerType) SetMinCpu(v int32) {
	o.MinCpu = &v
}

// GetMinRamGb returns the MinRamGb field value if set, zero value otherwise.
func (o *ExtensionInputOptionServerType) GetMinRamGb() int32 {
	if o == nil || IsNil(o.MinRamGb) {
		var ret int32
		return ret
	}
	return *o.MinRamGb
}

// GetMinRamGbOk returns a tuple with the MinRamGb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionInputOptionServerType) GetMinRamGbOk() (*int32, bool) {
	if o == nil || IsNil(o.MinRamGb) {
		return nil, false
	}
	return o.MinRamGb, true
}

// HasMinRamGb returns a boolean if a field has been set.
func (o *ExtensionInputOptionServerType) HasMinRamGb() bool {
	if o != nil && !IsNil(o.MinRamGb) {
		return true
	}

	return false
}

// SetMinRamGb gets a reference to the given int32 and assigns it to the MinRamGb field.
func (o *ExtensionInputOptionServerType) SetMinRamGb(v int32) {
	o.MinRamGb = &v
}

// GetVendor returns the Vendor field value if set, zero value otherwise.
func (o *ExtensionInputOptionServerType) GetVendor() string {
	if o == nil || IsNil(o.Vendor) {
		var ret string
		return ret
	}
	return *o.Vendor
}

// GetVendorOk returns a tuple with the Vendor field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionInputOptionServerType) GetVendorOk() (*string, bool) {
	if o == nil || IsNil(o.Vendor) {
		return nil, false
	}
	return o.Vendor, true
}

// HasVendor returns a boolean if a field has been set.
func (o *ExtensionInputOptionServerType) HasVendor() bool {
	if o != nil && !IsNil(o.Vendor) {
		return true
	}

	return false
}

// SetVendor gets a reference to the given string and assigns it to the Vendor field.
func (o *ExtensionInputOptionServerType) SetVendor(v string) {
	o.Vendor = &v
}

func (o ExtensionInputOptionServerType) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensionInputOptionServerType) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MinCpu) {
		toSerialize["minCpu"] = o.MinCpu
	}
	if !IsNil(o.MinRamGb) {
		toSerialize["minRamGb"] = o.MinRamGb
	}
	if !IsNil(o.Vendor) {
		toSerialize["vendor"] = o.Vendor
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExtensionInputOptionServerType) UnmarshalJSON(data []byte) (err error) {
	varExtensionInputOptionServerType := _ExtensionInputOptionServerType{}

	err = json.Unmarshal(data, &varExtensionInputOptionServerType)

	if err != nil {
		return err
	}

	*o = ExtensionInputOptionServerType(varExtensionInputOptionServerType)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "minCpu")
		delete(additionalProperties, "minRamGb")
		delete(additionalProperties, "vendor")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExtensionInputOptionServerType struct {
	value *ExtensionInputOptionServerType
	isSet bool
}

func (v NullableExtensionInputOptionServerType) Get() *ExtensionInputOptionServerType {
	return v.value
}

func (v *NullableExtensionInputOptionServerType) Set(val *ExtensionInputOptionServerType) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensionInputOptionServerType) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensionInputOptionServerType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensionInputOptionServerType(val *ExtensionInputOptionServerType) *NullableExtensionInputOptionServerType {
	return &NullableExtensionInputOptionServerType{value: val, isSet: true}
}

func (v NullableExtensionInputOptionServerType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensionInputOptionServerType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


