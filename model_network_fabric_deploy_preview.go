/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the NetworkFabricDeployPreview type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkFabricDeployPreview{}

// NetworkFabricDeployPreview struct for NetworkFabricDeployPreview
type NetworkFabricDeployPreview struct {
	// Unique identifier for the network device.
	NetworkDeviceId float32 `json:"networkDeviceId"`
	// Unique identifier for the network fabric link
	NetworkFabricLinkId float32 `json:"networkFabricLinkId"`
	// Unique identifier for the BGP template
	BgpTemplateId float32 `json:"bgpTemplateId"`
	// Preview of the BGP preparation for the network device encoded in base64 format
	PreparationPreview *string `json:"preparationPreview,omitempty"`
	// Preview of the BGP configuration for the network device encoded in base64 format
	ConfigurationPreview *string `json:"configurationPreview,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NetworkFabricDeployPreview NetworkFabricDeployPreview

// NewNetworkFabricDeployPreview instantiates a new NetworkFabricDeployPreview object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkFabricDeployPreview(networkDeviceId float32, networkFabricLinkId float32, bgpTemplateId float32) *NetworkFabricDeployPreview {
	this := NetworkFabricDeployPreview{}
	this.NetworkDeviceId = networkDeviceId
	this.NetworkFabricLinkId = networkFabricLinkId
	this.BgpTemplateId = bgpTemplateId
	return &this
}

// NewNetworkFabricDeployPreviewWithDefaults instantiates a new NetworkFabricDeployPreview object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkFabricDeployPreviewWithDefaults() *NetworkFabricDeployPreview {
	this := NetworkFabricDeployPreview{}
	return &this
}

// GetNetworkDeviceId returns the NetworkDeviceId field value
func (o *NetworkFabricDeployPreview) GetNetworkDeviceId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NetworkDeviceId
}

// GetNetworkDeviceIdOk returns a tuple with the NetworkDeviceId field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricDeployPreview) GetNetworkDeviceIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceId, true
}

// SetNetworkDeviceId sets field value
func (o *NetworkFabricDeployPreview) SetNetworkDeviceId(v float32) {
	o.NetworkDeviceId = v
}

// GetNetworkFabricLinkId returns the NetworkFabricLinkId field value
func (o *NetworkFabricDeployPreview) GetNetworkFabricLinkId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NetworkFabricLinkId
}

// GetNetworkFabricLinkIdOk returns a tuple with the NetworkFabricLinkId field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricDeployPreview) GetNetworkFabricLinkIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkFabricLinkId, true
}

// SetNetworkFabricLinkId sets field value
func (o *NetworkFabricDeployPreview) SetNetworkFabricLinkId(v float32) {
	o.NetworkFabricLinkId = v
}

// GetBgpTemplateId returns the BgpTemplateId field value
func (o *NetworkFabricDeployPreview) GetBgpTemplateId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.BgpTemplateId
}

// GetBgpTemplateIdOk returns a tuple with the BgpTemplateId field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricDeployPreview) GetBgpTemplateIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BgpTemplateId, true
}

// SetBgpTemplateId sets field value
func (o *NetworkFabricDeployPreview) SetBgpTemplateId(v float32) {
	o.BgpTemplateId = v
}

// GetPreparationPreview returns the PreparationPreview field value if set, zero value otherwise.
func (o *NetworkFabricDeployPreview) GetPreparationPreview() string {
	if o == nil || IsNil(o.PreparationPreview) {
		var ret string
		return ret
	}
	return *o.PreparationPreview
}

// GetPreparationPreviewOk returns a tuple with the PreparationPreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkFabricDeployPreview) GetPreparationPreviewOk() (*string, bool) {
	if o == nil || IsNil(o.PreparationPreview) {
		return nil, false
	}
	return o.PreparationPreview, true
}

// HasPreparationPreview returns a boolean if a field has been set.
func (o *NetworkFabricDeployPreview) HasPreparationPreview() bool {
	if o != nil && !IsNil(o.PreparationPreview) {
		return true
	}

	return false
}

// SetPreparationPreview gets a reference to the given string and assigns it to the PreparationPreview field.
func (o *NetworkFabricDeployPreview) SetPreparationPreview(v string) {
	o.PreparationPreview = &v
}

// GetConfigurationPreview returns the ConfigurationPreview field value if set, zero value otherwise.
func (o *NetworkFabricDeployPreview) GetConfigurationPreview() string {
	if o == nil || IsNil(o.ConfigurationPreview) {
		var ret string
		return ret
	}
	return *o.ConfigurationPreview
}

// GetConfigurationPreviewOk returns a tuple with the ConfigurationPreview field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkFabricDeployPreview) GetConfigurationPreviewOk() (*string, bool) {
	if o == nil || IsNil(o.ConfigurationPreview) {
		return nil, false
	}
	return o.ConfigurationPreview, true
}

// HasConfigurationPreview returns a boolean if a field has been set.
func (o *NetworkFabricDeployPreview) HasConfigurationPreview() bool {
	if o != nil && !IsNil(o.ConfigurationPreview) {
		return true
	}

	return false
}

// SetConfigurationPreview gets a reference to the given string and assigns it to the ConfigurationPreview field.
func (o *NetworkFabricDeployPreview) SetConfigurationPreview(v string) {
	o.ConfigurationPreview = &v
}

func (o NetworkFabricDeployPreview) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkFabricDeployPreview) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["networkDeviceId"] = o.NetworkDeviceId
	toSerialize["networkFabricLinkId"] = o.NetworkFabricLinkId
	toSerialize["bgpTemplateId"] = o.BgpTemplateId
	if !IsNil(o.PreparationPreview) {
		toSerialize["preparationPreview"] = o.PreparationPreview
	}
	if !IsNil(o.ConfigurationPreview) {
		toSerialize["configurationPreview"] = o.ConfigurationPreview
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NetworkFabricDeployPreview) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"networkDeviceId",
		"networkFabricLinkId",
		"bgpTemplateId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkFabricDeployPreview := _NetworkFabricDeployPreview{}

	err = json.Unmarshal(data, &varNetworkFabricDeployPreview)

	if err != nil {
		return err
	}

	*o = NetworkFabricDeployPreview(varNetworkFabricDeployPreview)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "networkDeviceId")
		delete(additionalProperties, "networkFabricLinkId")
		delete(additionalProperties, "bgpTemplateId")
		delete(additionalProperties, "preparationPreview")
		delete(additionalProperties, "configurationPreview")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNetworkFabricDeployPreview struct {
	value *NetworkFabricDeployPreview
	isSet bool
}

func (v NullableNetworkFabricDeployPreview) Get() *NetworkFabricDeployPreview {
	return v.value
}

func (v *NullableNetworkFabricDeployPreview) Set(val *NetworkFabricDeployPreview) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkFabricDeployPreview) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkFabricDeployPreview) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkFabricDeployPreview(val *NetworkFabricDeployPreview) *NullableNetworkFabricDeployPreview {
	return &NullableNetworkFabricDeployPreview{value: val, isSet: true}
}

func (v NullableNetworkFabricDeployPreview) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkFabricDeployPreview) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


