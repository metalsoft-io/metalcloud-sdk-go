/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the VlanLogicalNetworkConfig type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VlanLogicalNetworkConfig{}

// VlanLogicalNetworkConfig struct for VlanLogicalNetworkConfig
type VlanLogicalNetworkConfig struct {
	Id int32 `json:"id"`
	DeployType string `json:"deployType"`
	DeployStatus string `json:"deployStatus"`
	// Creation timestamp for the entity.
	CreatedAt time.Time `json:"createdAt"`
	// Last update timestamp for the entity.
	UpdatedAt time.Time `json:"updatedAt"`
	Revision int32 `json:"revision"`
	Kind LogicalNetworkKind `json:"kind"`
	// Maximum Transmission Unit (MTU) in bytes
	Mtu NullableInt32 `json:"mtu,omitempty"`
	Vlan VlanLogicalNetworkConfigVlanProperties `json:"vlan"`
	Ipv4 VlanLogicalNetworkConfigIpv4Properties `json:"ipv4"`
	Ipv6 VlanLogicalNetworkConfigIpv6Properties `json:"ipv6"`
	AdditionalProperties map[string]interface{}
}

type _VlanLogicalNetworkConfig VlanLogicalNetworkConfig

// NewVlanLogicalNetworkConfig instantiates a new VlanLogicalNetworkConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVlanLogicalNetworkConfig(id int32, deployType string, deployStatus string, createdAt time.Time, updatedAt time.Time, revision int32, kind LogicalNetworkKind, vlan VlanLogicalNetworkConfigVlanProperties, ipv4 VlanLogicalNetworkConfigIpv4Properties, ipv6 VlanLogicalNetworkConfigIpv6Properties) *VlanLogicalNetworkConfig {
	this := VlanLogicalNetworkConfig{}
	this.Id = id
	this.DeployType = deployType
	this.DeployStatus = deployStatus
	this.CreatedAt = createdAt
	this.UpdatedAt = updatedAt
	this.Revision = revision
	this.Kind = kind
	this.Vlan = vlan
	this.Ipv4 = ipv4
	this.Ipv6 = ipv6
	return &this
}

// NewVlanLogicalNetworkConfigWithDefaults instantiates a new VlanLogicalNetworkConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVlanLogicalNetworkConfigWithDefaults() *VlanLogicalNetworkConfig {
	this := VlanLogicalNetworkConfig{}
	return &this
}

// GetId returns the Id field value
func (o *VlanLogicalNetworkConfig) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VlanLogicalNetworkConfig) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VlanLogicalNetworkConfig) SetId(v int32) {
	o.Id = v
}

// GetDeployType returns the DeployType field value
func (o *VlanLogicalNetworkConfig) GetDeployType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeployType
}

// GetDeployTypeOk returns a tuple with the DeployType field value
// and a boolean to check if the value has been set.
func (o *VlanLogicalNetworkConfig) GetDeployTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployType, true
}

// SetDeployType sets field value
func (o *VlanLogicalNetworkConfig) SetDeployType(v string) {
	o.DeployType = v
}

// GetDeployStatus returns the DeployStatus field value
func (o *VlanLogicalNetworkConfig) GetDeployStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeployStatus
}

// GetDeployStatusOk returns a tuple with the DeployStatus field value
// and a boolean to check if the value has been set.
func (o *VlanLogicalNetworkConfig) GetDeployStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployStatus, true
}

// SetDeployStatus sets field value
func (o *VlanLogicalNetworkConfig) SetDeployStatus(v string) {
	o.DeployStatus = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *VlanLogicalNetworkConfig) GetCreatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *VlanLogicalNetworkConfig) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *VlanLogicalNetworkConfig) SetCreatedAt(v time.Time) {
	o.CreatedAt = v
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *VlanLogicalNetworkConfig) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *VlanLogicalNetworkConfig) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *VlanLogicalNetworkConfig) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

// GetRevision returns the Revision field value
func (o *VlanLogicalNetworkConfig) GetRevision() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *VlanLogicalNetworkConfig) GetRevisionOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *VlanLogicalNetworkConfig) SetRevision(v int32) {
	o.Revision = v
}

// GetKind returns the Kind field value
func (o *VlanLogicalNetworkConfig) GetKind() LogicalNetworkKind {
	if o == nil {
		var ret LogicalNetworkKind
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *VlanLogicalNetworkConfig) GetKindOk() (*LogicalNetworkKind, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *VlanLogicalNetworkConfig) SetKind(v LogicalNetworkKind) {
	o.Kind = v
}

// GetMtu returns the Mtu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *VlanLogicalNetworkConfig) GetMtu() int32 {
	if o == nil || IsNil(o.Mtu.Get()) {
		var ret int32
		return ret
	}
	return *o.Mtu.Get()
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *VlanLogicalNetworkConfig) GetMtuOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mtu.Get(), o.Mtu.IsSet()
}

// HasMtu returns a boolean if a field has been set.
func (o *VlanLogicalNetworkConfig) HasMtu() bool {
	if o != nil && o.Mtu.IsSet() {
		return true
	}

	return false
}

// SetMtu gets a reference to the given NullableInt32 and assigns it to the Mtu field.
func (o *VlanLogicalNetworkConfig) SetMtu(v int32) {
	o.Mtu.Set(&v)
}
// SetMtuNil sets the value for Mtu to be an explicit nil
func (o *VlanLogicalNetworkConfig) SetMtuNil() {
	o.Mtu.Set(nil)
}

// UnsetMtu ensures that no value is present for Mtu, not even an explicit nil
func (o *VlanLogicalNetworkConfig) UnsetMtu() {
	o.Mtu.Unset()
}

// GetVlan returns the Vlan field value
func (o *VlanLogicalNetworkConfig) GetVlan() VlanLogicalNetworkConfigVlanProperties {
	if o == nil {
		var ret VlanLogicalNetworkConfigVlanProperties
		return ret
	}

	return o.Vlan
}

// GetVlanOk returns a tuple with the Vlan field value
// and a boolean to check if the value has been set.
func (o *VlanLogicalNetworkConfig) GetVlanOk() (*VlanLogicalNetworkConfigVlanProperties, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vlan, true
}

// SetVlan sets field value
func (o *VlanLogicalNetworkConfig) SetVlan(v VlanLogicalNetworkConfigVlanProperties) {
	o.Vlan = v
}

// GetIpv4 returns the Ipv4 field value
func (o *VlanLogicalNetworkConfig) GetIpv4() VlanLogicalNetworkConfigIpv4Properties {
	if o == nil {
		var ret VlanLogicalNetworkConfigIpv4Properties
		return ret
	}

	return o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value
// and a boolean to check if the value has been set.
func (o *VlanLogicalNetworkConfig) GetIpv4Ok() (*VlanLogicalNetworkConfigIpv4Properties, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ipv4, true
}

// SetIpv4 sets field value
func (o *VlanLogicalNetworkConfig) SetIpv4(v VlanLogicalNetworkConfigIpv4Properties) {
	o.Ipv4 = v
}

// GetIpv6 returns the Ipv6 field value
func (o *VlanLogicalNetworkConfig) GetIpv6() VlanLogicalNetworkConfigIpv6Properties {
	if o == nil {
		var ret VlanLogicalNetworkConfigIpv6Properties
		return ret
	}

	return o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value
// and a boolean to check if the value has been set.
func (o *VlanLogicalNetworkConfig) GetIpv6Ok() (*VlanLogicalNetworkConfigIpv6Properties, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ipv6, true
}

// SetIpv6 sets field value
func (o *VlanLogicalNetworkConfig) SetIpv6(v VlanLogicalNetworkConfigIpv6Properties) {
	o.Ipv6 = v
}

func (o VlanLogicalNetworkConfig) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VlanLogicalNetworkConfig) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["deployType"] = o.DeployType
	toSerialize["deployStatus"] = o.DeployStatus
	toSerialize["createdAt"] = o.CreatedAt
	toSerialize["updatedAt"] = o.UpdatedAt
	toSerialize["revision"] = o.Revision
	toSerialize["kind"] = o.Kind
	if o.Mtu.IsSet() {
		toSerialize["mtu"] = o.Mtu.Get()
	}
	toSerialize["vlan"] = o.Vlan
	toSerialize["ipv4"] = o.Ipv4
	toSerialize["ipv6"] = o.Ipv6

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VlanLogicalNetworkConfig) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"deployType",
		"deployStatus",
		"createdAt",
		"updatedAt",
		"revision",
		"kind",
		"vlan",
		"ipv4",
		"ipv6",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVlanLogicalNetworkConfig := _VlanLogicalNetworkConfig{}

	err = json.Unmarshal(data, &varVlanLogicalNetworkConfig)

	if err != nil {
		return err
	}

	*o = VlanLogicalNetworkConfig(varVlanLogicalNetworkConfig)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "deployType")
		delete(additionalProperties, "deployStatus")
		delete(additionalProperties, "createdAt")
		delete(additionalProperties, "updatedAt")
		delete(additionalProperties, "revision")
		delete(additionalProperties, "kind")
		delete(additionalProperties, "mtu")
		delete(additionalProperties, "vlan")
		delete(additionalProperties, "ipv4")
		delete(additionalProperties, "ipv6")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVlanLogicalNetworkConfig struct {
	value *VlanLogicalNetworkConfig
	isSet bool
}

func (v NullableVlanLogicalNetworkConfig) Get() *VlanLogicalNetworkConfig {
	return v.value
}

func (v *NullableVlanLogicalNetworkConfig) Set(val *VlanLogicalNetworkConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableVlanLogicalNetworkConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableVlanLogicalNetworkConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVlanLogicalNetworkConfig(val *VlanLogicalNetworkConfig) *NullableVlanLogicalNetworkConfig {
	return &NullableVlanLogicalNetworkConfig{value: val, isSet: true}
}

func (v NullableVlanLogicalNetworkConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVlanLogicalNetworkConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


