/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the NetworkDeviceDefaults type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkDeviceDefaults{}

// NetworkDeviceDefaults struct for NetworkDeviceDefaults
type NetworkDeviceDefaults struct {
	// Unique ID of the network device defaults entry
	Id int32 `json:"id"`
	// Name of the datacenter
	DatacenterName string `json:"datacenterName"`
	// Device serial number
	SerialNumber *string `json:"serialNumber,omitempty"`
	// Management MAC address
	ManagementMacAddress *string `json:"managementMacAddress,omitempty"`
	// Physical position in the rack
	Position *string `json:"position,omitempty"`
	// Identifier string (1-63 characters, letters, digits, . _ -)
	IdentifierString *string `json:"identifierString,omitempty"`
	// Autonomous System Number (ASN)
	Asn *int32 `json:"asn,omitempty"`
	// Whether device is part of an MLAG pair
	IsPartOfMlagPair *bool `json:"isPartOfMlagPair,omitempty"`
	// MLAG system MAC address
	MlagSystemMac *string `json:"mlagSystemMac,omitempty"`
	// MLAG domain ID
	MlagDomainId *int32 `json:"mlagDomainId,omitempty"`
	// MLAG peer link port-channel ID
	MlagPeerLinkPortChannelId *int32 `json:"mlagPeerLinkPortChannelId,omitempty"`
	// MLAG partner VLAN ID
	MlagPartnerVlanId *int32 `json:"mlagPartnerVlanId,omitempty"`
	// Hostname of MLAG partner device
	MlagPartnerHostname *string `json:"mlagPartnerHostname,omitempty"`
	// Loopback IPv4 address
	LoopbackAddressIpv4 *string `json:"loopbackAddressIpv4,omitempty"`
	// Loopback IPv6 address
	LoopbackAddressIpv6 *string `json:"loopbackAddressIpv6,omitempty"`
	// VTEP IPv4 address
	VtepAddressIpv4 *string `json:"vtepAddressIpv4,omitempty"`
	// VTEP IPv6 address
	VtepAddressIpv6 *string `json:"vtepAddressIpv6,omitempty"`
	// Skip initial configuration flag
	SkipInitialConfiguration *bool `json:"skipInitialConfiguration,omitempty"`
	// Volume template ID
	OsTemplateId *int32 `json:"osTemplateId,omitempty"`
	// Custom variables for device configuration
	CustomVariables map[string]interface{} `json:"customVariables,omitempty"`
	// Order index for display or processing
	OrderIndex *int32 `json:"orderIndex,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _NetworkDeviceDefaults NetworkDeviceDefaults

// NewNetworkDeviceDefaults instantiates a new NetworkDeviceDefaults object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkDeviceDefaults(id int32, datacenterName string) *NetworkDeviceDefaults {
	this := NetworkDeviceDefaults{}
	this.Id = id
	this.DatacenterName = datacenterName
	return &this
}

// NewNetworkDeviceDefaultsWithDefaults instantiates a new NetworkDeviceDefaults object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkDeviceDefaultsWithDefaults() *NetworkDeviceDefaults {
	this := NetworkDeviceDefaults{}
	return &this
}

// GetId returns the Id field value
func (o *NetworkDeviceDefaults) GetId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *NetworkDeviceDefaults) SetId(v int32) {
	o.Id = v
}

// GetDatacenterName returns the DatacenterName field value
func (o *NetworkDeviceDefaults) GetDatacenterName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DatacenterName
}

// GetDatacenterNameOk returns a tuple with the DatacenterName field value
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetDatacenterNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DatacenterName, true
}

// SetDatacenterName sets field value
func (o *NetworkDeviceDefaults) SetDatacenterName(v string) {
	o.DatacenterName = v
}

// GetSerialNumber returns the SerialNumber field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetSerialNumber() string {
	if o == nil || IsNil(o.SerialNumber) {
		var ret string
		return ret
	}
	return *o.SerialNumber
}

// GetSerialNumberOk returns a tuple with the SerialNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetSerialNumberOk() (*string, bool) {
	if o == nil || IsNil(o.SerialNumber) {
		return nil, false
	}
	return o.SerialNumber, true
}

// HasSerialNumber returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasSerialNumber() bool {
	if o != nil && !IsNil(o.SerialNumber) {
		return true
	}

	return false
}

// SetSerialNumber gets a reference to the given string and assigns it to the SerialNumber field.
func (o *NetworkDeviceDefaults) SetSerialNumber(v string) {
	o.SerialNumber = &v
}

// GetManagementMacAddress returns the ManagementMacAddress field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetManagementMacAddress() string {
	if o == nil || IsNil(o.ManagementMacAddress) {
		var ret string
		return ret
	}
	return *o.ManagementMacAddress
}

// GetManagementMacAddressOk returns a tuple with the ManagementMacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetManagementMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.ManagementMacAddress) {
		return nil, false
	}
	return o.ManagementMacAddress, true
}

// HasManagementMacAddress returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasManagementMacAddress() bool {
	if o != nil && !IsNil(o.ManagementMacAddress) {
		return true
	}

	return false
}

// SetManagementMacAddress gets a reference to the given string and assigns it to the ManagementMacAddress field.
func (o *NetworkDeviceDefaults) SetManagementMacAddress(v string) {
	o.ManagementMacAddress = &v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetPosition() string {
	if o == nil || IsNil(o.Position) {
		var ret string
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetPositionOk() (*string, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given string and assigns it to the Position field.
func (o *NetworkDeviceDefaults) SetPosition(v string) {
	o.Position = &v
}

// GetIdentifierString returns the IdentifierString field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetIdentifierString() string {
	if o == nil || IsNil(o.IdentifierString) {
		var ret string
		return ret
	}
	return *o.IdentifierString
}

// GetIdentifierStringOk returns a tuple with the IdentifierString field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetIdentifierStringOk() (*string, bool) {
	if o == nil || IsNil(o.IdentifierString) {
		return nil, false
	}
	return o.IdentifierString, true
}

// HasIdentifierString returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasIdentifierString() bool {
	if o != nil && !IsNil(o.IdentifierString) {
		return true
	}

	return false
}

// SetIdentifierString gets a reference to the given string and assigns it to the IdentifierString field.
func (o *NetworkDeviceDefaults) SetIdentifierString(v string) {
	o.IdentifierString = &v
}

// GetAsn returns the Asn field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetAsn() int32 {
	if o == nil || IsNil(o.Asn) {
		var ret int32
		return ret
	}
	return *o.Asn
}

// GetAsnOk returns a tuple with the Asn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetAsnOk() (*int32, bool) {
	if o == nil || IsNil(o.Asn) {
		return nil, false
	}
	return o.Asn, true
}

// HasAsn returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasAsn() bool {
	if o != nil && !IsNil(o.Asn) {
		return true
	}

	return false
}

// SetAsn gets a reference to the given int32 and assigns it to the Asn field.
func (o *NetworkDeviceDefaults) SetAsn(v int32) {
	o.Asn = &v
}

// GetIsPartOfMlagPair returns the IsPartOfMlagPair field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetIsPartOfMlagPair() bool {
	if o == nil || IsNil(o.IsPartOfMlagPair) {
		var ret bool
		return ret
	}
	return *o.IsPartOfMlagPair
}

// GetIsPartOfMlagPairOk returns a tuple with the IsPartOfMlagPair field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetIsPartOfMlagPairOk() (*bool, bool) {
	if o == nil || IsNil(o.IsPartOfMlagPair) {
		return nil, false
	}
	return o.IsPartOfMlagPair, true
}

// HasIsPartOfMlagPair returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasIsPartOfMlagPair() bool {
	if o != nil && !IsNil(o.IsPartOfMlagPair) {
		return true
	}

	return false
}

// SetIsPartOfMlagPair gets a reference to the given bool and assigns it to the IsPartOfMlagPair field.
func (o *NetworkDeviceDefaults) SetIsPartOfMlagPair(v bool) {
	o.IsPartOfMlagPair = &v
}

// GetMlagSystemMac returns the MlagSystemMac field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetMlagSystemMac() string {
	if o == nil || IsNil(o.MlagSystemMac) {
		var ret string
		return ret
	}
	return *o.MlagSystemMac
}

// GetMlagSystemMacOk returns a tuple with the MlagSystemMac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetMlagSystemMacOk() (*string, bool) {
	if o == nil || IsNil(o.MlagSystemMac) {
		return nil, false
	}
	return o.MlagSystemMac, true
}

// HasMlagSystemMac returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasMlagSystemMac() bool {
	if o != nil && !IsNil(o.MlagSystemMac) {
		return true
	}

	return false
}

// SetMlagSystemMac gets a reference to the given string and assigns it to the MlagSystemMac field.
func (o *NetworkDeviceDefaults) SetMlagSystemMac(v string) {
	o.MlagSystemMac = &v
}

// GetMlagDomainId returns the MlagDomainId field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetMlagDomainId() int32 {
	if o == nil || IsNil(o.MlagDomainId) {
		var ret int32
		return ret
	}
	return *o.MlagDomainId
}

// GetMlagDomainIdOk returns a tuple with the MlagDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetMlagDomainIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MlagDomainId) {
		return nil, false
	}
	return o.MlagDomainId, true
}

// HasMlagDomainId returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasMlagDomainId() bool {
	if o != nil && !IsNil(o.MlagDomainId) {
		return true
	}

	return false
}

// SetMlagDomainId gets a reference to the given int32 and assigns it to the MlagDomainId field.
func (o *NetworkDeviceDefaults) SetMlagDomainId(v int32) {
	o.MlagDomainId = &v
}

// GetMlagPeerLinkPortChannelId returns the MlagPeerLinkPortChannelId field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetMlagPeerLinkPortChannelId() int32 {
	if o == nil || IsNil(o.MlagPeerLinkPortChannelId) {
		var ret int32
		return ret
	}
	return *o.MlagPeerLinkPortChannelId
}

// GetMlagPeerLinkPortChannelIdOk returns a tuple with the MlagPeerLinkPortChannelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetMlagPeerLinkPortChannelIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MlagPeerLinkPortChannelId) {
		return nil, false
	}
	return o.MlagPeerLinkPortChannelId, true
}

// HasMlagPeerLinkPortChannelId returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasMlagPeerLinkPortChannelId() bool {
	if o != nil && !IsNil(o.MlagPeerLinkPortChannelId) {
		return true
	}

	return false
}

// SetMlagPeerLinkPortChannelId gets a reference to the given int32 and assigns it to the MlagPeerLinkPortChannelId field.
func (o *NetworkDeviceDefaults) SetMlagPeerLinkPortChannelId(v int32) {
	o.MlagPeerLinkPortChannelId = &v
}

// GetMlagPartnerVlanId returns the MlagPartnerVlanId field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetMlagPartnerVlanId() int32 {
	if o == nil || IsNil(o.MlagPartnerVlanId) {
		var ret int32
		return ret
	}
	return *o.MlagPartnerVlanId
}

// GetMlagPartnerVlanIdOk returns a tuple with the MlagPartnerVlanId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetMlagPartnerVlanIdOk() (*int32, bool) {
	if o == nil || IsNil(o.MlagPartnerVlanId) {
		return nil, false
	}
	return o.MlagPartnerVlanId, true
}

// HasMlagPartnerVlanId returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasMlagPartnerVlanId() bool {
	if o != nil && !IsNil(o.MlagPartnerVlanId) {
		return true
	}

	return false
}

// SetMlagPartnerVlanId gets a reference to the given int32 and assigns it to the MlagPartnerVlanId field.
func (o *NetworkDeviceDefaults) SetMlagPartnerVlanId(v int32) {
	o.MlagPartnerVlanId = &v
}

// GetMlagPartnerHostname returns the MlagPartnerHostname field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetMlagPartnerHostname() string {
	if o == nil || IsNil(o.MlagPartnerHostname) {
		var ret string
		return ret
	}
	return *o.MlagPartnerHostname
}

// GetMlagPartnerHostnameOk returns a tuple with the MlagPartnerHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetMlagPartnerHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.MlagPartnerHostname) {
		return nil, false
	}
	return o.MlagPartnerHostname, true
}

// HasMlagPartnerHostname returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasMlagPartnerHostname() bool {
	if o != nil && !IsNil(o.MlagPartnerHostname) {
		return true
	}

	return false
}

// SetMlagPartnerHostname gets a reference to the given string and assigns it to the MlagPartnerHostname field.
func (o *NetworkDeviceDefaults) SetMlagPartnerHostname(v string) {
	o.MlagPartnerHostname = &v
}

// GetLoopbackAddressIpv4 returns the LoopbackAddressIpv4 field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetLoopbackAddressIpv4() string {
	if o == nil || IsNil(o.LoopbackAddressIpv4) {
		var ret string
		return ret
	}
	return *o.LoopbackAddressIpv4
}

// GetLoopbackAddressIpv4Ok returns a tuple with the LoopbackAddressIpv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetLoopbackAddressIpv4Ok() (*string, bool) {
	if o == nil || IsNil(o.LoopbackAddressIpv4) {
		return nil, false
	}
	return o.LoopbackAddressIpv4, true
}

// HasLoopbackAddressIpv4 returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasLoopbackAddressIpv4() bool {
	if o != nil && !IsNil(o.LoopbackAddressIpv4) {
		return true
	}

	return false
}

// SetLoopbackAddressIpv4 gets a reference to the given string and assigns it to the LoopbackAddressIpv4 field.
func (o *NetworkDeviceDefaults) SetLoopbackAddressIpv4(v string) {
	o.LoopbackAddressIpv4 = &v
}

// GetLoopbackAddressIpv6 returns the LoopbackAddressIpv6 field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetLoopbackAddressIpv6() string {
	if o == nil || IsNil(o.LoopbackAddressIpv6) {
		var ret string
		return ret
	}
	return *o.LoopbackAddressIpv6
}

// GetLoopbackAddressIpv6Ok returns a tuple with the LoopbackAddressIpv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetLoopbackAddressIpv6Ok() (*string, bool) {
	if o == nil || IsNil(o.LoopbackAddressIpv6) {
		return nil, false
	}
	return o.LoopbackAddressIpv6, true
}

// HasLoopbackAddressIpv6 returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasLoopbackAddressIpv6() bool {
	if o != nil && !IsNil(o.LoopbackAddressIpv6) {
		return true
	}

	return false
}

// SetLoopbackAddressIpv6 gets a reference to the given string and assigns it to the LoopbackAddressIpv6 field.
func (o *NetworkDeviceDefaults) SetLoopbackAddressIpv6(v string) {
	o.LoopbackAddressIpv6 = &v
}

// GetVtepAddressIpv4 returns the VtepAddressIpv4 field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetVtepAddressIpv4() string {
	if o == nil || IsNil(o.VtepAddressIpv4) {
		var ret string
		return ret
	}
	return *o.VtepAddressIpv4
}

// GetVtepAddressIpv4Ok returns a tuple with the VtepAddressIpv4 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetVtepAddressIpv4Ok() (*string, bool) {
	if o == nil || IsNil(o.VtepAddressIpv4) {
		return nil, false
	}
	return o.VtepAddressIpv4, true
}

// HasVtepAddressIpv4 returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasVtepAddressIpv4() bool {
	if o != nil && !IsNil(o.VtepAddressIpv4) {
		return true
	}

	return false
}

// SetVtepAddressIpv4 gets a reference to the given string and assigns it to the VtepAddressIpv4 field.
func (o *NetworkDeviceDefaults) SetVtepAddressIpv4(v string) {
	o.VtepAddressIpv4 = &v
}

// GetVtepAddressIpv6 returns the VtepAddressIpv6 field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetVtepAddressIpv6() string {
	if o == nil || IsNil(o.VtepAddressIpv6) {
		var ret string
		return ret
	}
	return *o.VtepAddressIpv6
}

// GetVtepAddressIpv6Ok returns a tuple with the VtepAddressIpv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetVtepAddressIpv6Ok() (*string, bool) {
	if o == nil || IsNil(o.VtepAddressIpv6) {
		return nil, false
	}
	return o.VtepAddressIpv6, true
}

// HasVtepAddressIpv6 returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasVtepAddressIpv6() bool {
	if o != nil && !IsNil(o.VtepAddressIpv6) {
		return true
	}

	return false
}

// SetVtepAddressIpv6 gets a reference to the given string and assigns it to the VtepAddressIpv6 field.
func (o *NetworkDeviceDefaults) SetVtepAddressIpv6(v string) {
	o.VtepAddressIpv6 = &v
}

// GetSkipInitialConfiguration returns the SkipInitialConfiguration field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetSkipInitialConfiguration() bool {
	if o == nil || IsNil(o.SkipInitialConfiguration) {
		var ret bool
		return ret
	}
	return *o.SkipInitialConfiguration
}

// GetSkipInitialConfigurationOk returns a tuple with the SkipInitialConfiguration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetSkipInitialConfigurationOk() (*bool, bool) {
	if o == nil || IsNil(o.SkipInitialConfiguration) {
		return nil, false
	}
	return o.SkipInitialConfiguration, true
}

// HasSkipInitialConfiguration returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasSkipInitialConfiguration() bool {
	if o != nil && !IsNil(o.SkipInitialConfiguration) {
		return true
	}

	return false
}

// SetSkipInitialConfiguration gets a reference to the given bool and assigns it to the SkipInitialConfiguration field.
func (o *NetworkDeviceDefaults) SetSkipInitialConfiguration(v bool) {
	o.SkipInitialConfiguration = &v
}

// GetOsTemplateId returns the OsTemplateId field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetOsTemplateId() int32 {
	if o == nil || IsNil(o.OsTemplateId) {
		var ret int32
		return ret
	}
	return *o.OsTemplateId
}

// GetOsTemplateIdOk returns a tuple with the OsTemplateId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetOsTemplateIdOk() (*int32, bool) {
	if o == nil || IsNil(o.OsTemplateId) {
		return nil, false
	}
	return o.OsTemplateId, true
}

// HasOsTemplateId returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasOsTemplateId() bool {
	if o != nil && !IsNil(o.OsTemplateId) {
		return true
	}

	return false
}

// SetOsTemplateId gets a reference to the given int32 and assigns it to the OsTemplateId field.
func (o *NetworkDeviceDefaults) SetOsTemplateId(v int32) {
	o.OsTemplateId = &v
}

// GetCustomVariables returns the CustomVariables field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetCustomVariables() map[string]interface{} {
	if o == nil || IsNil(o.CustomVariables) {
		var ret map[string]interface{}
		return ret
	}
	return o.CustomVariables
}

// GetCustomVariablesOk returns a tuple with the CustomVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetCustomVariablesOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.CustomVariables) {
		return map[string]interface{}{}, false
	}
	return o.CustomVariables, true
}

// HasCustomVariables returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasCustomVariables() bool {
	if o != nil && !IsNil(o.CustomVariables) {
		return true
	}

	return false
}

// SetCustomVariables gets a reference to the given map[string]interface{} and assigns it to the CustomVariables field.
func (o *NetworkDeviceDefaults) SetCustomVariables(v map[string]interface{}) {
	o.CustomVariables = v
}

// GetOrderIndex returns the OrderIndex field value if set, zero value otherwise.
func (o *NetworkDeviceDefaults) GetOrderIndex() int32 {
	if o == nil || IsNil(o.OrderIndex) {
		var ret int32
		return ret
	}
	return *o.OrderIndex
}

// GetOrderIndexOk returns a tuple with the OrderIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *NetworkDeviceDefaults) GetOrderIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.OrderIndex) {
		return nil, false
	}
	return o.OrderIndex, true
}

// HasOrderIndex returns a boolean if a field has been set.
func (o *NetworkDeviceDefaults) HasOrderIndex() bool {
	if o != nil && !IsNil(o.OrderIndex) {
		return true
	}

	return false
}

// SetOrderIndex gets a reference to the given int32 and assigns it to the OrderIndex field.
func (o *NetworkDeviceDefaults) SetOrderIndex(v int32) {
	o.OrderIndex = &v
}

func (o NetworkDeviceDefaults) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkDeviceDefaults) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["datacenterName"] = o.DatacenterName
	if !IsNil(o.SerialNumber) {
		toSerialize["serialNumber"] = o.SerialNumber
	}
	if !IsNil(o.ManagementMacAddress) {
		toSerialize["managementMacAddress"] = o.ManagementMacAddress
	}
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	if !IsNil(o.IdentifierString) {
		toSerialize["identifierString"] = o.IdentifierString
	}
	if !IsNil(o.Asn) {
		toSerialize["asn"] = o.Asn
	}
	if !IsNil(o.IsPartOfMlagPair) {
		toSerialize["isPartOfMlagPair"] = o.IsPartOfMlagPair
	}
	if !IsNil(o.MlagSystemMac) {
		toSerialize["mlagSystemMac"] = o.MlagSystemMac
	}
	if !IsNil(o.MlagDomainId) {
		toSerialize["mlagDomainId"] = o.MlagDomainId
	}
	if !IsNil(o.MlagPeerLinkPortChannelId) {
		toSerialize["mlagPeerLinkPortChannelId"] = o.MlagPeerLinkPortChannelId
	}
	if !IsNil(o.MlagPartnerVlanId) {
		toSerialize["mlagPartnerVlanId"] = o.MlagPartnerVlanId
	}
	if !IsNil(o.MlagPartnerHostname) {
		toSerialize["mlagPartnerHostname"] = o.MlagPartnerHostname
	}
	if !IsNil(o.LoopbackAddressIpv4) {
		toSerialize["loopbackAddressIpv4"] = o.LoopbackAddressIpv4
	}
	if !IsNil(o.LoopbackAddressIpv6) {
		toSerialize["loopbackAddressIpv6"] = o.LoopbackAddressIpv6
	}
	if !IsNil(o.VtepAddressIpv4) {
		toSerialize["vtepAddressIpv4"] = o.VtepAddressIpv4
	}
	if !IsNil(o.VtepAddressIpv6) {
		toSerialize["vtepAddressIpv6"] = o.VtepAddressIpv6
	}
	if !IsNil(o.SkipInitialConfiguration) {
		toSerialize["skipInitialConfiguration"] = o.SkipInitialConfiguration
	}
	if !IsNil(o.OsTemplateId) {
		toSerialize["osTemplateId"] = o.OsTemplateId
	}
	if !IsNil(o.CustomVariables) {
		toSerialize["customVariables"] = o.CustomVariables
	}
	if !IsNil(o.OrderIndex) {
		toSerialize["orderIndex"] = o.OrderIndex
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NetworkDeviceDefaults) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"datacenterName",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkDeviceDefaults := _NetworkDeviceDefaults{}

	err = json.Unmarshal(data, &varNetworkDeviceDefaults)

	if err != nil {
		return err
	}

	*o = NetworkDeviceDefaults(varNetworkDeviceDefaults)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "datacenterName")
		delete(additionalProperties, "serialNumber")
		delete(additionalProperties, "managementMacAddress")
		delete(additionalProperties, "position")
		delete(additionalProperties, "identifierString")
		delete(additionalProperties, "asn")
		delete(additionalProperties, "isPartOfMlagPair")
		delete(additionalProperties, "mlagSystemMac")
		delete(additionalProperties, "mlagDomainId")
		delete(additionalProperties, "mlagPeerLinkPortChannelId")
		delete(additionalProperties, "mlagPartnerVlanId")
		delete(additionalProperties, "mlagPartnerHostname")
		delete(additionalProperties, "loopbackAddressIpv4")
		delete(additionalProperties, "loopbackAddressIpv6")
		delete(additionalProperties, "vtepAddressIpv4")
		delete(additionalProperties, "vtepAddressIpv6")
		delete(additionalProperties, "skipInitialConfiguration")
		delete(additionalProperties, "osTemplateId")
		delete(additionalProperties, "customVariables")
		delete(additionalProperties, "orderIndex")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNetworkDeviceDefaults struct {
	value *NetworkDeviceDefaults
	isSet bool
}

func (v NullableNetworkDeviceDefaults) Get() *NetworkDeviceDefaults {
	return v.value
}

func (v *NullableNetworkDeviceDefaults) Set(val *NetworkDeviceDefaults) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkDeviceDefaults) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkDeviceDefaults) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkDeviceDefaults(val *NetworkDeviceDefaults) *NullableNetworkDeviceDefaults {
	return &NullableNetworkDeviceDefaults{value: val, isSet: true}
}

func (v NullableNetworkDeviceDefaults) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkDeviceDefaults) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


