/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the InstanceResourceItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InstanceResourceItem{}

// InstanceResourceItem struct for InstanceResourceItem
type InstanceResourceItem struct {
	Id float32 `json:"id"`
	Label string `json:"label"`
	StartTimestamp string `json:"startTimestamp"`
	EndTimestamp string `json:"endTimestamp"`
	MeasurementPeriod float32 `json:"measurementPeriod"`
	MeasurementUnit string `json:"measurementUnit"`
	Quantity float32 `json:"quantity"`
	ServerTypeId float32 `json:"serverTypeId"`
	ServerId float32 `json:"serverId"`
	ServerTypeName string `json:"serverTypeName"`
	OperatingSystemType string `json:"operatingSystemType"`
	OperatingSystemVersion string `json:"operatingSystemVersion"`
	OperatingSystemDisplayName string `json:"operatingSystemDisplayName"`
	OperatingSystemTemplateId float32 `json:"operatingSystemTemplateId"`
	OriginalStartTimestamp string `json:"originalStartTimestamp"`
	AdditionalProperties map[string]interface{}
}

type _InstanceResourceItem InstanceResourceItem

// NewInstanceResourceItem instantiates a new InstanceResourceItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInstanceResourceItem(id float32, label string, startTimestamp string, endTimestamp string, measurementPeriod float32, measurementUnit string, quantity float32, serverTypeId float32, serverId float32, serverTypeName string, operatingSystemType string, operatingSystemVersion string, operatingSystemDisplayName string, operatingSystemTemplateId float32, originalStartTimestamp string) *InstanceResourceItem {
	this := InstanceResourceItem{}
	this.Id = id
	this.Label = label
	this.StartTimestamp = startTimestamp
	this.EndTimestamp = endTimestamp
	this.MeasurementPeriod = measurementPeriod
	this.MeasurementUnit = measurementUnit
	this.Quantity = quantity
	this.ServerTypeId = serverTypeId
	this.ServerId = serverId
	this.ServerTypeName = serverTypeName
	this.OperatingSystemType = operatingSystemType
	this.OperatingSystemVersion = operatingSystemVersion
	this.OperatingSystemDisplayName = operatingSystemDisplayName
	this.OperatingSystemTemplateId = operatingSystemTemplateId
	this.OriginalStartTimestamp = originalStartTimestamp
	return &this
}

// NewInstanceResourceItemWithDefaults instantiates a new InstanceResourceItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInstanceResourceItemWithDefaults() *InstanceResourceItem {
	this := InstanceResourceItem{}
	return &this
}

// GetId returns the Id field value
func (o *InstanceResourceItem) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *InstanceResourceItem) SetId(v float32) {
	o.Id = v
}

// GetLabel returns the Label field value
func (o *InstanceResourceItem) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *InstanceResourceItem) SetLabel(v string) {
	o.Label = v
}

// GetStartTimestamp returns the StartTimestamp field value
func (o *InstanceResourceItem) GetStartTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartTimestamp
}

// GetStartTimestampOk returns a tuple with the StartTimestamp field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetStartTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTimestamp, true
}

// SetStartTimestamp sets field value
func (o *InstanceResourceItem) SetStartTimestamp(v string) {
	o.StartTimestamp = v
}

// GetEndTimestamp returns the EndTimestamp field value
func (o *InstanceResourceItem) GetEndTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndTimestamp
}

// GetEndTimestampOk returns a tuple with the EndTimestamp field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetEndTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTimestamp, true
}

// SetEndTimestamp sets field value
func (o *InstanceResourceItem) SetEndTimestamp(v string) {
	o.EndTimestamp = v
}

// GetMeasurementPeriod returns the MeasurementPeriod field value
func (o *InstanceResourceItem) GetMeasurementPeriod() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MeasurementPeriod
}

// GetMeasurementPeriodOk returns a tuple with the MeasurementPeriod field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetMeasurementPeriodOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MeasurementPeriod, true
}

// SetMeasurementPeriod sets field value
func (o *InstanceResourceItem) SetMeasurementPeriod(v float32) {
	o.MeasurementPeriod = v
}

// GetMeasurementUnit returns the MeasurementUnit field value
func (o *InstanceResourceItem) GetMeasurementUnit() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MeasurementUnit
}

// GetMeasurementUnitOk returns a tuple with the MeasurementUnit field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetMeasurementUnitOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MeasurementUnit, true
}

// SetMeasurementUnit sets field value
func (o *InstanceResourceItem) SetMeasurementUnit(v string) {
	o.MeasurementUnit = v
}

// GetQuantity returns the Quantity field value
func (o *InstanceResourceItem) GetQuantity() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetQuantityOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *InstanceResourceItem) SetQuantity(v float32) {
	o.Quantity = v
}

// GetServerTypeId returns the ServerTypeId field value
func (o *InstanceResourceItem) GetServerTypeId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ServerTypeId
}

// GetServerTypeIdOk returns a tuple with the ServerTypeId field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetServerTypeIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerTypeId, true
}

// SetServerTypeId sets field value
func (o *InstanceResourceItem) SetServerTypeId(v float32) {
	o.ServerTypeId = v
}

// GetServerId returns the ServerId field value
func (o *InstanceResourceItem) GetServerId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetServerIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerId, true
}

// SetServerId sets field value
func (o *InstanceResourceItem) SetServerId(v float32) {
	o.ServerId = v
}

// GetServerTypeName returns the ServerTypeName field value
func (o *InstanceResourceItem) GetServerTypeName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerTypeName
}

// GetServerTypeNameOk returns a tuple with the ServerTypeName field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetServerTypeNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerTypeName, true
}

// SetServerTypeName sets field value
func (o *InstanceResourceItem) SetServerTypeName(v string) {
	o.ServerTypeName = v
}

// GetOperatingSystemType returns the OperatingSystemType field value
func (o *InstanceResourceItem) GetOperatingSystemType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperatingSystemType
}

// GetOperatingSystemTypeOk returns a tuple with the OperatingSystemType field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetOperatingSystemTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperatingSystemType, true
}

// SetOperatingSystemType sets field value
func (o *InstanceResourceItem) SetOperatingSystemType(v string) {
	o.OperatingSystemType = v
}

// GetOperatingSystemVersion returns the OperatingSystemVersion field value
func (o *InstanceResourceItem) GetOperatingSystemVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperatingSystemVersion
}

// GetOperatingSystemVersionOk returns a tuple with the OperatingSystemVersion field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetOperatingSystemVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperatingSystemVersion, true
}

// SetOperatingSystemVersion sets field value
func (o *InstanceResourceItem) SetOperatingSystemVersion(v string) {
	o.OperatingSystemVersion = v
}

// GetOperatingSystemDisplayName returns the OperatingSystemDisplayName field value
func (o *InstanceResourceItem) GetOperatingSystemDisplayName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OperatingSystemDisplayName
}

// GetOperatingSystemDisplayNameOk returns a tuple with the OperatingSystemDisplayName field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetOperatingSystemDisplayNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperatingSystemDisplayName, true
}

// SetOperatingSystemDisplayName sets field value
func (o *InstanceResourceItem) SetOperatingSystemDisplayName(v string) {
	o.OperatingSystemDisplayName = v
}

// GetOperatingSystemTemplateId returns the OperatingSystemTemplateId field value
func (o *InstanceResourceItem) GetOperatingSystemTemplateId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OperatingSystemTemplateId
}

// GetOperatingSystemTemplateIdOk returns a tuple with the OperatingSystemTemplateId field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetOperatingSystemTemplateIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OperatingSystemTemplateId, true
}

// SetOperatingSystemTemplateId sets field value
func (o *InstanceResourceItem) SetOperatingSystemTemplateId(v float32) {
	o.OperatingSystemTemplateId = v
}

// GetOriginalStartTimestamp returns the OriginalStartTimestamp field value
func (o *InstanceResourceItem) GetOriginalStartTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OriginalStartTimestamp
}

// GetOriginalStartTimestampOk returns a tuple with the OriginalStartTimestamp field value
// and a boolean to check if the value has been set.
func (o *InstanceResourceItem) GetOriginalStartTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OriginalStartTimestamp, true
}

// SetOriginalStartTimestamp sets field value
func (o *InstanceResourceItem) SetOriginalStartTimestamp(v string) {
	o.OriginalStartTimestamp = v
}

func (o InstanceResourceItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InstanceResourceItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["label"] = o.Label
	toSerialize["startTimestamp"] = o.StartTimestamp
	toSerialize["endTimestamp"] = o.EndTimestamp
	toSerialize["measurementPeriod"] = o.MeasurementPeriod
	toSerialize["measurementUnit"] = o.MeasurementUnit
	toSerialize["quantity"] = o.Quantity
	toSerialize["serverTypeId"] = o.ServerTypeId
	toSerialize["serverId"] = o.ServerId
	toSerialize["serverTypeName"] = o.ServerTypeName
	toSerialize["operatingSystemType"] = o.OperatingSystemType
	toSerialize["operatingSystemVersion"] = o.OperatingSystemVersion
	toSerialize["operatingSystemDisplayName"] = o.OperatingSystemDisplayName
	toSerialize["operatingSystemTemplateId"] = o.OperatingSystemTemplateId
	toSerialize["originalStartTimestamp"] = o.OriginalStartTimestamp

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InstanceResourceItem) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"label",
		"startTimestamp",
		"endTimestamp",
		"measurementPeriod",
		"measurementUnit",
		"quantity",
		"serverTypeId",
		"serverId",
		"serverTypeName",
		"operatingSystemType",
		"operatingSystemVersion",
		"operatingSystemDisplayName",
		"operatingSystemTemplateId",
		"originalStartTimestamp",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInstanceResourceItem := _InstanceResourceItem{}

	err = json.Unmarshal(data, &varInstanceResourceItem)

	if err != nil {
		return err
	}

	*o = InstanceResourceItem(varInstanceResourceItem)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "label")
		delete(additionalProperties, "startTimestamp")
		delete(additionalProperties, "endTimestamp")
		delete(additionalProperties, "measurementPeriod")
		delete(additionalProperties, "measurementUnit")
		delete(additionalProperties, "quantity")
		delete(additionalProperties, "serverTypeId")
		delete(additionalProperties, "serverId")
		delete(additionalProperties, "serverTypeName")
		delete(additionalProperties, "operatingSystemType")
		delete(additionalProperties, "operatingSystemVersion")
		delete(additionalProperties, "operatingSystemDisplayName")
		delete(additionalProperties, "operatingSystemTemplateId")
		delete(additionalProperties, "originalStartTimestamp")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInstanceResourceItem struct {
	value *InstanceResourceItem
	isSet bool
}

func (v NullableInstanceResourceItem) Get() *InstanceResourceItem {
	return v.value
}

func (v *NullableInstanceResourceItem) Set(val *InstanceResourceItem) {
	v.value = val
	v.isSet = true
}

func (v NullableInstanceResourceItem) IsSet() bool {
	return v.isSet
}

func (v *NullableInstanceResourceItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInstanceResourceItem(val *InstanceResourceItem) *NullableInstanceResourceItem {
	return &NullableInstanceResourceItem{value: val, isSet: true}
}

func (v NullableInstanceResourceItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInstanceResourceItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


