/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateServerDefaultCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateServerDefaultCredentials{}

// UpdateServerDefaultCredentials struct for UpdateServerDefaultCredentials
type UpdateServerDefaultCredentials struct {
	// The default rack name of the server
	DefaultRackName *string `json:"defaultRackName,omitempty"`
	// The default rack position upper unit of the server
	DefaultRackPositionLowerUnit *string `json:"defaultRackPositionLowerUnit,omitempty"`
	// The default rack position upper unit of the server
	DefaultRackPositionUpperUnit *string `json:"defaultRackPositionUpperUnit,omitempty"`
	// The default inventory ID of the server
	DefaultInventoryId *string `json:"defaultInventoryId,omitempty"`
	// The default UUID of the server
	DefaultUuid *string `json:"defaultUuid,omitempty"`
	// The default username of the server
	DefaultUsername *string `json:"defaultUsername,omitempty"`
	// The default password of the server
	DefaultPassword *string `json:"defaultPassword,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateServerDefaultCredentials UpdateServerDefaultCredentials

// NewUpdateServerDefaultCredentials instantiates a new UpdateServerDefaultCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateServerDefaultCredentials() *UpdateServerDefaultCredentials {
	this := UpdateServerDefaultCredentials{}
	return &this
}

// NewUpdateServerDefaultCredentialsWithDefaults instantiates a new UpdateServerDefaultCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateServerDefaultCredentialsWithDefaults() *UpdateServerDefaultCredentials {
	this := UpdateServerDefaultCredentials{}
	return &this
}

// GetDefaultRackName returns the DefaultRackName field value if set, zero value otherwise.
func (o *UpdateServerDefaultCredentials) GetDefaultRackName() string {
	if o == nil || IsNil(o.DefaultRackName) {
		var ret string
		return ret
	}
	return *o.DefaultRackName
}

// GetDefaultRackNameOk returns a tuple with the DefaultRackName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServerDefaultCredentials) GetDefaultRackNameOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultRackName) {
		return nil, false
	}
	return o.DefaultRackName, true
}

// HasDefaultRackName returns a boolean if a field has been set.
func (o *UpdateServerDefaultCredentials) HasDefaultRackName() bool {
	if o != nil && !IsNil(o.DefaultRackName) {
		return true
	}

	return false
}

// SetDefaultRackName gets a reference to the given string and assigns it to the DefaultRackName field.
func (o *UpdateServerDefaultCredentials) SetDefaultRackName(v string) {
	o.DefaultRackName = &v
}

// GetDefaultRackPositionLowerUnit returns the DefaultRackPositionLowerUnit field value if set, zero value otherwise.
func (o *UpdateServerDefaultCredentials) GetDefaultRackPositionLowerUnit() string {
	if o == nil || IsNil(o.DefaultRackPositionLowerUnit) {
		var ret string
		return ret
	}
	return *o.DefaultRackPositionLowerUnit
}

// GetDefaultRackPositionLowerUnitOk returns a tuple with the DefaultRackPositionLowerUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServerDefaultCredentials) GetDefaultRackPositionLowerUnitOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultRackPositionLowerUnit) {
		return nil, false
	}
	return o.DefaultRackPositionLowerUnit, true
}

// HasDefaultRackPositionLowerUnit returns a boolean if a field has been set.
func (o *UpdateServerDefaultCredentials) HasDefaultRackPositionLowerUnit() bool {
	if o != nil && !IsNil(o.DefaultRackPositionLowerUnit) {
		return true
	}

	return false
}

// SetDefaultRackPositionLowerUnit gets a reference to the given string and assigns it to the DefaultRackPositionLowerUnit field.
func (o *UpdateServerDefaultCredentials) SetDefaultRackPositionLowerUnit(v string) {
	o.DefaultRackPositionLowerUnit = &v
}

// GetDefaultRackPositionUpperUnit returns the DefaultRackPositionUpperUnit field value if set, zero value otherwise.
func (o *UpdateServerDefaultCredentials) GetDefaultRackPositionUpperUnit() string {
	if o == nil || IsNil(o.DefaultRackPositionUpperUnit) {
		var ret string
		return ret
	}
	return *o.DefaultRackPositionUpperUnit
}

// GetDefaultRackPositionUpperUnitOk returns a tuple with the DefaultRackPositionUpperUnit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServerDefaultCredentials) GetDefaultRackPositionUpperUnitOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultRackPositionUpperUnit) {
		return nil, false
	}
	return o.DefaultRackPositionUpperUnit, true
}

// HasDefaultRackPositionUpperUnit returns a boolean if a field has been set.
func (o *UpdateServerDefaultCredentials) HasDefaultRackPositionUpperUnit() bool {
	if o != nil && !IsNil(o.DefaultRackPositionUpperUnit) {
		return true
	}

	return false
}

// SetDefaultRackPositionUpperUnit gets a reference to the given string and assigns it to the DefaultRackPositionUpperUnit field.
func (o *UpdateServerDefaultCredentials) SetDefaultRackPositionUpperUnit(v string) {
	o.DefaultRackPositionUpperUnit = &v
}

// GetDefaultInventoryId returns the DefaultInventoryId field value if set, zero value otherwise.
func (o *UpdateServerDefaultCredentials) GetDefaultInventoryId() string {
	if o == nil || IsNil(o.DefaultInventoryId) {
		var ret string
		return ret
	}
	return *o.DefaultInventoryId
}

// GetDefaultInventoryIdOk returns a tuple with the DefaultInventoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServerDefaultCredentials) GetDefaultInventoryIdOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultInventoryId) {
		return nil, false
	}
	return o.DefaultInventoryId, true
}

// HasDefaultInventoryId returns a boolean if a field has been set.
func (o *UpdateServerDefaultCredentials) HasDefaultInventoryId() bool {
	if o != nil && !IsNil(o.DefaultInventoryId) {
		return true
	}

	return false
}

// SetDefaultInventoryId gets a reference to the given string and assigns it to the DefaultInventoryId field.
func (o *UpdateServerDefaultCredentials) SetDefaultInventoryId(v string) {
	o.DefaultInventoryId = &v
}

// GetDefaultUuid returns the DefaultUuid field value if set, zero value otherwise.
func (o *UpdateServerDefaultCredentials) GetDefaultUuid() string {
	if o == nil || IsNil(o.DefaultUuid) {
		var ret string
		return ret
	}
	return *o.DefaultUuid
}

// GetDefaultUuidOk returns a tuple with the DefaultUuid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServerDefaultCredentials) GetDefaultUuidOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultUuid) {
		return nil, false
	}
	return o.DefaultUuid, true
}

// HasDefaultUuid returns a boolean if a field has been set.
func (o *UpdateServerDefaultCredentials) HasDefaultUuid() bool {
	if o != nil && !IsNil(o.DefaultUuid) {
		return true
	}

	return false
}

// SetDefaultUuid gets a reference to the given string and assigns it to the DefaultUuid field.
func (o *UpdateServerDefaultCredentials) SetDefaultUuid(v string) {
	o.DefaultUuid = &v
}

// GetDefaultUsername returns the DefaultUsername field value if set, zero value otherwise.
func (o *UpdateServerDefaultCredentials) GetDefaultUsername() string {
	if o == nil || IsNil(o.DefaultUsername) {
		var ret string
		return ret
	}
	return *o.DefaultUsername
}

// GetDefaultUsernameOk returns a tuple with the DefaultUsername field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServerDefaultCredentials) GetDefaultUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultUsername) {
		return nil, false
	}
	return o.DefaultUsername, true
}

// HasDefaultUsername returns a boolean if a field has been set.
func (o *UpdateServerDefaultCredentials) HasDefaultUsername() bool {
	if o != nil && !IsNil(o.DefaultUsername) {
		return true
	}

	return false
}

// SetDefaultUsername gets a reference to the given string and assigns it to the DefaultUsername field.
func (o *UpdateServerDefaultCredentials) SetDefaultUsername(v string) {
	o.DefaultUsername = &v
}

// GetDefaultPassword returns the DefaultPassword field value if set, zero value otherwise.
func (o *UpdateServerDefaultCredentials) GetDefaultPassword() string {
	if o == nil || IsNil(o.DefaultPassword) {
		var ret string
		return ret
	}
	return *o.DefaultPassword
}

// GetDefaultPasswordOk returns a tuple with the DefaultPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateServerDefaultCredentials) GetDefaultPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.DefaultPassword) {
		return nil, false
	}
	return o.DefaultPassword, true
}

// HasDefaultPassword returns a boolean if a field has been set.
func (o *UpdateServerDefaultCredentials) HasDefaultPassword() bool {
	if o != nil && !IsNil(o.DefaultPassword) {
		return true
	}

	return false
}

// SetDefaultPassword gets a reference to the given string and assigns it to the DefaultPassword field.
func (o *UpdateServerDefaultCredentials) SetDefaultPassword(v string) {
	o.DefaultPassword = &v
}

func (o UpdateServerDefaultCredentials) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateServerDefaultCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultRackName) {
		toSerialize["defaultRackName"] = o.DefaultRackName
	}
	if !IsNil(o.DefaultRackPositionLowerUnit) {
		toSerialize["defaultRackPositionLowerUnit"] = o.DefaultRackPositionLowerUnit
	}
	if !IsNil(o.DefaultRackPositionUpperUnit) {
		toSerialize["defaultRackPositionUpperUnit"] = o.DefaultRackPositionUpperUnit
	}
	if !IsNil(o.DefaultInventoryId) {
		toSerialize["defaultInventoryId"] = o.DefaultInventoryId
	}
	if !IsNil(o.DefaultUuid) {
		toSerialize["defaultUuid"] = o.DefaultUuid
	}
	if !IsNil(o.DefaultUsername) {
		toSerialize["defaultUsername"] = o.DefaultUsername
	}
	if !IsNil(o.DefaultPassword) {
		toSerialize["defaultPassword"] = o.DefaultPassword
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateServerDefaultCredentials) UnmarshalJSON(data []byte) (err error) {
	varUpdateServerDefaultCredentials := _UpdateServerDefaultCredentials{}

	err = json.Unmarshal(data, &varUpdateServerDefaultCredentials)

	if err != nil {
		return err
	}

	*o = UpdateServerDefaultCredentials(varUpdateServerDefaultCredentials)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "defaultRackName")
		delete(additionalProperties, "defaultRackPositionLowerUnit")
		delete(additionalProperties, "defaultRackPositionUpperUnit")
		delete(additionalProperties, "defaultInventoryId")
		delete(additionalProperties, "defaultUuid")
		delete(additionalProperties, "defaultUsername")
		delete(additionalProperties, "defaultPassword")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateServerDefaultCredentials struct {
	value *UpdateServerDefaultCredentials
	isSet bool
}

func (v NullableUpdateServerDefaultCredentials) Get() *UpdateServerDefaultCredentials {
	return v.value
}

func (v *NullableUpdateServerDefaultCredentials) Set(val *UpdateServerDefaultCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateServerDefaultCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateServerDefaultCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateServerDefaultCredentials(val *UpdateServerDefaultCredentials) *NullableUpdateServerDefaultCredentials {
	return &NullableUpdateServerDefaultCredentials{value: val, isSet: true}
}

func (v NullableUpdateServerDefaultCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateServerDefaultCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


