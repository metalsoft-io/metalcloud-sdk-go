/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateNetworkEndpointGroupLogicalNetwork type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateNetworkEndpointGroupLogicalNetwork{}

// CreateNetworkEndpointGroupLogicalNetwork struct for CreateNetworkEndpointGroupLogicalNetwork
type CreateNetworkEndpointGroupLogicalNetwork struct {
	// The logical network ID.
	LogicalNetworkId string `json:"logicalNetworkId"`
	// Whether the logical network is tagged.
	Tagged bool `json:"tagged"`
	// The access mode of the network endpoint group
	AccessMode string `json:"accessMode"`
	// The redundancy configuration
	Redundancy NullableRedundancyConfig `json:"redundancy,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateNetworkEndpointGroupLogicalNetwork CreateNetworkEndpointGroupLogicalNetwork

// NewCreateNetworkEndpointGroupLogicalNetwork instantiates a new CreateNetworkEndpointGroupLogicalNetwork object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateNetworkEndpointGroupLogicalNetwork(logicalNetworkId string, tagged bool, accessMode string) *CreateNetworkEndpointGroupLogicalNetwork {
	this := CreateNetworkEndpointGroupLogicalNetwork{}
	this.LogicalNetworkId = logicalNetworkId
	this.Tagged = tagged
	this.AccessMode = accessMode
	return &this
}

// NewCreateNetworkEndpointGroupLogicalNetworkWithDefaults instantiates a new CreateNetworkEndpointGroupLogicalNetwork object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateNetworkEndpointGroupLogicalNetworkWithDefaults() *CreateNetworkEndpointGroupLogicalNetwork {
	this := CreateNetworkEndpointGroupLogicalNetwork{}
	return &this
}

// GetLogicalNetworkId returns the LogicalNetworkId field value
func (o *CreateNetworkEndpointGroupLogicalNetwork) GetLogicalNetworkId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LogicalNetworkId
}

// GetLogicalNetworkIdOk returns a tuple with the LogicalNetworkId field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkEndpointGroupLogicalNetwork) GetLogicalNetworkIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LogicalNetworkId, true
}

// SetLogicalNetworkId sets field value
func (o *CreateNetworkEndpointGroupLogicalNetwork) SetLogicalNetworkId(v string) {
	o.LogicalNetworkId = v
}

// GetTagged returns the Tagged field value
func (o *CreateNetworkEndpointGroupLogicalNetwork) GetTagged() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Tagged
}

// GetTaggedOk returns a tuple with the Tagged field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkEndpointGroupLogicalNetwork) GetTaggedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Tagged, true
}

// SetTagged sets field value
func (o *CreateNetworkEndpointGroupLogicalNetwork) SetTagged(v bool) {
	o.Tagged = v
}

// GetAccessMode returns the AccessMode field value
func (o *CreateNetworkEndpointGroupLogicalNetwork) GetAccessMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessMode
}

// GetAccessModeOk returns a tuple with the AccessMode field value
// and a boolean to check if the value has been set.
func (o *CreateNetworkEndpointGroupLogicalNetwork) GetAccessModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessMode, true
}

// SetAccessMode sets field value
func (o *CreateNetworkEndpointGroupLogicalNetwork) SetAccessMode(v string) {
	o.AccessMode = v
}

// GetRedundancy returns the Redundancy field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateNetworkEndpointGroupLogicalNetwork) GetRedundancy() RedundancyConfig {
	if o == nil || IsNil(o.Redundancy.Get()) {
		var ret RedundancyConfig
		return ret
	}
	return *o.Redundancy.Get()
}

// GetRedundancyOk returns a tuple with the Redundancy field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateNetworkEndpointGroupLogicalNetwork) GetRedundancyOk() (*RedundancyConfig, bool) {
	if o == nil {
		return nil, false
	}
	return o.Redundancy.Get(), o.Redundancy.IsSet()
}

// HasRedundancy returns a boolean if a field has been set.
func (o *CreateNetworkEndpointGroupLogicalNetwork) HasRedundancy() bool {
	if o != nil && o.Redundancy.IsSet() {
		return true
	}

	return false
}

// SetRedundancy gets a reference to the given NullableRedundancyConfig and assigns it to the Redundancy field.
func (o *CreateNetworkEndpointGroupLogicalNetwork) SetRedundancy(v RedundancyConfig) {
	o.Redundancy.Set(&v)
}
// SetRedundancyNil sets the value for Redundancy to be an explicit nil
func (o *CreateNetworkEndpointGroupLogicalNetwork) SetRedundancyNil() {
	o.Redundancy.Set(nil)
}

// UnsetRedundancy ensures that no value is present for Redundancy, not even an explicit nil
func (o *CreateNetworkEndpointGroupLogicalNetwork) UnsetRedundancy() {
	o.Redundancy.Unset()
}

func (o CreateNetworkEndpointGroupLogicalNetwork) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateNetworkEndpointGroupLogicalNetwork) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["logicalNetworkId"] = o.LogicalNetworkId
	toSerialize["tagged"] = o.Tagged
	toSerialize["accessMode"] = o.AccessMode
	if o.Redundancy.IsSet() {
		toSerialize["redundancy"] = o.Redundancy.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateNetworkEndpointGroupLogicalNetwork) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"logicalNetworkId",
		"tagged",
		"accessMode",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateNetworkEndpointGroupLogicalNetwork := _CreateNetworkEndpointGroupLogicalNetwork{}

	err = json.Unmarshal(data, &varCreateNetworkEndpointGroupLogicalNetwork)

	if err != nil {
		return err
	}

	*o = CreateNetworkEndpointGroupLogicalNetwork(varCreateNetworkEndpointGroupLogicalNetwork)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "logicalNetworkId")
		delete(additionalProperties, "tagged")
		delete(additionalProperties, "accessMode")
		delete(additionalProperties, "redundancy")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateNetworkEndpointGroupLogicalNetwork struct {
	value *CreateNetworkEndpointGroupLogicalNetwork
	isSet bool
}

func (v NullableCreateNetworkEndpointGroupLogicalNetwork) Get() *CreateNetworkEndpointGroupLogicalNetwork {
	return v.value
}

func (v *NullableCreateNetworkEndpointGroupLogicalNetwork) Set(val *CreateNetworkEndpointGroupLogicalNetwork) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateNetworkEndpointGroupLogicalNetwork) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateNetworkEndpointGroupLogicalNetwork) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateNetworkEndpointGroupLogicalNetwork(val *CreateNetworkEndpointGroupLogicalNetwork) *NullableCreateNetworkEndpointGroupLogicalNetwork {
	return &NullableCreateNetworkEndpointGroupLogicalNetwork{value: val, isSet: true}
}

func (v NullableCreateNetworkEndpointGroupLogicalNetwork) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateNetworkEndpointGroupLogicalNetwork) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


