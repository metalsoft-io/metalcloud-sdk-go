/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the AgentConnectedInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AgentConnectedInfo{}

// AgentConnectedInfo struct for AgentConnectedInfo
type AgentConnectedInfo struct {
	// Agent identifier
	AgentId string `json:"agentId"`
	// Host name
	Hostname string `json:"hostname"`
	// Application name
	ApplicationName string `json:"applicationName"`
	// Connection timestamp
	Timestamp string `json:"timestamp"`
	// Agent capabilities
	Capabilities AgentCapabilities `json:"capabilities"`
	// IP information
	IpInfo AgentIpInfo `json:"ipInfo"`
	AdditionalProperties map[string]interface{}
}

type _AgentConnectedInfo AgentConnectedInfo

// NewAgentConnectedInfo instantiates a new AgentConnectedInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAgentConnectedInfo(agentId string, hostname string, applicationName string, timestamp string, capabilities AgentCapabilities, ipInfo AgentIpInfo) *AgentConnectedInfo {
	this := AgentConnectedInfo{}
	this.AgentId = agentId
	this.Hostname = hostname
	this.ApplicationName = applicationName
	this.Timestamp = timestamp
	this.Capabilities = capabilities
	this.IpInfo = ipInfo
	return &this
}

// NewAgentConnectedInfoWithDefaults instantiates a new AgentConnectedInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAgentConnectedInfoWithDefaults() *AgentConnectedInfo {
	this := AgentConnectedInfo{}
	return &this
}

// GetAgentId returns the AgentId field value
func (o *AgentConnectedInfo) GetAgentId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value
// and a boolean to check if the value has been set.
func (o *AgentConnectedInfo) GetAgentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AgentId, true
}

// SetAgentId sets field value
func (o *AgentConnectedInfo) SetAgentId(v string) {
	o.AgentId = v
}

// GetHostname returns the Hostname field value
func (o *AgentConnectedInfo) GetHostname() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value
// and a boolean to check if the value has been set.
func (o *AgentConnectedInfo) GetHostnameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Hostname, true
}

// SetHostname sets field value
func (o *AgentConnectedInfo) SetHostname(v string) {
	o.Hostname = v
}

// GetApplicationName returns the ApplicationName field value
func (o *AgentConnectedInfo) GetApplicationName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ApplicationName
}

// GetApplicationNameOk returns a tuple with the ApplicationName field value
// and a boolean to check if the value has been set.
func (o *AgentConnectedInfo) GetApplicationNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ApplicationName, true
}

// SetApplicationName sets field value
func (o *AgentConnectedInfo) SetApplicationName(v string) {
	o.ApplicationName = v
}

// GetTimestamp returns the Timestamp field value
func (o *AgentConnectedInfo) GetTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value
// and a boolean to check if the value has been set.
func (o *AgentConnectedInfo) GetTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Timestamp, true
}

// SetTimestamp sets field value
func (o *AgentConnectedInfo) SetTimestamp(v string) {
	o.Timestamp = v
}

// GetCapabilities returns the Capabilities field value
func (o *AgentConnectedInfo) GetCapabilities() AgentCapabilities {
	if o == nil {
		var ret AgentCapabilities
		return ret
	}

	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value
// and a boolean to check if the value has been set.
func (o *AgentConnectedInfo) GetCapabilitiesOk() (*AgentCapabilities, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Capabilities, true
}

// SetCapabilities sets field value
func (o *AgentConnectedInfo) SetCapabilities(v AgentCapabilities) {
	o.Capabilities = v
}

// GetIpInfo returns the IpInfo field value
func (o *AgentConnectedInfo) GetIpInfo() AgentIpInfo {
	if o == nil {
		var ret AgentIpInfo
		return ret
	}

	return o.IpInfo
}

// GetIpInfoOk returns a tuple with the IpInfo field value
// and a boolean to check if the value has been set.
func (o *AgentConnectedInfo) GetIpInfoOk() (*AgentIpInfo, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IpInfo, true
}

// SetIpInfo sets field value
func (o *AgentConnectedInfo) SetIpInfo(v AgentIpInfo) {
	o.IpInfo = v
}

func (o AgentConnectedInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AgentConnectedInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["agentId"] = o.AgentId
	toSerialize["hostname"] = o.Hostname
	toSerialize["applicationName"] = o.ApplicationName
	toSerialize["timestamp"] = o.Timestamp
	toSerialize["capabilities"] = o.Capabilities
	toSerialize["ipInfo"] = o.IpInfo

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AgentConnectedInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"agentId",
		"hostname",
		"applicationName",
		"timestamp",
		"capabilities",
		"ipInfo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAgentConnectedInfo := _AgentConnectedInfo{}

	err = json.Unmarshal(data, &varAgentConnectedInfo)

	if err != nil {
		return err
	}

	*o = AgentConnectedInfo(varAgentConnectedInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "agentId")
		delete(additionalProperties, "hostname")
		delete(additionalProperties, "applicationName")
		delete(additionalProperties, "timestamp")
		delete(additionalProperties, "capabilities")
		delete(additionalProperties, "ipInfo")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAgentConnectedInfo struct {
	value *AgentConnectedInfo
	isSet bool
}

func (v NullableAgentConnectedInfo) Get() *AgentConnectedInfo {
	return v.value
}

func (v *NullableAgentConnectedInfo) Set(val *AgentConnectedInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentConnectedInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentConnectedInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentConnectedInfo(val *AgentConnectedInfo) *NullableAgentConnectedInfo {
	return &NullableAgentConnectedInfo{value: val, isSet: true}
}

func (v NullableAgentConnectedInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentConnectedInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


