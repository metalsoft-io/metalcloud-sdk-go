/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateVMPoolHostInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateVMPoolHostInterface{}

// UpdateVMPoolHostInterface struct for UpdateVMPoolHostInterface
type UpdateVMPoolHostInterface struct {
	// Id of the network device
	NetworkDeviceId *float32 `json:"networkDeviceId,omitempty"`
	// Name of the network device interface
	NetworkDeviceInterfaceName *float32 `json:"networkDeviceInterfaceName,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateVMPoolHostInterface UpdateVMPoolHostInterface

// NewUpdateVMPoolHostInterface instantiates a new UpdateVMPoolHostInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateVMPoolHostInterface() *UpdateVMPoolHostInterface {
	this := UpdateVMPoolHostInterface{}
	return &this
}

// NewUpdateVMPoolHostInterfaceWithDefaults instantiates a new UpdateVMPoolHostInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateVMPoolHostInterfaceWithDefaults() *UpdateVMPoolHostInterface {
	this := UpdateVMPoolHostInterface{}
	return &this
}

// GetNetworkDeviceId returns the NetworkDeviceId field value if set, zero value otherwise.
func (o *UpdateVMPoolHostInterface) GetNetworkDeviceId() float32 {
	if o == nil || IsNil(o.NetworkDeviceId) {
		var ret float32
		return ret
	}
	return *o.NetworkDeviceId
}

// GetNetworkDeviceIdOk returns a tuple with the NetworkDeviceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVMPoolHostInterface) GetNetworkDeviceIdOk() (*float32, bool) {
	if o == nil || IsNil(o.NetworkDeviceId) {
		return nil, false
	}
	return o.NetworkDeviceId, true
}

// HasNetworkDeviceId returns a boolean if a field has been set.
func (o *UpdateVMPoolHostInterface) HasNetworkDeviceId() bool {
	if o != nil && !IsNil(o.NetworkDeviceId) {
		return true
	}

	return false
}

// SetNetworkDeviceId gets a reference to the given float32 and assigns it to the NetworkDeviceId field.
func (o *UpdateVMPoolHostInterface) SetNetworkDeviceId(v float32) {
	o.NetworkDeviceId = &v
}

// GetNetworkDeviceInterfaceName returns the NetworkDeviceInterfaceName field value if set, zero value otherwise.
func (o *UpdateVMPoolHostInterface) GetNetworkDeviceInterfaceName() float32 {
	if o == nil || IsNil(o.NetworkDeviceInterfaceName) {
		var ret float32
		return ret
	}
	return *o.NetworkDeviceInterfaceName
}

// GetNetworkDeviceInterfaceNameOk returns a tuple with the NetworkDeviceInterfaceName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateVMPoolHostInterface) GetNetworkDeviceInterfaceNameOk() (*float32, bool) {
	if o == nil || IsNil(o.NetworkDeviceInterfaceName) {
		return nil, false
	}
	return o.NetworkDeviceInterfaceName, true
}

// HasNetworkDeviceInterfaceName returns a boolean if a field has been set.
func (o *UpdateVMPoolHostInterface) HasNetworkDeviceInterfaceName() bool {
	if o != nil && !IsNil(o.NetworkDeviceInterfaceName) {
		return true
	}

	return false
}

// SetNetworkDeviceInterfaceName gets a reference to the given float32 and assigns it to the NetworkDeviceInterfaceName field.
func (o *UpdateVMPoolHostInterface) SetNetworkDeviceInterfaceName(v float32) {
	o.NetworkDeviceInterfaceName = &v
}

func (o UpdateVMPoolHostInterface) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateVMPoolHostInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NetworkDeviceId) {
		toSerialize["networkDeviceId"] = o.NetworkDeviceId
	}
	if !IsNil(o.NetworkDeviceInterfaceName) {
		toSerialize["networkDeviceInterfaceName"] = o.NetworkDeviceInterfaceName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateVMPoolHostInterface) UnmarshalJSON(data []byte) (err error) {
	varUpdateVMPoolHostInterface := _UpdateVMPoolHostInterface{}

	err = json.Unmarshal(data, &varUpdateVMPoolHostInterface)

	if err != nil {
		return err
	}

	*o = UpdateVMPoolHostInterface(varUpdateVMPoolHostInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "networkDeviceId")
		delete(additionalProperties, "networkDeviceInterfaceName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateVMPoolHostInterface struct {
	value *UpdateVMPoolHostInterface
	isSet bool
}

func (v NullableUpdateVMPoolHostInterface) Get() *UpdateVMPoolHostInterface {
	return v.value
}

func (v *NullableUpdateVMPoolHostInterface) Set(val *UpdateVMPoolHostInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateVMPoolHostInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateVMPoolHostInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateVMPoolHostInterface(val *UpdateVMPoolHostInterface) *NullableUpdateVMPoolHostInterface {
	return &NullableUpdateVMPoolHostInterface{value: val, isSet: true}
}

func (v NullableUpdateVMPoolHostInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateVMPoolHostInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


