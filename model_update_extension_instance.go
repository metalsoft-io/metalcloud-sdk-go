/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateExtensionInstance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateExtensionInstance{}

// UpdateExtensionInstance struct for UpdateExtensionInstance
type UpdateExtensionInstance struct {
	// Input variables values.
	InputVariables []ExtensionVariable `json:"inputVariables,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateExtensionInstance UpdateExtensionInstance

// NewUpdateExtensionInstance instantiates a new UpdateExtensionInstance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateExtensionInstance() *UpdateExtensionInstance {
	this := UpdateExtensionInstance{}
	return &this
}

// NewUpdateExtensionInstanceWithDefaults instantiates a new UpdateExtensionInstance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateExtensionInstanceWithDefaults() *UpdateExtensionInstance {
	this := UpdateExtensionInstance{}
	return &this
}

// GetInputVariables returns the InputVariables field value if set, zero value otherwise.
func (o *UpdateExtensionInstance) GetInputVariables() []ExtensionVariable {
	if o == nil || IsNil(o.InputVariables) {
		var ret []ExtensionVariable
		return ret
	}
	return o.InputVariables
}

// GetInputVariablesOk returns a tuple with the InputVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateExtensionInstance) GetInputVariablesOk() ([]ExtensionVariable, bool) {
	if o == nil || IsNil(o.InputVariables) {
		return nil, false
	}
	return o.InputVariables, true
}

// HasInputVariables returns a boolean if a field has been set.
func (o *UpdateExtensionInstance) HasInputVariables() bool {
	if o != nil && !IsNil(o.InputVariables) {
		return true
	}

	return false
}

// SetInputVariables gets a reference to the given []ExtensionVariable and assigns it to the InputVariables field.
func (o *UpdateExtensionInstance) SetInputVariables(v []ExtensionVariable) {
	o.InputVariables = v
}

func (o UpdateExtensionInstance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateExtensionInstance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InputVariables) {
		toSerialize["inputVariables"] = o.InputVariables
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateExtensionInstance) UnmarshalJSON(data []byte) (err error) {
	varUpdateExtensionInstance := _UpdateExtensionInstance{}

	err = json.Unmarshal(data, &varUpdateExtensionInstance)

	if err != nil {
		return err
	}

	*o = UpdateExtensionInstance(varUpdateExtensionInstance)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "inputVariables")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateExtensionInstance struct {
	value *UpdateExtensionInstance
	isSet bool
}

func (v NullableUpdateExtensionInstance) Get() *UpdateExtensionInstance {
	return v.value
}

func (v *NullableUpdateExtensionInstance) Set(val *UpdateExtensionInstance) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateExtensionInstance) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateExtensionInstance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateExtensionInstance(val *UpdateExtensionInstance) *NullableUpdateExtensionInstance {
	return &NullableUpdateExtensionInstance{value: val, isSet: true}
}

func (v NullableUpdateExtensionInstance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateExtensionInstance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


