/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateExternalConnection type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateExternalConnection{}

// CreateExternalConnection struct for CreateExternalConnection
type CreateExternalConnection struct {
	// The external connection unique label
	Label string `json:"label" validate:"regexp=^(?!.*-$)[a-z]{1}[a-z0-9-]{0,62}$"`
	// The external connection name
	Name string `json:"name"`
	// The ID of the Fabric identifier this entity belongs to.
	FabricId float32 `json:"fabricId"`
	// The external connection interfaces associated with this external connection
	ExternalConnectionInterfaces []CreateExternalConnectionInterface `json:"externalConnectionInterfaces,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateExternalConnection CreateExternalConnection

// NewCreateExternalConnection instantiates a new CreateExternalConnection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateExternalConnection(label string, name string, fabricId float32) *CreateExternalConnection {
	this := CreateExternalConnection{}
	this.Label = label
	this.Name = name
	this.FabricId = fabricId
	return &this
}

// NewCreateExternalConnectionWithDefaults instantiates a new CreateExternalConnection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateExternalConnectionWithDefaults() *CreateExternalConnection {
	this := CreateExternalConnection{}
	return &this
}

// GetLabel returns the Label field value
func (o *CreateExternalConnection) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *CreateExternalConnection) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *CreateExternalConnection) SetLabel(v string) {
	o.Label = v
}

// GetName returns the Name field value
func (o *CreateExternalConnection) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateExternalConnection) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateExternalConnection) SetName(v string) {
	o.Name = v
}

// GetFabricId returns the FabricId field value
func (o *CreateExternalConnection) GetFabricId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.FabricId
}

// GetFabricIdOk returns a tuple with the FabricId field value
// and a boolean to check if the value has been set.
func (o *CreateExternalConnection) GetFabricIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FabricId, true
}

// SetFabricId sets field value
func (o *CreateExternalConnection) SetFabricId(v float32) {
	o.FabricId = v
}

// GetExternalConnectionInterfaces returns the ExternalConnectionInterfaces field value if set, zero value otherwise.
func (o *CreateExternalConnection) GetExternalConnectionInterfaces() []CreateExternalConnectionInterface {
	if o == nil || IsNil(o.ExternalConnectionInterfaces) {
		var ret []CreateExternalConnectionInterface
		return ret
	}
	return o.ExternalConnectionInterfaces
}

// GetExternalConnectionInterfacesOk returns a tuple with the ExternalConnectionInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateExternalConnection) GetExternalConnectionInterfacesOk() ([]CreateExternalConnectionInterface, bool) {
	if o == nil || IsNil(o.ExternalConnectionInterfaces) {
		return nil, false
	}
	return o.ExternalConnectionInterfaces, true
}

// HasExternalConnectionInterfaces returns a boolean if a field has been set.
func (o *CreateExternalConnection) HasExternalConnectionInterfaces() bool {
	if o != nil && !IsNil(o.ExternalConnectionInterfaces) {
		return true
	}

	return false
}

// SetExternalConnectionInterfaces gets a reference to the given []CreateExternalConnectionInterface and assigns it to the ExternalConnectionInterfaces field.
func (o *CreateExternalConnection) SetExternalConnectionInterfaces(v []CreateExternalConnectionInterface) {
	o.ExternalConnectionInterfaces = v
}

func (o CreateExternalConnection) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateExternalConnection) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["label"] = o.Label
	toSerialize["name"] = o.Name
	toSerialize["fabricId"] = o.FabricId
	if !IsNil(o.ExternalConnectionInterfaces) {
		toSerialize["externalConnectionInterfaces"] = o.ExternalConnectionInterfaces
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateExternalConnection) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label",
		"name",
		"fabricId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateExternalConnection := _CreateExternalConnection{}

	err = json.Unmarshal(data, &varCreateExternalConnection)

	if err != nil {
		return err
	}

	*o = CreateExternalConnection(varCreateExternalConnection)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "label")
		delete(additionalProperties, "name")
		delete(additionalProperties, "fabricId")
		delete(additionalProperties, "externalConnectionInterfaces")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateExternalConnection struct {
	value *CreateExternalConnection
	isSet bool
}

func (v NullableCreateExternalConnection) Get() *CreateExternalConnection {
	return v.value
}

func (v *NullableCreateExternalConnection) Set(val *CreateExternalConnection) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateExternalConnection) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateExternalConnection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateExternalConnection(val *CreateExternalConnection) *NullableCreateExternalConnection {
	return &NullableCreateExternalConnection{value: val, isSet: true}
}

func (v NullableCreateExternalConnection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateExternalConnection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


