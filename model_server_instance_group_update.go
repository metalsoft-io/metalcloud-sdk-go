/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ServerInstanceGroupUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerInstanceGroupUpdate{}

// ServerInstanceGroupUpdate struct for ServerInstanceGroupUpdate
type ServerInstanceGroupUpdate struct {
	// The server instance group label. Will be automatically generated if not provided.
	Label *string `json:"label,omitempty"`
	// The group's default server profile. Useful when creating a server instance with a group id set, the profile will be automatically applied.
	DefaultServerProfileID *int32 `json:"defaultServerProfileID,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServerInstanceGroupUpdate ServerInstanceGroupUpdate

// NewServerInstanceGroupUpdate instantiates a new ServerInstanceGroupUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerInstanceGroupUpdate() *ServerInstanceGroupUpdate {
	this := ServerInstanceGroupUpdate{}
	return &this
}

// NewServerInstanceGroupUpdateWithDefaults instantiates a new ServerInstanceGroupUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerInstanceGroupUpdateWithDefaults() *ServerInstanceGroupUpdate {
	this := ServerInstanceGroupUpdate{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ServerInstanceGroupUpdate) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroupUpdate) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ServerInstanceGroupUpdate) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *ServerInstanceGroupUpdate) SetLabel(v string) {
	o.Label = &v
}

// GetDefaultServerProfileID returns the DefaultServerProfileID field value if set, zero value otherwise.
func (o *ServerInstanceGroupUpdate) GetDefaultServerProfileID() int32 {
	if o == nil || IsNil(o.DefaultServerProfileID) {
		var ret int32
		return ret
	}
	return *o.DefaultServerProfileID
}

// GetDefaultServerProfileIDOk returns a tuple with the DefaultServerProfileID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceGroupUpdate) GetDefaultServerProfileIDOk() (*int32, bool) {
	if o == nil || IsNil(o.DefaultServerProfileID) {
		return nil, false
	}
	return o.DefaultServerProfileID, true
}

// HasDefaultServerProfileID returns a boolean if a field has been set.
func (o *ServerInstanceGroupUpdate) HasDefaultServerProfileID() bool {
	if o != nil && !IsNil(o.DefaultServerProfileID) {
		return true
	}

	return false
}

// SetDefaultServerProfileID gets a reference to the given int32 and assigns it to the DefaultServerProfileID field.
func (o *ServerInstanceGroupUpdate) SetDefaultServerProfileID(v int32) {
	o.DefaultServerProfileID = &v
}

func (o ServerInstanceGroupUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerInstanceGroupUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.DefaultServerProfileID) {
		toSerialize["defaultServerProfileID"] = o.DefaultServerProfileID
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServerInstanceGroupUpdate) UnmarshalJSON(data []byte) (err error) {
	varServerInstanceGroupUpdate := _ServerInstanceGroupUpdate{}

	err = json.Unmarshal(data, &varServerInstanceGroupUpdate)

	if err != nil {
		return err
	}

	*o = ServerInstanceGroupUpdate(varServerInstanceGroupUpdate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "label")
		delete(additionalProperties, "defaultServerProfileID")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServerInstanceGroupUpdate struct {
	value *ServerInstanceGroupUpdate
	isSet bool
}

func (v NullableServerInstanceGroupUpdate) Get() *ServerInstanceGroupUpdate {
	return v.value
}

func (v *NullableServerInstanceGroupUpdate) Set(val *ServerInstanceGroupUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableServerInstanceGroupUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableServerInstanceGroupUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerInstanceGroupUpdate(val *ServerInstanceGroupUpdate) *NullableServerInstanceGroupUpdate {
	return &NullableServerInstanceGroupUpdate{value: val, isSet: true}
}

func (v NullableServerInstanceGroupUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerInstanceGroupUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


