/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateFirmwareBaselineDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFirmwareBaselineDto{}

// CreateFirmwareBaselineDto struct for CreateFirmwareBaselineDto
type CreateFirmwareBaselineDto struct {
	ServerFirmwareBaselineName string `json:"serverFirmwareBaselineName"`
	ServerFirmwareBaselineDescription *string `json:"serverFirmwareBaselineDescription,omitempty"`
	ServerFirmwareBaselineCatalogJson *string `json:"serverFirmwareBaselineCatalogJson,omitempty"`
	ServerFirmwareBaselineLevel BaselineLevelType `json:"serverFirmwareBaselineLevel"`
	ServerFirmwareBaselineLevelFilterJson string `json:"serverFirmwareBaselineLevelFilterJson"`
	AdditionalProperties map[string]interface{}
}

type _CreateFirmwareBaselineDto CreateFirmwareBaselineDto

// NewCreateFirmwareBaselineDto instantiates a new CreateFirmwareBaselineDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFirmwareBaselineDto(serverFirmwareBaselineName string, serverFirmwareBaselineLevel BaselineLevelType, serverFirmwareBaselineLevelFilterJson string) *CreateFirmwareBaselineDto {
	this := CreateFirmwareBaselineDto{}
	this.ServerFirmwareBaselineName = serverFirmwareBaselineName
	this.ServerFirmwareBaselineLevel = serverFirmwareBaselineLevel
	this.ServerFirmwareBaselineLevelFilterJson = serverFirmwareBaselineLevelFilterJson
	return &this
}

// NewCreateFirmwareBaselineDtoWithDefaults instantiates a new CreateFirmwareBaselineDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFirmwareBaselineDtoWithDefaults() *CreateFirmwareBaselineDto {
	this := CreateFirmwareBaselineDto{}
	return &this
}

// GetServerFirmwareBaselineName returns the ServerFirmwareBaselineName field value
func (o *CreateFirmwareBaselineDto) GetServerFirmwareBaselineName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerFirmwareBaselineName
}

// GetServerFirmwareBaselineNameOk returns a tuple with the ServerFirmwareBaselineName field value
// and a boolean to check if the value has been set.
func (o *CreateFirmwareBaselineDto) GetServerFirmwareBaselineNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerFirmwareBaselineName, true
}

// SetServerFirmwareBaselineName sets field value
func (o *CreateFirmwareBaselineDto) SetServerFirmwareBaselineName(v string) {
	o.ServerFirmwareBaselineName = v
}

// GetServerFirmwareBaselineDescription returns the ServerFirmwareBaselineDescription field value if set, zero value otherwise.
func (o *CreateFirmwareBaselineDto) GetServerFirmwareBaselineDescription() string {
	if o == nil || IsNil(o.ServerFirmwareBaselineDescription) {
		var ret string
		return ret
	}
	return *o.ServerFirmwareBaselineDescription
}

// GetServerFirmwareBaselineDescriptionOk returns a tuple with the ServerFirmwareBaselineDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFirmwareBaselineDto) GetServerFirmwareBaselineDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ServerFirmwareBaselineDescription) {
		return nil, false
	}
	return o.ServerFirmwareBaselineDescription, true
}

// HasServerFirmwareBaselineDescription returns a boolean if a field has been set.
func (o *CreateFirmwareBaselineDto) HasServerFirmwareBaselineDescription() bool {
	if o != nil && !IsNil(o.ServerFirmwareBaselineDescription) {
		return true
	}

	return false
}

// SetServerFirmwareBaselineDescription gets a reference to the given string and assigns it to the ServerFirmwareBaselineDescription field.
func (o *CreateFirmwareBaselineDto) SetServerFirmwareBaselineDescription(v string) {
	o.ServerFirmwareBaselineDescription = &v
}

// GetServerFirmwareBaselineCatalogJson returns the ServerFirmwareBaselineCatalogJson field value if set, zero value otherwise.
func (o *CreateFirmwareBaselineDto) GetServerFirmwareBaselineCatalogJson() string {
	if o == nil || IsNil(o.ServerFirmwareBaselineCatalogJson) {
		var ret string
		return ret
	}
	return *o.ServerFirmwareBaselineCatalogJson
}

// GetServerFirmwareBaselineCatalogJsonOk returns a tuple with the ServerFirmwareBaselineCatalogJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFirmwareBaselineDto) GetServerFirmwareBaselineCatalogJsonOk() (*string, bool) {
	if o == nil || IsNil(o.ServerFirmwareBaselineCatalogJson) {
		return nil, false
	}
	return o.ServerFirmwareBaselineCatalogJson, true
}

// HasServerFirmwareBaselineCatalogJson returns a boolean if a field has been set.
func (o *CreateFirmwareBaselineDto) HasServerFirmwareBaselineCatalogJson() bool {
	if o != nil && !IsNil(o.ServerFirmwareBaselineCatalogJson) {
		return true
	}

	return false
}

// SetServerFirmwareBaselineCatalogJson gets a reference to the given string and assigns it to the ServerFirmwareBaselineCatalogJson field.
func (o *CreateFirmwareBaselineDto) SetServerFirmwareBaselineCatalogJson(v string) {
	o.ServerFirmwareBaselineCatalogJson = &v
}

// GetServerFirmwareBaselineLevel returns the ServerFirmwareBaselineLevel field value
func (o *CreateFirmwareBaselineDto) GetServerFirmwareBaselineLevel() BaselineLevelType {
	if o == nil {
		var ret BaselineLevelType
		return ret
	}

	return o.ServerFirmwareBaselineLevel
}

// GetServerFirmwareBaselineLevelOk returns a tuple with the ServerFirmwareBaselineLevel field value
// and a boolean to check if the value has been set.
func (o *CreateFirmwareBaselineDto) GetServerFirmwareBaselineLevelOk() (*BaselineLevelType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerFirmwareBaselineLevel, true
}

// SetServerFirmwareBaselineLevel sets field value
func (o *CreateFirmwareBaselineDto) SetServerFirmwareBaselineLevel(v BaselineLevelType) {
	o.ServerFirmwareBaselineLevel = v
}

// GetServerFirmwareBaselineLevelFilterJson returns the ServerFirmwareBaselineLevelFilterJson field value
func (o *CreateFirmwareBaselineDto) GetServerFirmwareBaselineLevelFilterJson() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerFirmwareBaselineLevelFilterJson
}

// GetServerFirmwareBaselineLevelFilterJsonOk returns a tuple with the ServerFirmwareBaselineLevelFilterJson field value
// and a boolean to check if the value has been set.
func (o *CreateFirmwareBaselineDto) GetServerFirmwareBaselineLevelFilterJsonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerFirmwareBaselineLevelFilterJson, true
}

// SetServerFirmwareBaselineLevelFilterJson sets field value
func (o *CreateFirmwareBaselineDto) SetServerFirmwareBaselineLevelFilterJson(v string) {
	o.ServerFirmwareBaselineLevelFilterJson = v
}

func (o CreateFirmwareBaselineDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFirmwareBaselineDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["serverFirmwareBaselineName"] = o.ServerFirmwareBaselineName
	if !IsNil(o.ServerFirmwareBaselineDescription) {
		toSerialize["serverFirmwareBaselineDescription"] = o.ServerFirmwareBaselineDescription
	}
	if !IsNil(o.ServerFirmwareBaselineCatalogJson) {
		toSerialize["serverFirmwareBaselineCatalogJson"] = o.ServerFirmwareBaselineCatalogJson
	}
	toSerialize["serverFirmwareBaselineLevel"] = o.ServerFirmwareBaselineLevel
	toSerialize["serverFirmwareBaselineLevelFilterJson"] = o.ServerFirmwareBaselineLevelFilterJson

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateFirmwareBaselineDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"serverFirmwareBaselineName",
		"serverFirmwareBaselineLevel",
		"serverFirmwareBaselineLevelFilterJson",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateFirmwareBaselineDto := _CreateFirmwareBaselineDto{}

	err = json.Unmarshal(data, &varCreateFirmwareBaselineDto)

	if err != nil {
		return err
	}

	*o = CreateFirmwareBaselineDto(varCreateFirmwareBaselineDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "serverFirmwareBaselineName")
		delete(additionalProperties, "serverFirmwareBaselineDescription")
		delete(additionalProperties, "serverFirmwareBaselineCatalogJson")
		delete(additionalProperties, "serverFirmwareBaselineLevel")
		delete(additionalProperties, "serverFirmwareBaselineLevelFilterJson")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateFirmwareBaselineDto struct {
	value *CreateFirmwareBaselineDto
	isSet bool
}

func (v NullableCreateFirmwareBaselineDto) Get() *CreateFirmwareBaselineDto {
	return v.value
}

func (v *NullableCreateFirmwareBaselineDto) Set(val *CreateFirmwareBaselineDto) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFirmwareBaselineDto) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFirmwareBaselineDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFirmwareBaselineDto(val *CreateFirmwareBaselineDto) *NullableCreateFirmwareBaselineDto {
	return &NullableCreateFirmwareBaselineDto{value: val, isSet: true}
}

func (v NullableCreateFirmwareBaselineDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFirmwareBaselineDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


