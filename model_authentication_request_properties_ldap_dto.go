/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the AuthenticationRequestPropertiesLdapDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationRequestPropertiesLdapDto{}

// AuthenticationRequestPropertiesLdapDto struct for AuthenticationRequestPropertiesLdapDto
type AuthenticationRequestPropertiesLdapDto struct {
	// The one-time password.
	OneTimePassword *string `json:"oneTimePassword,omitempty"`
	// Whether to remember the login
	RememberLogin *bool `json:"rememberLogin,omitempty"`
	// Whether to test the credentials
	TestCredentials *bool `json:"testCredentials,omitempty"`
	// The data for the LDAP authentication request.
	Data map[string]interface{} `json:"data"`
	AdditionalProperties map[string]interface{}
}

type _AuthenticationRequestPropertiesLdapDto AuthenticationRequestPropertiesLdapDto

// NewAuthenticationRequestPropertiesLdapDto instantiates a new AuthenticationRequestPropertiesLdapDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationRequestPropertiesLdapDto(data map[string]interface{}) *AuthenticationRequestPropertiesLdapDto {
	this := AuthenticationRequestPropertiesLdapDto{}
	var rememberLogin bool = true
	this.RememberLogin = &rememberLogin
	var testCredentials bool = false
	this.TestCredentials = &testCredentials
	this.Data = data
	return &this
}

// NewAuthenticationRequestPropertiesLdapDtoWithDefaults instantiates a new AuthenticationRequestPropertiesLdapDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationRequestPropertiesLdapDtoWithDefaults() *AuthenticationRequestPropertiesLdapDto {
	this := AuthenticationRequestPropertiesLdapDto{}
	var rememberLogin bool = true
	this.RememberLogin = &rememberLogin
	var testCredentials bool = false
	this.TestCredentials = &testCredentials
	return &this
}

// GetOneTimePassword returns the OneTimePassword field value if set, zero value otherwise.
func (o *AuthenticationRequestPropertiesLdapDto) GetOneTimePassword() string {
	if o == nil || IsNil(o.OneTimePassword) {
		var ret string
		return ret
	}
	return *o.OneTimePassword
}

// GetOneTimePasswordOk returns a tuple with the OneTimePassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationRequestPropertiesLdapDto) GetOneTimePasswordOk() (*string, bool) {
	if o == nil || IsNil(o.OneTimePassword) {
		return nil, false
	}
	return o.OneTimePassword, true
}

// HasOneTimePassword returns a boolean if a field has been set.
func (o *AuthenticationRequestPropertiesLdapDto) HasOneTimePassword() bool {
	if o != nil && !IsNil(o.OneTimePassword) {
		return true
	}

	return false
}

// SetOneTimePassword gets a reference to the given string and assigns it to the OneTimePassword field.
func (o *AuthenticationRequestPropertiesLdapDto) SetOneTimePassword(v string) {
	o.OneTimePassword = &v
}

// GetRememberLogin returns the RememberLogin field value if set, zero value otherwise.
func (o *AuthenticationRequestPropertiesLdapDto) GetRememberLogin() bool {
	if o == nil || IsNil(o.RememberLogin) {
		var ret bool
		return ret
	}
	return *o.RememberLogin
}

// GetRememberLoginOk returns a tuple with the RememberLogin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationRequestPropertiesLdapDto) GetRememberLoginOk() (*bool, bool) {
	if o == nil || IsNil(o.RememberLogin) {
		return nil, false
	}
	return o.RememberLogin, true
}

// HasRememberLogin returns a boolean if a field has been set.
func (o *AuthenticationRequestPropertiesLdapDto) HasRememberLogin() bool {
	if o != nil && !IsNil(o.RememberLogin) {
		return true
	}

	return false
}

// SetRememberLogin gets a reference to the given bool and assigns it to the RememberLogin field.
func (o *AuthenticationRequestPropertiesLdapDto) SetRememberLogin(v bool) {
	o.RememberLogin = &v
}

// GetTestCredentials returns the TestCredentials field value if set, zero value otherwise.
func (o *AuthenticationRequestPropertiesLdapDto) GetTestCredentials() bool {
	if o == nil || IsNil(o.TestCredentials) {
		var ret bool
		return ret
	}
	return *o.TestCredentials
}

// GetTestCredentialsOk returns a tuple with the TestCredentials field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AuthenticationRequestPropertiesLdapDto) GetTestCredentialsOk() (*bool, bool) {
	if o == nil || IsNil(o.TestCredentials) {
		return nil, false
	}
	return o.TestCredentials, true
}

// HasTestCredentials returns a boolean if a field has been set.
func (o *AuthenticationRequestPropertiesLdapDto) HasTestCredentials() bool {
	if o != nil && !IsNil(o.TestCredentials) {
		return true
	}

	return false
}

// SetTestCredentials gets a reference to the given bool and assigns it to the TestCredentials field.
func (o *AuthenticationRequestPropertiesLdapDto) SetTestCredentials(v bool) {
	o.TestCredentials = &v
}

// GetData returns the Data field value
func (o *AuthenticationRequestPropertiesLdapDto) GetData() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
func (o *AuthenticationRequestPropertiesLdapDto) GetDataOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Data, true
}

// SetData sets field value
func (o *AuthenticationRequestPropertiesLdapDto) SetData(v map[string]interface{}) {
	o.Data = v
}

func (o AuthenticationRequestPropertiesLdapDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationRequestPropertiesLdapDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OneTimePassword) {
		toSerialize["oneTimePassword"] = o.OneTimePassword
	}
	if !IsNil(o.RememberLogin) {
		toSerialize["rememberLogin"] = o.RememberLogin
	}
	if !IsNil(o.TestCredentials) {
		toSerialize["testCredentials"] = o.TestCredentials
	}
	toSerialize["data"] = o.Data

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AuthenticationRequestPropertiesLdapDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuthenticationRequestPropertiesLdapDto := _AuthenticationRequestPropertiesLdapDto{}

	err = json.Unmarshal(data, &varAuthenticationRequestPropertiesLdapDto)

	if err != nil {
		return err
	}

	*o = AuthenticationRequestPropertiesLdapDto(varAuthenticationRequestPropertiesLdapDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "oneTimePassword")
		delete(additionalProperties, "rememberLogin")
		delete(additionalProperties, "testCredentials")
		delete(additionalProperties, "data")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAuthenticationRequestPropertiesLdapDto struct {
	value *AuthenticationRequestPropertiesLdapDto
	isSet bool
}

func (v NullableAuthenticationRequestPropertiesLdapDto) Get() *AuthenticationRequestPropertiesLdapDto {
	return v.value
}

func (v *NullableAuthenticationRequestPropertiesLdapDto) Set(val *AuthenticationRequestPropertiesLdapDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationRequestPropertiesLdapDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationRequestPropertiesLdapDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationRequestPropertiesLdapDto(val *AuthenticationRequestPropertiesLdapDto) *NullableAuthenticationRequestPropertiesLdapDto {
	return &NullableAuthenticationRequestPropertiesLdapDto{value: val, isSet: true}
}

func (v NullableAuthenticationRequestPropertiesLdapDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationRequestPropertiesLdapDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


