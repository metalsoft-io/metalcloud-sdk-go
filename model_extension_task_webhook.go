/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ExtensionTaskWebhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensionTaskWebhook{}

// ExtensionTaskWebhook struct for ExtensionTaskWebhook
type ExtensionTaskWebhook struct {
	// Webhook task endpoint.
	Endpoint *string `json:"endpoint,omitempty"`
	// Webhook task request body template.
	RequestTemplate *string `json:"requestTemplate,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExtensionTaskWebhook ExtensionTaskWebhook

// NewExtensionTaskWebhook instantiates a new ExtensionTaskWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensionTaskWebhook() *ExtensionTaskWebhook {
	this := ExtensionTaskWebhook{}
	return &this
}

// NewExtensionTaskWebhookWithDefaults instantiates a new ExtensionTaskWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionTaskWebhookWithDefaults() *ExtensionTaskWebhook {
	this := ExtensionTaskWebhook{}
	return &this
}

// GetEndpoint returns the Endpoint field value if set, zero value otherwise.
func (o *ExtensionTaskWebhook) GetEndpoint() string {
	if o == nil || IsNil(o.Endpoint) {
		var ret string
		return ret
	}
	return *o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionTaskWebhook) GetEndpointOk() (*string, bool) {
	if o == nil || IsNil(o.Endpoint) {
		return nil, false
	}
	return o.Endpoint, true
}

// HasEndpoint returns a boolean if a field has been set.
func (o *ExtensionTaskWebhook) HasEndpoint() bool {
	if o != nil && !IsNil(o.Endpoint) {
		return true
	}

	return false
}

// SetEndpoint gets a reference to the given string and assigns it to the Endpoint field.
func (o *ExtensionTaskWebhook) SetEndpoint(v string) {
	o.Endpoint = &v
}

// GetRequestTemplate returns the RequestTemplate field value if set, zero value otherwise.
func (o *ExtensionTaskWebhook) GetRequestTemplate() string {
	if o == nil || IsNil(o.RequestTemplate) {
		var ret string
		return ret
	}
	return *o.RequestTemplate
}

// GetRequestTemplateOk returns a tuple with the RequestTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionTaskWebhook) GetRequestTemplateOk() (*string, bool) {
	if o == nil || IsNil(o.RequestTemplate) {
		return nil, false
	}
	return o.RequestTemplate, true
}

// HasRequestTemplate returns a boolean if a field has been set.
func (o *ExtensionTaskWebhook) HasRequestTemplate() bool {
	if o != nil && !IsNil(o.RequestTemplate) {
		return true
	}

	return false
}

// SetRequestTemplate gets a reference to the given string and assigns it to the RequestTemplate field.
func (o *ExtensionTaskWebhook) SetRequestTemplate(v string) {
	o.RequestTemplate = &v
}

func (o ExtensionTaskWebhook) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensionTaskWebhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Endpoint) {
		toSerialize["endpoint"] = o.Endpoint
	}
	if !IsNil(o.RequestTemplate) {
		toSerialize["requestTemplate"] = o.RequestTemplate
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExtensionTaskWebhook) UnmarshalJSON(data []byte) (err error) {
	varExtensionTaskWebhook := _ExtensionTaskWebhook{}

	err = json.Unmarshal(data, &varExtensionTaskWebhook)

	if err != nil {
		return err
	}

	*o = ExtensionTaskWebhook(varExtensionTaskWebhook)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "endpoint")
		delete(additionalProperties, "requestTemplate")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExtensionTaskWebhook struct {
	value *ExtensionTaskWebhook
	isSet bool
}

func (v NullableExtensionTaskWebhook) Get() *ExtensionTaskWebhook {
	return v.value
}

func (v *NullableExtensionTaskWebhook) Set(val *ExtensionTaskWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensionTaskWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensionTaskWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensionTaskWebhook(val *ExtensionTaskWebhook) *NullableExtensionTaskWebhook {
	return &NullableExtensionTaskWebhook{value: val, isSet: true}
}

func (v NullableExtensionTaskWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensionTaskWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


