/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ServerInstanceCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerInstanceCredentials{}

// ServerInstanceCredentials struct for ServerInstanceCredentials
type ServerInstanceCredentials struct {
	// The initial username. Might be empty if password configuration is disabled.
	Username *string `json:"username,omitempty"`
	// The initial password. Might be empty if password configuration is disabled.
	InitialPassword *string `json:"initialPassword,omitempty"`
	// The SSH key public key.
	PublicSshKey *string `json:"publicSshKey,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServerInstanceCredentials ServerInstanceCredentials

// NewServerInstanceCredentials instantiates a new ServerInstanceCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerInstanceCredentials() *ServerInstanceCredentials {
	this := ServerInstanceCredentials{}
	return &this
}

// NewServerInstanceCredentialsWithDefaults instantiates a new ServerInstanceCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerInstanceCredentialsWithDefaults() *ServerInstanceCredentials {
	this := ServerInstanceCredentials{}
	return &this
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ServerInstanceCredentials) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceCredentials) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ServerInstanceCredentials) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ServerInstanceCredentials) SetUsername(v string) {
	o.Username = &v
}

// GetInitialPassword returns the InitialPassword field value if set, zero value otherwise.
func (o *ServerInstanceCredentials) GetInitialPassword() string {
	if o == nil || IsNil(o.InitialPassword) {
		var ret string
		return ret
	}
	return *o.InitialPassword
}

// GetInitialPasswordOk returns a tuple with the InitialPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceCredentials) GetInitialPasswordOk() (*string, bool) {
	if o == nil || IsNil(o.InitialPassword) {
		return nil, false
	}
	return o.InitialPassword, true
}

// HasInitialPassword returns a boolean if a field has been set.
func (o *ServerInstanceCredentials) HasInitialPassword() bool {
	if o != nil && !IsNil(o.InitialPassword) {
		return true
	}

	return false
}

// SetInitialPassword gets a reference to the given string and assigns it to the InitialPassword field.
func (o *ServerInstanceCredentials) SetInitialPassword(v string) {
	o.InitialPassword = &v
}

// GetPublicSshKey returns the PublicSshKey field value if set, zero value otherwise.
func (o *ServerInstanceCredentials) GetPublicSshKey() string {
	if o == nil || IsNil(o.PublicSshKey) {
		var ret string
		return ret
	}
	return *o.PublicSshKey
}

// GetPublicSshKeyOk returns a tuple with the PublicSshKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceCredentials) GetPublicSshKeyOk() (*string, bool) {
	if o == nil || IsNil(o.PublicSshKey) {
		return nil, false
	}
	return o.PublicSshKey, true
}

// HasPublicSshKey returns a boolean if a field has been set.
func (o *ServerInstanceCredentials) HasPublicSshKey() bool {
	if o != nil && !IsNil(o.PublicSshKey) {
		return true
	}

	return false
}

// SetPublicSshKey gets a reference to the given string and assigns it to the PublicSshKey field.
func (o *ServerInstanceCredentials) SetPublicSshKey(v string) {
	o.PublicSshKey = &v
}

func (o ServerInstanceCredentials) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerInstanceCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	if !IsNil(o.InitialPassword) {
		toSerialize["initialPassword"] = o.InitialPassword
	}
	if !IsNil(o.PublicSshKey) {
		toSerialize["publicSshKey"] = o.PublicSshKey
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServerInstanceCredentials) UnmarshalJSON(data []byte) (err error) {
	varServerInstanceCredentials := _ServerInstanceCredentials{}

	err = json.Unmarshal(data, &varServerInstanceCredentials)

	if err != nil {
		return err
	}

	*o = ServerInstanceCredentials(varServerInstanceCredentials)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "username")
		delete(additionalProperties, "initialPassword")
		delete(additionalProperties, "publicSshKey")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServerInstanceCredentials struct {
	value *ServerInstanceCredentials
	isSet bool
}

func (v NullableServerInstanceCredentials) Get() *ServerInstanceCredentials {
	return v.value
}

func (v *NullableServerInstanceCredentials) Set(val *ServerInstanceCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableServerInstanceCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableServerInstanceCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerInstanceCredentials(val *ServerInstanceCredentials) *NullableServerInstanceCredentials {
	return &NullableServerInstanceCredentials{value: val, isSet: true}
}

func (v NullableServerInstanceCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerInstanceCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


