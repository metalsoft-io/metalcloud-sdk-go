/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the JobGroupStatisticsWithoutIdDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &JobGroupStatisticsWithoutIdDto{}

// JobGroupStatisticsWithoutIdDto struct for JobGroupStatisticsWithoutIdDto
type JobGroupStatisticsWithoutIdDto struct {
	// Group created timestamp
	GroupCreatedTimestamp string `json:"groupCreatedTimestamp"`
	// Group completed timestamp
	GroupCompletedTimestamp string `json:"groupCompletedTimestamp"`
	// Total count of jobs with errors
	JobsThrownError int32 `json:"jobsThrownError"`
	// Total count of completed jobs
	JobsCompleted int32 `json:"jobsCompleted"`
	// Total count of jobs
	JobsTotal int32 `json:"jobsTotal"`
	AdditionalProperties map[string]interface{}
}

type _JobGroupStatisticsWithoutIdDto JobGroupStatisticsWithoutIdDto

// NewJobGroupStatisticsWithoutIdDto instantiates a new JobGroupStatisticsWithoutIdDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewJobGroupStatisticsWithoutIdDto(groupCreatedTimestamp string, groupCompletedTimestamp string, jobsThrownError int32, jobsCompleted int32, jobsTotal int32) *JobGroupStatisticsWithoutIdDto {
	this := JobGroupStatisticsWithoutIdDto{}
	this.GroupCreatedTimestamp = groupCreatedTimestamp
	this.GroupCompletedTimestamp = groupCompletedTimestamp
	this.JobsThrownError = jobsThrownError
	this.JobsCompleted = jobsCompleted
	this.JobsTotal = jobsTotal
	return &this
}

// NewJobGroupStatisticsWithoutIdDtoWithDefaults instantiates a new JobGroupStatisticsWithoutIdDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewJobGroupStatisticsWithoutIdDtoWithDefaults() *JobGroupStatisticsWithoutIdDto {
	this := JobGroupStatisticsWithoutIdDto{}
	return &this
}

// GetGroupCreatedTimestamp returns the GroupCreatedTimestamp field value
func (o *JobGroupStatisticsWithoutIdDto) GetGroupCreatedTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupCreatedTimestamp
}

// GetGroupCreatedTimestampOk returns a tuple with the GroupCreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *JobGroupStatisticsWithoutIdDto) GetGroupCreatedTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupCreatedTimestamp, true
}

// SetGroupCreatedTimestamp sets field value
func (o *JobGroupStatisticsWithoutIdDto) SetGroupCreatedTimestamp(v string) {
	o.GroupCreatedTimestamp = v
}

// GetGroupCompletedTimestamp returns the GroupCompletedTimestamp field value
func (o *JobGroupStatisticsWithoutIdDto) GetGroupCompletedTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.GroupCompletedTimestamp
}

// GetGroupCompletedTimestampOk returns a tuple with the GroupCompletedTimestamp field value
// and a boolean to check if the value has been set.
func (o *JobGroupStatisticsWithoutIdDto) GetGroupCompletedTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupCompletedTimestamp, true
}

// SetGroupCompletedTimestamp sets field value
func (o *JobGroupStatisticsWithoutIdDto) SetGroupCompletedTimestamp(v string) {
	o.GroupCompletedTimestamp = v
}

// GetJobsThrownError returns the JobsThrownError field value
func (o *JobGroupStatisticsWithoutIdDto) GetJobsThrownError() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.JobsThrownError
}

// GetJobsThrownErrorOk returns a tuple with the JobsThrownError field value
// and a boolean to check if the value has been set.
func (o *JobGroupStatisticsWithoutIdDto) GetJobsThrownErrorOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobsThrownError, true
}

// SetJobsThrownError sets field value
func (o *JobGroupStatisticsWithoutIdDto) SetJobsThrownError(v int32) {
	o.JobsThrownError = v
}

// GetJobsCompleted returns the JobsCompleted field value
func (o *JobGroupStatisticsWithoutIdDto) GetJobsCompleted() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.JobsCompleted
}

// GetJobsCompletedOk returns a tuple with the JobsCompleted field value
// and a boolean to check if the value has been set.
func (o *JobGroupStatisticsWithoutIdDto) GetJobsCompletedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobsCompleted, true
}

// SetJobsCompleted sets field value
func (o *JobGroupStatisticsWithoutIdDto) SetJobsCompleted(v int32) {
	o.JobsCompleted = v
}

// GetJobsTotal returns the JobsTotal field value
func (o *JobGroupStatisticsWithoutIdDto) GetJobsTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.JobsTotal
}

// GetJobsTotalOk returns a tuple with the JobsTotal field value
// and a boolean to check if the value has been set.
func (o *JobGroupStatisticsWithoutIdDto) GetJobsTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.JobsTotal, true
}

// SetJobsTotal sets field value
func (o *JobGroupStatisticsWithoutIdDto) SetJobsTotal(v int32) {
	o.JobsTotal = v
}

func (o JobGroupStatisticsWithoutIdDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o JobGroupStatisticsWithoutIdDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["groupCreatedTimestamp"] = o.GroupCreatedTimestamp
	toSerialize["groupCompletedTimestamp"] = o.GroupCompletedTimestamp
	toSerialize["jobsThrownError"] = o.JobsThrownError
	toSerialize["jobsCompleted"] = o.JobsCompleted
	toSerialize["jobsTotal"] = o.JobsTotal

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *JobGroupStatisticsWithoutIdDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"groupCreatedTimestamp",
		"groupCompletedTimestamp",
		"jobsThrownError",
		"jobsCompleted",
		"jobsTotal",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varJobGroupStatisticsWithoutIdDto := _JobGroupStatisticsWithoutIdDto{}

	err = json.Unmarshal(data, &varJobGroupStatisticsWithoutIdDto)

	if err != nil {
		return err
	}

	*o = JobGroupStatisticsWithoutIdDto(varJobGroupStatisticsWithoutIdDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "groupCreatedTimestamp")
		delete(additionalProperties, "groupCompletedTimestamp")
		delete(additionalProperties, "jobsThrownError")
		delete(additionalProperties, "jobsCompleted")
		delete(additionalProperties, "jobsTotal")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableJobGroupStatisticsWithoutIdDto struct {
	value *JobGroupStatisticsWithoutIdDto
	isSet bool
}

func (v NullableJobGroupStatisticsWithoutIdDto) Get() *JobGroupStatisticsWithoutIdDto {
	return v.value
}

func (v *NullableJobGroupStatisticsWithoutIdDto) Set(val *JobGroupStatisticsWithoutIdDto) {
	v.value = val
	v.isSet = true
}

func (v NullableJobGroupStatisticsWithoutIdDto) IsSet() bool {
	return v.isSet
}

func (v *NullableJobGroupStatisticsWithoutIdDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableJobGroupStatisticsWithoutIdDto(val *JobGroupStatisticsWithoutIdDto) *NullableJobGroupStatisticsWithoutIdDto {
	return &NullableJobGroupStatisticsWithoutIdDto{value: val, isSet: true}
}

func (v NullableJobGroupStatisticsWithoutIdDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableJobGroupStatisticsWithoutIdDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


