/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the FirmwareBaseline type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FirmwareBaseline{}

// FirmwareBaseline struct for FirmwareBaseline
type FirmwareBaseline struct {
	// Unique identifier for the firmware baseline
	ServerFirmwareBaselineId float32 `json:"serverFirmwareBaselineId"`
	ServerFirmwareBaselineName string `json:"serverFirmwareBaselineName"`
	ServerFirmwareBaselineDescription *string `json:"serverFirmwareBaselineDescription,omitempty"`
	ServerFirmwareBaselineCatalogJson *string `json:"serverFirmwareBaselineCatalogJson,omitempty"`
	ServerFirmwareBaselineLevel BaselineLevelType `json:"serverFirmwareBaselineLevel"`
	ServerFirmwareBaselineLevelFilterJson string `json:"serverFirmwareBaselineLevelFilterJson"`
	// Timestamp when the baseline was created
	ServerFirmwareCatalogCreatedTimestamp string `json:"serverFirmwareCatalogCreatedTimestamp"`
	// Links to other resources
	Links map[string]interface{} `json:"links"`
	AdditionalProperties map[string]interface{}
}

type _FirmwareBaseline FirmwareBaseline

// NewFirmwareBaseline instantiates a new FirmwareBaseline object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFirmwareBaseline(serverFirmwareBaselineId float32, serverFirmwareBaselineName string, serverFirmwareBaselineLevel BaselineLevelType, serverFirmwareBaselineLevelFilterJson string, serverFirmwareCatalogCreatedTimestamp string, links map[string]interface{}) *FirmwareBaseline {
	this := FirmwareBaseline{}
	this.ServerFirmwareBaselineId = serverFirmwareBaselineId
	this.ServerFirmwareBaselineName = serverFirmwareBaselineName
	this.ServerFirmwareBaselineLevel = serverFirmwareBaselineLevel
	this.ServerFirmwareBaselineLevelFilterJson = serverFirmwareBaselineLevelFilterJson
	this.ServerFirmwareCatalogCreatedTimestamp = serverFirmwareCatalogCreatedTimestamp
	this.Links = links
	return &this
}

// NewFirmwareBaselineWithDefaults instantiates a new FirmwareBaseline object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFirmwareBaselineWithDefaults() *FirmwareBaseline {
	this := FirmwareBaseline{}
	return &this
}

// GetServerFirmwareBaselineId returns the ServerFirmwareBaselineId field value
func (o *FirmwareBaseline) GetServerFirmwareBaselineId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ServerFirmwareBaselineId
}

// GetServerFirmwareBaselineIdOk returns a tuple with the ServerFirmwareBaselineId field value
// and a boolean to check if the value has been set.
func (o *FirmwareBaseline) GetServerFirmwareBaselineIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerFirmwareBaselineId, true
}

// SetServerFirmwareBaselineId sets field value
func (o *FirmwareBaseline) SetServerFirmwareBaselineId(v float32) {
	o.ServerFirmwareBaselineId = v
}

// GetServerFirmwareBaselineName returns the ServerFirmwareBaselineName field value
func (o *FirmwareBaseline) GetServerFirmwareBaselineName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerFirmwareBaselineName
}

// GetServerFirmwareBaselineNameOk returns a tuple with the ServerFirmwareBaselineName field value
// and a boolean to check if the value has been set.
func (o *FirmwareBaseline) GetServerFirmwareBaselineNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerFirmwareBaselineName, true
}

// SetServerFirmwareBaselineName sets field value
func (o *FirmwareBaseline) SetServerFirmwareBaselineName(v string) {
	o.ServerFirmwareBaselineName = v
}

// GetServerFirmwareBaselineDescription returns the ServerFirmwareBaselineDescription field value if set, zero value otherwise.
func (o *FirmwareBaseline) GetServerFirmwareBaselineDescription() string {
	if o == nil || IsNil(o.ServerFirmwareBaselineDescription) {
		var ret string
		return ret
	}
	return *o.ServerFirmwareBaselineDescription
}

// GetServerFirmwareBaselineDescriptionOk returns a tuple with the ServerFirmwareBaselineDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirmwareBaseline) GetServerFirmwareBaselineDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ServerFirmwareBaselineDescription) {
		return nil, false
	}
	return o.ServerFirmwareBaselineDescription, true
}

// HasServerFirmwareBaselineDescription returns a boolean if a field has been set.
func (o *FirmwareBaseline) HasServerFirmwareBaselineDescription() bool {
	if o != nil && !IsNil(o.ServerFirmwareBaselineDescription) {
		return true
	}

	return false
}

// SetServerFirmwareBaselineDescription gets a reference to the given string and assigns it to the ServerFirmwareBaselineDescription field.
func (o *FirmwareBaseline) SetServerFirmwareBaselineDescription(v string) {
	o.ServerFirmwareBaselineDescription = &v
}

// GetServerFirmwareBaselineCatalogJson returns the ServerFirmwareBaselineCatalogJson field value if set, zero value otherwise.
func (o *FirmwareBaseline) GetServerFirmwareBaselineCatalogJson() string {
	if o == nil || IsNil(o.ServerFirmwareBaselineCatalogJson) {
		var ret string
		return ret
	}
	return *o.ServerFirmwareBaselineCatalogJson
}

// GetServerFirmwareBaselineCatalogJsonOk returns a tuple with the ServerFirmwareBaselineCatalogJson field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FirmwareBaseline) GetServerFirmwareBaselineCatalogJsonOk() (*string, bool) {
	if o == nil || IsNil(o.ServerFirmwareBaselineCatalogJson) {
		return nil, false
	}
	return o.ServerFirmwareBaselineCatalogJson, true
}

// HasServerFirmwareBaselineCatalogJson returns a boolean if a field has been set.
func (o *FirmwareBaseline) HasServerFirmwareBaselineCatalogJson() bool {
	if o != nil && !IsNil(o.ServerFirmwareBaselineCatalogJson) {
		return true
	}

	return false
}

// SetServerFirmwareBaselineCatalogJson gets a reference to the given string and assigns it to the ServerFirmwareBaselineCatalogJson field.
func (o *FirmwareBaseline) SetServerFirmwareBaselineCatalogJson(v string) {
	o.ServerFirmwareBaselineCatalogJson = &v
}

// GetServerFirmwareBaselineLevel returns the ServerFirmwareBaselineLevel field value
func (o *FirmwareBaseline) GetServerFirmwareBaselineLevel() BaselineLevelType {
	if o == nil {
		var ret BaselineLevelType
		return ret
	}

	return o.ServerFirmwareBaselineLevel
}

// GetServerFirmwareBaselineLevelOk returns a tuple with the ServerFirmwareBaselineLevel field value
// and a boolean to check if the value has been set.
func (o *FirmwareBaseline) GetServerFirmwareBaselineLevelOk() (*BaselineLevelType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerFirmwareBaselineLevel, true
}

// SetServerFirmwareBaselineLevel sets field value
func (o *FirmwareBaseline) SetServerFirmwareBaselineLevel(v BaselineLevelType) {
	o.ServerFirmwareBaselineLevel = v
}

// GetServerFirmwareBaselineLevelFilterJson returns the ServerFirmwareBaselineLevelFilterJson field value
func (o *FirmwareBaseline) GetServerFirmwareBaselineLevelFilterJson() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerFirmwareBaselineLevelFilterJson
}

// GetServerFirmwareBaselineLevelFilterJsonOk returns a tuple with the ServerFirmwareBaselineLevelFilterJson field value
// and a boolean to check if the value has been set.
func (o *FirmwareBaseline) GetServerFirmwareBaselineLevelFilterJsonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerFirmwareBaselineLevelFilterJson, true
}

// SetServerFirmwareBaselineLevelFilterJson sets field value
func (o *FirmwareBaseline) SetServerFirmwareBaselineLevelFilterJson(v string) {
	o.ServerFirmwareBaselineLevelFilterJson = v
}

// GetServerFirmwareCatalogCreatedTimestamp returns the ServerFirmwareCatalogCreatedTimestamp field value
func (o *FirmwareBaseline) GetServerFirmwareCatalogCreatedTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerFirmwareCatalogCreatedTimestamp
}

// GetServerFirmwareCatalogCreatedTimestampOk returns a tuple with the ServerFirmwareCatalogCreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *FirmwareBaseline) GetServerFirmwareCatalogCreatedTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerFirmwareCatalogCreatedTimestamp, true
}

// SetServerFirmwareCatalogCreatedTimestamp sets field value
func (o *FirmwareBaseline) SetServerFirmwareCatalogCreatedTimestamp(v string) {
	o.ServerFirmwareCatalogCreatedTimestamp = v
}

// GetLinks returns the Links field value
func (o *FirmwareBaseline) GetLinks() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Links
}

// GetLinksOk returns a tuple with the Links field value
// and a boolean to check if the value has been set.
func (o *FirmwareBaseline) GetLinksOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Links, true
}

// SetLinks sets field value
func (o *FirmwareBaseline) SetLinks(v map[string]interface{}) {
	o.Links = v
}

func (o FirmwareBaseline) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FirmwareBaseline) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["serverFirmwareBaselineId"] = o.ServerFirmwareBaselineId
	toSerialize["serverFirmwareBaselineName"] = o.ServerFirmwareBaselineName
	if !IsNil(o.ServerFirmwareBaselineDescription) {
		toSerialize["serverFirmwareBaselineDescription"] = o.ServerFirmwareBaselineDescription
	}
	if !IsNil(o.ServerFirmwareBaselineCatalogJson) {
		toSerialize["serverFirmwareBaselineCatalogJson"] = o.ServerFirmwareBaselineCatalogJson
	}
	toSerialize["serverFirmwareBaselineLevel"] = o.ServerFirmwareBaselineLevel
	toSerialize["serverFirmwareBaselineLevelFilterJson"] = o.ServerFirmwareBaselineLevelFilterJson
	toSerialize["serverFirmwareCatalogCreatedTimestamp"] = o.ServerFirmwareCatalogCreatedTimestamp
	toSerialize["links"] = o.Links

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FirmwareBaseline) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"serverFirmwareBaselineId",
		"serverFirmwareBaselineName",
		"serverFirmwareBaselineLevel",
		"serverFirmwareBaselineLevelFilterJson",
		"serverFirmwareCatalogCreatedTimestamp",
		"links",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFirmwareBaseline := _FirmwareBaseline{}

	err = json.Unmarshal(data, &varFirmwareBaseline)

	if err != nil {
		return err
	}

	*o = FirmwareBaseline(varFirmwareBaseline)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "serverFirmwareBaselineId")
		delete(additionalProperties, "serverFirmwareBaselineName")
		delete(additionalProperties, "serverFirmwareBaselineDescription")
		delete(additionalProperties, "serverFirmwareBaselineCatalogJson")
		delete(additionalProperties, "serverFirmwareBaselineLevel")
		delete(additionalProperties, "serverFirmwareBaselineLevelFilterJson")
		delete(additionalProperties, "serverFirmwareCatalogCreatedTimestamp")
		delete(additionalProperties, "links")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFirmwareBaseline struct {
	value *FirmwareBaseline
	isSet bool
}

func (v NullableFirmwareBaseline) Get() *FirmwareBaseline {
	return v.value
}

func (v *NullableFirmwareBaseline) Set(val *FirmwareBaseline) {
	v.value = val
	v.isSet = true
}

func (v NullableFirmwareBaseline) IsSet() bool {
	return v.isSet
}

func (v *NullableFirmwareBaseline) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFirmwareBaseline(val *FirmwareBaseline) *NullableFirmwareBaseline {
	return &NullableFirmwareBaseline{value: val, isSet: true}
}

func (v NullableFirmwareBaseline) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFirmwareBaseline) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


