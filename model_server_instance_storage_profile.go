/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ServerInstanceStorageProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerInstanceStorageProfile{}

// ServerInstanceStorageProfile struct for ServerInstanceStorageProfile
type ServerInstanceStorageProfile struct {
	// The information for each Storage Controller of the Instance Storage Profile.
	Controllers []ServerInstanceStorageProfileController `json:"controllers,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServerInstanceStorageProfile ServerInstanceStorageProfile

// NewServerInstanceStorageProfile instantiates a new ServerInstanceStorageProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerInstanceStorageProfile() *ServerInstanceStorageProfile {
	this := ServerInstanceStorageProfile{}
	return &this
}

// NewServerInstanceStorageProfileWithDefaults instantiates a new ServerInstanceStorageProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerInstanceStorageProfileWithDefaults() *ServerInstanceStorageProfile {
	this := ServerInstanceStorageProfile{}
	return &this
}

// GetControllers returns the Controllers field value if set, zero value otherwise.
func (o *ServerInstanceStorageProfile) GetControllers() []ServerInstanceStorageProfileController {
	if o == nil || IsNil(o.Controllers) {
		var ret []ServerInstanceStorageProfileController
		return ret
	}
	return o.Controllers
}

// GetControllersOk returns a tuple with the Controllers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceStorageProfile) GetControllersOk() ([]ServerInstanceStorageProfileController, bool) {
	if o == nil || IsNil(o.Controllers) {
		return nil, false
	}
	return o.Controllers, true
}

// HasControllers returns a boolean if a field has been set.
func (o *ServerInstanceStorageProfile) HasControllers() bool {
	if o != nil && !IsNil(o.Controllers) {
		return true
	}

	return false
}

// SetControllers gets a reference to the given []ServerInstanceStorageProfileController and assigns it to the Controllers field.
func (o *ServerInstanceStorageProfile) SetControllers(v []ServerInstanceStorageProfileController) {
	o.Controllers = v
}

func (o ServerInstanceStorageProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerInstanceStorageProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Controllers) {
		toSerialize["controllers"] = o.Controllers
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServerInstanceStorageProfile) UnmarshalJSON(data []byte) (err error) {
	varServerInstanceStorageProfile := _ServerInstanceStorageProfile{}

	err = json.Unmarshal(data, &varServerInstanceStorageProfile)

	if err != nil {
		return err
	}

	*o = ServerInstanceStorageProfile(varServerInstanceStorageProfile)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "controllers")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServerInstanceStorageProfile struct {
	value *ServerInstanceStorageProfile
	isSet bool
}

func (v NullableServerInstanceStorageProfile) Get() *ServerInstanceStorageProfile {
	return v.value
}

func (v *NullableServerInstanceStorageProfile) Set(val *ServerInstanceStorageProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableServerInstanceStorageProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableServerInstanceStorageProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerInstanceStorageProfile(val *ServerInstanceStorageProfile) *NullableServerInstanceStorageProfile {
	return &NullableServerInstanceStorageProfile{value: val, isSet: true}
}

func (v NullableServerInstanceStorageProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerInstanceStorageProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


