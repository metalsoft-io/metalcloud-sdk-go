/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the FibreChannelFabricDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FibreChannelFabricDto{}

// FibreChannelFabricDto struct for FibreChannelFabricDto
type FibreChannelFabricDto struct {
	DefaultNetworkProfileId float32 `json:"defaultNetworkProfileId"`
	GnmiMonitoringEnabled *bool `json:"gnmiMonitoringEnabled,omitempty"`
	SyslogMonitoringEnabled *bool `json:"syslogMonitoringEnabled,omitempty"`
	ZeroTouchEnabled *bool `json:"zeroTouchEnabled,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FibreChannelFabricDto FibreChannelFabricDto

// NewFibreChannelFabricDto instantiates a new FibreChannelFabricDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFibreChannelFabricDto(defaultNetworkProfileId float32) *FibreChannelFabricDto {
	this := FibreChannelFabricDto{}
	this.DefaultNetworkProfileId = defaultNetworkProfileId
	return &this
}

// NewFibreChannelFabricDtoWithDefaults instantiates a new FibreChannelFabricDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFibreChannelFabricDtoWithDefaults() *FibreChannelFabricDto {
	this := FibreChannelFabricDto{}
	return &this
}

// GetDefaultNetworkProfileId returns the DefaultNetworkProfileId field value
func (o *FibreChannelFabricDto) GetDefaultNetworkProfileId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DefaultNetworkProfileId
}

// GetDefaultNetworkProfileIdOk returns a tuple with the DefaultNetworkProfileId field value
// and a boolean to check if the value has been set.
func (o *FibreChannelFabricDto) GetDefaultNetworkProfileIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DefaultNetworkProfileId, true
}

// SetDefaultNetworkProfileId sets field value
func (o *FibreChannelFabricDto) SetDefaultNetworkProfileId(v float32) {
	o.DefaultNetworkProfileId = v
}

// GetGnmiMonitoringEnabled returns the GnmiMonitoringEnabled field value if set, zero value otherwise.
func (o *FibreChannelFabricDto) GetGnmiMonitoringEnabled() bool {
	if o == nil || IsNil(o.GnmiMonitoringEnabled) {
		var ret bool
		return ret
	}
	return *o.GnmiMonitoringEnabled
}

// GetGnmiMonitoringEnabledOk returns a tuple with the GnmiMonitoringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FibreChannelFabricDto) GetGnmiMonitoringEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.GnmiMonitoringEnabled) {
		return nil, false
	}
	return o.GnmiMonitoringEnabled, true
}

// HasGnmiMonitoringEnabled returns a boolean if a field has been set.
func (o *FibreChannelFabricDto) HasGnmiMonitoringEnabled() bool {
	if o != nil && !IsNil(o.GnmiMonitoringEnabled) {
		return true
	}

	return false
}

// SetGnmiMonitoringEnabled gets a reference to the given bool and assigns it to the GnmiMonitoringEnabled field.
func (o *FibreChannelFabricDto) SetGnmiMonitoringEnabled(v bool) {
	o.GnmiMonitoringEnabled = &v
}

// GetSyslogMonitoringEnabled returns the SyslogMonitoringEnabled field value if set, zero value otherwise.
func (o *FibreChannelFabricDto) GetSyslogMonitoringEnabled() bool {
	if o == nil || IsNil(o.SyslogMonitoringEnabled) {
		var ret bool
		return ret
	}
	return *o.SyslogMonitoringEnabled
}

// GetSyslogMonitoringEnabledOk returns a tuple with the SyslogMonitoringEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FibreChannelFabricDto) GetSyslogMonitoringEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.SyslogMonitoringEnabled) {
		return nil, false
	}
	return o.SyslogMonitoringEnabled, true
}

// HasSyslogMonitoringEnabled returns a boolean if a field has been set.
func (o *FibreChannelFabricDto) HasSyslogMonitoringEnabled() bool {
	if o != nil && !IsNil(o.SyslogMonitoringEnabled) {
		return true
	}

	return false
}

// SetSyslogMonitoringEnabled gets a reference to the given bool and assigns it to the SyslogMonitoringEnabled field.
func (o *FibreChannelFabricDto) SetSyslogMonitoringEnabled(v bool) {
	o.SyslogMonitoringEnabled = &v
}

// GetZeroTouchEnabled returns the ZeroTouchEnabled field value if set, zero value otherwise.
func (o *FibreChannelFabricDto) GetZeroTouchEnabled() bool {
	if o == nil || IsNil(o.ZeroTouchEnabled) {
		var ret bool
		return ret
	}
	return *o.ZeroTouchEnabled
}

// GetZeroTouchEnabledOk returns a tuple with the ZeroTouchEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FibreChannelFabricDto) GetZeroTouchEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.ZeroTouchEnabled) {
		return nil, false
	}
	return o.ZeroTouchEnabled, true
}

// HasZeroTouchEnabled returns a boolean if a field has been set.
func (o *FibreChannelFabricDto) HasZeroTouchEnabled() bool {
	if o != nil && !IsNil(o.ZeroTouchEnabled) {
		return true
	}

	return false
}

// SetZeroTouchEnabled gets a reference to the given bool and assigns it to the ZeroTouchEnabled field.
func (o *FibreChannelFabricDto) SetZeroTouchEnabled(v bool) {
	o.ZeroTouchEnabled = &v
}

func (o FibreChannelFabricDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FibreChannelFabricDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["defaultNetworkProfileId"] = o.DefaultNetworkProfileId
	if !IsNil(o.GnmiMonitoringEnabled) {
		toSerialize["gnmiMonitoringEnabled"] = o.GnmiMonitoringEnabled
	}
	if !IsNil(o.SyslogMonitoringEnabled) {
		toSerialize["syslogMonitoringEnabled"] = o.SyslogMonitoringEnabled
	}
	if !IsNil(o.ZeroTouchEnabled) {
		toSerialize["zeroTouchEnabled"] = o.ZeroTouchEnabled
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FibreChannelFabricDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"defaultNetworkProfileId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFibreChannelFabricDto := _FibreChannelFabricDto{}

	err = json.Unmarshal(data, &varFibreChannelFabricDto)

	if err != nil {
		return err
	}

	*o = FibreChannelFabricDto(varFibreChannelFabricDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "defaultNetworkProfileId")
		delete(additionalProperties, "gnmiMonitoringEnabled")
		delete(additionalProperties, "syslogMonitoringEnabled")
		delete(additionalProperties, "zeroTouchEnabled")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFibreChannelFabricDto struct {
	value *FibreChannelFabricDto
	isSet bool
}

func (v NullableFibreChannelFabricDto) Get() *FibreChannelFabricDto {
	return v.value
}

func (v *NullableFibreChannelFabricDto) Set(val *FibreChannelFabricDto) {
	v.value = val
	v.isSet = true
}

func (v NullableFibreChannelFabricDto) IsSet() bool {
	return v.isSet
}

func (v *NullableFibreChannelFabricDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFibreChannelFabricDto(val *FibreChannelFabricDto) *NullableFibreChannelFabricDto {
	return &NullableFibreChannelFabricDto{value: val, isSet: true}
}

func (v NullableFibreChannelFabricDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFibreChannelFabricDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


