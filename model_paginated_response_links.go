/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the PaginatedResponseLinks type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PaginatedResponseLinks{}

// PaginatedResponseLinks Links to navigate through the paginated results
type PaginatedResponseLinks struct {
	First *string `json:"first,omitempty"`
	Previous *string `json:"previous,omitempty"`
	Current *string `json:"current,omitempty"`
	Next *string `json:"next,omitempty"`
	Last *string `json:"last,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _PaginatedResponseLinks PaginatedResponseLinks

// NewPaginatedResponseLinks instantiates a new PaginatedResponseLinks object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPaginatedResponseLinks() *PaginatedResponseLinks {
	this := PaginatedResponseLinks{}
	return &this
}

// NewPaginatedResponseLinksWithDefaults instantiates a new PaginatedResponseLinks object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPaginatedResponseLinksWithDefaults() *PaginatedResponseLinks {
	this := PaginatedResponseLinks{}
	return &this
}

// GetFirst returns the First field value if set, zero value otherwise.
func (o *PaginatedResponseLinks) GetFirst() string {
	if o == nil || IsNil(o.First) {
		var ret string
		return ret
	}
	return *o.First
}

// GetFirstOk returns a tuple with the First field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedResponseLinks) GetFirstOk() (*string, bool) {
	if o == nil || IsNil(o.First) {
		return nil, false
	}
	return o.First, true
}

// HasFirst returns a boolean if a field has been set.
func (o *PaginatedResponseLinks) HasFirst() bool {
	if o != nil && !IsNil(o.First) {
		return true
	}

	return false
}

// SetFirst gets a reference to the given string and assigns it to the First field.
func (o *PaginatedResponseLinks) SetFirst(v string) {
	o.First = &v
}

// GetPrevious returns the Previous field value if set, zero value otherwise.
func (o *PaginatedResponseLinks) GetPrevious() string {
	if o == nil || IsNil(o.Previous) {
		var ret string
		return ret
	}
	return *o.Previous
}

// GetPreviousOk returns a tuple with the Previous field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedResponseLinks) GetPreviousOk() (*string, bool) {
	if o == nil || IsNil(o.Previous) {
		return nil, false
	}
	return o.Previous, true
}

// HasPrevious returns a boolean if a field has been set.
func (o *PaginatedResponseLinks) HasPrevious() bool {
	if o != nil && !IsNil(o.Previous) {
		return true
	}

	return false
}

// SetPrevious gets a reference to the given string and assigns it to the Previous field.
func (o *PaginatedResponseLinks) SetPrevious(v string) {
	o.Previous = &v
}

// GetCurrent returns the Current field value if set, zero value otherwise.
func (o *PaginatedResponseLinks) GetCurrent() string {
	if o == nil || IsNil(o.Current) {
		var ret string
		return ret
	}
	return *o.Current
}

// GetCurrentOk returns a tuple with the Current field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedResponseLinks) GetCurrentOk() (*string, bool) {
	if o == nil || IsNil(o.Current) {
		return nil, false
	}
	return o.Current, true
}

// HasCurrent returns a boolean if a field has been set.
func (o *PaginatedResponseLinks) HasCurrent() bool {
	if o != nil && !IsNil(o.Current) {
		return true
	}

	return false
}

// SetCurrent gets a reference to the given string and assigns it to the Current field.
func (o *PaginatedResponseLinks) SetCurrent(v string) {
	o.Current = &v
}

// GetNext returns the Next field value if set, zero value otherwise.
func (o *PaginatedResponseLinks) GetNext() string {
	if o == nil || IsNil(o.Next) {
		var ret string
		return ret
	}
	return *o.Next
}

// GetNextOk returns a tuple with the Next field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedResponseLinks) GetNextOk() (*string, bool) {
	if o == nil || IsNil(o.Next) {
		return nil, false
	}
	return o.Next, true
}

// HasNext returns a boolean if a field has been set.
func (o *PaginatedResponseLinks) HasNext() bool {
	if o != nil && !IsNil(o.Next) {
		return true
	}

	return false
}

// SetNext gets a reference to the given string and assigns it to the Next field.
func (o *PaginatedResponseLinks) SetNext(v string) {
	o.Next = &v
}

// GetLast returns the Last field value if set, zero value otherwise.
func (o *PaginatedResponseLinks) GetLast() string {
	if o == nil || IsNil(o.Last) {
		var ret string
		return ret
	}
	return *o.Last
}

// GetLastOk returns a tuple with the Last field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PaginatedResponseLinks) GetLastOk() (*string, bool) {
	if o == nil || IsNil(o.Last) {
		return nil, false
	}
	return o.Last, true
}

// HasLast returns a boolean if a field has been set.
func (o *PaginatedResponseLinks) HasLast() bool {
	if o != nil && !IsNil(o.Last) {
		return true
	}

	return false
}

// SetLast gets a reference to the given string and assigns it to the Last field.
func (o *PaginatedResponseLinks) SetLast(v string) {
	o.Last = &v
}

func (o PaginatedResponseLinks) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PaginatedResponseLinks) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.First) {
		toSerialize["first"] = o.First
	}
	if !IsNil(o.Previous) {
		toSerialize["previous"] = o.Previous
	}
	if !IsNil(o.Current) {
		toSerialize["current"] = o.Current
	}
	if !IsNil(o.Next) {
		toSerialize["next"] = o.Next
	}
	if !IsNil(o.Last) {
		toSerialize["last"] = o.Last
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *PaginatedResponseLinks) UnmarshalJSON(data []byte) (err error) {
	varPaginatedResponseLinks := _PaginatedResponseLinks{}

	err = json.Unmarshal(data, &varPaginatedResponseLinks)

	if err != nil {
		return err
	}

	*o = PaginatedResponseLinks(varPaginatedResponseLinks)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "first")
		delete(additionalProperties, "previous")
		delete(additionalProperties, "current")
		delete(additionalProperties, "next")
		delete(additionalProperties, "last")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullablePaginatedResponseLinks struct {
	value *PaginatedResponseLinks
	isSet bool
}

func (v NullablePaginatedResponseLinks) Get() *PaginatedResponseLinks {
	return v.value
}

func (v *NullablePaginatedResponseLinks) Set(val *PaginatedResponseLinks) {
	v.value = val
	v.isSet = true
}

func (v NullablePaginatedResponseLinks) IsSet() bool {
	return v.isSet
}

func (v *NullablePaginatedResponseLinks) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePaginatedResponseLinks(val *PaginatedResponseLinks) *NullablePaginatedResponseLinks {
	return &NullablePaginatedResponseLinks{value: val, isSet: true}
}

func (v NullablePaginatedResponseLinks) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePaginatedResponseLinks) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


