/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the ServerInstanceInterfaceConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerInstanceInterfaceConfiguration{}

// ServerInstanceInterfaceConfiguration struct for ServerInstanceInterfaceConfiguration
type ServerInstanceInterfaceConfiguration struct {
	// Revision number
	Revision float32 `json:"revision"`
	// The server instance interface label.
	Label *string `json:"label,omitempty"`
	// Subdomain of the Server Group.
	Subdomain *string `json:"subdomain,omitempty"`
	// Timestamp of the latest update for the Server Instance.
	UpdatedTimestamp string `json:"updatedTimestamp"`
	InstanceId int32 `json:"instanceId"`
	// The index of the interface (0-based) on this server.
	Index int32 `json:"index"`
	CapacityMbps int32 `json:"capacityMbps"`
	// The ID of the network to which this interface is to be attached to.
	NetworkId *int32 `json:"networkId,omitempty"`
	ServerInterfaceId *int32 `json:"serverInterfaceId,omitempty"`
	// Number of empty edits
	EmptyEdit *int32 `json:"emptyEdit,omitempty"`
	// Server Instance Interface deploy type
	DeployType string `json:"deployType"`
	// Server Instance Interface deploy status
	DeployStatus string `json:"deployStatus"`
	// Id of the DNS subdomain for the Server Instance Interface.
	DnsSubdomainChangeId *int32 `json:"dnsSubdomainChangeId,omitempty"`
	// Id of the deployment for the Server Instance Interface.
	InfrastructureDeployId *int32 `json:"infrastructureDeployId,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServerInstanceInterfaceConfiguration ServerInstanceInterfaceConfiguration

// NewServerInstanceInterfaceConfiguration instantiates a new ServerInstanceInterfaceConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerInstanceInterfaceConfiguration(revision float32, updatedTimestamp string, instanceId int32, index int32, capacityMbps int32, deployType string, deployStatus string) *ServerInstanceInterfaceConfiguration {
	this := ServerInstanceInterfaceConfiguration{}
	this.Revision = revision
	this.UpdatedTimestamp = updatedTimestamp
	this.InstanceId = instanceId
	this.Index = index
	this.CapacityMbps = capacityMbps
	this.DeployType = deployType
	this.DeployStatus = deployStatus
	return &this
}

// NewServerInstanceInterfaceConfigurationWithDefaults instantiates a new ServerInstanceInterfaceConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerInstanceInterfaceConfigurationWithDefaults() *ServerInstanceInterfaceConfiguration {
	this := ServerInstanceInterfaceConfiguration{}
	return &this
}

// GetRevision returns the Revision field value
func (o *ServerInstanceInterfaceConfiguration) GetRevision() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceConfiguration) GetRevisionOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *ServerInstanceInterfaceConfiguration) SetRevision(v float32) {
	o.Revision = v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *ServerInstanceInterfaceConfiguration) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceConfiguration) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *ServerInstanceInterfaceConfiguration) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *ServerInstanceInterfaceConfiguration) SetLabel(v string) {
	o.Label = &v
}

// GetSubdomain returns the Subdomain field value if set, zero value otherwise.
func (o *ServerInstanceInterfaceConfiguration) GetSubdomain() string {
	if o == nil || IsNil(o.Subdomain) {
		var ret string
		return ret
	}
	return *o.Subdomain
}

// GetSubdomainOk returns a tuple with the Subdomain field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceConfiguration) GetSubdomainOk() (*string, bool) {
	if o == nil || IsNil(o.Subdomain) {
		return nil, false
	}
	return o.Subdomain, true
}

// HasSubdomain returns a boolean if a field has been set.
func (o *ServerInstanceInterfaceConfiguration) HasSubdomain() bool {
	if o != nil && !IsNil(o.Subdomain) {
		return true
	}

	return false
}

// SetSubdomain gets a reference to the given string and assigns it to the Subdomain field.
func (o *ServerInstanceInterfaceConfiguration) SetSubdomain(v string) {
	o.Subdomain = &v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value
func (o *ServerInstanceInterfaceConfiguration) GetUpdatedTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceConfiguration) GetUpdatedTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedTimestamp, true
}

// SetUpdatedTimestamp sets field value
func (o *ServerInstanceInterfaceConfiguration) SetUpdatedTimestamp(v string) {
	o.UpdatedTimestamp = v
}

// GetInstanceId returns the InstanceId field value
func (o *ServerInstanceInterfaceConfiguration) GetInstanceId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.InstanceId
}

// GetInstanceIdOk returns a tuple with the InstanceId field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceConfiguration) GetInstanceIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceId, true
}

// SetInstanceId sets field value
func (o *ServerInstanceInterfaceConfiguration) SetInstanceId(v int32) {
	o.InstanceId = v
}

// GetIndex returns the Index field value
func (o *ServerInstanceInterfaceConfiguration) GetIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceConfiguration) GetIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *ServerInstanceInterfaceConfiguration) SetIndex(v int32) {
	o.Index = v
}

// GetCapacityMbps returns the CapacityMbps field value
func (o *ServerInstanceInterfaceConfiguration) GetCapacityMbps() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CapacityMbps
}

// GetCapacityMbpsOk returns a tuple with the CapacityMbps field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceConfiguration) GetCapacityMbpsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CapacityMbps, true
}

// SetCapacityMbps sets field value
func (o *ServerInstanceInterfaceConfiguration) SetCapacityMbps(v int32) {
	o.CapacityMbps = v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *ServerInstanceInterfaceConfiguration) GetNetworkId() int32 {
	if o == nil || IsNil(o.NetworkId) {
		var ret int32
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceConfiguration) GetNetworkIdOk() (*int32, bool) {
	if o == nil || IsNil(o.NetworkId) {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *ServerInstanceInterfaceConfiguration) HasNetworkId() bool {
	if o != nil && !IsNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given int32 and assigns it to the NetworkId field.
func (o *ServerInstanceInterfaceConfiguration) SetNetworkId(v int32) {
	o.NetworkId = &v
}

// GetServerInterfaceId returns the ServerInterfaceId field value if set, zero value otherwise.
func (o *ServerInstanceInterfaceConfiguration) GetServerInterfaceId() int32 {
	if o == nil || IsNil(o.ServerInterfaceId) {
		var ret int32
		return ret
	}
	return *o.ServerInterfaceId
}

// GetServerInterfaceIdOk returns a tuple with the ServerInterfaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceConfiguration) GetServerInterfaceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ServerInterfaceId) {
		return nil, false
	}
	return o.ServerInterfaceId, true
}

// HasServerInterfaceId returns a boolean if a field has been set.
func (o *ServerInstanceInterfaceConfiguration) HasServerInterfaceId() bool {
	if o != nil && !IsNil(o.ServerInterfaceId) {
		return true
	}

	return false
}

// SetServerInterfaceId gets a reference to the given int32 and assigns it to the ServerInterfaceId field.
func (o *ServerInstanceInterfaceConfiguration) SetServerInterfaceId(v int32) {
	o.ServerInterfaceId = &v
}

// GetEmptyEdit returns the EmptyEdit field value if set, zero value otherwise.
func (o *ServerInstanceInterfaceConfiguration) GetEmptyEdit() int32 {
	if o == nil || IsNil(o.EmptyEdit) {
		var ret int32
		return ret
	}
	return *o.EmptyEdit
}

// GetEmptyEditOk returns a tuple with the EmptyEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceConfiguration) GetEmptyEditOk() (*int32, bool) {
	if o == nil || IsNil(o.EmptyEdit) {
		return nil, false
	}
	return o.EmptyEdit, true
}

// HasEmptyEdit returns a boolean if a field has been set.
func (o *ServerInstanceInterfaceConfiguration) HasEmptyEdit() bool {
	if o != nil && !IsNil(o.EmptyEdit) {
		return true
	}

	return false
}

// SetEmptyEdit gets a reference to the given int32 and assigns it to the EmptyEdit field.
func (o *ServerInstanceInterfaceConfiguration) SetEmptyEdit(v int32) {
	o.EmptyEdit = &v
}

// GetDeployType returns the DeployType field value
func (o *ServerInstanceInterfaceConfiguration) GetDeployType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeployType
}

// GetDeployTypeOk returns a tuple with the DeployType field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceConfiguration) GetDeployTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployType, true
}

// SetDeployType sets field value
func (o *ServerInstanceInterfaceConfiguration) SetDeployType(v string) {
	o.DeployType = v
}

// GetDeployStatus returns the DeployStatus field value
func (o *ServerInstanceInterfaceConfiguration) GetDeployStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeployStatus
}

// GetDeployStatusOk returns a tuple with the DeployStatus field value
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceConfiguration) GetDeployStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeployStatus, true
}

// SetDeployStatus sets field value
func (o *ServerInstanceInterfaceConfiguration) SetDeployStatus(v string) {
	o.DeployStatus = v
}

// GetDnsSubdomainChangeId returns the DnsSubdomainChangeId field value if set, zero value otherwise.
func (o *ServerInstanceInterfaceConfiguration) GetDnsSubdomainChangeId() int32 {
	if o == nil || IsNil(o.DnsSubdomainChangeId) {
		var ret int32
		return ret
	}
	return *o.DnsSubdomainChangeId
}

// GetDnsSubdomainChangeIdOk returns a tuple with the DnsSubdomainChangeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceConfiguration) GetDnsSubdomainChangeIdOk() (*int32, bool) {
	if o == nil || IsNil(o.DnsSubdomainChangeId) {
		return nil, false
	}
	return o.DnsSubdomainChangeId, true
}

// HasDnsSubdomainChangeId returns a boolean if a field has been set.
func (o *ServerInstanceInterfaceConfiguration) HasDnsSubdomainChangeId() bool {
	if o != nil && !IsNil(o.DnsSubdomainChangeId) {
		return true
	}

	return false
}

// SetDnsSubdomainChangeId gets a reference to the given int32 and assigns it to the DnsSubdomainChangeId field.
func (o *ServerInstanceInterfaceConfiguration) SetDnsSubdomainChangeId(v int32) {
	o.DnsSubdomainChangeId = &v
}

// GetInfrastructureDeployId returns the InfrastructureDeployId field value if set, zero value otherwise.
func (o *ServerInstanceInterfaceConfiguration) GetInfrastructureDeployId() int32 {
	if o == nil || IsNil(o.InfrastructureDeployId) {
		var ret int32
		return ret
	}
	return *o.InfrastructureDeployId
}

// GetInfrastructureDeployIdOk returns a tuple with the InfrastructureDeployId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceConfiguration) GetInfrastructureDeployIdOk() (*int32, bool) {
	if o == nil || IsNil(o.InfrastructureDeployId) {
		return nil, false
	}
	return o.InfrastructureDeployId, true
}

// HasInfrastructureDeployId returns a boolean if a field has been set.
func (o *ServerInstanceInterfaceConfiguration) HasInfrastructureDeployId() bool {
	if o != nil && !IsNil(o.InfrastructureDeployId) {
		return true
	}

	return false
}

// SetInfrastructureDeployId gets a reference to the given int32 and assigns it to the InfrastructureDeployId field.
func (o *ServerInstanceInterfaceConfiguration) SetInfrastructureDeployId(v int32) {
	o.InfrastructureDeployId = &v
}

func (o ServerInstanceInterfaceConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerInstanceInterfaceConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["revision"] = o.Revision
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Subdomain) {
		toSerialize["subdomain"] = o.Subdomain
	}
	toSerialize["updatedTimestamp"] = o.UpdatedTimestamp
	toSerialize["instanceId"] = o.InstanceId
	toSerialize["index"] = o.Index
	toSerialize["capacityMbps"] = o.CapacityMbps
	if !IsNil(o.NetworkId) {
		toSerialize["networkId"] = o.NetworkId
	}
	if !IsNil(o.ServerInterfaceId) {
		toSerialize["serverInterfaceId"] = o.ServerInterfaceId
	}
	if !IsNil(o.EmptyEdit) {
		toSerialize["emptyEdit"] = o.EmptyEdit
	}
	toSerialize["deployType"] = o.DeployType
	toSerialize["deployStatus"] = o.DeployStatus
	if !IsNil(o.DnsSubdomainChangeId) {
		toSerialize["dnsSubdomainChangeId"] = o.DnsSubdomainChangeId
	}
	if !IsNil(o.InfrastructureDeployId) {
		toSerialize["infrastructureDeployId"] = o.InfrastructureDeployId
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServerInstanceInterfaceConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"revision",
		"updatedTimestamp",
		"instanceId",
		"index",
		"capacityMbps",
		"deployType",
		"deployStatus",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varServerInstanceInterfaceConfiguration := _ServerInstanceInterfaceConfiguration{}

	err = json.Unmarshal(data, &varServerInstanceInterfaceConfiguration)

	if err != nil {
		return err
	}

	*o = ServerInstanceInterfaceConfiguration(varServerInstanceInterfaceConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "revision")
		delete(additionalProperties, "label")
		delete(additionalProperties, "subdomain")
		delete(additionalProperties, "updatedTimestamp")
		delete(additionalProperties, "instanceId")
		delete(additionalProperties, "index")
		delete(additionalProperties, "capacityMbps")
		delete(additionalProperties, "networkId")
		delete(additionalProperties, "serverInterfaceId")
		delete(additionalProperties, "emptyEdit")
		delete(additionalProperties, "deployType")
		delete(additionalProperties, "deployStatus")
		delete(additionalProperties, "dnsSubdomainChangeId")
		delete(additionalProperties, "infrastructureDeployId")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServerInstanceInterfaceConfiguration struct {
	value *ServerInstanceInterfaceConfiguration
	isSet bool
}

func (v NullableServerInstanceInterfaceConfiguration) Get() *ServerInstanceInterfaceConfiguration {
	return v.value
}

func (v *NullableServerInstanceInterfaceConfiguration) Set(val *ServerInstanceInterfaceConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableServerInstanceInterfaceConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableServerInstanceInterfaceConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerInstanceInterfaceConfiguration(val *ServerInstanceInterfaceConfiguration) *NullableServerInstanceInterfaceConfiguration {
	return &NullableServerInstanceInterfaceConfiguration{value: val, isSet: true}
}

func (v NullableServerInstanceInterfaceConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerInstanceInterfaceConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


