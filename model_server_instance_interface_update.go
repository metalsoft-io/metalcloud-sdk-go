/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ServerInstanceInterfaceUpdate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerInstanceInterfaceUpdate{}

// ServerInstanceInterfaceUpdate struct for ServerInstanceInterfaceUpdate
type ServerInstanceInterfaceUpdate struct {
	Config *ServerInstanceInterfaceConfiguration `json:"config,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServerInstanceInterfaceUpdate ServerInstanceInterfaceUpdate

// NewServerInstanceInterfaceUpdate instantiates a new ServerInstanceInterfaceUpdate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerInstanceInterfaceUpdate() *ServerInstanceInterfaceUpdate {
	this := ServerInstanceInterfaceUpdate{}
	return &this
}

// NewServerInstanceInterfaceUpdateWithDefaults instantiates a new ServerInstanceInterfaceUpdate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerInstanceInterfaceUpdateWithDefaults() *ServerInstanceInterfaceUpdate {
	this := ServerInstanceInterfaceUpdate{}
	return &this
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *ServerInstanceInterfaceUpdate) GetConfig() ServerInstanceInterfaceConfiguration {
	if o == nil || IsNil(o.Config) {
		var ret ServerInstanceInterfaceConfiguration
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceInterfaceUpdate) GetConfigOk() (*ServerInstanceInterfaceConfiguration, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *ServerInstanceInterfaceUpdate) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given ServerInstanceInterfaceConfiguration and assigns it to the Config field.
func (o *ServerInstanceInterfaceUpdate) SetConfig(v ServerInstanceInterfaceConfiguration) {
	o.Config = &v
}

func (o ServerInstanceInterfaceUpdate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerInstanceInterfaceUpdate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServerInstanceInterfaceUpdate) UnmarshalJSON(data []byte) (err error) {
	varServerInstanceInterfaceUpdate := _ServerInstanceInterfaceUpdate{}

	err = json.Unmarshal(data, &varServerInstanceInterfaceUpdate)

	if err != nil {
		return err
	}

	*o = ServerInstanceInterfaceUpdate(varServerInstanceInterfaceUpdate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "config")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServerInstanceInterfaceUpdate struct {
	value *ServerInstanceInterfaceUpdate
	isSet bool
}

func (v NullableServerInstanceInterfaceUpdate) Get() *ServerInstanceInterfaceUpdate {
	return v.value
}

func (v *NullableServerInstanceInterfaceUpdate) Set(val *ServerInstanceInterfaceUpdate) {
	v.value = val
	v.isSet = true
}

func (v NullableServerInstanceInterfaceUpdate) IsSet() bool {
	return v.isSet
}

func (v *NullableServerInstanceInterfaceUpdate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerInstanceInterfaceUpdate(val *ServerInstanceInterfaceUpdate) *NullableServerInstanceInterfaceUpdate {
	return &NullableServerInstanceInterfaceUpdate{value: val, isSet: true}
}

func (v NullableServerInstanceInterfaceUpdate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerInstanceInterfaceUpdate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


