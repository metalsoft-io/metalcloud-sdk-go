/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the ExtensionTaskOptionWebhook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensionTaskOptionWebhook{}

// ExtensionTaskOptionWebhook struct for ExtensionTaskOptionWebhook
type ExtensionTaskOptionWebhook struct {
	// Webhook task endpoint.
	Endpoint string `json:"endpoint"`
	// Webhook task request method.
	Method string `json:"method"`
	// Request headers for the webhook task.
	Headers map[string]interface{} `json:"headers,omitempty"`
	// Request template for the webhook task.
	RequestTemplate string `json:"requestTemplate"`
	// Expected response statuses for the webhook task.
	ExpectedResponseStatuses []float32 `json:"expectedResponseStatuses,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExtensionTaskOptionWebhook ExtensionTaskOptionWebhook

// NewExtensionTaskOptionWebhook instantiates a new ExtensionTaskOptionWebhook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensionTaskOptionWebhook(endpoint string, method string, requestTemplate string) *ExtensionTaskOptionWebhook {
	this := ExtensionTaskOptionWebhook{}
	this.Endpoint = endpoint
	this.Method = method
	this.RequestTemplate = requestTemplate
	return &this
}

// NewExtensionTaskOptionWebhookWithDefaults instantiates a new ExtensionTaskOptionWebhook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionTaskOptionWebhookWithDefaults() *ExtensionTaskOptionWebhook {
	this := ExtensionTaskOptionWebhook{}
	return &this
}

// GetEndpoint returns the Endpoint field value
func (o *ExtensionTaskOptionWebhook) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *ExtensionTaskOptionWebhook) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *ExtensionTaskOptionWebhook) SetEndpoint(v string) {
	o.Endpoint = v
}

// GetMethod returns the Method field value
func (o *ExtensionTaskOptionWebhook) GetMethod() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Method
}

// GetMethodOk returns a tuple with the Method field value
// and a boolean to check if the value has been set.
func (o *ExtensionTaskOptionWebhook) GetMethodOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Method, true
}

// SetMethod sets field value
func (o *ExtensionTaskOptionWebhook) SetMethod(v string) {
	o.Method = v
}

// GetHeaders returns the Headers field value if set, zero value otherwise.
func (o *ExtensionTaskOptionWebhook) GetHeaders() map[string]interface{} {
	if o == nil || IsNil(o.Headers) {
		var ret map[string]interface{}
		return ret
	}
	return o.Headers
}

// GetHeadersOk returns a tuple with the Headers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionTaskOptionWebhook) GetHeadersOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Headers) {
		return map[string]interface{}{}, false
	}
	return o.Headers, true
}

// HasHeaders returns a boolean if a field has been set.
func (o *ExtensionTaskOptionWebhook) HasHeaders() bool {
	if o != nil && !IsNil(o.Headers) {
		return true
	}

	return false
}

// SetHeaders gets a reference to the given map[string]interface{} and assigns it to the Headers field.
func (o *ExtensionTaskOptionWebhook) SetHeaders(v map[string]interface{}) {
	o.Headers = v
}

// GetRequestTemplate returns the RequestTemplate field value
func (o *ExtensionTaskOptionWebhook) GetRequestTemplate() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RequestTemplate
}

// GetRequestTemplateOk returns a tuple with the RequestTemplate field value
// and a boolean to check if the value has been set.
func (o *ExtensionTaskOptionWebhook) GetRequestTemplateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestTemplate, true
}

// SetRequestTemplate sets field value
func (o *ExtensionTaskOptionWebhook) SetRequestTemplate(v string) {
	o.RequestTemplate = v
}

// GetExpectedResponseStatuses returns the ExpectedResponseStatuses field value if set, zero value otherwise.
func (o *ExtensionTaskOptionWebhook) GetExpectedResponseStatuses() []float32 {
	if o == nil || IsNil(o.ExpectedResponseStatuses) {
		var ret []float32
		return ret
	}
	return o.ExpectedResponseStatuses
}

// GetExpectedResponseStatusesOk returns a tuple with the ExpectedResponseStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionTaskOptionWebhook) GetExpectedResponseStatusesOk() ([]float32, bool) {
	if o == nil || IsNil(o.ExpectedResponseStatuses) {
		return nil, false
	}
	return o.ExpectedResponseStatuses, true
}

// HasExpectedResponseStatuses returns a boolean if a field has been set.
func (o *ExtensionTaskOptionWebhook) HasExpectedResponseStatuses() bool {
	if o != nil && !IsNil(o.ExpectedResponseStatuses) {
		return true
	}

	return false
}

// SetExpectedResponseStatuses gets a reference to the given []float32 and assigns it to the ExpectedResponseStatuses field.
func (o *ExtensionTaskOptionWebhook) SetExpectedResponseStatuses(v []float32) {
	o.ExpectedResponseStatuses = v
}

func (o ExtensionTaskOptionWebhook) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensionTaskOptionWebhook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["endpoint"] = o.Endpoint
	toSerialize["method"] = o.Method
	if !IsNil(o.Headers) {
		toSerialize["headers"] = o.Headers
	}
	toSerialize["requestTemplate"] = o.RequestTemplate
	if !IsNil(o.ExpectedResponseStatuses) {
		toSerialize["expectedResponseStatuses"] = o.ExpectedResponseStatuses
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExtensionTaskOptionWebhook) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"endpoint",
		"method",
		"requestTemplate",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varExtensionTaskOptionWebhook := _ExtensionTaskOptionWebhook{}

	err = json.Unmarshal(data, &varExtensionTaskOptionWebhook)

	if err != nil {
		return err
	}

	*o = ExtensionTaskOptionWebhook(varExtensionTaskOptionWebhook)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "endpoint")
		delete(additionalProperties, "method")
		delete(additionalProperties, "headers")
		delete(additionalProperties, "requestTemplate")
		delete(additionalProperties, "expectedResponseStatuses")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExtensionTaskOptionWebhook struct {
	value *ExtensionTaskOptionWebhook
	isSet bool
}

func (v NullableExtensionTaskOptionWebhook) Get() *ExtensionTaskOptionWebhook {
	return v.value
}

func (v *NullableExtensionTaskOptionWebhook) Set(val *ExtensionTaskOptionWebhook) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensionTaskOptionWebhook) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensionTaskOptionWebhook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensionTaskOptionWebhook(val *ExtensionTaskOptionWebhook) *NullableExtensionTaskOptionWebhook {
	return &NullableExtensionTaskOptionWebhook{value: val, isSet: true}
}

func (v NullableExtensionTaskOptionWebhook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensionTaskOptionWebhook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


