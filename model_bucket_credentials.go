/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the BucketCredentials type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BucketCredentials{}

// BucketCredentials struct for BucketCredentials
type BucketCredentials struct {
	// Access Key ID for the Bucket.
	AccessKeyId string `json:"accessKeyId"`
	// Secret Key for the Bucket.
	SecretKey string `json:"secretKey"`
	AdditionalProperties map[string]interface{}
}

type _BucketCredentials BucketCredentials

// NewBucketCredentials instantiates a new BucketCredentials object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBucketCredentials(accessKeyId string, secretKey string) *BucketCredentials {
	this := BucketCredentials{}
	this.AccessKeyId = accessKeyId
	this.SecretKey = secretKey
	return &this
}

// NewBucketCredentialsWithDefaults instantiates a new BucketCredentials object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBucketCredentialsWithDefaults() *BucketCredentials {
	this := BucketCredentials{}
	return &this
}

// GetAccessKeyId returns the AccessKeyId field value
func (o *BucketCredentials) GetAccessKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccessKeyId
}

// GetAccessKeyIdOk returns a tuple with the AccessKeyId field value
// and a boolean to check if the value has been set.
func (o *BucketCredentials) GetAccessKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AccessKeyId, true
}

// SetAccessKeyId sets field value
func (o *BucketCredentials) SetAccessKeyId(v string) {
	o.AccessKeyId = v
}

// GetSecretKey returns the SecretKey field value
func (o *BucketCredentials) GetSecretKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SecretKey
}

// GetSecretKeyOk returns a tuple with the SecretKey field value
// and a boolean to check if the value has been set.
func (o *BucketCredentials) GetSecretKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecretKey, true
}

// SetSecretKey sets field value
func (o *BucketCredentials) SetSecretKey(v string) {
	o.SecretKey = v
}

func (o BucketCredentials) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BucketCredentials) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["accessKeyId"] = o.AccessKeyId
	toSerialize["secretKey"] = o.SecretKey

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *BucketCredentials) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"accessKeyId",
		"secretKey",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBucketCredentials := _BucketCredentials{}

	err = json.Unmarshal(data, &varBucketCredentials)

	if err != nil {
		return err
	}

	*o = BucketCredentials(varBucketCredentials)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "accessKeyId")
		delete(additionalProperties, "secretKey")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableBucketCredentials struct {
	value *BucketCredentials
	isSet bool
}

func (v NullableBucketCredentials) Get() *BucketCredentials {
	return v.value
}

func (v *NullableBucketCredentials) Set(val *BucketCredentials) {
	v.value = val
	v.isSet = true
}

func (v NullableBucketCredentials) IsSet() bool {
	return v.isSet
}

func (v *NullableBucketCredentials) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBucketCredentials(val *BucketCredentials) *NullableBucketCredentials {
	return &NullableBucketCredentials{value: val, isSet: true}
}

func (v NullableBucketCredentials) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBucketCredentials) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


