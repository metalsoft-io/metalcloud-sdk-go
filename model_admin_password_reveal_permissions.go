/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the AdminPasswordRevealPermissions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AdminPasswordRevealPermissions{}

// AdminPasswordRevealPermissions struct for AdminPasswordRevealPermissions
type AdminPasswordRevealPermissions struct {
	Cluster *bool `json:"cluster,omitempty"`
	Instance *bool `json:"instance,omitempty"`
	Drive *bool `json:"drive,omitempty"`
	Hdfs *bool `json:"hdfs,omitempty"`
	Datacenter *bool `json:"datacenter,omitempty"`
	ChassisRack *bool `json:"chassis_rack,omitempty"`
	Container *bool `json:"container,omitempty"`
	StoragePool *bool `json:"storage_pool,omitempty"`
	Server *bool `json:"server,omitempty"`
	Switch *bool `json:"switch,omitempty"`
	Workflow *bool `json:"workflow,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _AdminPasswordRevealPermissions AdminPasswordRevealPermissions

// NewAdminPasswordRevealPermissions instantiates a new AdminPasswordRevealPermissions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAdminPasswordRevealPermissions() *AdminPasswordRevealPermissions {
	this := AdminPasswordRevealPermissions{}
	return &this
}

// NewAdminPasswordRevealPermissionsWithDefaults instantiates a new AdminPasswordRevealPermissions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAdminPasswordRevealPermissionsWithDefaults() *AdminPasswordRevealPermissions {
	this := AdminPasswordRevealPermissions{}
	return &this
}

// GetCluster returns the Cluster field value if set, zero value otherwise.
func (o *AdminPasswordRevealPermissions) GetCluster() bool {
	if o == nil || IsNil(o.Cluster) {
		var ret bool
		return ret
	}
	return *o.Cluster
}

// GetClusterOk returns a tuple with the Cluster field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminPasswordRevealPermissions) GetClusterOk() (*bool, bool) {
	if o == nil || IsNil(o.Cluster) {
		return nil, false
	}
	return o.Cluster, true
}

// HasCluster returns a boolean if a field has been set.
func (o *AdminPasswordRevealPermissions) HasCluster() bool {
	if o != nil && !IsNil(o.Cluster) {
		return true
	}

	return false
}

// SetCluster gets a reference to the given bool and assigns it to the Cluster field.
func (o *AdminPasswordRevealPermissions) SetCluster(v bool) {
	o.Cluster = &v
}

// GetInstance returns the Instance field value if set, zero value otherwise.
func (o *AdminPasswordRevealPermissions) GetInstance() bool {
	if o == nil || IsNil(o.Instance) {
		var ret bool
		return ret
	}
	return *o.Instance
}

// GetInstanceOk returns a tuple with the Instance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminPasswordRevealPermissions) GetInstanceOk() (*bool, bool) {
	if o == nil || IsNil(o.Instance) {
		return nil, false
	}
	return o.Instance, true
}

// HasInstance returns a boolean if a field has been set.
func (o *AdminPasswordRevealPermissions) HasInstance() bool {
	if o != nil && !IsNil(o.Instance) {
		return true
	}

	return false
}

// SetInstance gets a reference to the given bool and assigns it to the Instance field.
func (o *AdminPasswordRevealPermissions) SetInstance(v bool) {
	o.Instance = &v
}

// GetDrive returns the Drive field value if set, zero value otherwise.
func (o *AdminPasswordRevealPermissions) GetDrive() bool {
	if o == nil || IsNil(o.Drive) {
		var ret bool
		return ret
	}
	return *o.Drive
}

// GetDriveOk returns a tuple with the Drive field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminPasswordRevealPermissions) GetDriveOk() (*bool, bool) {
	if o == nil || IsNil(o.Drive) {
		return nil, false
	}
	return o.Drive, true
}

// HasDrive returns a boolean if a field has been set.
func (o *AdminPasswordRevealPermissions) HasDrive() bool {
	if o != nil && !IsNil(o.Drive) {
		return true
	}

	return false
}

// SetDrive gets a reference to the given bool and assigns it to the Drive field.
func (o *AdminPasswordRevealPermissions) SetDrive(v bool) {
	o.Drive = &v
}

// GetHdfs returns the Hdfs field value if set, zero value otherwise.
func (o *AdminPasswordRevealPermissions) GetHdfs() bool {
	if o == nil || IsNil(o.Hdfs) {
		var ret bool
		return ret
	}
	return *o.Hdfs
}

// GetHdfsOk returns a tuple with the Hdfs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminPasswordRevealPermissions) GetHdfsOk() (*bool, bool) {
	if o == nil || IsNil(o.Hdfs) {
		return nil, false
	}
	return o.Hdfs, true
}

// HasHdfs returns a boolean if a field has been set.
func (o *AdminPasswordRevealPermissions) HasHdfs() bool {
	if o != nil && !IsNil(o.Hdfs) {
		return true
	}

	return false
}

// SetHdfs gets a reference to the given bool and assigns it to the Hdfs field.
func (o *AdminPasswordRevealPermissions) SetHdfs(v bool) {
	o.Hdfs = &v
}

// GetDatacenter returns the Datacenter field value if set, zero value otherwise.
func (o *AdminPasswordRevealPermissions) GetDatacenter() bool {
	if o == nil || IsNil(o.Datacenter) {
		var ret bool
		return ret
	}
	return *o.Datacenter
}

// GetDatacenterOk returns a tuple with the Datacenter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminPasswordRevealPermissions) GetDatacenterOk() (*bool, bool) {
	if o == nil || IsNil(o.Datacenter) {
		return nil, false
	}
	return o.Datacenter, true
}

// HasDatacenter returns a boolean if a field has been set.
func (o *AdminPasswordRevealPermissions) HasDatacenter() bool {
	if o != nil && !IsNil(o.Datacenter) {
		return true
	}

	return false
}

// SetDatacenter gets a reference to the given bool and assigns it to the Datacenter field.
func (o *AdminPasswordRevealPermissions) SetDatacenter(v bool) {
	o.Datacenter = &v
}

// GetChassisRack returns the ChassisRack field value if set, zero value otherwise.
func (o *AdminPasswordRevealPermissions) GetChassisRack() bool {
	if o == nil || IsNil(o.ChassisRack) {
		var ret bool
		return ret
	}
	return *o.ChassisRack
}

// GetChassisRackOk returns a tuple with the ChassisRack field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminPasswordRevealPermissions) GetChassisRackOk() (*bool, bool) {
	if o == nil || IsNil(o.ChassisRack) {
		return nil, false
	}
	return o.ChassisRack, true
}

// HasChassisRack returns a boolean if a field has been set.
func (o *AdminPasswordRevealPermissions) HasChassisRack() bool {
	if o != nil && !IsNil(o.ChassisRack) {
		return true
	}

	return false
}

// SetChassisRack gets a reference to the given bool and assigns it to the ChassisRack field.
func (o *AdminPasswordRevealPermissions) SetChassisRack(v bool) {
	o.ChassisRack = &v
}

// GetContainer returns the Container field value if set, zero value otherwise.
func (o *AdminPasswordRevealPermissions) GetContainer() bool {
	if o == nil || IsNil(o.Container) {
		var ret bool
		return ret
	}
	return *o.Container
}

// GetContainerOk returns a tuple with the Container field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminPasswordRevealPermissions) GetContainerOk() (*bool, bool) {
	if o == nil || IsNil(o.Container) {
		return nil, false
	}
	return o.Container, true
}

// HasContainer returns a boolean if a field has been set.
func (o *AdminPasswordRevealPermissions) HasContainer() bool {
	if o != nil && !IsNil(o.Container) {
		return true
	}

	return false
}

// SetContainer gets a reference to the given bool and assigns it to the Container field.
func (o *AdminPasswordRevealPermissions) SetContainer(v bool) {
	o.Container = &v
}

// GetStoragePool returns the StoragePool field value if set, zero value otherwise.
func (o *AdminPasswordRevealPermissions) GetStoragePool() bool {
	if o == nil || IsNil(o.StoragePool) {
		var ret bool
		return ret
	}
	return *o.StoragePool
}

// GetStoragePoolOk returns a tuple with the StoragePool field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminPasswordRevealPermissions) GetStoragePoolOk() (*bool, bool) {
	if o == nil || IsNil(o.StoragePool) {
		return nil, false
	}
	return o.StoragePool, true
}

// HasStoragePool returns a boolean if a field has been set.
func (o *AdminPasswordRevealPermissions) HasStoragePool() bool {
	if o != nil && !IsNil(o.StoragePool) {
		return true
	}

	return false
}

// SetStoragePool gets a reference to the given bool and assigns it to the StoragePool field.
func (o *AdminPasswordRevealPermissions) SetStoragePool(v bool) {
	o.StoragePool = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *AdminPasswordRevealPermissions) GetServer() bool {
	if o == nil || IsNil(o.Server) {
		var ret bool
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminPasswordRevealPermissions) GetServerOk() (*bool, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *AdminPasswordRevealPermissions) HasServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given bool and assigns it to the Server field.
func (o *AdminPasswordRevealPermissions) SetServer(v bool) {
	o.Server = &v
}

// GetSwitch returns the Switch field value if set, zero value otherwise.
func (o *AdminPasswordRevealPermissions) GetSwitch() bool {
	if o == nil || IsNil(o.Switch) {
		var ret bool
		return ret
	}
	return *o.Switch
}

// GetSwitchOk returns a tuple with the Switch field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminPasswordRevealPermissions) GetSwitchOk() (*bool, bool) {
	if o == nil || IsNil(o.Switch) {
		return nil, false
	}
	return o.Switch, true
}

// HasSwitch returns a boolean if a field has been set.
func (o *AdminPasswordRevealPermissions) HasSwitch() bool {
	if o != nil && !IsNil(o.Switch) {
		return true
	}

	return false
}

// SetSwitch gets a reference to the given bool and assigns it to the Switch field.
func (o *AdminPasswordRevealPermissions) SetSwitch(v bool) {
	o.Switch = &v
}

// GetWorkflow returns the Workflow field value if set, zero value otherwise.
func (o *AdminPasswordRevealPermissions) GetWorkflow() bool {
	if o == nil || IsNil(o.Workflow) {
		var ret bool
		return ret
	}
	return *o.Workflow
}

// GetWorkflowOk returns a tuple with the Workflow field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AdminPasswordRevealPermissions) GetWorkflowOk() (*bool, bool) {
	if o == nil || IsNil(o.Workflow) {
		return nil, false
	}
	return o.Workflow, true
}

// HasWorkflow returns a boolean if a field has been set.
func (o *AdminPasswordRevealPermissions) HasWorkflow() bool {
	if o != nil && !IsNil(o.Workflow) {
		return true
	}

	return false
}

// SetWorkflow gets a reference to the given bool and assigns it to the Workflow field.
func (o *AdminPasswordRevealPermissions) SetWorkflow(v bool) {
	o.Workflow = &v
}

func (o AdminPasswordRevealPermissions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AdminPasswordRevealPermissions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Cluster) {
		toSerialize["cluster"] = o.Cluster
	}
	if !IsNil(o.Instance) {
		toSerialize["instance"] = o.Instance
	}
	if !IsNil(o.Drive) {
		toSerialize["drive"] = o.Drive
	}
	if !IsNil(o.Hdfs) {
		toSerialize["hdfs"] = o.Hdfs
	}
	if !IsNil(o.Datacenter) {
		toSerialize["datacenter"] = o.Datacenter
	}
	if !IsNil(o.ChassisRack) {
		toSerialize["chassis_rack"] = o.ChassisRack
	}
	if !IsNil(o.Container) {
		toSerialize["container"] = o.Container
	}
	if !IsNil(o.StoragePool) {
		toSerialize["storage_pool"] = o.StoragePool
	}
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !IsNil(o.Switch) {
		toSerialize["switch"] = o.Switch
	}
	if !IsNil(o.Workflow) {
		toSerialize["workflow"] = o.Workflow
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AdminPasswordRevealPermissions) UnmarshalJSON(data []byte) (err error) {
	varAdminPasswordRevealPermissions := _AdminPasswordRevealPermissions{}

	err = json.Unmarshal(data, &varAdminPasswordRevealPermissions)

	if err != nil {
		return err
	}

	*o = AdminPasswordRevealPermissions(varAdminPasswordRevealPermissions)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "cluster")
		delete(additionalProperties, "instance")
		delete(additionalProperties, "drive")
		delete(additionalProperties, "hdfs")
		delete(additionalProperties, "datacenter")
		delete(additionalProperties, "chassis_rack")
		delete(additionalProperties, "container")
		delete(additionalProperties, "storage_pool")
		delete(additionalProperties, "server")
		delete(additionalProperties, "switch")
		delete(additionalProperties, "workflow")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAdminPasswordRevealPermissions struct {
	value *AdminPasswordRevealPermissions
	isSet bool
}

func (v NullableAdminPasswordRevealPermissions) Get() *AdminPasswordRevealPermissions {
	return v.value
}

func (v *NullableAdminPasswordRevealPermissions) Set(val *AdminPasswordRevealPermissions) {
	v.value = val
	v.isSet = true
}

func (v NullableAdminPasswordRevealPermissions) IsSet() bool {
	return v.isSet
}

func (v *NullableAdminPasswordRevealPermissions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAdminPasswordRevealPermissions(val *AdminPasswordRevealPermissions) *NullableAdminPasswordRevealPermissions {
	return &NullableAdminPasswordRevealPermissions{value: val, isSet: true}
}

func (v NullableAdminPasswordRevealPermissions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAdminPasswordRevealPermissions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


