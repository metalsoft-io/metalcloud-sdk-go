/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the AuthenticationRequestDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AuthenticationRequestDto{}

// AuthenticationRequestDto struct for AuthenticationRequestDto
type AuthenticationRequestDto struct {
	// Type of the authentication request.
	Provider string `json:"provider"`
	Properties AuthenticationRequestDtoProperties `json:"properties"`
	AdditionalProperties map[string]interface{}
}

type _AuthenticationRequestDto AuthenticationRequestDto

// NewAuthenticationRequestDto instantiates a new AuthenticationRequestDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAuthenticationRequestDto(provider string, properties AuthenticationRequestDtoProperties) *AuthenticationRequestDto {
	this := AuthenticationRequestDto{}
	this.Provider = provider
	this.Properties = properties
	return &this
}

// NewAuthenticationRequestDtoWithDefaults instantiates a new AuthenticationRequestDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAuthenticationRequestDtoWithDefaults() *AuthenticationRequestDto {
	this := AuthenticationRequestDto{}
	var provider string = "mysql"
	this.Provider = provider
	return &this
}

// GetProvider returns the Provider field value
func (o *AuthenticationRequestDto) GetProvider() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Provider
}

// GetProviderOk returns a tuple with the Provider field value
// and a boolean to check if the value has been set.
func (o *AuthenticationRequestDto) GetProviderOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Provider, true
}

// SetProvider sets field value
func (o *AuthenticationRequestDto) SetProvider(v string) {
	o.Provider = v
}

// GetProperties returns the Properties field value
func (o *AuthenticationRequestDto) GetProperties() AuthenticationRequestDtoProperties {
	if o == nil {
		var ret AuthenticationRequestDtoProperties
		return ret
	}

	return o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value
// and a boolean to check if the value has been set.
func (o *AuthenticationRequestDto) GetPropertiesOk() (*AuthenticationRequestDtoProperties, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Properties, true
}

// SetProperties sets field value
func (o *AuthenticationRequestDto) SetProperties(v AuthenticationRequestDtoProperties) {
	o.Properties = v
}

func (o AuthenticationRequestDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AuthenticationRequestDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["provider"] = o.Provider
	toSerialize["properties"] = o.Properties

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AuthenticationRequestDto) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"provider",
		"properties",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAuthenticationRequestDto := _AuthenticationRequestDto{}

	err = json.Unmarshal(data, &varAuthenticationRequestDto)

	if err != nil {
		return err
	}

	*o = AuthenticationRequestDto(varAuthenticationRequestDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "provider")
		delete(additionalProperties, "properties")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAuthenticationRequestDto struct {
	value *AuthenticationRequestDto
	isSet bool
}

func (v NullableAuthenticationRequestDto) Get() *AuthenticationRequestDto {
	return v.value
}

func (v *NullableAuthenticationRequestDto) Set(val *AuthenticationRequestDto) {
	v.value = val
	v.isSet = true
}

func (v NullableAuthenticationRequestDto) IsSet() bool {
	return v.isSet
}

func (v *NullableAuthenticationRequestDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAuthenticationRequestDto(val *AuthenticationRequestDto) *NullableAuthenticationRequestDto {
	return &NullableAuthenticationRequestDto{value: val, isSet: true}
}

func (v NullableAuthenticationRequestDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAuthenticationRequestDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


