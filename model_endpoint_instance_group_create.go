/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the EndpointInstanceGroupCreate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EndpointInstanceGroupCreate{}

// EndpointInstanceGroupCreate struct for EndpointInstanceGroupCreate
type EndpointInstanceGroupCreate struct {
	// The Product Instance label. Will be automatically generated if not provided.
	Label *string `json:"label,omitempty"`
	EndpointGroupName *string `json:"endpointGroupName,omitempty"`
	ExtensionInstanceId *int32 `json:"extensionInstanceId,omitempty"`
	// Custom hostname for the DNS Load Balancing record. If set, this will be used as the DNS Load Balancing record name instead of the default \"endpoint-instance-group\". The hostname must be a valid DNS subdomain and can only contain alphanumeric characters, hyphens, and underscores. This will only take effect if the property \"dnsLoadBalancingRecord\" is true. It will be automatically suffixed with the endpoint instance group ID (e.g., \"-34\") to ensure the uniqueness of the resulting DNS name.
	Hostname *string `json:"hostname,omitempty"`
	// The resource pool assigned to this instance array
	ResourcePoolId *int32 `json:"resourcePoolId,omitempty"`
	Tags []string `json:"tags,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EndpointInstanceGroupCreate EndpointInstanceGroupCreate

// NewEndpointInstanceGroupCreate instantiates a new EndpointInstanceGroupCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpointInstanceGroupCreate() *EndpointInstanceGroupCreate {
	this := EndpointInstanceGroupCreate{}
	return &this
}

// NewEndpointInstanceGroupCreateWithDefaults instantiates a new EndpointInstanceGroupCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointInstanceGroupCreateWithDefaults() *EndpointInstanceGroupCreate {
	this := EndpointInstanceGroupCreate{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *EndpointInstanceGroupCreate) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointInstanceGroupCreate) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *EndpointInstanceGroupCreate) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *EndpointInstanceGroupCreate) SetLabel(v string) {
	o.Label = &v
}

// GetEndpointGroupName returns the EndpointGroupName field value if set, zero value otherwise.
func (o *EndpointInstanceGroupCreate) GetEndpointGroupName() string {
	if o == nil || IsNil(o.EndpointGroupName) {
		var ret string
		return ret
	}
	return *o.EndpointGroupName
}

// GetEndpointGroupNameOk returns a tuple with the EndpointGroupName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointInstanceGroupCreate) GetEndpointGroupNameOk() (*string, bool) {
	if o == nil || IsNil(o.EndpointGroupName) {
		return nil, false
	}
	return o.EndpointGroupName, true
}

// HasEndpointGroupName returns a boolean if a field has been set.
func (o *EndpointInstanceGroupCreate) HasEndpointGroupName() bool {
	if o != nil && !IsNil(o.EndpointGroupName) {
		return true
	}

	return false
}

// SetEndpointGroupName gets a reference to the given string and assigns it to the EndpointGroupName field.
func (o *EndpointInstanceGroupCreate) SetEndpointGroupName(v string) {
	o.EndpointGroupName = &v
}

// GetExtensionInstanceId returns the ExtensionInstanceId field value if set, zero value otherwise.
func (o *EndpointInstanceGroupCreate) GetExtensionInstanceId() int32 {
	if o == nil || IsNil(o.ExtensionInstanceId) {
		var ret int32
		return ret
	}
	return *o.ExtensionInstanceId
}

// GetExtensionInstanceIdOk returns a tuple with the ExtensionInstanceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointInstanceGroupCreate) GetExtensionInstanceIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ExtensionInstanceId) {
		return nil, false
	}
	return o.ExtensionInstanceId, true
}

// HasExtensionInstanceId returns a boolean if a field has been set.
func (o *EndpointInstanceGroupCreate) HasExtensionInstanceId() bool {
	if o != nil && !IsNil(o.ExtensionInstanceId) {
		return true
	}

	return false
}

// SetExtensionInstanceId gets a reference to the given int32 and assigns it to the ExtensionInstanceId field.
func (o *EndpointInstanceGroupCreate) SetExtensionInstanceId(v int32) {
	o.ExtensionInstanceId = &v
}

// GetHostname returns the Hostname field value if set, zero value otherwise.
func (o *EndpointInstanceGroupCreate) GetHostname() string {
	if o == nil || IsNil(o.Hostname) {
		var ret string
		return ret
	}
	return *o.Hostname
}

// GetHostnameOk returns a tuple with the Hostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointInstanceGroupCreate) GetHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.Hostname) {
		return nil, false
	}
	return o.Hostname, true
}

// HasHostname returns a boolean if a field has been set.
func (o *EndpointInstanceGroupCreate) HasHostname() bool {
	if o != nil && !IsNil(o.Hostname) {
		return true
	}

	return false
}

// SetHostname gets a reference to the given string and assigns it to the Hostname field.
func (o *EndpointInstanceGroupCreate) SetHostname(v string) {
	o.Hostname = &v
}

// GetResourcePoolId returns the ResourcePoolId field value if set, zero value otherwise.
func (o *EndpointInstanceGroupCreate) GetResourcePoolId() int32 {
	if o == nil || IsNil(o.ResourcePoolId) {
		var ret int32
		return ret
	}
	return *o.ResourcePoolId
}

// GetResourcePoolIdOk returns a tuple with the ResourcePoolId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointInstanceGroupCreate) GetResourcePoolIdOk() (*int32, bool) {
	if o == nil || IsNil(o.ResourcePoolId) {
		return nil, false
	}
	return o.ResourcePoolId, true
}

// HasResourcePoolId returns a boolean if a field has been set.
func (o *EndpointInstanceGroupCreate) HasResourcePoolId() bool {
	if o != nil && !IsNil(o.ResourcePoolId) {
		return true
	}

	return false
}

// SetResourcePoolId gets a reference to the given int32 and assigns it to the ResourcePoolId field.
func (o *EndpointInstanceGroupCreate) SetResourcePoolId(v int32) {
	o.ResourcePoolId = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *EndpointInstanceGroupCreate) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EndpointInstanceGroupCreate) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *EndpointInstanceGroupCreate) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *EndpointInstanceGroupCreate) SetTags(v []string) {
	o.Tags = v
}

func (o EndpointInstanceGroupCreate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EndpointInstanceGroupCreate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.EndpointGroupName) {
		toSerialize["endpointGroupName"] = o.EndpointGroupName
	}
	if !IsNil(o.ExtensionInstanceId) {
		toSerialize["extensionInstanceId"] = o.ExtensionInstanceId
	}
	if !IsNil(o.Hostname) {
		toSerialize["hostname"] = o.Hostname
	}
	if !IsNil(o.ResourcePoolId) {
		toSerialize["resourcePoolId"] = o.ResourcePoolId
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EndpointInstanceGroupCreate) UnmarshalJSON(data []byte) (err error) {
	varEndpointInstanceGroupCreate := _EndpointInstanceGroupCreate{}

	err = json.Unmarshal(data, &varEndpointInstanceGroupCreate)

	if err != nil {
		return err
	}

	*o = EndpointInstanceGroupCreate(varEndpointInstanceGroupCreate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "label")
		delete(additionalProperties, "endpointGroupName")
		delete(additionalProperties, "extensionInstanceId")
		delete(additionalProperties, "hostname")
		delete(additionalProperties, "resourcePoolId")
		delete(additionalProperties, "tags")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEndpointInstanceGroupCreate struct {
	value *EndpointInstanceGroupCreate
	isSet bool
}

func (v NullableEndpointInstanceGroupCreate) Get() *EndpointInstanceGroupCreate {
	return v.value
}

func (v *NullableEndpointInstanceGroupCreate) Set(val *EndpointInstanceGroupCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpointInstanceGroupCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpointInstanceGroupCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpointInstanceGroupCreate(val *EndpointInstanceGroupCreate) *NullableEndpointInstanceGroupCreate {
	return &NullableEndpointInstanceGroupCreate{value: val, isSet: true}
}

func (v NullableEndpointInstanceGroupCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpointInstanceGroupCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


