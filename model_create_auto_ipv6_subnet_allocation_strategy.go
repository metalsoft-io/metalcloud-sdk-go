/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateAutoIpv6SubnetAllocationStrategy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateAutoIpv6SubnetAllocationStrategy{}

// CreateAutoIpv6SubnetAllocationStrategy struct for CreateAutoIpv6SubnetAllocationStrategy
type CreateAutoIpv6SubnetAllocationStrategy struct {
	Kind AllocationStrategyKind `json:"kind"`
	Scope CreateResourceScope `json:"scope"`
	GatewayPlacement *SubnetGatewayPlacement `json:"gatewayPlacement,omitempty"`
	SubnetPoolIds []int32 `json:"subnetPoolIds"`
	PrefixLength int32 `json:"prefixLength"`
	AdditionalProperties map[string]interface{}
}

type _CreateAutoIpv6SubnetAllocationStrategy CreateAutoIpv6SubnetAllocationStrategy

// NewCreateAutoIpv6SubnetAllocationStrategy instantiates a new CreateAutoIpv6SubnetAllocationStrategy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateAutoIpv6SubnetAllocationStrategy(kind AllocationStrategyKind, scope CreateResourceScope, subnetPoolIds []int32, prefixLength int32) *CreateAutoIpv6SubnetAllocationStrategy {
	this := CreateAutoIpv6SubnetAllocationStrategy{}
	this.Kind = kind
	this.Scope = scope
	var gatewayPlacement SubnetGatewayPlacement = SUBNETGATEWAYPLACEMENT_DEFAULT
	this.GatewayPlacement = &gatewayPlacement
	this.SubnetPoolIds = subnetPoolIds
	this.PrefixLength = prefixLength
	return &this
}

// NewCreateAutoIpv6SubnetAllocationStrategyWithDefaults instantiates a new CreateAutoIpv6SubnetAllocationStrategy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateAutoIpv6SubnetAllocationStrategyWithDefaults() *CreateAutoIpv6SubnetAllocationStrategy {
	this := CreateAutoIpv6SubnetAllocationStrategy{}
	var gatewayPlacement SubnetGatewayPlacement = SUBNETGATEWAYPLACEMENT_DEFAULT
	this.GatewayPlacement = &gatewayPlacement
	return &this
}

// GetKind returns the Kind field value
func (o *CreateAutoIpv6SubnetAllocationStrategy) GetKind() AllocationStrategyKind {
	if o == nil {
		var ret AllocationStrategyKind
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *CreateAutoIpv6SubnetAllocationStrategy) GetKindOk() (*AllocationStrategyKind, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *CreateAutoIpv6SubnetAllocationStrategy) SetKind(v AllocationStrategyKind) {
	o.Kind = v
}

// GetScope returns the Scope field value
func (o *CreateAutoIpv6SubnetAllocationStrategy) GetScope() CreateResourceScope {
	if o == nil {
		var ret CreateResourceScope
		return ret
	}

	return o.Scope
}

// GetScopeOk returns a tuple with the Scope field value
// and a boolean to check if the value has been set.
func (o *CreateAutoIpv6SubnetAllocationStrategy) GetScopeOk() (*CreateResourceScope, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Scope, true
}

// SetScope sets field value
func (o *CreateAutoIpv6SubnetAllocationStrategy) SetScope(v CreateResourceScope) {
	o.Scope = v
}

// GetGatewayPlacement returns the GatewayPlacement field value if set, zero value otherwise.
func (o *CreateAutoIpv6SubnetAllocationStrategy) GetGatewayPlacement() SubnetGatewayPlacement {
	if o == nil || IsNil(o.GatewayPlacement) {
		var ret SubnetGatewayPlacement
		return ret
	}
	return *o.GatewayPlacement
}

// GetGatewayPlacementOk returns a tuple with the GatewayPlacement field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateAutoIpv6SubnetAllocationStrategy) GetGatewayPlacementOk() (*SubnetGatewayPlacement, bool) {
	if o == nil || IsNil(o.GatewayPlacement) {
		return nil, false
	}
	return o.GatewayPlacement, true
}

// HasGatewayPlacement returns a boolean if a field has been set.
func (o *CreateAutoIpv6SubnetAllocationStrategy) HasGatewayPlacement() bool {
	if o != nil && !IsNil(o.GatewayPlacement) {
		return true
	}

	return false
}

// SetGatewayPlacement gets a reference to the given SubnetGatewayPlacement and assigns it to the GatewayPlacement field.
func (o *CreateAutoIpv6SubnetAllocationStrategy) SetGatewayPlacement(v SubnetGatewayPlacement) {
	o.GatewayPlacement = &v
}

// GetSubnetPoolIds returns the SubnetPoolIds field value
func (o *CreateAutoIpv6SubnetAllocationStrategy) GetSubnetPoolIds() []int32 {
	if o == nil {
		var ret []int32
		return ret
	}

	return o.SubnetPoolIds
}

// GetSubnetPoolIdsOk returns a tuple with the SubnetPoolIds field value
// and a boolean to check if the value has been set.
func (o *CreateAutoIpv6SubnetAllocationStrategy) GetSubnetPoolIdsOk() ([]int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.SubnetPoolIds, true
}

// SetSubnetPoolIds sets field value
func (o *CreateAutoIpv6SubnetAllocationStrategy) SetSubnetPoolIds(v []int32) {
	o.SubnetPoolIds = v
}

// GetPrefixLength returns the PrefixLength field value
func (o *CreateAutoIpv6SubnetAllocationStrategy) GetPrefixLength() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PrefixLength
}

// GetPrefixLengthOk returns a tuple with the PrefixLength field value
// and a boolean to check if the value has been set.
func (o *CreateAutoIpv6SubnetAllocationStrategy) GetPrefixLengthOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PrefixLength, true
}

// SetPrefixLength sets field value
func (o *CreateAutoIpv6SubnetAllocationStrategy) SetPrefixLength(v int32) {
	o.PrefixLength = v
}

func (o CreateAutoIpv6SubnetAllocationStrategy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateAutoIpv6SubnetAllocationStrategy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["kind"] = o.Kind
	toSerialize["scope"] = o.Scope
	if !IsNil(o.GatewayPlacement) {
		toSerialize["gatewayPlacement"] = o.GatewayPlacement
	}
	toSerialize["subnetPoolIds"] = o.SubnetPoolIds
	toSerialize["prefixLength"] = o.PrefixLength

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateAutoIpv6SubnetAllocationStrategy) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kind",
		"scope",
		"subnetPoolIds",
		"prefixLength",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateAutoIpv6SubnetAllocationStrategy := _CreateAutoIpv6SubnetAllocationStrategy{}

	err = json.Unmarshal(data, &varCreateAutoIpv6SubnetAllocationStrategy)

	if err != nil {
		return err
	}

	*o = CreateAutoIpv6SubnetAllocationStrategy(varCreateAutoIpv6SubnetAllocationStrategy)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "kind")
		delete(additionalProperties, "scope")
		delete(additionalProperties, "gatewayPlacement")
		delete(additionalProperties, "subnetPoolIds")
		delete(additionalProperties, "prefixLength")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateAutoIpv6SubnetAllocationStrategy struct {
	value *CreateAutoIpv6SubnetAllocationStrategy
	isSet bool
}

func (v NullableCreateAutoIpv6SubnetAllocationStrategy) Get() *CreateAutoIpv6SubnetAllocationStrategy {
	return v.value
}

func (v *NullableCreateAutoIpv6SubnetAllocationStrategy) Set(val *CreateAutoIpv6SubnetAllocationStrategy) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateAutoIpv6SubnetAllocationStrategy) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateAutoIpv6SubnetAllocationStrategy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateAutoIpv6SubnetAllocationStrategy(val *CreateAutoIpv6SubnetAllocationStrategy) *NullableCreateAutoIpv6SubnetAllocationStrategy {
	return &NullableCreateAutoIpv6SubnetAllocationStrategy{value: val, isSet: true}
}

func (v NullableCreateAutoIpv6SubnetAllocationStrategy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateAutoIpv6SubnetAllocationStrategy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


