/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// NetworkEndpointGroupAllowedAccessMode The access mode of the network endpoint group
type NetworkEndpointGroupAllowedAccessMode string

// List of NetworkEndpointGroupAllowedAccessMode
const (
	NETWORKENDPOINTGROUPALLOWEDACCESSMODE_L2 NetworkEndpointGroupAllowedAccessMode = "l2"
)

// All allowed values of NetworkEndpointGroupAllowedAccessMode enum
var AllowedNetworkEndpointGroupAllowedAccessModeEnumValues = []NetworkEndpointGroupAllowedAccessMode{
	"l2",
}

func (v *NetworkEndpointGroupAllowedAccessMode) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := NetworkEndpointGroupAllowedAccessMode(value)
	for _, existing := range AllowedNetworkEndpointGroupAllowedAccessModeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid NetworkEndpointGroupAllowedAccessMode", value)
}

// NewNetworkEndpointGroupAllowedAccessModeFromValue returns a pointer to a valid NetworkEndpointGroupAllowedAccessMode
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewNetworkEndpointGroupAllowedAccessModeFromValue(v string) (*NetworkEndpointGroupAllowedAccessMode, error) {
	ev := NetworkEndpointGroupAllowedAccessMode(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for NetworkEndpointGroupAllowedAccessMode: valid values are %v", v, AllowedNetworkEndpointGroupAllowedAccessModeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v NetworkEndpointGroupAllowedAccessMode) IsValid() bool {
	for _, existing := range AllowedNetworkEndpointGroupAllowedAccessModeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to NetworkEndpointGroupAllowedAccessMode value
func (v NetworkEndpointGroupAllowedAccessMode) Ptr() *NetworkEndpointGroupAllowedAccessMode {
	return &v
}

type NullableNetworkEndpointGroupAllowedAccessMode struct {
	value *NetworkEndpointGroupAllowedAccessMode
	isSet bool
}

func (v NullableNetworkEndpointGroupAllowedAccessMode) Get() *NetworkEndpointGroupAllowedAccessMode {
	return v.value
}

func (v *NullableNetworkEndpointGroupAllowedAccessMode) Set(val *NetworkEndpointGroupAllowedAccessMode) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkEndpointGroupAllowedAccessMode) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkEndpointGroupAllowedAccessMode) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkEndpointGroupAllowedAccessMode(val *NetworkEndpointGroupAllowedAccessMode) *NullableNetworkEndpointGroupAllowedAccessMode {
	return &NullableNetworkEndpointGroupAllowedAccessMode{value: val, isSet: true}
}

func (v NullableNetworkEndpointGroupAllowedAccessMode) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkEndpointGroupAllowedAccessMode) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

