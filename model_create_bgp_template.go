/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateBgpTemplate type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBgpTemplate{}

// CreateBgpTemplate struct for CreateBgpTemplate
type CreateBgpTemplate struct {
	// Network type
	NetworkType string `json:"networkType"`
	// Network device driver
	NetworkDeviceDriver string `json:"networkDeviceDriver"`
	// Network device position
	NetworkDevicePosition string `json:"networkDevicePosition"`
	// Remote network device position
	RemoteNetworkDevicePosition string `json:"remoteNetworkDevicePosition"`
	// MLAG pair
	MlagPair float32 `json:"mlagPair"`
	// BGP numbering
	BgpNumbering string `json:"bgpNumbering"`
	// BGP link configuration
	BgpLinkConfiguration string `json:"bgpLinkConfiguration"`
	// Execution type
	ExecutionType string `json:"executionType"`
	// Preparation JSON
	Preparation map[string]interface{} `json:"preparation,omitempty"`
	// Configuration JSON
	Configuration map[string]interface{} `json:"configuration,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateBgpTemplate CreateBgpTemplate

// NewCreateBgpTemplate instantiates a new CreateBgpTemplate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBgpTemplate(networkType string, networkDeviceDriver string, networkDevicePosition string, remoteNetworkDevicePosition string, mlagPair float32, bgpNumbering string, bgpLinkConfiguration string, executionType string) *CreateBgpTemplate {
	this := CreateBgpTemplate{}
	this.NetworkType = networkType
	this.NetworkDeviceDriver = networkDeviceDriver
	this.NetworkDevicePosition = networkDevicePosition
	this.RemoteNetworkDevicePosition = remoteNetworkDevicePosition
	this.MlagPair = mlagPair
	this.BgpNumbering = bgpNumbering
	this.BgpLinkConfiguration = bgpLinkConfiguration
	this.ExecutionType = executionType
	return &this
}

// NewCreateBgpTemplateWithDefaults instantiates a new CreateBgpTemplate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBgpTemplateWithDefaults() *CreateBgpTemplate {
	this := CreateBgpTemplate{}
	return &this
}

// GetNetworkType returns the NetworkType field value
func (o *CreateBgpTemplate) GetNetworkType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkType
}

// GetNetworkTypeOk returns a tuple with the NetworkType field value
// and a boolean to check if the value has been set.
func (o *CreateBgpTemplate) GetNetworkTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkType, true
}

// SetNetworkType sets field value
func (o *CreateBgpTemplate) SetNetworkType(v string) {
	o.NetworkType = v
}

// GetNetworkDeviceDriver returns the NetworkDeviceDriver field value
func (o *CreateBgpTemplate) GetNetworkDeviceDriver() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkDeviceDriver
}

// GetNetworkDeviceDriverOk returns a tuple with the NetworkDeviceDriver field value
// and a boolean to check if the value has been set.
func (o *CreateBgpTemplate) GetNetworkDeviceDriverOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceDriver, true
}

// SetNetworkDeviceDriver sets field value
func (o *CreateBgpTemplate) SetNetworkDeviceDriver(v string) {
	o.NetworkDeviceDriver = v
}

// GetNetworkDevicePosition returns the NetworkDevicePosition field value
func (o *CreateBgpTemplate) GetNetworkDevicePosition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkDevicePosition
}

// GetNetworkDevicePositionOk returns a tuple with the NetworkDevicePosition field value
// and a boolean to check if the value has been set.
func (o *CreateBgpTemplate) GetNetworkDevicePositionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDevicePosition, true
}

// SetNetworkDevicePosition sets field value
func (o *CreateBgpTemplate) SetNetworkDevicePosition(v string) {
	o.NetworkDevicePosition = v
}

// GetRemoteNetworkDevicePosition returns the RemoteNetworkDevicePosition field value
func (o *CreateBgpTemplate) GetRemoteNetworkDevicePosition() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RemoteNetworkDevicePosition
}

// GetRemoteNetworkDevicePositionOk returns a tuple with the RemoteNetworkDevicePosition field value
// and a boolean to check if the value has been set.
func (o *CreateBgpTemplate) GetRemoteNetworkDevicePositionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RemoteNetworkDevicePosition, true
}

// SetRemoteNetworkDevicePosition sets field value
func (o *CreateBgpTemplate) SetRemoteNetworkDevicePosition(v string) {
	o.RemoteNetworkDevicePosition = v
}

// GetMlagPair returns the MlagPair field value
func (o *CreateBgpTemplate) GetMlagPair() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.MlagPair
}

// GetMlagPairOk returns a tuple with the MlagPair field value
// and a boolean to check if the value has been set.
func (o *CreateBgpTemplate) GetMlagPairOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MlagPair, true
}

// SetMlagPair sets field value
func (o *CreateBgpTemplate) SetMlagPair(v float32) {
	o.MlagPair = v
}

// GetBgpNumbering returns the BgpNumbering field value
func (o *CreateBgpTemplate) GetBgpNumbering() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BgpNumbering
}

// GetBgpNumberingOk returns a tuple with the BgpNumbering field value
// and a boolean to check if the value has been set.
func (o *CreateBgpTemplate) GetBgpNumberingOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BgpNumbering, true
}

// SetBgpNumbering sets field value
func (o *CreateBgpTemplate) SetBgpNumbering(v string) {
	o.BgpNumbering = v
}

// GetBgpLinkConfiguration returns the BgpLinkConfiguration field value
func (o *CreateBgpTemplate) GetBgpLinkConfiguration() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.BgpLinkConfiguration
}

// GetBgpLinkConfigurationOk returns a tuple with the BgpLinkConfiguration field value
// and a boolean to check if the value has been set.
func (o *CreateBgpTemplate) GetBgpLinkConfigurationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BgpLinkConfiguration, true
}

// SetBgpLinkConfiguration sets field value
func (o *CreateBgpTemplate) SetBgpLinkConfiguration(v string) {
	o.BgpLinkConfiguration = v
}

// GetExecutionType returns the ExecutionType field value
func (o *CreateBgpTemplate) GetExecutionType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExecutionType
}

// GetExecutionTypeOk returns a tuple with the ExecutionType field value
// and a boolean to check if the value has been set.
func (o *CreateBgpTemplate) GetExecutionTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExecutionType, true
}

// SetExecutionType sets field value
func (o *CreateBgpTemplate) SetExecutionType(v string) {
	o.ExecutionType = v
}

// GetPreparation returns the Preparation field value if set, zero value otherwise.
func (o *CreateBgpTemplate) GetPreparation() map[string]interface{} {
	if o == nil || IsNil(o.Preparation) {
		var ret map[string]interface{}
		return ret
	}
	return o.Preparation
}

// GetPreparationOk returns a tuple with the Preparation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBgpTemplate) GetPreparationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Preparation) {
		return map[string]interface{}{}, false
	}
	return o.Preparation, true
}

// HasPreparation returns a boolean if a field has been set.
func (o *CreateBgpTemplate) HasPreparation() bool {
	if o != nil && !IsNil(o.Preparation) {
		return true
	}

	return false
}

// SetPreparation gets a reference to the given map[string]interface{} and assigns it to the Preparation field.
func (o *CreateBgpTemplate) SetPreparation(v map[string]interface{}) {
	o.Preparation = v
}

// GetConfiguration returns the Configuration field value if set, zero value otherwise.
func (o *CreateBgpTemplate) GetConfiguration() map[string]interface{} {
	if o == nil || IsNil(o.Configuration) {
		var ret map[string]interface{}
		return ret
	}
	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBgpTemplate) GetConfigurationOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Configuration) {
		return map[string]interface{}{}, false
	}
	return o.Configuration, true
}

// HasConfiguration returns a boolean if a field has been set.
func (o *CreateBgpTemplate) HasConfiguration() bool {
	if o != nil && !IsNil(o.Configuration) {
		return true
	}

	return false
}

// SetConfiguration gets a reference to the given map[string]interface{} and assigns it to the Configuration field.
func (o *CreateBgpTemplate) SetConfiguration(v map[string]interface{}) {
	o.Configuration = v
}

func (o CreateBgpTemplate) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBgpTemplate) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["networkType"] = o.NetworkType
	toSerialize["networkDeviceDriver"] = o.NetworkDeviceDriver
	toSerialize["networkDevicePosition"] = o.NetworkDevicePosition
	toSerialize["remoteNetworkDevicePosition"] = o.RemoteNetworkDevicePosition
	toSerialize["mlagPair"] = o.MlagPair
	toSerialize["bgpNumbering"] = o.BgpNumbering
	toSerialize["bgpLinkConfiguration"] = o.BgpLinkConfiguration
	toSerialize["executionType"] = o.ExecutionType
	if !IsNil(o.Preparation) {
		toSerialize["preparation"] = o.Preparation
	}
	if !IsNil(o.Configuration) {
		toSerialize["configuration"] = o.Configuration
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateBgpTemplate) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"networkType",
		"networkDeviceDriver",
		"networkDevicePosition",
		"remoteNetworkDevicePosition",
		"mlagPair",
		"bgpNumbering",
		"bgpLinkConfiguration",
		"executionType",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateBgpTemplate := _CreateBgpTemplate{}

	err = json.Unmarshal(data, &varCreateBgpTemplate)

	if err != nil {
		return err
	}

	*o = CreateBgpTemplate(varCreateBgpTemplate)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "networkType")
		delete(additionalProperties, "networkDeviceDriver")
		delete(additionalProperties, "networkDevicePosition")
		delete(additionalProperties, "remoteNetworkDevicePosition")
		delete(additionalProperties, "mlagPair")
		delete(additionalProperties, "bgpNumbering")
		delete(additionalProperties, "bgpLinkConfiguration")
		delete(additionalProperties, "executionType")
		delete(additionalProperties, "preparation")
		delete(additionalProperties, "configuration")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateBgpTemplate struct {
	value *CreateBgpTemplate
	isSet bool
}

func (v NullableCreateBgpTemplate) Get() *CreateBgpTemplate {
	return v.value
}

func (v *NullableCreateBgpTemplate) Set(val *CreateBgpTemplate) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBgpTemplate) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBgpTemplate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBgpTemplate(val *CreateBgpTemplate) *NullableCreateBgpTemplate {
	return &NullableCreateBgpTemplate{value: val, isSet: true}
}

func (v NullableCreateBgpTemplate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBgpTemplate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


