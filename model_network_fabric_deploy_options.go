/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the NetworkFabricDeployOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &NetworkFabricDeployOptions{}

// NetworkFabricDeployOptions struct for NetworkFabricDeployOptions
type NetworkFabricDeployOptions struct {
	// Flag to indicate if the deployment should be confirmed before proceeding with the execution of template on network devices. There will be a confirmation step before the deployment is executed, giving you the chance to review the changes.
	RequireConfirmation bool `json:"requireConfirmation"`
	AdditionalProperties map[string]interface{}
}

type _NetworkFabricDeployOptions NetworkFabricDeployOptions

// NewNetworkFabricDeployOptions instantiates a new NetworkFabricDeployOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewNetworkFabricDeployOptions(requireConfirmation bool) *NetworkFabricDeployOptions {
	this := NetworkFabricDeployOptions{}
	this.RequireConfirmation = requireConfirmation
	return &this
}

// NewNetworkFabricDeployOptionsWithDefaults instantiates a new NetworkFabricDeployOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewNetworkFabricDeployOptionsWithDefaults() *NetworkFabricDeployOptions {
	this := NetworkFabricDeployOptions{}
	return &this
}

// GetRequireConfirmation returns the RequireConfirmation field value
func (o *NetworkFabricDeployOptions) GetRequireConfirmation() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.RequireConfirmation
}

// GetRequireConfirmationOk returns a tuple with the RequireConfirmation field value
// and a boolean to check if the value has been set.
func (o *NetworkFabricDeployOptions) GetRequireConfirmationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequireConfirmation, true
}

// SetRequireConfirmation sets field value
func (o *NetworkFabricDeployOptions) SetRequireConfirmation(v bool) {
	o.RequireConfirmation = v
}

func (o NetworkFabricDeployOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o NetworkFabricDeployOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requireConfirmation"] = o.RequireConfirmation

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *NetworkFabricDeployOptions) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"requireConfirmation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varNetworkFabricDeployOptions := _NetworkFabricDeployOptions{}

	err = json.Unmarshal(data, &varNetworkFabricDeployOptions)

	if err != nil {
		return err
	}

	*o = NetworkFabricDeployOptions(varNetworkFabricDeployOptions)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "requireConfirmation")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableNetworkFabricDeployOptions struct {
	value *NetworkFabricDeployOptions
	isSet bool
}

func (v NullableNetworkFabricDeployOptions) Get() *NetworkFabricDeployOptions {
	return v.value
}

func (v *NullableNetworkFabricDeployOptions) Set(val *NetworkFabricDeployOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableNetworkFabricDeployOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableNetworkFabricDeployOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableNetworkFabricDeployOptions(val *NetworkFabricDeployOptions) *NullableNetworkFabricDeployOptions {
	return &NullableNetworkFabricDeployOptions{value: val, isSet: true}
}

func (v NullableNetworkFabricDeployOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableNetworkFabricDeployOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


