/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ExtensionInputOptionBoolean type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ExtensionInputOptionBoolean{}

// ExtensionInputOptionBoolean struct for ExtensionInputOptionBoolean
type ExtensionInputOptionBoolean struct {
	// Default value.
	DefaultValue *bool `json:"defaultValue,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ExtensionInputOptionBoolean ExtensionInputOptionBoolean

// NewExtensionInputOptionBoolean instantiates a new ExtensionInputOptionBoolean object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewExtensionInputOptionBoolean() *ExtensionInputOptionBoolean {
	this := ExtensionInputOptionBoolean{}
	return &this
}

// NewExtensionInputOptionBooleanWithDefaults instantiates a new ExtensionInputOptionBoolean object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewExtensionInputOptionBooleanWithDefaults() *ExtensionInputOptionBoolean {
	this := ExtensionInputOptionBoolean{}
	return &this
}

// GetDefaultValue returns the DefaultValue field value if set, zero value otherwise.
func (o *ExtensionInputOptionBoolean) GetDefaultValue() bool {
	if o == nil || IsNil(o.DefaultValue) {
		var ret bool
		return ret
	}
	return *o.DefaultValue
}

// GetDefaultValueOk returns a tuple with the DefaultValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ExtensionInputOptionBoolean) GetDefaultValueOk() (*bool, bool) {
	if o == nil || IsNil(o.DefaultValue) {
		return nil, false
	}
	return o.DefaultValue, true
}

// HasDefaultValue returns a boolean if a field has been set.
func (o *ExtensionInputOptionBoolean) HasDefaultValue() bool {
	if o != nil && !IsNil(o.DefaultValue) {
		return true
	}

	return false
}

// SetDefaultValue gets a reference to the given bool and assigns it to the DefaultValue field.
func (o *ExtensionInputOptionBoolean) SetDefaultValue(v bool) {
	o.DefaultValue = &v
}

func (o ExtensionInputOptionBoolean) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ExtensionInputOptionBoolean) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DefaultValue) {
		toSerialize["defaultValue"] = o.DefaultValue
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ExtensionInputOptionBoolean) UnmarshalJSON(data []byte) (err error) {
	varExtensionInputOptionBoolean := _ExtensionInputOptionBoolean{}

	err = json.Unmarshal(data, &varExtensionInputOptionBoolean)

	if err != nil {
		return err
	}

	*o = ExtensionInputOptionBoolean(varExtensionInputOptionBoolean)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "defaultValue")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableExtensionInputOptionBoolean struct {
	value *ExtensionInputOptionBoolean
	isSet bool
}

func (v NullableExtensionInputOptionBoolean) Get() *ExtensionInputOptionBoolean {
	return v.value
}

func (v *NullableExtensionInputOptionBoolean) Set(val *ExtensionInputOptionBoolean) {
	v.value = val
	v.isSet = true
}

func (v NullableExtensionInputOptionBoolean) IsSet() bool {
	return v.isSet
}

func (v *NullableExtensionInputOptionBoolean) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExtensionInputOptionBoolean(val *ExtensionInputOptionBoolean) *NullableExtensionInputOptionBoolean {
	return &NullableExtensionInputOptionBoolean{value: val, isSet: true}
}

func (v NullableExtensionInputOptionBoolean) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExtensionInputOptionBoolean) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


