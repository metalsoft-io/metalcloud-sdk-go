/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ResendUserVerificationEmail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResendUserVerificationEmail{}

// ResendUserVerificationEmail struct for ResendUserVerificationEmail
type ResendUserVerificationEmail struct {
	// The redirect URL after email verification
	RedirectUrl *string `json:"redirectUrl,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ResendUserVerificationEmail ResendUserVerificationEmail

// NewResendUserVerificationEmail instantiates a new ResendUserVerificationEmail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResendUserVerificationEmail() *ResendUserVerificationEmail {
	this := ResendUserVerificationEmail{}
	return &this
}

// NewResendUserVerificationEmailWithDefaults instantiates a new ResendUserVerificationEmail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResendUserVerificationEmailWithDefaults() *ResendUserVerificationEmail {
	this := ResendUserVerificationEmail{}
	return &this
}

// GetRedirectUrl returns the RedirectUrl field value if set, zero value otherwise.
func (o *ResendUserVerificationEmail) GetRedirectUrl() string {
	if o == nil || IsNil(o.RedirectUrl) {
		var ret string
		return ret
	}
	return *o.RedirectUrl
}

// GetRedirectUrlOk returns a tuple with the RedirectUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResendUserVerificationEmail) GetRedirectUrlOk() (*string, bool) {
	if o == nil || IsNil(o.RedirectUrl) {
		return nil, false
	}
	return o.RedirectUrl, true
}

// HasRedirectUrl returns a boolean if a field has been set.
func (o *ResendUserVerificationEmail) HasRedirectUrl() bool {
	if o != nil && !IsNil(o.RedirectUrl) {
		return true
	}

	return false
}

// SetRedirectUrl gets a reference to the given string and assigns it to the RedirectUrl field.
func (o *ResendUserVerificationEmail) SetRedirectUrl(v string) {
	o.RedirectUrl = &v
}

func (o ResendUserVerificationEmail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResendUserVerificationEmail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.RedirectUrl) {
		toSerialize["redirectUrl"] = o.RedirectUrl
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ResendUserVerificationEmail) UnmarshalJSON(data []byte) (err error) {
	varResendUserVerificationEmail := _ResendUserVerificationEmail{}

	err = json.Unmarshal(data, &varResendUserVerificationEmail)

	if err != nil {
		return err
	}

	*o = ResendUserVerificationEmail(varResendUserVerificationEmail)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "redirectUrl")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableResendUserVerificationEmail struct {
	value *ResendUserVerificationEmail
	isSet bool
}

func (v NullableResendUserVerificationEmail) Get() *ResendUserVerificationEmail {
	return v.value
}

func (v *NullableResendUserVerificationEmail) Set(val *ResendUserVerificationEmail) {
	v.value = val
	v.isSet = true
}

func (v NullableResendUserVerificationEmail) IsSet() bool {
	return v.isSet
}

func (v *NullableResendUserVerificationEmail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResendUserVerificationEmail(val *ResendUserVerificationEmail) *NullableResendUserVerificationEmail {
	return &NullableResendUserVerificationEmail{value: val, isSet: true}
}

func (v NullableResendUserVerificationEmail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResendUserVerificationEmail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


