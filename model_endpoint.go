/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the Endpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Endpoint{}

// Endpoint struct for Endpoint
type Endpoint struct {
	// The ID of the site where the entity is located.
	SiteId float32 `json:"siteId"`
	// The endpoint name
	Name string `json:"name"`
	// The endpoint unique label
	Label *string `json:"label,omitempty" validate:"regexp=^(?!.*-$)[a-z]{1}[a-z0-9-]{0,62}$"`
	// The external ID of the endpoint, should be unique across the system. Usually either an ethernet MAC address or a UUID.
	ExternalId *string `json:"externalId,omitempty"`
	// Revision number of the entity
	Revision string `json:"revision"`
	// Entity creation timestamp
	CreatedTimestamp time.Time `json:"createdTimestamp"`
	// Entity last update timestamp
	UpdatedTimestamp time.Time `json:"updatedTimestamp"`
	// Reference links
	Links []Link `json:"links,omitempty"`
	// The network fabric ID.
	Id string `json:"id"`
	// The endpoint interfaces associated with this endpoint
	EndpointInterfaces []EndpointInterface `json:"endpointInterfaces,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _Endpoint Endpoint

// NewEndpoint instantiates a new Endpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEndpoint(siteId float32, name string, revision string, createdTimestamp time.Time, updatedTimestamp time.Time, id string) *Endpoint {
	this := Endpoint{}
	this.SiteId = siteId
	this.Name = name
	this.Revision = revision
	this.CreatedTimestamp = createdTimestamp
	this.UpdatedTimestamp = updatedTimestamp
	this.Id = id
	return &this
}

// NewEndpointWithDefaults instantiates a new Endpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEndpointWithDefaults() *Endpoint {
	this := Endpoint{}
	return &this
}

// GetSiteId returns the SiteId field value
func (o *Endpoint) GetSiteId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.SiteId
}

// GetSiteIdOk returns a tuple with the SiteId field value
// and a boolean to check if the value has been set.
func (o *Endpoint) GetSiteIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SiteId, true
}

// SetSiteId sets field value
func (o *Endpoint) SetSiteId(v float32) {
	o.SiteId = v
}

// GetName returns the Name field value
func (o *Endpoint) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Endpoint) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Endpoint) SetName(v string) {
	o.Name = v
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *Endpoint) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *Endpoint) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *Endpoint) SetLabel(v string) {
	o.Label = &v
}

// GetExternalId returns the ExternalId field value if set, zero value otherwise.
func (o *Endpoint) GetExternalId() string {
	if o == nil || IsNil(o.ExternalId) {
		var ret string
		return ret
	}
	return *o.ExternalId
}

// GetExternalIdOk returns a tuple with the ExternalId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetExternalIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalId) {
		return nil, false
	}
	return o.ExternalId, true
}

// HasExternalId returns a boolean if a field has been set.
func (o *Endpoint) HasExternalId() bool {
	if o != nil && !IsNil(o.ExternalId) {
		return true
	}

	return false
}

// SetExternalId gets a reference to the given string and assigns it to the ExternalId field.
func (o *Endpoint) SetExternalId(v string) {
	o.ExternalId = &v
}

// GetRevision returns the Revision field value
func (o *Endpoint) GetRevision() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value
// and a boolean to check if the value has been set.
func (o *Endpoint) GetRevisionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Revision, true
}

// SetRevision sets field value
func (o *Endpoint) SetRevision(v string) {
	o.Revision = v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value
func (o *Endpoint) GetCreatedTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *Endpoint) GetCreatedTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTimestamp, true
}

// SetCreatedTimestamp sets field value
func (o *Endpoint) SetCreatedTimestamp(v time.Time) {
	o.CreatedTimestamp = v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value
func (o *Endpoint) GetUpdatedTimestamp() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *Endpoint) GetUpdatedTimestampOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedTimestamp, true
}

// SetUpdatedTimestamp sets field value
func (o *Endpoint) SetUpdatedTimestamp(v time.Time) {
	o.UpdatedTimestamp = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *Endpoint) GetLinks() []Link {
	if o == nil || IsNil(o.Links) {
		var ret []Link
		return ret
	}
	return o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetLinksOk() ([]Link, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *Endpoint) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given []Link and assigns it to the Links field.
func (o *Endpoint) SetLinks(v []Link) {
	o.Links = v
}

// GetId returns the Id field value
func (o *Endpoint) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *Endpoint) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *Endpoint) SetId(v string) {
	o.Id = v
}

// GetEndpointInterfaces returns the EndpointInterfaces field value if set, zero value otherwise.
func (o *Endpoint) GetEndpointInterfaces() []EndpointInterface {
	if o == nil || IsNil(o.EndpointInterfaces) {
		var ret []EndpointInterface
		return ret
	}
	return o.EndpointInterfaces
}

// GetEndpointInterfacesOk returns a tuple with the EndpointInterfaces field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Endpoint) GetEndpointInterfacesOk() ([]EndpointInterface, bool) {
	if o == nil || IsNil(o.EndpointInterfaces) {
		return nil, false
	}
	return o.EndpointInterfaces, true
}

// HasEndpointInterfaces returns a boolean if a field has been set.
func (o *Endpoint) HasEndpointInterfaces() bool {
	if o != nil && !IsNil(o.EndpointInterfaces) {
		return true
	}

	return false
}

// SetEndpointInterfaces gets a reference to the given []EndpointInterface and assigns it to the EndpointInterfaces field.
func (o *Endpoint) SetEndpointInterfaces(v []EndpointInterface) {
	o.EndpointInterfaces = v
}

func (o Endpoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Endpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["siteId"] = o.SiteId
	toSerialize["name"] = o.Name
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.ExternalId) {
		toSerialize["externalId"] = o.ExternalId
	}
	toSerialize["revision"] = o.Revision
	toSerialize["createdTimestamp"] = o.CreatedTimestamp
	toSerialize["updatedTimestamp"] = o.UpdatedTimestamp
	if !IsNil(o.Links) {
		toSerialize["links"] = o.Links
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.EndpointInterfaces) {
		toSerialize["endpointInterfaces"] = o.EndpointInterfaces
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *Endpoint) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"siteId",
		"name",
		"revision",
		"createdTimestamp",
		"updatedTimestamp",
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEndpoint := _Endpoint{}

	err = json.Unmarshal(data, &varEndpoint)

	if err != nil {
		return err
	}

	*o = Endpoint(varEndpoint)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "siteId")
		delete(additionalProperties, "name")
		delete(additionalProperties, "label")
		delete(additionalProperties, "externalId")
		delete(additionalProperties, "revision")
		delete(additionalProperties, "createdTimestamp")
		delete(additionalProperties, "updatedTimestamp")
		delete(additionalProperties, "links")
		delete(additionalProperties, "id")
		delete(additionalProperties, "endpointInterfaces")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEndpoint struct {
	value *Endpoint
	isSet bool
}

func (v NullableEndpoint) Get() *Endpoint {
	return v.value
}

func (v *NullableEndpoint) Set(val *Endpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEndpoint(val *Endpoint) *NullableEndpoint {
	return &NullableEndpoint{value: val, isSet: true}
}

func (v NullableEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


