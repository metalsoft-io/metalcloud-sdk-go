/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the InfrastructuresStatistics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InfrastructuresStatistics{}

// InfrastructuresStatistics struct for InfrastructuresStatistics
type InfrastructuresStatistics struct {
	// Infrastructure service status counts
	InfrastructureServiceStatus InfrastructureServiceStatusDto `json:"infrastructureServiceStatus"`
	// Infrastructure deploy ongoing status counts
	InfrastructureDeployOngoingStatusCount InfrastructureDeployOngoingStatusCountDto `json:"infrastructureDeployOngoingStatusCount"`
	// Total count of infrastructures
	InfrastructureCount float32 `json:"infrastructureCount"`
	// Count of ongoing infrastructures
	OngoingInfrastructureCount float32 `json:"ongoingInfrastructureCount"`
	// Count of empty infrastructures
	InfrastructureCountEmpty float32 `json:"infrastructureCountEmpty"`
	// Count of empty infrastructures with subnets
	InfrastructureCountEmptyWithSubnets float32 `json:"infrastructureCountEmptyWithSubnets"`
	AdditionalProperties map[string]interface{}
}

type _InfrastructuresStatistics InfrastructuresStatistics

// NewInfrastructuresStatistics instantiates a new InfrastructuresStatistics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInfrastructuresStatistics(infrastructureServiceStatus InfrastructureServiceStatusDto, infrastructureDeployOngoingStatusCount InfrastructureDeployOngoingStatusCountDto, infrastructureCount float32, ongoingInfrastructureCount float32, infrastructureCountEmpty float32, infrastructureCountEmptyWithSubnets float32) *InfrastructuresStatistics {
	this := InfrastructuresStatistics{}
	this.InfrastructureServiceStatus = infrastructureServiceStatus
	this.InfrastructureDeployOngoingStatusCount = infrastructureDeployOngoingStatusCount
	this.InfrastructureCount = infrastructureCount
	this.OngoingInfrastructureCount = ongoingInfrastructureCount
	this.InfrastructureCountEmpty = infrastructureCountEmpty
	this.InfrastructureCountEmptyWithSubnets = infrastructureCountEmptyWithSubnets
	return &this
}

// NewInfrastructuresStatisticsWithDefaults instantiates a new InfrastructuresStatistics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInfrastructuresStatisticsWithDefaults() *InfrastructuresStatistics {
	this := InfrastructuresStatistics{}
	return &this
}

// GetInfrastructureServiceStatus returns the InfrastructureServiceStatus field value
func (o *InfrastructuresStatistics) GetInfrastructureServiceStatus() InfrastructureServiceStatusDto {
	if o == nil {
		var ret InfrastructureServiceStatusDto
		return ret
	}

	return o.InfrastructureServiceStatus
}

// GetInfrastructureServiceStatusOk returns a tuple with the InfrastructureServiceStatus field value
// and a boolean to check if the value has been set.
func (o *InfrastructuresStatistics) GetInfrastructureServiceStatusOk() (*InfrastructureServiceStatusDto, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InfrastructureServiceStatus, true
}

// SetInfrastructureServiceStatus sets field value
func (o *InfrastructuresStatistics) SetInfrastructureServiceStatus(v InfrastructureServiceStatusDto) {
	o.InfrastructureServiceStatus = v
}

// GetInfrastructureDeployOngoingStatusCount returns the InfrastructureDeployOngoingStatusCount field value
func (o *InfrastructuresStatistics) GetInfrastructureDeployOngoingStatusCount() InfrastructureDeployOngoingStatusCountDto {
	if o == nil {
		var ret InfrastructureDeployOngoingStatusCountDto
		return ret
	}

	return o.InfrastructureDeployOngoingStatusCount
}

// GetInfrastructureDeployOngoingStatusCountOk returns a tuple with the InfrastructureDeployOngoingStatusCount field value
// and a boolean to check if the value has been set.
func (o *InfrastructuresStatistics) GetInfrastructureDeployOngoingStatusCountOk() (*InfrastructureDeployOngoingStatusCountDto, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InfrastructureDeployOngoingStatusCount, true
}

// SetInfrastructureDeployOngoingStatusCount sets field value
func (o *InfrastructuresStatistics) SetInfrastructureDeployOngoingStatusCount(v InfrastructureDeployOngoingStatusCountDto) {
	o.InfrastructureDeployOngoingStatusCount = v
}

// GetInfrastructureCount returns the InfrastructureCount field value
func (o *InfrastructuresStatistics) GetInfrastructureCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.InfrastructureCount
}

// GetInfrastructureCountOk returns a tuple with the InfrastructureCount field value
// and a boolean to check if the value has been set.
func (o *InfrastructuresStatistics) GetInfrastructureCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InfrastructureCount, true
}

// SetInfrastructureCount sets field value
func (o *InfrastructuresStatistics) SetInfrastructureCount(v float32) {
	o.InfrastructureCount = v
}

// GetOngoingInfrastructureCount returns the OngoingInfrastructureCount field value
func (o *InfrastructuresStatistics) GetOngoingInfrastructureCount() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.OngoingInfrastructureCount
}

// GetOngoingInfrastructureCountOk returns a tuple with the OngoingInfrastructureCount field value
// and a boolean to check if the value has been set.
func (o *InfrastructuresStatistics) GetOngoingInfrastructureCountOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OngoingInfrastructureCount, true
}

// SetOngoingInfrastructureCount sets field value
func (o *InfrastructuresStatistics) SetOngoingInfrastructureCount(v float32) {
	o.OngoingInfrastructureCount = v
}

// GetInfrastructureCountEmpty returns the InfrastructureCountEmpty field value
func (o *InfrastructuresStatistics) GetInfrastructureCountEmpty() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.InfrastructureCountEmpty
}

// GetInfrastructureCountEmptyOk returns a tuple with the InfrastructureCountEmpty field value
// and a boolean to check if the value has been set.
func (o *InfrastructuresStatistics) GetInfrastructureCountEmptyOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InfrastructureCountEmpty, true
}

// SetInfrastructureCountEmpty sets field value
func (o *InfrastructuresStatistics) SetInfrastructureCountEmpty(v float32) {
	o.InfrastructureCountEmpty = v
}

// GetInfrastructureCountEmptyWithSubnets returns the InfrastructureCountEmptyWithSubnets field value
func (o *InfrastructuresStatistics) GetInfrastructureCountEmptyWithSubnets() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.InfrastructureCountEmptyWithSubnets
}

// GetInfrastructureCountEmptyWithSubnetsOk returns a tuple with the InfrastructureCountEmptyWithSubnets field value
// and a boolean to check if the value has been set.
func (o *InfrastructuresStatistics) GetInfrastructureCountEmptyWithSubnetsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InfrastructureCountEmptyWithSubnets, true
}

// SetInfrastructureCountEmptyWithSubnets sets field value
func (o *InfrastructuresStatistics) SetInfrastructureCountEmptyWithSubnets(v float32) {
	o.InfrastructureCountEmptyWithSubnets = v
}

func (o InfrastructuresStatistics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InfrastructuresStatistics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["infrastructureServiceStatus"] = o.InfrastructureServiceStatus
	toSerialize["infrastructureDeployOngoingStatusCount"] = o.InfrastructureDeployOngoingStatusCount
	toSerialize["infrastructureCount"] = o.InfrastructureCount
	toSerialize["ongoingInfrastructureCount"] = o.OngoingInfrastructureCount
	toSerialize["infrastructureCountEmpty"] = o.InfrastructureCountEmpty
	toSerialize["infrastructureCountEmptyWithSubnets"] = o.InfrastructureCountEmptyWithSubnets

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *InfrastructuresStatistics) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"infrastructureServiceStatus",
		"infrastructureDeployOngoingStatusCount",
		"infrastructureCount",
		"ongoingInfrastructureCount",
		"infrastructureCountEmpty",
		"infrastructureCountEmptyWithSubnets",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInfrastructuresStatistics := _InfrastructuresStatistics{}

	err = json.Unmarshal(data, &varInfrastructuresStatistics)

	if err != nil {
		return err
	}

	*o = InfrastructuresStatistics(varInfrastructuresStatistics)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "infrastructureServiceStatus")
		delete(additionalProperties, "infrastructureDeployOngoingStatusCount")
		delete(additionalProperties, "infrastructureCount")
		delete(additionalProperties, "ongoingInfrastructureCount")
		delete(additionalProperties, "infrastructureCountEmpty")
		delete(additionalProperties, "infrastructureCountEmptyWithSubnets")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableInfrastructuresStatistics struct {
	value *InfrastructuresStatistics
	isSet bool
}

func (v NullableInfrastructuresStatistics) Get() *InfrastructuresStatistics {
	return v.value
}

func (v *NullableInfrastructuresStatistics) Set(val *InfrastructuresStatistics) {
	v.value = val
	v.isSet = true
}

func (v NullableInfrastructuresStatistics) IsSet() bool {
	return v.isSet
}

func (v *NullableInfrastructuresStatistics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInfrastructuresStatistics(val *InfrastructuresStatistics) *NullableInfrastructuresStatistics {
	return &NullableInfrastructuresStatistics{value: val, isSet: true}
}

func (v NullableInfrastructuresStatistics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInfrastructuresStatistics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


