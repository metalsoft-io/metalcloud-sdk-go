/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateStorageNetworkDeviceConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateStorageNetworkDeviceConfiguration{}

// CreateStorageNetworkDeviceConfiguration struct for CreateStorageNetworkDeviceConfiguration
type CreateStorageNetworkDeviceConfiguration struct {
	// Id of the network device
	NetworkDeviceId float32 `json:"networkDeviceId"`
	// Identifier of the storage physical interface
	StoragePhysicalInterfaceIdentifier string `json:"storagePhysicalInterfaceIdentifier"`
	// Identifier of the network device interface
	NetworkDeviceInterfaceIdentifier string `json:"networkDeviceInterfaceIdentifier"`
	// Array of VLANS for the network device interface
	NetworkDeviceInterfaceVlans []float32 `json:"networkDeviceInterfaceVlans,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateStorageNetworkDeviceConfiguration CreateStorageNetworkDeviceConfiguration

// NewCreateStorageNetworkDeviceConfiguration instantiates a new CreateStorageNetworkDeviceConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateStorageNetworkDeviceConfiguration(networkDeviceId float32, storagePhysicalInterfaceIdentifier string, networkDeviceInterfaceIdentifier string) *CreateStorageNetworkDeviceConfiguration {
	this := CreateStorageNetworkDeviceConfiguration{}
	this.NetworkDeviceId = networkDeviceId
	this.StoragePhysicalInterfaceIdentifier = storagePhysicalInterfaceIdentifier
	this.NetworkDeviceInterfaceIdentifier = networkDeviceInterfaceIdentifier
	return &this
}

// NewCreateStorageNetworkDeviceConfigurationWithDefaults instantiates a new CreateStorageNetworkDeviceConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateStorageNetworkDeviceConfigurationWithDefaults() *CreateStorageNetworkDeviceConfiguration {
	this := CreateStorageNetworkDeviceConfiguration{}
	return &this
}

// GetNetworkDeviceId returns the NetworkDeviceId field value
func (o *CreateStorageNetworkDeviceConfiguration) GetNetworkDeviceId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NetworkDeviceId
}

// GetNetworkDeviceIdOk returns a tuple with the NetworkDeviceId field value
// and a boolean to check if the value has been set.
func (o *CreateStorageNetworkDeviceConfiguration) GetNetworkDeviceIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceId, true
}

// SetNetworkDeviceId sets field value
func (o *CreateStorageNetworkDeviceConfiguration) SetNetworkDeviceId(v float32) {
	o.NetworkDeviceId = v
}

// GetStoragePhysicalInterfaceIdentifier returns the StoragePhysicalInterfaceIdentifier field value
func (o *CreateStorageNetworkDeviceConfiguration) GetStoragePhysicalInterfaceIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StoragePhysicalInterfaceIdentifier
}

// GetStoragePhysicalInterfaceIdentifierOk returns a tuple with the StoragePhysicalInterfaceIdentifier field value
// and a boolean to check if the value has been set.
func (o *CreateStorageNetworkDeviceConfiguration) GetStoragePhysicalInterfaceIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StoragePhysicalInterfaceIdentifier, true
}

// SetStoragePhysicalInterfaceIdentifier sets field value
func (o *CreateStorageNetworkDeviceConfiguration) SetStoragePhysicalInterfaceIdentifier(v string) {
	o.StoragePhysicalInterfaceIdentifier = v
}

// GetNetworkDeviceInterfaceIdentifier returns the NetworkDeviceInterfaceIdentifier field value
func (o *CreateStorageNetworkDeviceConfiguration) GetNetworkDeviceInterfaceIdentifier() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.NetworkDeviceInterfaceIdentifier
}

// GetNetworkDeviceInterfaceIdentifierOk returns a tuple with the NetworkDeviceInterfaceIdentifier field value
// and a boolean to check if the value has been set.
func (o *CreateStorageNetworkDeviceConfiguration) GetNetworkDeviceInterfaceIdentifierOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkDeviceInterfaceIdentifier, true
}

// SetNetworkDeviceInterfaceIdentifier sets field value
func (o *CreateStorageNetworkDeviceConfiguration) SetNetworkDeviceInterfaceIdentifier(v string) {
	o.NetworkDeviceInterfaceIdentifier = v
}

// GetNetworkDeviceInterfaceVlans returns the NetworkDeviceInterfaceVlans field value if set, zero value otherwise.
func (o *CreateStorageNetworkDeviceConfiguration) GetNetworkDeviceInterfaceVlans() []float32 {
	if o == nil || IsNil(o.NetworkDeviceInterfaceVlans) {
		var ret []float32
		return ret
	}
	return o.NetworkDeviceInterfaceVlans
}

// GetNetworkDeviceInterfaceVlansOk returns a tuple with the NetworkDeviceInterfaceVlans field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateStorageNetworkDeviceConfiguration) GetNetworkDeviceInterfaceVlansOk() ([]float32, bool) {
	if o == nil || IsNil(o.NetworkDeviceInterfaceVlans) {
		return nil, false
	}
	return o.NetworkDeviceInterfaceVlans, true
}

// HasNetworkDeviceInterfaceVlans returns a boolean if a field has been set.
func (o *CreateStorageNetworkDeviceConfiguration) HasNetworkDeviceInterfaceVlans() bool {
	if o != nil && !IsNil(o.NetworkDeviceInterfaceVlans) {
		return true
	}

	return false
}

// SetNetworkDeviceInterfaceVlans gets a reference to the given []float32 and assigns it to the NetworkDeviceInterfaceVlans field.
func (o *CreateStorageNetworkDeviceConfiguration) SetNetworkDeviceInterfaceVlans(v []float32) {
	o.NetworkDeviceInterfaceVlans = v
}

func (o CreateStorageNetworkDeviceConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateStorageNetworkDeviceConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["networkDeviceId"] = o.NetworkDeviceId
	toSerialize["storagePhysicalInterfaceIdentifier"] = o.StoragePhysicalInterfaceIdentifier
	toSerialize["networkDeviceInterfaceIdentifier"] = o.NetworkDeviceInterfaceIdentifier
	if !IsNil(o.NetworkDeviceInterfaceVlans) {
		toSerialize["networkDeviceInterfaceVlans"] = o.NetworkDeviceInterfaceVlans
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateStorageNetworkDeviceConfiguration) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"networkDeviceId",
		"storagePhysicalInterfaceIdentifier",
		"networkDeviceInterfaceIdentifier",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateStorageNetworkDeviceConfiguration := _CreateStorageNetworkDeviceConfiguration{}

	err = json.Unmarshal(data, &varCreateStorageNetworkDeviceConfiguration)

	if err != nil {
		return err
	}

	*o = CreateStorageNetworkDeviceConfiguration(varCreateStorageNetworkDeviceConfiguration)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "networkDeviceId")
		delete(additionalProperties, "storagePhysicalInterfaceIdentifier")
		delete(additionalProperties, "networkDeviceInterfaceIdentifier")
		delete(additionalProperties, "networkDeviceInterfaceVlans")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateStorageNetworkDeviceConfiguration struct {
	value *CreateStorageNetworkDeviceConfiguration
	isSet bool
}

func (v NullableCreateStorageNetworkDeviceConfiguration) Get() *CreateStorageNetworkDeviceConfiguration {
	return v.value
}

func (v *NullableCreateStorageNetworkDeviceConfiguration) Set(val *CreateStorageNetworkDeviceConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateStorageNetworkDeviceConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateStorageNetworkDeviceConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateStorageNetworkDeviceConfiguration(val *CreateStorageNetworkDeviceConfiguration) *NullableCreateStorageNetworkDeviceConfiguration {
	return &NullableCreateStorageNetworkDeviceConfiguration{value: val, isSet: true}
}

func (v NullableCreateStorageNetworkDeviceConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateStorageNetworkDeviceConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


