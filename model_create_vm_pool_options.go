/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the CreateVMPoolOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateVMPoolOptions{}

// CreateVMPoolOptions struct for CreateVMPoolOptions
type CreateVMPoolOptions struct {
	// Name of the cluster for the VM Pool
	ClusterName *string `json:"clusterName,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateVMPoolOptions CreateVMPoolOptions

// NewCreateVMPoolOptions instantiates a new CreateVMPoolOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVMPoolOptions() *CreateVMPoolOptions {
	this := CreateVMPoolOptions{}
	return &this
}

// NewCreateVMPoolOptionsWithDefaults instantiates a new CreateVMPoolOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVMPoolOptionsWithDefaults() *CreateVMPoolOptions {
	this := CreateVMPoolOptions{}
	return &this
}

// GetClusterName returns the ClusterName field value if set, zero value otherwise.
func (o *CreateVMPoolOptions) GetClusterName() string {
	if o == nil || IsNil(o.ClusterName) {
		var ret string
		return ret
	}
	return *o.ClusterName
}

// GetClusterNameOk returns a tuple with the ClusterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVMPoolOptions) GetClusterNameOk() (*string, bool) {
	if o == nil || IsNil(o.ClusterName) {
		return nil, false
	}
	return o.ClusterName, true
}

// HasClusterName returns a boolean if a field has been set.
func (o *CreateVMPoolOptions) HasClusterName() bool {
	if o != nil && !IsNil(o.ClusterName) {
		return true
	}

	return false
}

// SetClusterName gets a reference to the given string and assigns it to the ClusterName field.
func (o *CreateVMPoolOptions) SetClusterName(v string) {
	o.ClusterName = &v
}

func (o CreateVMPoolOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateVMPoolOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ClusterName) {
		toSerialize["clusterName"] = o.ClusterName
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateVMPoolOptions) UnmarshalJSON(data []byte) (err error) {
	varCreateVMPoolOptions := _CreateVMPoolOptions{}

	err = json.Unmarshal(data, &varCreateVMPoolOptions)

	if err != nil {
		return err
	}

	*o = CreateVMPoolOptions(varCreateVMPoolOptions)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "clusterName")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateVMPoolOptions struct {
	value *CreateVMPoolOptions
	isSet bool
}

func (v NullableCreateVMPoolOptions) Get() *CreateVMPoolOptions {
	return v.value
}

func (v *NullableCreateVMPoolOptions) Set(val *CreateVMPoolOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVMPoolOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVMPoolOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVMPoolOptions(val *CreateVMPoolOptions) *NullableCreateVMPoolOptions {
	return &NullableCreateVMPoolOptions{value: val, isSet: true}
}

func (v NullableCreateVMPoolOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVMPoolOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


