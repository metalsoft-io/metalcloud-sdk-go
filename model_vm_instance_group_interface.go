/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the VMInstanceGroupInterface type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VMInstanceGroupInterface{}

// VMInstanceGroupInterface struct for VMInstanceGroupInterface
type VMInstanceGroupInterface struct {
	// Interface ID
	Id float32 `json:"id"`
	// Network ID
	NetworkId float32 `json:"networkId"`
	// Interface index
	InterfaceIndex float32 `json:"interfaceIndex"`
	// Service status of the VM Instance Group Interface.
	ServiceStatus string `json:"serviceStatus"`
	// VM Instance Group ID
	GroupId float32 `json:"groupId"`
	// Infrastructure ID
	InfrastructureId float32 `json:"infrastructureId"`
	// Operation ID
	ChangeId float32 `json:"changeId"`
	// Interface label
	Label string `json:"label"`
	// Timestamp of the VM Instance Group Interface creation.
	CreatedTimestamp string `json:"createdTimestamp"`
	// Timestamp of the VM Instance Group Interface update.
	UpdatedTimestamp string `json:"updatedTimestamp"`
	// Operation object for the VM Instance Group.
	Operation map[string]interface{} `json:"operation"`
	AdditionalProperties map[string]interface{}
}

type _VMInstanceGroupInterface VMInstanceGroupInterface

// NewVMInstanceGroupInterface instantiates a new VMInstanceGroupInterface object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVMInstanceGroupInterface(id float32, networkId float32, interfaceIndex float32, serviceStatus string, groupId float32, infrastructureId float32, changeId float32, label string, createdTimestamp string, updatedTimestamp string, operation map[string]interface{}) *VMInstanceGroupInterface {
	this := VMInstanceGroupInterface{}
	this.Id = id
	this.NetworkId = networkId
	this.InterfaceIndex = interfaceIndex
	this.ServiceStatus = serviceStatus
	this.GroupId = groupId
	this.InfrastructureId = infrastructureId
	this.ChangeId = changeId
	this.Label = label
	this.CreatedTimestamp = createdTimestamp
	this.UpdatedTimestamp = updatedTimestamp
	this.Operation = operation
	return &this
}

// NewVMInstanceGroupInterfaceWithDefaults instantiates a new VMInstanceGroupInterface object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVMInstanceGroupInterfaceWithDefaults() *VMInstanceGroupInterface {
	this := VMInstanceGroupInterface{}
	return &this
}

// GetId returns the Id field value
func (o *VMInstanceGroupInterface) GetId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *VMInstanceGroupInterface) GetIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *VMInstanceGroupInterface) SetId(v float32) {
	o.Id = v
}

// GetNetworkId returns the NetworkId field value
func (o *VMInstanceGroupInterface) GetNetworkId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value
// and a boolean to check if the value has been set.
func (o *VMInstanceGroupInterface) GetNetworkIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.NetworkId, true
}

// SetNetworkId sets field value
func (o *VMInstanceGroupInterface) SetNetworkId(v float32) {
	o.NetworkId = v
}

// GetInterfaceIndex returns the InterfaceIndex field value
func (o *VMInstanceGroupInterface) GetInterfaceIndex() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.InterfaceIndex
}

// GetInterfaceIndexOk returns a tuple with the InterfaceIndex field value
// and a boolean to check if the value has been set.
func (o *VMInstanceGroupInterface) GetInterfaceIndexOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InterfaceIndex, true
}

// SetInterfaceIndex sets field value
func (o *VMInstanceGroupInterface) SetInterfaceIndex(v float32) {
	o.InterfaceIndex = v
}

// GetServiceStatus returns the ServiceStatus field value
func (o *VMInstanceGroupInterface) GetServiceStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServiceStatus
}

// GetServiceStatusOk returns a tuple with the ServiceStatus field value
// and a boolean to check if the value has been set.
func (o *VMInstanceGroupInterface) GetServiceStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServiceStatus, true
}

// SetServiceStatus sets field value
func (o *VMInstanceGroupInterface) SetServiceStatus(v string) {
	o.ServiceStatus = v
}

// GetGroupId returns the GroupId field value
func (o *VMInstanceGroupInterface) GetGroupId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.GroupId
}

// GetGroupIdOk returns a tuple with the GroupId field value
// and a boolean to check if the value has been set.
func (o *VMInstanceGroupInterface) GetGroupIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.GroupId, true
}

// SetGroupId sets field value
func (o *VMInstanceGroupInterface) SetGroupId(v float32) {
	o.GroupId = v
}

// GetInfrastructureId returns the InfrastructureId field value
func (o *VMInstanceGroupInterface) GetInfrastructureId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.InfrastructureId
}

// GetInfrastructureIdOk returns a tuple with the InfrastructureId field value
// and a boolean to check if the value has been set.
func (o *VMInstanceGroupInterface) GetInfrastructureIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InfrastructureId, true
}

// SetInfrastructureId sets field value
func (o *VMInstanceGroupInterface) SetInfrastructureId(v float32) {
	o.InfrastructureId = v
}

// GetChangeId returns the ChangeId field value
func (o *VMInstanceGroupInterface) GetChangeId() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.ChangeId
}

// GetChangeIdOk returns a tuple with the ChangeId field value
// and a boolean to check if the value has been set.
func (o *VMInstanceGroupInterface) GetChangeIdOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ChangeId, true
}

// SetChangeId sets field value
func (o *VMInstanceGroupInterface) SetChangeId(v float32) {
	o.ChangeId = v
}

// GetLabel returns the Label field value
func (o *VMInstanceGroupInterface) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *VMInstanceGroupInterface) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *VMInstanceGroupInterface) SetLabel(v string) {
	o.Label = v
}

// GetCreatedTimestamp returns the CreatedTimestamp field value
func (o *VMInstanceGroupInterface) GetCreatedTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CreatedTimestamp
}

// GetCreatedTimestampOk returns a tuple with the CreatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *VMInstanceGroupInterface) GetCreatedTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedTimestamp, true
}

// SetCreatedTimestamp sets field value
func (o *VMInstanceGroupInterface) SetCreatedTimestamp(v string) {
	o.CreatedTimestamp = v
}

// GetUpdatedTimestamp returns the UpdatedTimestamp field value
func (o *VMInstanceGroupInterface) GetUpdatedTimestamp() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UpdatedTimestamp
}

// GetUpdatedTimestampOk returns a tuple with the UpdatedTimestamp field value
// and a boolean to check if the value has been set.
func (o *VMInstanceGroupInterface) GetUpdatedTimestampOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedTimestamp, true
}

// SetUpdatedTimestamp sets field value
func (o *VMInstanceGroupInterface) SetUpdatedTimestamp(v string) {
	o.UpdatedTimestamp = v
}

// GetOperation returns the Operation field value
func (o *VMInstanceGroupInterface) GetOperation() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Operation
}

// GetOperationOk returns a tuple with the Operation field value
// and a boolean to check if the value has been set.
func (o *VMInstanceGroupInterface) GetOperationOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Operation, true
}

// SetOperation sets field value
func (o *VMInstanceGroupInterface) SetOperation(v map[string]interface{}) {
	o.Operation = v
}

func (o VMInstanceGroupInterface) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VMInstanceGroupInterface) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["networkId"] = o.NetworkId
	toSerialize["interfaceIndex"] = o.InterfaceIndex
	toSerialize["serviceStatus"] = o.ServiceStatus
	toSerialize["groupId"] = o.GroupId
	toSerialize["infrastructureId"] = o.InfrastructureId
	toSerialize["changeId"] = o.ChangeId
	toSerialize["label"] = o.Label
	toSerialize["createdTimestamp"] = o.CreatedTimestamp
	toSerialize["updatedTimestamp"] = o.UpdatedTimestamp
	toSerialize["operation"] = o.Operation

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *VMInstanceGroupInterface) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"networkId",
		"interfaceIndex",
		"serviceStatus",
		"groupId",
		"infrastructureId",
		"changeId",
		"label",
		"createdTimestamp",
		"updatedTimestamp",
		"operation",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varVMInstanceGroupInterface := _VMInstanceGroupInterface{}

	err = json.Unmarshal(data, &varVMInstanceGroupInterface)

	if err != nil {
		return err
	}

	*o = VMInstanceGroupInterface(varVMInstanceGroupInterface)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "id")
		delete(additionalProperties, "networkId")
		delete(additionalProperties, "interfaceIndex")
		delete(additionalProperties, "serviceStatus")
		delete(additionalProperties, "groupId")
		delete(additionalProperties, "infrastructureId")
		delete(additionalProperties, "changeId")
		delete(additionalProperties, "label")
		delete(additionalProperties, "createdTimestamp")
		delete(additionalProperties, "updatedTimestamp")
		delete(additionalProperties, "operation")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableVMInstanceGroupInterface struct {
	value *VMInstanceGroupInterface
	isSet bool
}

func (v NullableVMInstanceGroupInterface) Get() *VMInstanceGroupInterface {
	return v.value
}

func (v *NullableVMInstanceGroupInterface) Set(val *VMInstanceGroupInterface) {
	v.value = val
	v.isSet = true
}

func (v NullableVMInstanceGroupInterface) IsSet() bool {
	return v.isSet
}

func (v *NullableVMInstanceGroupInterface) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVMInstanceGroupInterface(val *VMInstanceGroupInterface) *NullableVMInstanceGroupInterface {
	return &NullableVMInstanceGroupInterface{value: val, isSet: true}
}

func (v NullableVMInstanceGroupInterface) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVMInstanceGroupInterface) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


