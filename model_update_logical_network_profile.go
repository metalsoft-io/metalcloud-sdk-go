/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateLogicalNetworkProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateLogicalNetworkProfile{}

// UpdateLogicalNetworkProfile struct for UpdateLogicalNetworkProfile
type UpdateLogicalNetworkProfile struct {
	// Label for the logical network profile
	Label *string `json:"label,omitempty"`
	// Name of the logical network profile
	Name *string `json:"name,omitempty"`
	// Description of the logical network profile
	Description *string `json:"description,omitempty"`
	// Annotations for the logical network profile
	Annotations map[string]interface{} `json:"annotations,omitempty"`
	// Type of the logical network profile
	LogicalNetworkType *string `json:"logicalNetworkType,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateLogicalNetworkProfile UpdateLogicalNetworkProfile

// NewUpdateLogicalNetworkProfile instantiates a new UpdateLogicalNetworkProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateLogicalNetworkProfile() *UpdateLogicalNetworkProfile {
	this := UpdateLogicalNetworkProfile{}
	return &this
}

// NewUpdateLogicalNetworkProfileWithDefaults instantiates a new UpdateLogicalNetworkProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateLogicalNetworkProfileWithDefaults() *UpdateLogicalNetworkProfile {
	this := UpdateLogicalNetworkProfile{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *UpdateLogicalNetworkProfile) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLogicalNetworkProfile) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *UpdateLogicalNetworkProfile) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *UpdateLogicalNetworkProfile) SetLabel(v string) {
	o.Label = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *UpdateLogicalNetworkProfile) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLogicalNetworkProfile) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *UpdateLogicalNetworkProfile) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *UpdateLogicalNetworkProfile) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UpdateLogicalNetworkProfile) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLogicalNetworkProfile) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UpdateLogicalNetworkProfile) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UpdateLogicalNetworkProfile) SetDescription(v string) {
	o.Description = &v
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *UpdateLogicalNetworkProfile) GetAnnotations() map[string]interface{} {
	if o == nil || IsNil(o.Annotations) {
		var ret map[string]interface{}
		return ret
	}
	return o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLogicalNetworkProfile) GetAnnotationsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Annotations) {
		return map[string]interface{}{}, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *UpdateLogicalNetworkProfile) HasAnnotations() bool {
	if o != nil && !IsNil(o.Annotations) {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given map[string]interface{} and assigns it to the Annotations field.
func (o *UpdateLogicalNetworkProfile) SetAnnotations(v map[string]interface{}) {
	o.Annotations = v
}

// GetLogicalNetworkType returns the LogicalNetworkType field value if set, zero value otherwise.
func (o *UpdateLogicalNetworkProfile) GetLogicalNetworkType() string {
	if o == nil || IsNil(o.LogicalNetworkType) {
		var ret string
		return ret
	}
	return *o.LogicalNetworkType
}

// GetLogicalNetworkTypeOk returns a tuple with the LogicalNetworkType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateLogicalNetworkProfile) GetLogicalNetworkTypeOk() (*string, bool) {
	if o == nil || IsNil(o.LogicalNetworkType) {
		return nil, false
	}
	return o.LogicalNetworkType, true
}

// HasLogicalNetworkType returns a boolean if a field has been set.
func (o *UpdateLogicalNetworkProfile) HasLogicalNetworkType() bool {
	if o != nil && !IsNil(o.LogicalNetworkType) {
		return true
	}

	return false
}

// SetLogicalNetworkType gets a reference to the given string and assigns it to the LogicalNetworkType field.
func (o *UpdateLogicalNetworkProfile) SetLogicalNetworkType(v string) {
	o.LogicalNetworkType = &v
}

func (o UpdateLogicalNetworkProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateLogicalNetworkProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Annotations) {
		toSerialize["annotations"] = o.Annotations
	}
	if !IsNil(o.LogicalNetworkType) {
		toSerialize["logicalNetworkType"] = o.LogicalNetworkType
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateLogicalNetworkProfile) UnmarshalJSON(data []byte) (err error) {
	varUpdateLogicalNetworkProfile := _UpdateLogicalNetworkProfile{}

	err = json.Unmarshal(data, &varUpdateLogicalNetworkProfile)

	if err != nil {
		return err
	}

	*o = UpdateLogicalNetworkProfile(varUpdateLogicalNetworkProfile)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "label")
		delete(additionalProperties, "name")
		delete(additionalProperties, "description")
		delete(additionalProperties, "annotations")
		delete(additionalProperties, "logicalNetworkType")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateLogicalNetworkProfile struct {
	value *UpdateLogicalNetworkProfile
	isSet bool
}

func (v NullableUpdateLogicalNetworkProfile) Get() *UpdateLogicalNetworkProfile {
	return v.value
}

func (v *NullableUpdateLogicalNetworkProfile) Set(val *UpdateLogicalNetworkProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateLogicalNetworkProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateLogicalNetworkProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateLogicalNetworkProfile(val *UpdateLogicalNetworkProfile) *NullableUpdateLogicalNetworkProfile {
	return &NullableUpdateLogicalNetworkProfile{value: val, isSet: true}
}

func (v NullableUpdateLogicalNetworkProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateLogicalNetworkProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


