/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateServerCleanupPolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateServerCleanupPolicy{}

// CreateServerCleanupPolicy struct for CreateServerCleanupPolicy
type CreateServerCleanupPolicy struct {
	// Server cleanup policy label
	Label string `json:"label"`
	// Cleanup drives for oob enabled server
	CleanupDrivesForOobEnabledServer float32 `json:"cleanupDrivesForOobEnabledServer"`
	// Recreate raid
	RecreateRaid float32 `json:"recreateRaid"`
	// Disable embedded nics
	DisableEmbeddedNics float32 `json:"disableEmbeddedNics"`
	// Raid one drive
	RaidOneDrive string `json:"raidOneDrive"`
	// Raid two drives
	RaidTwoDrives string `json:"raidTwoDrives"`
	// Raid even number more than two drives
	RaidEvenNumberMoreThanTwoDrives string `json:"raidEvenNumberMoreThanTwoDrives"`
	// Raid odd number more than one drive
	RaidOddNumberMoreThanOneDrive string `json:"raidOddNumberMoreThanOneDrive"`
	// Skip raid actions
	SkipRaidActions []string `json:"skipRaidActions"`
	AdditionalProperties map[string]interface{}
}

type _CreateServerCleanupPolicy CreateServerCleanupPolicy

// NewCreateServerCleanupPolicy instantiates a new CreateServerCleanupPolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateServerCleanupPolicy(label string, cleanupDrivesForOobEnabledServer float32, recreateRaid float32, disableEmbeddedNics float32, raidOneDrive string, raidTwoDrives string, raidEvenNumberMoreThanTwoDrives string, raidOddNumberMoreThanOneDrive string, skipRaidActions []string) *CreateServerCleanupPolicy {
	this := CreateServerCleanupPolicy{}
	this.Label = label
	this.CleanupDrivesForOobEnabledServer = cleanupDrivesForOobEnabledServer
	this.RecreateRaid = recreateRaid
	this.DisableEmbeddedNics = disableEmbeddedNics
	this.RaidOneDrive = raidOneDrive
	this.RaidTwoDrives = raidTwoDrives
	this.RaidEvenNumberMoreThanTwoDrives = raidEvenNumberMoreThanTwoDrives
	this.RaidOddNumberMoreThanOneDrive = raidOddNumberMoreThanOneDrive
	this.SkipRaidActions = skipRaidActions
	return &this
}

// NewCreateServerCleanupPolicyWithDefaults instantiates a new CreateServerCleanupPolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateServerCleanupPolicyWithDefaults() *CreateServerCleanupPolicy {
	this := CreateServerCleanupPolicy{}
	return &this
}

// GetLabel returns the Label field value
func (o *CreateServerCleanupPolicy) GetLabel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Label
}

// GetLabelOk returns a tuple with the Label field value
// and a boolean to check if the value has been set.
func (o *CreateServerCleanupPolicy) GetLabelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Label, true
}

// SetLabel sets field value
func (o *CreateServerCleanupPolicy) SetLabel(v string) {
	o.Label = v
}

// GetCleanupDrivesForOobEnabledServer returns the CleanupDrivesForOobEnabledServer field value
func (o *CreateServerCleanupPolicy) GetCleanupDrivesForOobEnabledServer() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.CleanupDrivesForOobEnabledServer
}

// GetCleanupDrivesForOobEnabledServerOk returns a tuple with the CleanupDrivesForOobEnabledServer field value
// and a boolean to check if the value has been set.
func (o *CreateServerCleanupPolicy) GetCleanupDrivesForOobEnabledServerOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CleanupDrivesForOobEnabledServer, true
}

// SetCleanupDrivesForOobEnabledServer sets field value
func (o *CreateServerCleanupPolicy) SetCleanupDrivesForOobEnabledServer(v float32) {
	o.CleanupDrivesForOobEnabledServer = v
}

// GetRecreateRaid returns the RecreateRaid field value
func (o *CreateServerCleanupPolicy) GetRecreateRaid() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.RecreateRaid
}

// GetRecreateRaidOk returns a tuple with the RecreateRaid field value
// and a boolean to check if the value has been set.
func (o *CreateServerCleanupPolicy) GetRecreateRaidOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecreateRaid, true
}

// SetRecreateRaid sets field value
func (o *CreateServerCleanupPolicy) SetRecreateRaid(v float32) {
	o.RecreateRaid = v
}

// GetDisableEmbeddedNics returns the DisableEmbeddedNics field value
func (o *CreateServerCleanupPolicy) GetDisableEmbeddedNics() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.DisableEmbeddedNics
}

// GetDisableEmbeddedNicsOk returns a tuple with the DisableEmbeddedNics field value
// and a boolean to check if the value has been set.
func (o *CreateServerCleanupPolicy) GetDisableEmbeddedNicsOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DisableEmbeddedNics, true
}

// SetDisableEmbeddedNics sets field value
func (o *CreateServerCleanupPolicy) SetDisableEmbeddedNics(v float32) {
	o.DisableEmbeddedNics = v
}

// GetRaidOneDrive returns the RaidOneDrive field value
func (o *CreateServerCleanupPolicy) GetRaidOneDrive() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RaidOneDrive
}

// GetRaidOneDriveOk returns a tuple with the RaidOneDrive field value
// and a boolean to check if the value has been set.
func (o *CreateServerCleanupPolicy) GetRaidOneDriveOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RaidOneDrive, true
}

// SetRaidOneDrive sets field value
func (o *CreateServerCleanupPolicy) SetRaidOneDrive(v string) {
	o.RaidOneDrive = v
}

// GetRaidTwoDrives returns the RaidTwoDrives field value
func (o *CreateServerCleanupPolicy) GetRaidTwoDrives() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RaidTwoDrives
}

// GetRaidTwoDrivesOk returns a tuple with the RaidTwoDrives field value
// and a boolean to check if the value has been set.
func (o *CreateServerCleanupPolicy) GetRaidTwoDrivesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RaidTwoDrives, true
}

// SetRaidTwoDrives sets field value
func (o *CreateServerCleanupPolicy) SetRaidTwoDrives(v string) {
	o.RaidTwoDrives = v
}

// GetRaidEvenNumberMoreThanTwoDrives returns the RaidEvenNumberMoreThanTwoDrives field value
func (o *CreateServerCleanupPolicy) GetRaidEvenNumberMoreThanTwoDrives() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RaidEvenNumberMoreThanTwoDrives
}

// GetRaidEvenNumberMoreThanTwoDrivesOk returns a tuple with the RaidEvenNumberMoreThanTwoDrives field value
// and a boolean to check if the value has been set.
func (o *CreateServerCleanupPolicy) GetRaidEvenNumberMoreThanTwoDrivesOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RaidEvenNumberMoreThanTwoDrives, true
}

// SetRaidEvenNumberMoreThanTwoDrives sets field value
func (o *CreateServerCleanupPolicy) SetRaidEvenNumberMoreThanTwoDrives(v string) {
	o.RaidEvenNumberMoreThanTwoDrives = v
}

// GetRaidOddNumberMoreThanOneDrive returns the RaidOddNumberMoreThanOneDrive field value
func (o *CreateServerCleanupPolicy) GetRaidOddNumberMoreThanOneDrive() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.RaidOddNumberMoreThanOneDrive
}

// GetRaidOddNumberMoreThanOneDriveOk returns a tuple with the RaidOddNumberMoreThanOneDrive field value
// and a boolean to check if the value has been set.
func (o *CreateServerCleanupPolicy) GetRaidOddNumberMoreThanOneDriveOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RaidOddNumberMoreThanOneDrive, true
}

// SetRaidOddNumberMoreThanOneDrive sets field value
func (o *CreateServerCleanupPolicy) SetRaidOddNumberMoreThanOneDrive(v string) {
	o.RaidOddNumberMoreThanOneDrive = v
}

// GetSkipRaidActions returns the SkipRaidActions field value
func (o *CreateServerCleanupPolicy) GetSkipRaidActions() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.SkipRaidActions
}

// GetSkipRaidActionsOk returns a tuple with the SkipRaidActions field value
// and a boolean to check if the value has been set.
func (o *CreateServerCleanupPolicy) GetSkipRaidActionsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.SkipRaidActions, true
}

// SetSkipRaidActions sets field value
func (o *CreateServerCleanupPolicy) SetSkipRaidActions(v []string) {
	o.SkipRaidActions = v
}

func (o CreateServerCleanupPolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateServerCleanupPolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["label"] = o.Label
	toSerialize["cleanupDrivesForOobEnabledServer"] = o.CleanupDrivesForOobEnabledServer
	toSerialize["recreateRaid"] = o.RecreateRaid
	toSerialize["disableEmbeddedNics"] = o.DisableEmbeddedNics
	toSerialize["raidOneDrive"] = o.RaidOneDrive
	toSerialize["raidTwoDrives"] = o.RaidTwoDrives
	toSerialize["raidEvenNumberMoreThanTwoDrives"] = o.RaidEvenNumberMoreThanTwoDrives
	toSerialize["raidOddNumberMoreThanOneDrive"] = o.RaidOddNumberMoreThanOneDrive
	toSerialize["skipRaidActions"] = o.SkipRaidActions

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateServerCleanupPolicy) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"label",
		"cleanupDrivesForOobEnabledServer",
		"recreateRaid",
		"disableEmbeddedNics",
		"raidOneDrive",
		"raidTwoDrives",
		"raidEvenNumberMoreThanTwoDrives",
		"raidOddNumberMoreThanOneDrive",
		"skipRaidActions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateServerCleanupPolicy := _CreateServerCleanupPolicy{}

	err = json.Unmarshal(data, &varCreateServerCleanupPolicy)

	if err != nil {
		return err
	}

	*o = CreateServerCleanupPolicy(varCreateServerCleanupPolicy)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "label")
		delete(additionalProperties, "cleanupDrivesForOobEnabledServer")
		delete(additionalProperties, "recreateRaid")
		delete(additionalProperties, "disableEmbeddedNics")
		delete(additionalProperties, "raidOneDrive")
		delete(additionalProperties, "raidTwoDrives")
		delete(additionalProperties, "raidEvenNumberMoreThanTwoDrives")
		delete(additionalProperties, "raidOddNumberMoreThanOneDrive")
		delete(additionalProperties, "skipRaidActions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateServerCleanupPolicy struct {
	value *CreateServerCleanupPolicy
	isSet bool
}

func (v NullableCreateServerCleanupPolicy) Get() *CreateServerCleanupPolicy {
	return v.value
}

func (v *NullableCreateServerCleanupPolicy) Set(val *CreateServerCleanupPolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateServerCleanupPolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateServerCleanupPolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateServerCleanupPolicy(val *CreateServerCleanupPolicy) *NullableCreateServerCleanupPolicy {
	return &NullableCreateServerCleanupPolicy{value: val, isSet: true}
}

func (v NullableCreateServerCleanupPolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateServerCleanupPolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


