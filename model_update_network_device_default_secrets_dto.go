/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the UpdateNetworkDeviceDefaultSecretsDto type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateNetworkDeviceDefaultSecretsDto{}

// UpdateNetworkDeviceDefaultSecretsDto struct for UpdateNetworkDeviceDefaultSecretsDto
type UpdateNetworkDeviceDefaultSecretsDto struct {
	// The name of the secret
	SecretName *string `json:"secretName,omitempty"`
	// The value of the secret
	SecretValue *string `json:"secretValue,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _UpdateNetworkDeviceDefaultSecretsDto UpdateNetworkDeviceDefaultSecretsDto

// NewUpdateNetworkDeviceDefaultSecretsDto instantiates a new UpdateNetworkDeviceDefaultSecretsDto object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateNetworkDeviceDefaultSecretsDto() *UpdateNetworkDeviceDefaultSecretsDto {
	this := UpdateNetworkDeviceDefaultSecretsDto{}
	return &this
}

// NewUpdateNetworkDeviceDefaultSecretsDtoWithDefaults instantiates a new UpdateNetworkDeviceDefaultSecretsDto object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateNetworkDeviceDefaultSecretsDtoWithDefaults() *UpdateNetworkDeviceDefaultSecretsDto {
	this := UpdateNetworkDeviceDefaultSecretsDto{}
	return &this
}

// GetSecretName returns the SecretName field value if set, zero value otherwise.
func (o *UpdateNetworkDeviceDefaultSecretsDto) GetSecretName() string {
	if o == nil || IsNil(o.SecretName) {
		var ret string
		return ret
	}
	return *o.SecretName
}

// GetSecretNameOk returns a tuple with the SecretName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkDeviceDefaultSecretsDto) GetSecretNameOk() (*string, bool) {
	if o == nil || IsNil(o.SecretName) {
		return nil, false
	}
	return o.SecretName, true
}

// HasSecretName returns a boolean if a field has been set.
func (o *UpdateNetworkDeviceDefaultSecretsDto) HasSecretName() bool {
	if o != nil && !IsNil(o.SecretName) {
		return true
	}

	return false
}

// SetSecretName gets a reference to the given string and assigns it to the SecretName field.
func (o *UpdateNetworkDeviceDefaultSecretsDto) SetSecretName(v string) {
	o.SecretName = &v
}

// GetSecretValue returns the SecretValue field value if set, zero value otherwise.
func (o *UpdateNetworkDeviceDefaultSecretsDto) GetSecretValue() string {
	if o == nil || IsNil(o.SecretValue) {
		var ret string
		return ret
	}
	return *o.SecretValue
}

// GetSecretValueOk returns a tuple with the SecretValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateNetworkDeviceDefaultSecretsDto) GetSecretValueOk() (*string, bool) {
	if o == nil || IsNil(o.SecretValue) {
		return nil, false
	}
	return o.SecretValue, true
}

// HasSecretValue returns a boolean if a field has been set.
func (o *UpdateNetworkDeviceDefaultSecretsDto) HasSecretValue() bool {
	if o != nil && !IsNil(o.SecretValue) {
		return true
	}

	return false
}

// SetSecretValue gets a reference to the given string and assigns it to the SecretValue field.
func (o *UpdateNetworkDeviceDefaultSecretsDto) SetSecretValue(v string) {
	o.SecretValue = &v
}

func (o UpdateNetworkDeviceDefaultSecretsDto) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateNetworkDeviceDefaultSecretsDto) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.SecretName) {
		toSerialize["secretName"] = o.SecretName
	}
	if !IsNil(o.SecretValue) {
		toSerialize["secretValue"] = o.SecretValue
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *UpdateNetworkDeviceDefaultSecretsDto) UnmarshalJSON(data []byte) (err error) {
	varUpdateNetworkDeviceDefaultSecretsDto := _UpdateNetworkDeviceDefaultSecretsDto{}

	err = json.Unmarshal(data, &varUpdateNetworkDeviceDefaultSecretsDto)

	if err != nil {
		return err
	}

	*o = UpdateNetworkDeviceDefaultSecretsDto(varUpdateNetworkDeviceDefaultSecretsDto)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "secretName")
		delete(additionalProperties, "secretValue")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableUpdateNetworkDeviceDefaultSecretsDto struct {
	value *UpdateNetworkDeviceDefaultSecretsDto
	isSet bool
}

func (v NullableUpdateNetworkDeviceDefaultSecretsDto) Get() *UpdateNetworkDeviceDefaultSecretsDto {
	return v.value
}

func (v *NullableUpdateNetworkDeviceDefaultSecretsDto) Set(val *UpdateNetworkDeviceDefaultSecretsDto) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateNetworkDeviceDefaultSecretsDto) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateNetworkDeviceDefaultSecretsDto) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateNetworkDeviceDefaultSecretsDto(val *UpdateNetworkDeviceDefaultSecretsDto) *NullableUpdateNetworkDeviceDefaultSecretsDto {
	return &NullableUpdateNetworkDeviceDefaultSecretsDto{value: val, isSet: true}
}

func (v NullableUpdateNetworkDeviceDefaultSecretsDto) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateNetworkDeviceDefaultSecretsDto) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


