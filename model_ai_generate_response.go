/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the AIGenerateResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AIGenerateResponse{}

// AIGenerateResponse struct for AIGenerateResponse
type AIGenerateResponse struct {
	// Response to the question asked by the user
	Result string `json:"result"`
	// Steps to be taken to achieve the result
	Steps string `json:"steps"`
	AdditionalProperties map[string]interface{}
}

type _AIGenerateResponse AIGenerateResponse

// NewAIGenerateResponse instantiates a new AIGenerateResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAIGenerateResponse(result string, steps string) *AIGenerateResponse {
	this := AIGenerateResponse{}
	this.Result = result
	this.Steps = steps
	return &this
}

// NewAIGenerateResponseWithDefaults instantiates a new AIGenerateResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAIGenerateResponseWithDefaults() *AIGenerateResponse {
	this := AIGenerateResponse{}
	return &this
}

// GetResult returns the Result field value
func (o *AIGenerateResponse) GetResult() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Result
}

// GetResultOk returns a tuple with the Result field value
// and a boolean to check if the value has been set.
func (o *AIGenerateResponse) GetResultOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Result, true
}

// SetResult sets field value
func (o *AIGenerateResponse) SetResult(v string) {
	o.Result = v
}

// GetSteps returns the Steps field value
func (o *AIGenerateResponse) GetSteps() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value
// and a boolean to check if the value has been set.
func (o *AIGenerateResponse) GetStepsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Steps, true
}

// SetSteps sets field value
func (o *AIGenerateResponse) SetSteps(v string) {
	o.Steps = v
}

func (o AIGenerateResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AIGenerateResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["result"] = o.Result
	toSerialize["steps"] = o.Steps

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *AIGenerateResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"result",
		"steps",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAIGenerateResponse := _AIGenerateResponse{}

	err = json.Unmarshal(data, &varAIGenerateResponse)

	if err != nil {
		return err
	}

	*o = AIGenerateResponse(varAIGenerateResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "result")
		delete(additionalProperties, "steps")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableAIGenerateResponse struct {
	value *AIGenerateResponse
	isSet bool
}

func (v NullableAIGenerateResponse) Get() *AIGenerateResponse {
	return v.value
}

func (v *NullableAIGenerateResponse) Set(val *AIGenerateResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableAIGenerateResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableAIGenerateResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAIGenerateResponse(val *AIGenerateResponse) *NullableAIGenerateResponse {
	return &NullableAIGenerateResponse{value: val, isSet: true}
}

func (v NullableAIGenerateResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAIGenerateResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


