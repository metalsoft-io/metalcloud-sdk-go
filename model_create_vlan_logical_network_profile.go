/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
	"fmt"
)

// checks if the CreateVlanLogicalNetworkProfile type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateVlanLogicalNetworkProfile{}

// CreateVlanLogicalNetworkProfile struct for CreateVlanLogicalNetworkProfile
type CreateVlanLogicalNetworkProfile struct {
	Label *string `json:"label,omitempty"`
	Name *string `json:"name,omitempty"`
	Annotations *map[string]string `json:"annotations,omitempty"`
	Kind LogicalNetworkKind `json:"kind"`
	FabricId int32 `json:"fabricId"`
	Vlan CreateVlanLogicalNetworkVlanProperties `json:"vlan"`
	Ipv4 CreateVlanLogicalNetworkIpv4Properties `json:"ipv4"`
	Ipv6 *CreateVlanLogicalNetworkIpv6Properties `json:"ipv6,omitempty"`
	RouteDomainId NullableInt32 `json:"routeDomainId,omitempty"`
	// Maximum Transmission Unit (MTU) in bytes
	Mtu NullableInt32 `json:"mtu,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _CreateVlanLogicalNetworkProfile CreateVlanLogicalNetworkProfile

// NewCreateVlanLogicalNetworkProfile instantiates a new CreateVlanLogicalNetworkProfile object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVlanLogicalNetworkProfile(kind LogicalNetworkKind, fabricId int32, vlan CreateVlanLogicalNetworkVlanProperties, ipv4 CreateVlanLogicalNetworkIpv4Properties) *CreateVlanLogicalNetworkProfile {
	this := CreateVlanLogicalNetworkProfile{}
	this.Kind = kind
	this.FabricId = fabricId
	this.Vlan = vlan
	this.Ipv4 = ipv4
	return &this
}

// NewCreateVlanLogicalNetworkProfileWithDefaults instantiates a new CreateVlanLogicalNetworkProfile object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVlanLogicalNetworkProfileWithDefaults() *CreateVlanLogicalNetworkProfile {
	this := CreateVlanLogicalNetworkProfile{}
	return &this
}

// GetLabel returns the Label field value if set, zero value otherwise.
func (o *CreateVlanLogicalNetworkProfile) GetLabel() string {
	if o == nil || IsNil(o.Label) {
		var ret string
		return ret
	}
	return *o.Label
}

// GetLabelOk returns a tuple with the Label field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVlanLogicalNetworkProfile) GetLabelOk() (*string, bool) {
	if o == nil || IsNil(o.Label) {
		return nil, false
	}
	return o.Label, true
}

// HasLabel returns a boolean if a field has been set.
func (o *CreateVlanLogicalNetworkProfile) HasLabel() bool {
	if o != nil && !IsNil(o.Label) {
		return true
	}

	return false
}

// SetLabel gets a reference to the given string and assigns it to the Label field.
func (o *CreateVlanLogicalNetworkProfile) SetLabel(v string) {
	o.Label = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateVlanLogicalNetworkProfile) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVlanLogicalNetworkProfile) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateVlanLogicalNetworkProfile) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateVlanLogicalNetworkProfile) SetName(v string) {
	o.Name = &v
}

// GetAnnotations returns the Annotations field value if set, zero value otherwise.
func (o *CreateVlanLogicalNetworkProfile) GetAnnotations() map[string]string {
	if o == nil || IsNil(o.Annotations) {
		var ret map[string]string
		return ret
	}
	return *o.Annotations
}

// GetAnnotationsOk returns a tuple with the Annotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVlanLogicalNetworkProfile) GetAnnotationsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Annotations) {
		return nil, false
	}
	return o.Annotations, true
}

// HasAnnotations returns a boolean if a field has been set.
func (o *CreateVlanLogicalNetworkProfile) HasAnnotations() bool {
	if o != nil && !IsNil(o.Annotations) {
		return true
	}

	return false
}

// SetAnnotations gets a reference to the given map[string]string and assigns it to the Annotations field.
func (o *CreateVlanLogicalNetworkProfile) SetAnnotations(v map[string]string) {
	o.Annotations = &v
}

// GetKind returns the Kind field value
func (o *CreateVlanLogicalNetworkProfile) GetKind() LogicalNetworkKind {
	if o == nil {
		var ret LogicalNetworkKind
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *CreateVlanLogicalNetworkProfile) GetKindOk() (*LogicalNetworkKind, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *CreateVlanLogicalNetworkProfile) SetKind(v LogicalNetworkKind) {
	o.Kind = v
}

// GetFabricId returns the FabricId field value
func (o *CreateVlanLogicalNetworkProfile) GetFabricId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FabricId
}

// GetFabricIdOk returns a tuple with the FabricId field value
// and a boolean to check if the value has been set.
func (o *CreateVlanLogicalNetworkProfile) GetFabricIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FabricId, true
}

// SetFabricId sets field value
func (o *CreateVlanLogicalNetworkProfile) SetFabricId(v int32) {
	o.FabricId = v
}

// GetVlan returns the Vlan field value
func (o *CreateVlanLogicalNetworkProfile) GetVlan() CreateVlanLogicalNetworkVlanProperties {
	if o == nil {
		var ret CreateVlanLogicalNetworkVlanProperties
		return ret
	}

	return o.Vlan
}

// GetVlanOk returns a tuple with the Vlan field value
// and a boolean to check if the value has been set.
func (o *CreateVlanLogicalNetworkProfile) GetVlanOk() (*CreateVlanLogicalNetworkVlanProperties, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Vlan, true
}

// SetVlan sets field value
func (o *CreateVlanLogicalNetworkProfile) SetVlan(v CreateVlanLogicalNetworkVlanProperties) {
	o.Vlan = v
}

// GetIpv4 returns the Ipv4 field value
func (o *CreateVlanLogicalNetworkProfile) GetIpv4() CreateVlanLogicalNetworkIpv4Properties {
	if o == nil {
		var ret CreateVlanLogicalNetworkIpv4Properties
		return ret
	}

	return o.Ipv4
}

// GetIpv4Ok returns a tuple with the Ipv4 field value
// and a boolean to check if the value has been set.
func (o *CreateVlanLogicalNetworkProfile) GetIpv4Ok() (*CreateVlanLogicalNetworkIpv4Properties, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ipv4, true
}

// SetIpv4 sets field value
func (o *CreateVlanLogicalNetworkProfile) SetIpv4(v CreateVlanLogicalNetworkIpv4Properties) {
	o.Ipv4 = v
}

// GetIpv6 returns the Ipv6 field value if set, zero value otherwise.
func (o *CreateVlanLogicalNetworkProfile) GetIpv6() CreateVlanLogicalNetworkIpv6Properties {
	if o == nil || IsNil(o.Ipv6) {
		var ret CreateVlanLogicalNetworkIpv6Properties
		return ret
	}
	return *o.Ipv6
}

// GetIpv6Ok returns a tuple with the Ipv6 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVlanLogicalNetworkProfile) GetIpv6Ok() (*CreateVlanLogicalNetworkIpv6Properties, bool) {
	if o == nil || IsNil(o.Ipv6) {
		return nil, false
	}
	return o.Ipv6, true
}

// HasIpv6 returns a boolean if a field has been set.
func (o *CreateVlanLogicalNetworkProfile) HasIpv6() bool {
	if o != nil && !IsNil(o.Ipv6) {
		return true
	}

	return false
}

// SetIpv6 gets a reference to the given CreateVlanLogicalNetworkIpv6Properties and assigns it to the Ipv6 field.
func (o *CreateVlanLogicalNetworkProfile) SetIpv6(v CreateVlanLogicalNetworkIpv6Properties) {
	o.Ipv6 = &v
}

// GetRouteDomainId returns the RouteDomainId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateVlanLogicalNetworkProfile) GetRouteDomainId() int32 {
	if o == nil || IsNil(o.RouteDomainId.Get()) {
		var ret int32
		return ret
	}
	return *o.RouteDomainId.Get()
}

// GetRouteDomainIdOk returns a tuple with the RouteDomainId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateVlanLogicalNetworkProfile) GetRouteDomainIdOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RouteDomainId.Get(), o.RouteDomainId.IsSet()
}

// HasRouteDomainId returns a boolean if a field has been set.
func (o *CreateVlanLogicalNetworkProfile) HasRouteDomainId() bool {
	if o != nil && o.RouteDomainId.IsSet() {
		return true
	}

	return false
}

// SetRouteDomainId gets a reference to the given NullableInt32 and assigns it to the RouteDomainId field.
func (o *CreateVlanLogicalNetworkProfile) SetRouteDomainId(v int32) {
	o.RouteDomainId.Set(&v)
}
// SetRouteDomainIdNil sets the value for RouteDomainId to be an explicit nil
func (o *CreateVlanLogicalNetworkProfile) SetRouteDomainIdNil() {
	o.RouteDomainId.Set(nil)
}

// UnsetRouteDomainId ensures that no value is present for RouteDomainId, not even an explicit nil
func (o *CreateVlanLogicalNetworkProfile) UnsetRouteDomainId() {
	o.RouteDomainId.Unset()
}

// GetMtu returns the Mtu field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *CreateVlanLogicalNetworkProfile) GetMtu() int32 {
	if o == nil || IsNil(o.Mtu.Get()) {
		var ret int32
		return ret
	}
	return *o.Mtu.Get()
}

// GetMtuOk returns a tuple with the Mtu field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CreateVlanLogicalNetworkProfile) GetMtuOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Mtu.Get(), o.Mtu.IsSet()
}

// HasMtu returns a boolean if a field has been set.
func (o *CreateVlanLogicalNetworkProfile) HasMtu() bool {
	if o != nil && o.Mtu.IsSet() {
		return true
	}

	return false
}

// SetMtu gets a reference to the given NullableInt32 and assigns it to the Mtu field.
func (o *CreateVlanLogicalNetworkProfile) SetMtu(v int32) {
	o.Mtu.Set(&v)
}
// SetMtuNil sets the value for Mtu to be an explicit nil
func (o *CreateVlanLogicalNetworkProfile) SetMtuNil() {
	o.Mtu.Set(nil)
}

// UnsetMtu ensures that no value is present for Mtu, not even an explicit nil
func (o *CreateVlanLogicalNetworkProfile) UnsetMtu() {
	o.Mtu.Unset()
}

func (o CreateVlanLogicalNetworkProfile) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateVlanLogicalNetworkProfile) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Label) {
		toSerialize["label"] = o.Label
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Annotations) {
		toSerialize["annotations"] = o.Annotations
	}
	toSerialize["kind"] = o.Kind
	toSerialize["fabricId"] = o.FabricId
	toSerialize["vlan"] = o.Vlan
	toSerialize["ipv4"] = o.Ipv4
	if !IsNil(o.Ipv6) {
		toSerialize["ipv6"] = o.Ipv6
	}
	if o.RouteDomainId.IsSet() {
		toSerialize["routeDomainId"] = o.RouteDomainId.Get()
	}
	if o.Mtu.IsSet() {
		toSerialize["mtu"] = o.Mtu.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *CreateVlanLogicalNetworkProfile) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kind",
		"fabricId",
		"vlan",
		"ipv4",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCreateVlanLogicalNetworkProfile := _CreateVlanLogicalNetworkProfile{}

	err = json.Unmarshal(data, &varCreateVlanLogicalNetworkProfile)

	if err != nil {
		return err
	}

	*o = CreateVlanLogicalNetworkProfile(varCreateVlanLogicalNetworkProfile)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "label")
		delete(additionalProperties, "name")
		delete(additionalProperties, "annotations")
		delete(additionalProperties, "kind")
		delete(additionalProperties, "fabricId")
		delete(additionalProperties, "vlan")
		delete(additionalProperties, "ipv4")
		delete(additionalProperties, "ipv6")
		delete(additionalProperties, "routeDomainId")
		delete(additionalProperties, "mtu")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableCreateVlanLogicalNetworkProfile struct {
	value *CreateVlanLogicalNetworkProfile
	isSet bool
}

func (v NullableCreateVlanLogicalNetworkProfile) Get() *CreateVlanLogicalNetworkProfile {
	return v.value
}

func (v *NullableCreateVlanLogicalNetworkProfile) Set(val *CreateVlanLogicalNetworkProfile) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVlanLogicalNetworkProfile) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVlanLogicalNetworkProfile) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVlanLogicalNetworkProfile(val *CreateVlanLogicalNetworkProfile) *NullableCreateVlanLogicalNetworkProfile {
	return &NullableCreateVlanLogicalNetworkProfile{value: val, isSet: true}
}

func (v NullableCreateVlanLogicalNetworkProfile) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVlanLogicalNetworkProfile) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


