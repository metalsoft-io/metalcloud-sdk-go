/*
MetalSoft REST API

MetalSoft REST API documentation

API version: 2.0
Contact: support@metalsoft.io
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sdk

import (
	"encoding/json"
)

// checks if the ServerInstanceClusterCustomInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerInstanceClusterCustomInfo{}

// ServerInstanceClusterCustomInfo struct for ServerInstanceClusterCustomInfo
type ServerInstanceClusterCustomInfo struct {
	// Initial password of the instance.
	InitialPasswordEncrypted *string `json:"initialPasswordEncrypted,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _ServerInstanceClusterCustomInfo ServerInstanceClusterCustomInfo

// NewServerInstanceClusterCustomInfo instantiates a new ServerInstanceClusterCustomInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerInstanceClusterCustomInfo() *ServerInstanceClusterCustomInfo {
	this := ServerInstanceClusterCustomInfo{}
	return &this
}

// NewServerInstanceClusterCustomInfoWithDefaults instantiates a new ServerInstanceClusterCustomInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerInstanceClusterCustomInfoWithDefaults() *ServerInstanceClusterCustomInfo {
	this := ServerInstanceClusterCustomInfo{}
	return &this
}

// GetInitialPasswordEncrypted returns the InitialPasswordEncrypted field value if set, zero value otherwise.
func (o *ServerInstanceClusterCustomInfo) GetInitialPasswordEncrypted() string {
	if o == nil || IsNil(o.InitialPasswordEncrypted) {
		var ret string
		return ret
	}
	return *o.InitialPasswordEncrypted
}

// GetInitialPasswordEncryptedOk returns a tuple with the InitialPasswordEncrypted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerInstanceClusterCustomInfo) GetInitialPasswordEncryptedOk() (*string, bool) {
	if o == nil || IsNil(o.InitialPasswordEncrypted) {
		return nil, false
	}
	return o.InitialPasswordEncrypted, true
}

// HasInitialPasswordEncrypted returns a boolean if a field has been set.
func (o *ServerInstanceClusterCustomInfo) HasInitialPasswordEncrypted() bool {
	if o != nil && !IsNil(o.InitialPasswordEncrypted) {
		return true
	}

	return false
}

// SetInitialPasswordEncrypted gets a reference to the given string and assigns it to the InitialPasswordEncrypted field.
func (o *ServerInstanceClusterCustomInfo) SetInitialPasswordEncrypted(v string) {
	o.InitialPasswordEncrypted = &v
}

func (o ServerInstanceClusterCustomInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerInstanceClusterCustomInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InitialPasswordEncrypted) {
		toSerialize["initialPasswordEncrypted"] = o.InitialPasswordEncrypted
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *ServerInstanceClusterCustomInfo) UnmarshalJSON(data []byte) (err error) {
	varServerInstanceClusterCustomInfo := _ServerInstanceClusterCustomInfo{}

	err = json.Unmarshal(data, &varServerInstanceClusterCustomInfo)

	if err != nil {
		return err
	}

	*o = ServerInstanceClusterCustomInfo(varServerInstanceClusterCustomInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "initialPasswordEncrypted")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableServerInstanceClusterCustomInfo struct {
	value *ServerInstanceClusterCustomInfo
	isSet bool
}

func (v NullableServerInstanceClusterCustomInfo) Get() *ServerInstanceClusterCustomInfo {
	return v.value
}

func (v *NullableServerInstanceClusterCustomInfo) Set(val *ServerInstanceClusterCustomInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableServerInstanceClusterCustomInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableServerInstanceClusterCustomInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerInstanceClusterCustomInfo(val *ServerInstanceClusterCustomInfo) *NullableServerInstanceClusterCustomInfo {
	return &NullableServerInstanceClusterCustomInfo{value: val, isSet: true}
}

func (v NullableServerInstanceClusterCustomInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerInstanceClusterCustomInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


